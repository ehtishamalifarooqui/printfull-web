/*! License information is available at https://static.cdn.printful.com/dist-pf/52075.licenses.txt if third party dependencies are included */
(self.webpackChunkwebpackpf = self.webpackChunkwebpackpf || []).push([
    [52075], {
        95935: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), Object.defineProperty(e, "PFMockupCanvasPar", {
                    enumerable: !0,
                    get: function() {
                        return f.PFMockupCanvasPar
                    }
                }), e.generateMockup = function(t) {
                    return w(t) ? T(t, !1) : new b(t).renderMockup()
                }, e.generateMockupUrl = function(t) {
                    return w(t) ? T(t, !0) : new b(t).renderMockup().then((function(t) {
                        return new Promise((e = (0, o.default)(n.default.mark((function e(i, r) {
                            return n.default.wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        t.toBlob((function(t) {
                                            t = URL.createObjectURL(t), i(t)
                                        }));
                                    case 1:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        }))), function(t, i) {
                            return e.apply(this, arguments)
                        }));
                        var e
                    }))
                }, r(i(64687))),
                o = r(i(17156)),
                a = r(i(56690)),
                s = r(i(89728)),
                l = r(i(61655)),
                h = r(i(94993)),
                c = r(i(73808)),
                u = i(74324),
                f = i(19070);

            function d(t) {
                if ("function" != typeof WeakMap) return null;
                var e = new WeakMap,
                    i = new WeakMap;
                return (d = function(t) {
                    return t ? i : e
                })(t)
            }

            function p(t, e) {
                if (!e && t && t.__esModule) return t;
                if (null === t || "object" != typeof t && "function" != typeof t) return {
                    default: t
                };
                if ((e = d(e)) && e.has(t)) return e.get(t);
                var i, r, n = {},
                    o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (i in t) "default" !== i && Object.prototype.hasOwnProperty.call(t, i) && ((r = o ? Object.getOwnPropertyDescriptor(t, i) : null) && (r.get || r.set) ? Object.defineProperty(n, i, r) : n[i] = t[i]);
                return n.default = t, e && e.set(t, n), n
            }

            function g(t) {
                var e = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var i, r = (0, c.default)(t);
                    return i = e ? (i = (0, c.default)(this).constructor, Reflect.construct(r, arguments, i)) : r.apply(this, arguments), (0, h.default)(this, i)
                }
            }
            var v = 0,
                m = {},
                y = null,
                b = function(t) {
                    (0, l.default)(i, t);
                    var e = g(i);

                    function i(t) {
                        return (0, a.default)(this, i), (t = e.call(this, t)).fetchUrl = window.fetch.bind(window), t.createCanvas = x, t.loadImage = _, t.IS_BROWSER = !0, t
                    }
                    return (0, s.default)(i, [{
                        key: "createImageData",
                        value: function(t, e, i) {
                            return new ImageData(t, e, i)
                        }
                    }]), i
                }(u.PFMockupCanvasBase),
                x = function(t, e) {
                    var i = document.createElement("canvas");
                    return Object.assign(i, {
                        width: t,
                        height: e
                    }), i
                },
                _ = function(t) {
                    return new Promise((function(e, i) {
                        var r = document.createElement("img");
                        r.crossOrigin = "Anonymous", r.onload = function() {
                            r.onload = null, r.onerror = null, e(r)
                        }, r.onerror = function() {
                            r.onload = null, r.onerror = null, i(new Error('Failed to load the image "' + t + '"'))
                        }, r.src = t
                    }))
                };

            function w(t) {
                return t.useWorker && "undefined" != typeof OffscreenCanvas
            }

            function S() {
                return C.apply(this, arguments)
            }

            function C() {
                return (C = (0, o.default)(n.default.mark((function t() {
                    return n.default.wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return y = y || Promise.resolve().then((function() {
                                    return p(i(33494))
                                })).then((function(t) {
                                    return (t = new t.default).onmessage = E, t
                                })), t.abrupt("return", y);
                            case 2:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))).apply(this, arguments)
            }

            function T(t, e) {
                void 0 === e && (e = !1);
                var i, r = ++v;
                return new Promise((i = (0, o.default)(n.default.mark((function i(o, a) {
                    return n.default.wrap((function(i) {
                        for (;;) switch (i.prev = i.next) {
                            case 0:
                                return m[r] = {
                                    resolve: o,
                                    reject: a
                                }, i.next = 3, S();
                            case 3:
                                i.sent.postMessage({
                                    params: t,
                                    returnAsUrl: e,
                                    messageId: r
                                });
                            case 5:
                            case "end":
                                return i.stop()
                        }
                    }), i)
                }))), function(t, e) {
                    return i.apply(this, arguments)
                })).then((function(t) {
                    if (e) return t;
                    var i = x(t.width, t.height);
                    return i.getContext("bitmaprenderer").transferFromImageBitmap(t), i
                }))
            }

            function E(t) {
                var e = t.data.messageId || null;
                e && m[e] && (t.data.error ? m[e].reject(t.data.error) : m[e].resolve(t.data.response), delete m[e])
            }
        },
        74324: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.PFMockupCanvasBase = void 0, r(i(64687))),
                o = r(i(17156)),
                a = r(i(56690)),
                s = r(i(89728)),
                l = r(i(38416)),
                h = r(i(50468)),
                c = r(i(65661)),
                u = i(59101);
            i(19070);

            function f(t, e) {
                p(t, e), e.add(t)
            }

            function d(t, e, i) {
                p(t, e), e.set(t, i)
            }

            function p(t, e) {
                if (e.has(t)) throw new TypeError("Cannot initialize the same private elements twice on an object")
            }

            function g(t, e, i) {
                if (e.has(t)) return i;
                throw new TypeError("attempted to get private field on non-instance")
            }
            var v = "PrintfileLayer",
                m = "MultiFileLayer",
                y = "DisplacementLayer",
                b = "StoredLayer",
                x = {
                    default: "source-over",
                    overlay: "source-over",
                    multiply: "multiply",
                    screen: "screen",
                    darken: "darken",
                    lighten: "lighten",
                    colorburn: "color-burn",
                    dodge: "color-dodge",
                    softlight: "soft-light",
                    linearburn: "multiply",
                    dstin: "destination-in",
                    dstover: "destination-over",
                    sourcein: "source-in"
                },
                _ = new WeakMap,
                w = new WeakMap,
                S = new WeakMap,
                C = new WeakMap,
                T = new WeakMap,
                E = new WeakMap,
                k = new WeakMap,
                O = new WeakMap,
                I = new WeakSet,
                P = new WeakSet,
                L = new WeakSet,
                M = new WeakSet,
                A = new WeakSet,
                D = new WeakSet,
                R = new WeakSet,
                F = new WeakSet,
                j = new WeakSet,
                B = new WeakSet,
                U = new WeakSet,
                N = new WeakSet,
                G = new WeakSet,
                X = new WeakSet,
                z = function() {
                    function t(e) {
                        if ((0, a.default)(this, t), f(this, X), f(this, G), f(this, N), f(this, U), f(this, B), f(this, j), f(this, F), f(this, R), f(this, D), f(this, A), f(this, M), f(this, L), f(this, P), f(this, I), (0, l.default)(this, "CACHE_TIMEOUT", 1e4), (0, l.default)(this, "IS_BROWSER", !1), d(this, _, {
                                writable: !0,
                                value: null
                            }), d(this, w, {
                                writable: !0,
                                value: null
                            }), d(this, S, {
                                writable: !0,
                                value: 0
                            }), d(this, C, {
                                writable: !0,
                                value: []
                            }), d(this, T, {
                                writable: !0,
                                value: ""
                            }), d(this, E, {
                                writable: !0,
                                value: null
                            }), d(this, k, {
                                writable: !0,
                                value: null
                            }), d(this, O, {
                                writable: !0,
                                value: null
                            }), this.constructor === t) throw new Error("Abstract classes can't be instantiated.");
                        (0, c.default)(this, O, e), (0, c.default)(this, C, null != (e = null == (e = (0, h.default)(this, O).mockupData) ? void 0 : e.layers) ? e : []), (0, c.default)(this, T, null != (e = null == (e = (0, h.default)(this, O).mockupData) ? void 0 : e.layerBaseColor) ? e : ""), (0, c.default)(this, E, new WeakMap), (0, c.default)(this, k, {})
                    }
                    var e;
                    return (0, s.default)(t, [{
                        key: "renderMockup",
                        value: (e = (0, o.default)(n.default.mark((function t() {
                            return n.default.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (g(this, X, at).call(this)) {
                                            t.next = 2;
                                            break
                                        }
                                        throw new Error("Invalid params passed!");
                                    case 2:
                                        return t.next = 4, g(this, P, H).call(this);
                                    case 4:
                                        return t.next = 6, g(this, R, J).call(this);
                                    case 6:
                                        return t.abrupt("return", (0, h.default)(this, _));
                                    case 7:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this)
                        }))), function() {
                            return e.apply(this, arguments)
                        })
                    }, {
                        key: "createCanvas",
                        value: function(t, e) {
                            g(this, I, W).call(this)
                        }
                    }, {
                        key: "loadImage",
                        value: function(t) {
                            g(this, I, W).call(this)
                        }
                    }, {
                        key: "fetchUrl",
                        value: function(t) {
                            g(this, I, W).call(this)
                        }
                    }, {
                        key: "createImageData",
                        value: function(t, e, i) {
                            g(this, I, W).call(this)
                        }
                    }, {
                        key: "debugLogImage",
                        value: function(t) {
                            var e, i;
                            (0, h.default)(this, O).consoleVisualDebug && this.IS_BROWSER && t.toDataURL && (i = Math.min(1, 300 / t.height), e = t.width * i, i = t.height * i, i = "\n            background-color: #ccc;\n            background-image: url('" + t.toDataURL() + "'),\n            linear-gradient(45deg, #888 25%, transparent 25%),\n            linear-gradient(45deg, transparent 75%, #888 75%),\n            linear-gradient(45deg, transparent 75%, #888 75%),\n            linear-gradient(45deg, #888 25%, transparent 25%);\n            background-position:0 0, 0 0, 0 0, -20px -20px, 20px 20px;\n            background-repeat: no-repeat, repeat, repeat, repeat, repeat;\n            background-size: " + e + "px " + i + "px, 40px 40px, 40px 40px, 40px 40px, 40px 40px;\n            padding: " + i / 2 + "px " + e / 2 + "px; \n            line-height: 1px;\n            font-size: 1px;\n            color:transparent;\n        ", console.info(t.width + "x" + t.height), console.info("%c+", i))
                        }
                    }, {
                        key: "debugInfo",
                        value: function(t) {
                            (0, h.default)(this, O).debugMode && console.info(t)
                        }
                    }]), t
                }();

            function W() {
                throw new Error("Method must be implemented.")
            }

            function H() {
                (0, c.default)(this, _, this.createCanvas((0, h.default)(this, O).mockupSize, (0, h.default)(this, O).mockupSize)), (0, c.default)(this, w, (0, h.default)(this, _).getContext("2d")), (0, c.default)(this, S, (0, h.default)(this, _).height / (0, h.default)(this, O).mockupData.height), (0, h.default)(this, O).mockupData.width !== (0, h.default)(this, O).mockupData.height && (this.debugInfo("mockupData width !== height"), (0, h.default)(this, _).width = (0, h.default)(this, O).mockupData.width * (0, h.default)(this, S));
                var t, e = [];
                for (t in (0, h.default)(this, C)) g(this, L, Y).call(this, (0, h.default)(this, C)[t], e);
                return Promise.all(e)
            }

            function Y(t, e) {
                var i, r, n, o = this,
                    a = (null != (a = t.children) && a.forEach((function(t) {
                        return g(o, L, Y).call(o, t, e)
                    })), "");
                t._type === m ? (r = (0, h.default)(this, O).layerParams[t.paramName], a = t.files[r] || Object.values(t.files)[0]) : t.filePath && (a = t.filePath), a = a.replace("[size]", (0, h.default)(this, O).mockupSize), (a = t._type === v ? null == (r = i = (0, h.default)(this, O).printfileData[t.fileType]) ? void 0 : r.printfilePreview : a) && (t._type === y ? n = g(this, A, q).call(this, a) : (n = g(this, M, V).call(this, a), t._type === v && null != (r = i) && null != (a = r.options) && a.sticker_effect && (n = n.then((function(t) {
                    return g(o, G, ot).call(o, t, i.width)
                })))), e.push(n.then((function(e) {
                    (0, h.default)(o, E).set(t, e)
                }))))
            }

            function V(t) {
                var e, i = this;
                return (e = z.imageCache)[t] || (e[t] = this.loadImage(t).then((function(e) {
                    return i.debugInfo("Loaded image", t.slice(0, 200)), e
                })).finally((function() {
                    i.IS_BROWSER && setTimeout((function() {
                        return delete z.imageCache[t]
                    }), i.CACHE_TIMEOUT)
                })))
            }

            function q(t) {
                var e, i = this,
                    r = performance.now();
                return (e = z.displacementMapCache)[t] || (e[t] = this.fetchUrl(t).then((function(t) {
                    return t.arrayBuffer()
                })).then((function(e) {
                    i.debugInfo("Downloaded map " + t + " (" + (performance.now() - r) + "ms)");
                    var n = new Uint16Array(e, 0, 4),
                        o = n[1],
                        a = n[2],
                        s = o * a;
                    if (65450 !== n[0] || 65467 !== n[3]) throw new Error("Invalid header!");
                    if (e.byteLength !== n.byteLength + 4 * s) throw new Error("Invalid data length!");
                    return {
                        isRaw: !0,
                        redData: new Uint16Array(e, 8, s),
                        greenData: new Uint16Array(e, 8 + 2 * s, s),
                        width: o,
                        height: a
                    }
                })).finally((function() {
                    i.IS_BROWSER && setTimeout((function() {
                        return delete z.displacementMapCache[t]
                    }), i.CACHE_TIMEOUT)
                })))
            }

            function Z(t) {
                return K.apply(this, arguments)
            }

            function K() {
                return (K = (0, o.default)(n.default.mark((function t(e) {
                    var i, r, o;
                    return n.default.wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                i = e.width * (0, h.default)(this, S) || (0, h.default)(this, _).width, r = e.height * (0, h.default)(this, S) || (0, h.default)(this, _).height, i = this.createCanvas(i, r), r = i.getContext("2d"), t.t0 = n.default.keys(e.children || []);
                            case 5:
                                if ((t.t1 = t.t0()).done) {
                                    t.next = 12;
                                    break
                                }
                                return o = t.t1.value, o = e.children[o], t.next = 10, g(this, j, tt).call(this, o, r);
                            case 10:
                                t.next = 5;
                                break;
                            case 12:
                                return t.abrupt("return", i);
                            case 13:
                            case "end":
                                return t.stop()
                        }
                    }), t, this)
                })))).apply(this, arguments)
            }

            function J() {
                return Q.apply(this, arguments)
            }

            function Q() {
                return (Q = (0, o.default)(n.default.mark((function t() {
                    var e, i, r, o;
                    return n.default.wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                this.debugInfo("Rendering", (0, h.default)(this, O).generatorVariantId), e = performance.now(), i = this.createCanvas((0, h.default)(this, _).width, (0, h.default)(this, _).height), r = i.getContext("2d"), (0, h.default)(this, T) && g(this, F, $).call(this, (0, h.default)(this, T), r), t.t0 = n.default.keys((0, h.default)(this, C));
                            case 6:
                                if ((t.t1 = t.t0()).done) {
                                    t.next = 13;
                                    break
                                }
                                return o = t.t1.value, o = (0, h.default)(this, C)[o], t.next = 11, g(this, j, tt).call(this, o, r);
                            case 11:
                                t.next = 6;
                                break;
                            case 13:
                                (0, h.default)(this, O).mockupBackgroundColor && g(this, F, $).call(this, (0, h.default)(this, O).mockupBackgroundColor, (0, h.default)(this, w)), (0, h.default)(this, w).drawImage(i, 0, 0), o = performance.now(), this.debugInfo("Rendered in " + (o - e) + " ms.", (0, h.default)(this, O).generatorVariantId);
                            case 17:
                            case "end":
                                return t.stop()
                        }
                    }), t, this)
                })))).apply(this, arguments)
            }

            function $(t, e) {
                e.fillStyle = t, e.fillRect(0, 0, e.canvas.width, e.canvas.height)
            }

            function tt(t, e) {
                return et.apply(this, arguments)
            }

            function et() {
                return (et = (0, o.default)(n.default.mark((function t(e, i) {
                    var r, o, a, s, l, c, u, f, d, p;
                    return n.default.wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (e && i) {
                                    t.next = 2;
                                    break
                                }
                                return t.abrupt("return");
                            case 2:
                                if (r = !1, e._type === y) return g(this, N, nt).call(this, e, i), t.abrupt("return");
                                t.next = 6;
                                break;
                            case 6:
                                if (e._type !== b) {
                                    t.next = 14;
                                    break
                                }
                                if (!(o = (0, h.default)(this, k)[e.name])) {
                                    t.next = 12;
                                    break
                                }(0, h.default)(this, E).set(e, o), t.next = 14;
                                break;
                            case 12:
                                return console.error("Stored layer not known: " + e.name), t.abrupt("return");
                            case 14:
                                if ((0, h.default)(this, E).has(e)) {
                                    t.next = 24;
                                    break
                                }
                                if (e.children && e.children.length) return t.next = 18, g(this, D, Z).call(this, e);
                                t.next = 23;
                                break;
                            case 18:
                                o = t.sent, r = !0, (0, h.default)(this, E).set(e, o), t.next = 24;
                                break;
                            case 23:
                                return t.abrupt("return");
                            case 24:
                                if (this.debugInfo("Drawing layer " + e.fileType + " " + e.filePath + " " + e.blending, e, (0, h.default)(this, S), (0, h.default)(this, O).generatorVariantId), a = (0, h.default)(this, E).get(e), e.storeAs) return (0, h.default)(this, k)[e.storeAs] = a, t.abrupt("return");
                                t.next = 29;
                                break;
                            case 29:
                                if (s = e.left * (0, h.default)(this, S) || 0, l = e.top * (0, h.default)(this, S) || 0, c = r ? a.height : e.height * (0, h.default)(this, S) || i.canvas.height, (u = r ? a.width : e.width * (0, h.default)(this, S) || i.canvas.width) && c) {
                                    t.next = 36;
                                    break
                                }
                                return console.error("no width/height defined", i.canvas.width, i.canvas.height), t.abrupt("return");
                            case 36:
                                i.globalCompositeOperation = g(this, B, it).call(this, e.blending), e.rotate && (p = e.rotate * Math.PI / 180, f = Math.abs(u * Math.cos(p)) + Math.abs(c * Math.sin(p)), d = Math.abs(c * Math.cos(p)) + Math.abs(u * Math.sin(p)), i.translate(s + f / 2, l + d / 2), i.rotate(p), s = -u / 2, l = -c / 2), e._type === v && null != (f = (0, h.default)(this, O).printfileData[e.fileType]) && f.position && (p = null == (d = (0, h.default)(this, O).printfileData[e.fileType]) ? void 0 : d.position, a = g(this, U, rt).call(this, a, p, u, c)), i.drawImage(a, Math.floor(s), Math.floor(l), Math.floor(u), Math.floor(c)), i.resetTransform(), i.globalCompositeOperation = x.default, this.debugLogImage(i.canvas);
                            case 43:
                            case "end":
                                return t.stop()
                        }
                    }), t, this)
                })))).apply(this, arguments)
            }

            function it(t) {
                return x[t] || (t && console.error("Unknown blending mode " + t), x.default)
            }

            function rt(t, e, i, r) {
                if (e.width === e.areaWidth && e.height === e.areaHeight && 0 === e.left && 0 === e.top || !e.areaWidth || !e.areaHeight) return t;
                var n = this.createCanvas(i, r),
                    o = n.getContext("2d");
                i /= e.areaWidth, r /= e.areaHeight;
                return o.drawImage(t, Math.floor(i * e.left), Math.floor(r * e.top), Math.floor(i * e.width), Math.floor(r * e.height)), n
            }

            function nt(t, e) {
                var i = (0, h.default)(this, E).get(t),
                    r = (this.debugInfo("Applying displacement", i.width, i.height, (0, h.default)(this, O).generatorVariantId), performance.now());
                i = (0, u.applyDisplacement)(i, e.getImageData(0, 0, e.canvas.width, e.canvas.height), (0, h.default)(this, O).useInterpolation, (0, h.default)(this, O).debugMode), this.debugInfo("Finished displacement " + t.filePath + " (" + (performance.now() - r) + "ms)", (0, h.default)(this, O).generatorVariantId), t = this.createCanvas(i.width, i.height), r = this.createImageData(i.data, i.width, i.height);
                t.getContext("2d").putImageData(r, 0, 0), e.canvas.width = (0, h.default)(this, _).width, e.canvas.height = (0, h.default)(this, _).height, e.clearRect(0, 0, e.canvas.width, e.canvas.height), e.drawImage(t, 0, 0, e.canvas.width, e.canvas.height), this.debugLogImage(e.canvas), this.debugInfo("Done", (0, h.default)(this, O).generatorVariantId)
            }

            function ot(t, e) {
                for (var i = t.naturalWidth || t.width, r = t.naturalHeight || t.height, n = this.createCanvas(i, r), o = n.getContext("2d"), a = .0984251968503937 * i / e, s = 0; s <= 360; s++) {
                    var l = s * (Math.PI / 180);
                    o.drawImage(t, Math.floor(a * Math.sin(l)), Math.floor(a * Math.cos(l)))
                }
                return o.globalCompositeOperation = x.sourcein, o.fillStyle = "#fff", o.fillRect(0, 0, i, r), o.globalCompositeOperation = x.default, o.drawImage(t, 0, 0), n
            }

            function at() {
                return !(!(0, h.default)(this, O).mockupData || !(0, h.default)(this, O).printfileData) || (console.error("Invalid params for generateMockup call", {
                    mockupData: (0, h.default)(this, O).mockupData,
                    printfileData: (0, h.default)(this, O).printfileData
                }), !1)
            }
            e.PFMockupCanvasBase = z, (0, l.default)(z, "displacementMapCache", {}), (0, l.default)(z, "imageCache", {})
        },
        19070: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.PFMockupCanvasPar = void 0, r(i(89728))),
                o = r(i(56690)),
                a = r(i(38416)),
                s = (0, n.default)((function t() {
                    (0, o.default)(this, t), (0, a.default)(this, "mockupSize", 200), (0, a.default)(this, "mockupData", null), (0, a.default)(this, "printfileData", null), (0, a.default)(this, "generatorVariantId", null), (0, a.default)(this, "consoleVisualDebug", !1), (0, a.default)(this, "useInterpolation", !1), (0, a.default)(this, "layerParams", {}), (0, a.default)(this, "mockupBackgroundColor", null), (0, a.default)(this, "debugMode", !1)
                }));
            e.PFMockupCanvasPar = s
        },
        59101: (t, e) => {
            "use strict";

            function i(t, e, i, r) {
                return (e * i + t) * (void 0 === r ? 4 : r)
            }

            function r(t, e, i, r) {
                return (1 - Math.abs(t - i)) * (1 - Math.abs(e - r))
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.applyDisplacement = function(t, e, n, o) {
                void 0 === n && (n = !1);
                for (var a, s, l, h, c, u, f, d = (o = void 0 !== o && o) ? performance.now() : null, p = t.width, g = t.height, v = new Uint8ClampedArray(p * g * 4), m = e.width / p, y = e.height / g, b = e.width, x = e.data, _ = 0; _ < g; _++)
                    for (f = 0; f < p; f++) {
                        if (t.isRaw) {
                            if (a = i(f, _, p, 1), c = t.redData[a], u = t.greenData[a], 0 === c && 0 === u) continue;
                            a *= 4
                        } else {
                            if (a = i(f, _, p), 0 === t.data[a + 3]) continue;
                            c = t.data[a], u = t.data[a + 1]
                        }
                        if (h = (_ + 2 * g * (u / 65535 - .5)) * y, l = (f + 2 * p * (c / 65535 - .5)) * m, n)
                            for (var w = Math.floor(l), S = Math.floor(h), C = 0; C <= 3; C++) v[a + C] = x[i(w, S, b) + C] * r(w, S, l, h) + x[i(w + 1, S, b) + C] * r(w + 1, S, l, h) + x[i(w, S + 1, b) + C] * r(w, S + 1, l, h) + x[i(w + 1, S + 1, b) + C] * r(w + 1, S + 1, l, h);
                        else s = i(Math.round(l), Math.round(h), b), v[a] = x[s], v[a + 1] = x[s + 1], v[a + 2] = x[s + 2], v[a + 3] = x[s + 3]
                    }
                return o && console.log("Finished displacement in " + (performance.now() - d) + "ms"), {
                    data: v,
                    width: p,
                    height: g
                }
            }
        },
        63311: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e) {
                    var i = t._fabric.getObjects();
                    !i || i.length < 1 || ((t.isAnimationPlaying || a) && (o = !0, clearInterval(a)), t.isAnimationPlaying = !0, a = setTimeout((function() {
                        i.forEach((function(i) {
                            var r;
                            i.animation && (i.originalObjectClone || i.set("originalObjectClone", e.util.object.clone(i)), (r = h(i, i.animation, i.originalObjectClone, t._fabric, e)) && i.originalObjectClone.opacity && (i.hasControls && !i.isAnimationLocked && t.setAnimationLock(i, null, !0), i.set("animationInProgress", !0), i.resetProperties = r.reset, o = !1, s.push(i), r.preparation(), t._fabric.requestRenderAll(), i.animate(r.animation(), {
                                duration: r.duration,
                                onChange: function() {
                                    t._fabric.requestRenderAll()
                                },
                                onComplete: function() {
                                    i.animationInProgress = !1, l(o, t)
                                },
                                easing: r.easing() || t._fabric.util.ease.easeOutExpo,
                                abort: function() {
                                    if (o) return i.animationInProgress = !1, l(o, t), o
                                }
                            })))
                        }))
                    }), 200))
                }, e.getAnimation = h, r(i(35372))),
                o = !1,
                a = null,
                s = [];

            function l(t, e) {
                s.some((function(t) {
                    return t.animationInProgress
                })) || (s.forEach((function(t) {
                    t.resetProperties()
                })), t || s.forEach((function(t) {
                    t.isAnimationLocked && (e.setAnimationLock(t, t.originalObjectClone, !1), t.originalObjectClone = null)
                })), s = [], e.isAnimationPlaying = !1)
            }

            function h(t, e, i, r, o) {
                return n.default[e] ? {
                    animation: function() {
                        return n.default[e].animation(i)
                    },
                    preparation: function() {
                        return n.default[e].preparation(t, r)
                    },
                    reset: function() {
                        return n.default[e].reset(t, i)
                    },
                    easing: function() {
                        return n.default[e].easing(o)
                    },
                    duration: n.default[e].duration
                } : (console.log("Preparation for animation " + e + " was not found"), null)
            }
        },
        35372: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            var i = {
                slideInLeft: {
                    animation: function(t) {
                        return {
                            left: t.left
                        }
                    },
                    preparation: function(t) {
                        t.left = -t.getScaledWidth() - t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.left = e.left
                    }
                },
                slideInRight: {
                    animation: function(t) {
                        return {
                            left: t.left
                        }
                    },
                    preparation: function(t, e) {
                        t.left = e.width + t.getScaledWidth() + t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.left = e.left
                    }
                },
                fadeIn: {
                    animation: function(t) {
                        return {
                            opacity: void 0 !== t.opacity ? t.opacity : 1
                        }
                    },
                    preparation: function(t) {
                        t.opacity = 0
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.opacity = e.opacity
                    }
                },
                rise: {
                    animation: function(t) {
                        return {
                            top: t.top
                        }
                    },
                    preparation: function(t, e) {
                        t.top = e.height + t.getScaledWidth() + t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top
                    }
                },
                fall: {
                    animation: function(t) {
                        return {
                            top: t.top
                        }
                    },
                    preparation: function(t) {
                        t.top = -t.getScaledWidth() - t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top
                    }
                },
                fallBounce: {
                    animation: function(t) {
                        return {
                            top: t.top
                        }
                    },
                    preparation: function(t) {
                        t.top = -t.getScaledWidth() - t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutBounce
                    },
                    reset: function(t, e) {
                        t.top = e.top
                    }
                },
                fallFromTopLeft: {
                    animation: function(t) {
                        return {
                            top: t.top,
                            left: t.left
                        }
                    },
                    preparation: function(t) {
                        t.top = -t.getScaledWidth() - t.getScaledHeight(), t.left = -t.getScaledWidth() - t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top, t.left = e.left
                    }
                },
                fallFromTopRight: {
                    animation: function(t) {
                        return {
                            top: t.top,
                            left: t.left
                        }
                    },
                    preparation: function(t, e) {
                        t.top = -t.getScaledWidth() - t.getScaledHeight(), t.left = e.width + t.getScaledWidth() + t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top, t.left = e.left
                    }
                },
                riseFromBottomRight: {
                    animation: function(t) {
                        return {
                            top: t.top,
                            left: t.left
                        }
                    },
                    preparation: function(t, e) {
                        t.top = e.height + t.getScaledWidth() + t.getScaledHeight(), t.left = e.width + t.getScaledWidth() + t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top, t.left = e.left
                    }
                },
                riseFromBottomLeft: {
                    animation: function(t) {
                        return {
                            top: t.top,
                            left: t.left
                        }
                    },
                    preparation: function(t, e) {
                        t.top = e.height + t.getScaledWidth() + t.getScaledHeight(), t.left = -t.getScaledWidth() - t.getScaledHeight()
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.top = e.top, t.left = e.left
                    }
                },
                rollIn: {
                    animation: function(t) {
                        return {
                            left: t.left + (t.getScaledWidth ? t.getScaledWidth() / 2 : t.cacheWidth / 2),
                            angle: t.angle
                        }
                    },
                    preparation: function(t) {
                        t.set({
                            originX: "center",
                            originY: "center",
                            top: t.top + t.getScaledHeight() / 2,
                            left: -t.getScaledWidth() - t.getScaledHeight(),
                            angle: t.angle - 720
                        })
                    },
                    duration: 1e3,
                    easing: function(t) {
                        return t.util.ease.easeOutExpo
                    },
                    reset: function(t, e) {
                        t.set({
                            originX: e.originX,
                            originY: e.originY,
                            top: e.top,
                            left: e.left,
                            angle: e.angle
                        })
                    }
                }
            };
            e.default = i
        },
        53266: (t, e) => {
            "use strict";
            e.Z = void 0;
            var i = function t(e, i, r, n) {
                if (!e.length) return n();
                var o = e[i];
                if (i++, !o) return n();
                if (!r.DEPENDENCIES.Fonts) throw new Error("TEXT2SVG - Fonts not set!");
                r.DEPENDENCIES.Fonts.loadJSFontFrontend(o, t.bind(this, e, i, r, n))
            };
            e.Z = i
        },
        68370: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(56690))),
                o = r(i(89728)),
                a = r(i(38416)),
                s = r(i(23329)),
                l = i(91204),
                h = function() {
                    function t() {
                        (0, n.default)(this, t)
                    }
                    return (0, o.default)(t, null, [{
                        key: "setCache",
                        value: function(e, i) {
                            var r = t.getLayerHash(i);
                            t.CACHE[r] || (t.CACHE[r] = new Promise((function(t, i) {
                                e.toCanvasElement().toBlob((function(n) {
                                    n ? t({
                                        blobURL: URL.createObjectURL(n),
                                        layerHash: r,
                                        height: e._element.naturalHeight,
                                        width: e._element.naturalWidth
                                    }) : i("Failed to generate text image blob")
                                }))
                            })))
                        }
                    }, {
                        key: "getCache",
                        value: function(e) {
                            return e = t.getLayerHash(e), t.CACHE[e]
                        }
                    }, {
                        key: "getLayerHash",
                        value: function(t) {
                            return t = Object.assign({}, t, {
                                position: Object.assign({}, t.position, {
                                    areaWidth: (0, l.NUMFIX)(t.position.areaWidth),
                                    areaHeight: (0, l.NUMFIX)(t.position.areaHeight),
                                    left: 0,
                                    top: 0,
                                    width: (0, l.NUMFIX)(t.position.width),
                                    height: (0, l.NUMFIX)(t.position.height),
                                    rotation: 0
                                })
                            }), s.default.Hash(JSON.stringify(t))
                        }
                    }]), t
                }();
            e.default = h, (0, a.default)(h, "CACHE", {})
        },
        36575: (t, e, i) => {
            "use strict";
            e.Z = void 0;
            var r = i(67079);
            e.Z = r
        },
        9304: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(64687))),
                o = r(i(17156));
            var a = function(t, e, i, r, a, s, l) {
                var h = !!a.document.documentMode,
                    c = !h && !!a.window.StyleMedia;
                h || c ? ((h = a.document.createElement("style")).innerHTML = "@font-face {\n\t\t\tfont-family: " + e + ";\n\t\t\tsrc: url(" + i + ");\n\t\t}", a.document.body.appendChild(h), (c = a.document.createElement("span")).innerHTML = e, c.style.fontFamily = e, c.style.display = "none", a.document.body.appendChild(c), s.load(i, (function(t, i) {
                    t ? console.error("Could not load font: " + t) : (r.LOADED_TTF_FONTS[e] = !i.supported || i, void 0 !== l && l && l())
                }))) : function() {
                    var t = (0, o.default)(n.default.mark((function t() {
                        var o, h;
                        return n.default.wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, a.window.fetch(i);
                                case 2:
                                    return o = t.sent, t.next = 5, o.blob();
                                case 5:
                                    o = t.sent, (h = new a.window.FileReader).onload = function(t) {
                                        var i = h.result,
                                            n = s.parse(i);
                                        new a.window.FontFace(e, i).load().then((function(t) {
                                            r.LOADED_TTF_FONTS[e] = !n.supported || n, "undefined" == typeof window || window.isWebWorker || a.document.fonts.add(t), void 0 !== l && l && l()
                                        }))
                                    }, h.readAsArrayBuffer(o);
                                case 9:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })));
                    return function() {
                        return t.apply(this, arguments)
                    }
                }()()
            };
            e.default = a
        },
        52673: (t, e, i) => {
            "use strict";
            var r, n, o, a = i(64836),
                s = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, a(i(64687))),
                l = a(i(17156)),
                h = i(32777),
                c = a(i(7318)),
                u = a(i(75696)),
                f = a(i(36972));

            function d() {
                return !1
            }

            function p(t, e, i, r) {
                return -i * Math.cos(t / r * (Math.PI / 2)) + i + e
            }(0, c.default)(h.fabric), (0, f.default)(h.fabric), (0, u.default)(h.fabric), h.fabric.window && h.fabric.window._resourceLoader && h.fabric.window._resourceLoader._getRequestOptions && (r = h.fabric.window._resourceLoader._getRequestOptions.bind(h.fabric.window._resourceLoader), h.fabric.window._resourceLoader._getRequestOptions = function(t) {
                return (t = r(t)).forever = !1, t
            }), "undefined" != typeof window && window.isWebWorker && (n = function(t, e) {
                e = "precision " + e + " float;\nvoid main(){}";
                var i = t.createShader(t.FRAGMENT_SHADER);
                return t.shaderSource(i, e), t.compileShader(i), !!t.getShaderParameter(i, t.COMPILE_STATUS)
            }, h.fabric.isWebglSupported = function(t) {
                if (h.fabric.isLikelyNode) return !1;
                t = t || h.fabric.WebglFilterBackend.prototype.tileSize;
                var e = (i = h.fabric.document.createElement("canvas")).getContext("webgl") || i.getContext("experimental-webgl"),
                    i = !1;
                if (e) {
                    h.fabric.maxTextureSize = e.getParameter(e.MAX_TEXTURE_SIZE);
                    i = h.fabric.maxTextureSize >= t;
                    for (var r = ["highp", "mediump", "lowp"], o = 0; o < 3; o++)
                        if (n(e, r[o])) {
                            h.fabric.webGlPrecision = r[o];
                            break
                        }
                }
                return this.isSupported = i
            }), h.fabric.initFilterBackend = function() {
                return h.fabric.enableGLFiltering && h.fabric.isWebglSupported && h.fabric.isWebglSupported(h.fabric.textureSize) ? (console.log("WebGL textureSize:", h.fabric.textureSize, "maxTextureSize:", h.fabric.maxTextureSize, "webGlPrecision:", h.fabric.webGlPrecision), new h.fabric.WebglFilterBackend({
                    tileSize: h.fabric.textureSize
                })) : h.fabric.Canvas2dFilterBackend ? (console.log("Canvas2D textureSize:", h.fabric.textureSize, "maxTextureSize:", h.fabric.maxTextureSize), new h.fabric.Canvas2dFilterBackend) : void 0
            }, h.fabric.Object.prototype._renderControls && (h.fabric.Object.prototype._renderControls = function(t, e) {
                var i = this.getViewportTransform(),
                    r = this.calcTransformMatrix(),
                    n = (void 0 !== (e = e || {}).hasBorders ? e : this).hasBorders,
                    o = (void 0 !== e.hasControls ? e : this).hasControls;
                r = h.fabric.util.multiplyTransformMatrices(i, r), i = h.fabric.util.qrDecompose(r);
                t.save(), t.translate(i.translateX, i.translateY), t.lineWidth = +this.borderScaleFactor, this.group || (t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1), e.forActiveSelection || this.group ? (t.rotate(h.fabric.util.degreesToRadians(i.angle)), n && this.drawBordersInGroup(t, i, e)) : (t.rotate(h.fabric.util.degreesToRadians(this.angle)), n && this.drawBorders(t, e)), o && this.drawControls(t, e), t.restore()
            }), h.fabric.ActiveSelection.prototype._renderControls && (h.fabric.ActiveSelection.prototype._renderControls = function(t, e, i) {
                t.save(), t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, void 0 === (i = i || {}).hasControls && (i.hasControls = !1), i.forActiveSelection = !0, this._objects.forEach((function(e) {
                    e._renderControls(t, i)
                })), this.callSuper("_renderControls", t, e), t.restore()
            }), h.fabric.util.object.extend(h.fabric.Object.prototype, {
                animateNode: function() {
                    if (arguments[0] && "object" == typeof arguments[0]) {
                        var t, e, i = [];
                        for (t in arguments[0]) i.push(t);
                        for (var r = 0, n = i.length; r < n; r++) t = i[r], e = r !== n - 1, this._animateNode(t, arguments[0][t], arguments[1], e)
                    } else this._animateNode.apply(this, arguments);
                    return this
                },
                _animateNode: function(t, e, i, r) {
                    var n, o = this,
                        a = (e = e.toString(), i = i ? h.fabric.util.object.clone(i) : {}, (n = ~t.indexOf(".") ? t.split(".") : n) ? this.get(n[0])[n[1]] : this.get(t));
                    "from" in i || (i.from = a), e = ~e.indexOf("=") ? a + parseFloat(e.replace("=", "")) : parseFloat(e), h.fabric.util.animateNode({
                        startValue: i.from,
                        endValue: e,
                        byValue: i.by,
                        easing: i.easing,
                        duration: i.duration,
                        abort: i.abort && function() {
                            return i.abort.call(o)
                        },
                        onChange: function(e, r, a, s) {
                            n ? o[n[0]][n[1]] = e : o.set(t, e), i.onChange && i.onChange(e, r, a, s || function() {}, t)
                        },
                        onComplete: function(t, e, n) {
                            r || (o.setCoords(), i.onComplete && i.onComplete(t, e, n))
                        }
                    })
                }
            }), h.fabric.util.animateNode = function(t) {
                h.fabric.util.requestAnimFrame((function(e) {
                    t = t || {};
                    e = e || +new Date;
                    var i = t.duration || 500,
                        r = t.onChange || d,
                        n = t.onComplete || d,
                        o = t.easing || p,
                        a = "startValue" in t ? t.startValue : 0,
                        s = "endValue" in t ? t.endValue : 100,
                        l = t.byValue || s - a;
                    t.onStart && t.onStart(),
                        function t(e, h) {
                            var c = e && h ? e + 1e3 / 60 : 1e3 / 60,
                                u = (h = c / i, e = o(c, a, l, i), Math.abs((e - a) / l));
                            i <= c ? (r(s, 1, 1), n(s, 1, 1)) : r(e, u, h, (function() {
                                return t(c, !0)
                            }))
                        }(e)
                }))
            }, h.fabric.Group.prototype.shouldCache && (h.fabric.Group.prototype.shouldCache = function() {
                var t = h.fabric.Object.prototype.shouldCache.call(this);
                if (t)
                    for (var e = 0, i = this._objects.length; e < i; e++) {
                        if (this._objects.some((function(t) {
                                return t.insideClipGroup || t.cacheSetter
                            }))) return !0;
                        if (this._objects[e].willDrawShadow()) return this.ownCaching = !1, !!this.clipPath
                    }
                return t
            }), h.fabric.Object.prototype._getCacheCanvasDimensions && (h.fabric.Object.prototype._getCacheCanvasDimensions = function() {
                var t, e = 0,
                    i = 0,
                    r = (this._objects && this._objects.length && (r = this._objects.find((function(t) {
                        return t.shadow && t.insideClipGroup
                    }))) && (e = 2 * r.shadow.offsetX, i = 2 * r.shadow.offsetY), this.getTotalObjectScaling()),
                    n = (t = this._getTransformedDimensions(0, 0)).x * r.scaleX / this.scaleX;
                return {
                    width: 2 + n + e,
                    height: 2 + (t = t.y * r.scaleY / this.scaleY) + i,
                    zoomX: r.scaleX,
                    zoomY: r.scaleY,
                    x: n,
                    y: t
                }
            });
            try {
                importScripts && (h.fabric.Canvas.prototype._createCacheCanvas = function() {
                    this.cacheCanvasEl = this._createCanvasElement(), this.cacheCanvasEl.width = this.width, this.cacheCanvasEl.height = this.height, this.contextCache = this.cacheCanvasEl.getContext("2d")
                }, h.fabric.util.wrapElement = function(t) {
                    return {
                        tag: "div",
                        children: [t],
                        appendChild: function(t) {
                            this.children.push(t)
                        }
                    }
                }, h.fabric.util.makeElementUnselectable = function(t) {
                    return t
                }, h.fabric.Canvas.prototype.removeListeners = function() {}, h.fabric.Image.fromURL = (o = (0, l.default)(s.default.mark((function t(e, i, r) {
                    var n, o, a;
                    return s.default.wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (n = new OffscreenCanvas(1, 1), o = null, e instanceof Blob) return t.next = 5, createImageBitmap(e);
                                t.next = 8;
                                break;
                            case 5:
                                o = t.sent, t.next = 14;
                                break;
                            case 8:
                                return t.next = 10, fetch(e).then((function(t) {
                                    return t.blob()
                                }));
                            case 10:
                                return a = t.sent, t.next = 13, createImageBitmap(a);
                            case 13:
                                o = t.sent;
                            case 14:
                                n.height = o.height, n.width = o.width, n.getContext("bitmaprenderer").transferFromImageBitmap(o), a = new h.fabric.Image(n, r), i(a);
                            case 20:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                }))), function(t, e, i) {
                    return o.apply(this, arguments)
                }))
            } catch (t) {}
            var g = h.fabric;
            e.default = g
        },
        33466: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.isTouchDevice = function() {
                    return n.default.document && "ontouchstart" in n.default.document.documentElement
                }, r(i(52673)))
        },
        45601: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e) {
                    var i, r = e._fabric,
                        o = r.getSelectionContext();

                    function a(e, r, n, a) {
                        o.save(), o.lineWidth = 1, o.strokeStyle = "#4affa5", o.beginPath(), e = t.util.transformPoint(new t.Point(e, r), i), r = t.util.transformPoint(new t.Point(n, a), i), t.util.drawDashedLine(o, e.x, e.y, r.x, r.y, [2, 2]), o.closePath(), o.stroke(), o.restore()
                    }

                    function s(t, e) {
                        t = Math.round(t), e = Math.round(e);
                        for (var i = t - 4, r = t + 4; i <= r; i++)
                            if (i === e) return 1
                    }
                    var l = [],
                        h = [];

                    function c() {
                        r.getActiveObject(), i = r.viewportTransform, r.getZoom()
                    }

                    function u(o) {
                        var a, c, u, f = o.target,
                            d = -1 < o.transform.action.indexOf("scale"),
                            p = (d && 0 === f.angle && (u = (u = null == (c = o.transform) ? void 0 : c.corner.split("").filter((function(t) {
                                return -1 < ["t", "b"].indexOf(t)
                            }))).length ? u[0] : "", a = (a = null == (c = o.transform) ? void 0 : c.corner.split("").filter((function(t) {
                                return -1 < ["l", "r"].indexOf(t)
                            }))).length ? a[0] : ""), f.setCoords(), r.getObjects()),
                            g = f.getCenterPoint(),
                            v = (o = f.getBoundingRect()).height / i[3],
                            m = o.width / i[0],
                            y = !1,
                            b = !1;
                        if (r._currentTransform && (!d || n.default.isCropState(e))) {
                            for (var x = p.length; x--;) {
                                var _, w, S, C, T, E, k, O, I, P = n.default.isObjBeingCropped(r, p[x].id) && n.default.isCropState(e, p[x].id),
                                    L = "textbox" === p[x].type && p[x].filters && p[x].filters[3] || "textbox" === f.type && f.filters && f.filters[3];
                                p[x] === f || L || !(P || p[x].selectable && p[x].evented) || p[x].patternId || (P = (L = p[x].getCenterPoint()).x, L = L.y, _ = (w = p[x].getBoundingRect()).height / i[3], w = w.width / i[0], I = L < g.y ? L - _ / 2 - 5 : L + _ / 2 + 5, E = g.y > L ? g.y + v / 2 + 5 : g.y - v / 2 - 5, S = P < g.x ? P - w / 2 - 5 : P + w / 2 + 5, C = g.x > P ? g.x + m / 2 + 5 : g.x - m / 2 - 5, O = k = 0, s(P, g.x) && (b = !0, l.push({
                                    x: k = P,
                                    y1: I,
                                    y2: E
                                }), d || f.setPositionByOrigin(new t.Point(P, g.y), "center", "center")), s(P - w / 2, g.x - m / 2) && (b = !0, l.push({
                                    x: k = P - w / 2,
                                    y1: I,
                                    y2: E
                                }), d && "l" === a ? (T = g.x - m / 2 - k) < 0 && (T = f.getScaledWidth() + T, f.set("scaleX", T / f.width), f.left = k) : d || f.setPositionByOrigin(new t.Point(P - w / 2 + m / 2, g.y), "center", "center")), s(P + w / 2, g.x + m / 2) && (b = !0, l.push({
                                    x: k = P + w / 2,
                                    y1: I,
                                    y2: E
                                }), d && "r" === a ? (T = k - (g.x + m / 2)) < 0 && (I = f.getScaledWidth() + T, f.set("scaleX", I / f.width)) : d || f.setPositionByOrigin(new t.Point(P + w / 2 - m / 2, g.y), "center", "center")), s(L, g.y) && (y = !0, h.push({
                                    y: O = L,
                                    x1: S,
                                    x2: C
                                }), d || f.setPositionByOrigin(new t.Point(g.x, L), "center", "center")), s(L - _ / 2, g.y - v / 2) && (y = !0, h.push({
                                    y: O = L - _ / 2,
                                    x1: S,
                                    x2: C
                                }), d && "t" === u ? (E = g.y - v / 2 - O) < 0 && (k = f.getScaledHeight() + E, f.set("scaleY", k / f.height), f.top = O) : d || f.setPositionByOrigin(new t.Point(g.x, L - _ / 2 + v / 2), "center", "center")), s(L + _ / 2, g.y + v / 2) && (y = !0, h.push({
                                    y: O = L + _ / 2,
                                    x1: S,
                                    x2: C
                                }), d && "b" === u ? (I = O - (g.y + v / 2)) < 0 && (P = f.getScaledHeight() + I, f.set("scaleY", P / f.height)) : d || f.setPositionByOrigin(new t.Point(g.x, L + _ / 2 - v / 2), "center", "center")))
                            }
                            y || (h.length = 0), b || (l.length = 0)
                        }
                    }
                    r.on("mouse:down", c), r.on("canvas:zoomed", c), r.on("object:moving", u), r.on("object:scaling", u), r.on("before:render", (function() {
                        r.contextTop && r.clearContext(r.contextTop)
                    })), r.on("after:render", (function() {
                        for (var t, e = l.length; e--;) a((t = l[e]).x + .5, t.y1 > t.y2 ? t.y2 : t.y1, t.x + .5, t.y2 > t.y1 ? t.y2 : t.y1);
                        for (var i, r = h.length; r--;) a((i = h[r]).x1 > i.x2 ? i.x2 : i.x1, i.y + .5, i.x2 > i.x1 ? i.x2 : i.x1, i.y + .5);
                        l.length = h.length = 0
                    })), r.on("mouse:up", (function() {
                        l.length = h.length = 0
                    }))
                }, r(i(99765)))
        },
        66792: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t, e, r) {
                var n, o, a, s, l, h, c, u, f = r.width,
                    d = r.height,
                    p = r.left,
                    g = r.top,
                    v = p + f,
                    m = g + d,
                    y = Math.round(p + f / 2),
                    b = Math.round(g + d / 2),
                    x = F(),
                    _ = Math.round(p + f * x),
                    w = Math.round(p + f - f * x),
                    S = {},
                    C = {},
                    T = {},
                    E = {},
                    k = {},
                    O = {},
                    I = {},
                    P = {},
                    L = e.getSelectionContext(),
                    M = e.viewportTransform,
                    A = (e.getZoom(), !1);

                function D() {
                    return e._guidelinesOptions && e._guidelinesOptions.center
                }

                function R() {
                    return e._guidelinesOptions && e._guidelinesOptions.sideCenter
                }

                function F() {
                    return e._guidelinesOptions ? e._guidelinesOptions.sideCenterRatio : 0
                }

                function j(e, i, r, n, o) {
                    L.lineWidth = 1, L.strokeStyle = "#4affff", L.beginPath(), e = t.util.transformPoint(new t.Point(e, i), M), i = t.util.transformPoint(new t.Point(r, n), M), t.util.drawDashedLine(L, Math.round(e.x), Math.round(e.y), Math.round(i.x), Math.round(i.y), [2, o ? 0 : 2]), L.closePath(), L.stroke()
                }

                function B() {
                    e.getActiveObject() && (A = !0), M = e.viewportTransform, e.getZoom(), U()
                }

                function U() {
                    S = {}, E = {}, I = {}, k = {}, P = {}, O = {};
                    for (var e = t.util.transformPoint(new t.Point(y, b), M), i = e.x - 4, r = e.x + 4; i <= r; i++) S[Math.round(i)] = !0;
                    for (var n = e.y - 4, o = e.y + 4; n <= o; n++) E[Math.round(n)] = !0;
                    for (var a = (e = t.util.transformPoint(new t.Point(p, g), M)).x - 4, s = e.x + 4; a <= s; a++) I[Math.round(a)] = !0;
                    for (var l = e.y - 4, h = e.y + 4; l <= h; l++) k[Math.round(l)] = !0;
                    for (var c = (e = t.util.transformPoint(new t.Point(v, m), M)).x - 4, u = e.x + 4; c <= u; c++) P[Math.round(c)] = !0;
                    for (var d = e.y - 4, L = e.y + 4; d <= L; d++) O[Math.round(d)] = !0;
                    C = {}, T = {}, x = F(), _ = Math.round(p + f * x), w = Math.round(p + f - f * x);
                    for (var A = (e = t.util.transformPoint(new t.Point(_, 0), M)).x - 4, D = e.x + 4; A <= D; A++) C[Math.round(A)] = !0;
                    for (var R = (e = t.util.transformPoint(new t.Point(w, 0), M)).x - 4, j = e.x + 4; R <= j; R++) T[Math.round(R)] = !0
                }
                U(), e.on("mouse:down", B), e.on("canvas:zoomed", B), e.on("object:moving", (function(i) {
                    var r, f = ((i = i.target).setCoords(), i.getCenterPoint()),
                        d = i.getBoundingRect(),
                        x = d.height / M[3],
                        L = d.width / M[0];
                    e._currentTransform && (r = t.util.transformPoint(new t.Point(f.x, f.y), M), n = D() && Math.round(r.x) in S, o = Math.round(r.y) in E, a = R() && Math.round(r.x) in C, s = R() && Math.round(r.x) in T, l = Math.round(d.top) in k, h = Math.round(d.top + d.height) in O, c = Math.round(d.left) in I, u = Math.round(d.left + d.width) in P, (l || h || c || u || o || n || a || s) && (r = c ? p + L / 2 : u ? v - L / 2 : n ? y : a ? _ : s ? w : f.x, d = l ? g + x / 2 : h ? m - x / 2 : o ? b : f.y, i.setPositionByOrigin(new t.Point(r, d), "center", "center")))
                })), e.on("before:render", (function() {
                    e.contextTop && e.clearContext(e.contextTop)
                })), e.on("after:render", (function() {
                    var t = e._showGuidelines || A,
                        r = R();
                    D() && (t || n) && j(y + i, g, y + i, m, t && n), r && (t || a) && j(_ + i, g, _ + i, m, t && a), r && (t || s) && j(w + i, g, w + i, m, t && s), (t || o) && j(p, b + i, v, b + i, t && o), (t || l) && j(p, g + i, v, g + i, t && l), (t || h) && j(p, m + i, v, m + i, t && h), (t || c) && j(p + i, g, p + i, m, t && c), (t || u) && j(v + i, g, v + i, m, t && u)
                })), e.on("mouse:up", (function() {
                    A = !1, n = o = a = s = l = h = c = u = null, e.requestRenderAll()
                }))
            };
            var i = .5
        },
        10783: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e) {
                    var i = document.createElement("img");
                    i.src = "data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E", n.fabric.Object.prototype.controls.deleteControl = new n.fabric.Control({
                        x: .5,
                        y: -.5,
                        cursorStyle: "pointer",
                        mouseUpHandler: function() {
                            t.getActiveObject() && e(t.getActiveObject())
                        },
                        render: function(e, r, a, s, l) {
                            var h = t.getActiveObject();
                            h && !h.disableRemove && (null == h ? void 0 : h.subType) !== o.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP && (h = this.cornerSize, e.save(), e.translate(r, a), e.drawImage(i, -h / 2, -h / 2, h, h), e.rotate(n.fabric.util.degreesToRadians(l.angle)), e.restore())
                        },
                        cornerSize: 24
                    })
                }, i(32777)),
                o = r(i(279))
        },
        36972: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t) {
                t.Image.filters.BlendImage.prototype.fragmentSource["pf-mask"] = t.Image.filters.BlendImage.prototype.fragmentSource.mask.replace("color.a = color2.a", "color.a = color2.r"), t.Image.filters.BlendImage.prototype.applyTo2d = function(e) {
                    var i, r, n, o, a, s, l, h, c, u = e.imageData,
                        f = (e = e.filterBackend.resources, u.data),
                        d = f.length,
                        p = u.width,
                        g = (u = u.height, this.image);
                    e.blendImage || (e.blendImage = t.util.createCanvasElement()), c = (e = e.blendImage).getContext("2d"), e.width !== p || e.height !== u ? (e.width = p, e.height = u) : c.clearRect(0, 0, p, u), c.setTransform(g.scaleX, 0, 0, g.scaleY, g.left, g.top), c.drawImage(g._element, 0, 0, p, u);
                    for (var v = c.getImageData(0, 0, p, u).data, m = 0; m < d; m += 4) switch (a = f[m], s = f[m + 1], l = f[m + 2], h = f[m + 3], i = v[m], r = v[m + 1], n = v[m + 2], o = v[m + 3], this.mode) {
                        case "multiply":
                            f[m] = a * i / 255, f[m + 1] = s * r / 255, f[m + 2] = l * n / 255, f[m + 3] = h * o / 255;
                            break;
                        case "mask":
                            f[m + 3] = o;
                            break;
                        case "pf-mask":
                            f[m + 3] = i
                    }
                }
            }
        },
        75696: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t) {
                    t.Image.filters.Underbase = t.util.createClass(t.Image.filters.BaseFilter, {
                        type: n.default.FILTER_TYPE.UNDERBASE,
                        minAlpha: .21,
                        maxAlpha: 1,
                        color: "#ffffff",
                        opacity: 1,
                        colorMix: .2,
                        useColorMix: !0,
                        getColorSource: function() {
                            return new t.Color(this.color).setAlpha(255 * this.opacity).getSource()
                        },
                        buildSource: function() {
                            return "\n\t\t\tprecision mediump float;\n\t\t\t\n\t\t\tvarying vec2 vTexCoord; // x, y location of pixel\n\t\t\tuniform sampler2D uTexture;\n\t\t\tuniform vec4 uColor;\n\t\t\tuniform bool uUseColorMix;\n\t\t\tuniform float uColorMix;\n\t\t\tuniform float uMinAlpha;\n\t\t\tuniform float uMaxAlpha;\n\t\t\t\n\t\t\t// Possible that GLSL has a pre-made function for this, but here we are\n\t\t\tvec4 screenColors(vec4 c1, vec4 c2) {\n\t\t\t\treturn (1.0 - (1.0 - c1) * (1.0 - c2) / 1.0);\n\t\t\t}\n\t\t\t\n\t\t\t// GLSL probably has this built-in, i just couldnt find it\n\t\t\tfloat remap (float x, float imin, float imax, float omin, float omax) {\n\t\t\t\treturn ((x - imin) * (omax - omin) / (imax - imin) + omin);\n\t\t\t}\n\t\t\t\n\t\t\tfloat easeOutCubic (float x) {\n\t\t\t\treturn (1.0 - pow(1.0 - x, 3.0));\n\t\t\t}\n\t\t\t\n\t\t\tvoid main() {\n\t\t\t\tvec4 c = texture2D(uTexture, vTexCoord); // get color at pixel\n\t\t\t\n\t\t\t\tif (uUseColorMix) {\n\t\t\t\t\tc.rgb = mix(c, uColor, uColorMix).rgb;\n\t\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t\tif (c.a >= uMaxAlpha) {\n\t\t\t\t\t// c.a = uColor.a; // TODO: Uncomment when resolving white issues!\n\t\t\t    } else if (c.a >= uMinAlpha) {\n\t\t\t\t\t// COPY/PASTE\n\t\t\t\t\t// float alpha = uColor.a - c.a; // TODO: Uncomment when resolving white issues!\n\t\t\t\t\tfloat mixBias = (1.0 - c.a) / 1.0;\n\t\t\t\t\tc.rgb = mix(c, uColor, mixBias).rgb;\n\t\t\t\t\t// c.rgb = screenColors(c, vec4(alpha)).rgb; // TODO: Uncomment when resolving white issues!\n\t\t\t\t\t// END COPY/PASTE\n\t\t\t\t\t// c.a = (c.a + uColor.a) / 2.0; // TODO: Uncomment when resolving white issues!\n\t\t\t\t// All pixels under minAlpha ar all made very white and shows even more solid transparency\n\t\t\t\t// this is the bleeding undercolor effect\n\t\t\t\t} else if (c.a >= 999.0) { // TODO: set - 0.0 currently skipping this part\n\t\t\t\t\t// COPY/PASTE\n\t\t\t\t\t// float alpha = uColor.a - c.a; // TODO: Uncomment when resolving white issues!\n\t\t\t\t\tfloat mixBias = (1.0 - c.a) / 1.0;\n\t\t\t\t\tc.rgb = mix(c, uColor, mixBias).rgb;\n\t\t\t\t\t// c.rgb = screenColors(c, vec4(alpha)).rgb; // TODO: Uncomment when resolving white issues!\n\t\t\t\t\t// END COPY/PASTE\n\t\t\t\t\tc.rgb = (c.rgb + uColor.a) / 2.0;\n\t\t\t\t\t// c.a = remap(c.a, 0.0, 1.0 * uMinAlpha, 0.0, uColor.a/2.0); // TODO: Uncomment when resolving white issues!\n\t\t\t\t\t// c.a = easeOutCubic(c.a/1.0)*1.0; // TODO: Uncomment when resolving white issues!\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\n\t\t\t\tgl_FragColor = c; // set output pixel color\n\t\t\t}\n\t\t\t"
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uColor: t.getUniformLocation(e, "uColor"),
                                uUseColorMix: t.getUniformLocation(e, "uUseColorMix"),
                                uColorMix: t.getUniformLocation(e, "uColorMix"),
                                uMinAlpha: t.getUniformLocation(e, "uMinAlpha"),
                                uMaxAlpha: t.getUniformLocation(e, "uMaxAlpha")
                            }
                        },
                        sendUniformData: function(t, e) {
                            var i = this.getColorSource();
                            i[0] /= 255, i[1] /= 255, i[2] /= 255, i[3] /= 255, t.uniform4fv(e.uColor, i), t.uniform1i(e.uUseColorMix, this.useColorMix), t.uniform1f(e.uColorMix, this.colorMix), t.uniform1f(e.uMinAlpha, this.minAlpha), t.uniform1f(e.uMaxAlpha, this.maxAlpha)
                        },
                        retrieveShader: function(t) {
                            var e, i = this.type + "_" + this.minAlpha + "_" + this.maxAlpha + "_" + this.color + "_" + this.opacity + "_" + this.colorMix + "_" + this.useColorMix;
                            return i in t.programCache || (e = this.buildSource(), t.programCache[i] = this.createProgram(t.context, e)), t.programCache[i]
                        },
                        mixColors: function(t, e) {
                            return t * (1 - this.colorMix) + e * this.colorMix
                        },
                        applyTo2d: function(t) {
                            for (var e, i, r, n, o = t.imageData.data, a = (t = this.getColorSource())[0], s = t[1], l = t[2], h = (t[3], this.useColorMix), c = (this.colorMix, this.minAlpha, this.maxAlpha, 0), u = o.length; c < u; c += 4) e = o[c], i = o[c + 1], r = o[c + 2], n = o[c + 3], h && (e = this.mixColors(e, a), i = this.mixColors(i, s), r = this.mixColors(r, l)), o[c] = e, o[c + 1] = i, o[c + 2] = r, o[c + 3] = n
                        },
                        toObject: function() {
                            return {
                                type: this.type,
                                minAlpha: this.minAlpha,
                                maxAlpha: this.maxAlpha,
                                color: this.color,
                                opacity: this.opacity,
                                colorMix: this.colorMix,
                                useColorMix: this.useColorMix
                            }
                        }
                    }), t.Image.filters.Underbase.fromObject = t.Image.filters.BaseFilter.fromObject
                }, r(i(279)))
        },
        64124: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t, e, i, r, n) {
                t || console.warn("fabricLabel - no jQuery!");
                var o, a, s = 1;
                (o = t('<div class="canvas-label"></div>')).text(n), o.css({
                    width: r.width - 2 + "px",
                    top: r.top + r.height + 2 + "px",
                    left: r.left + 1 + "px",
                    bottom: "auto"
                }), o.hide(), i.wrapperEl && t(i.wrapperEl).append(o), i.on({
                    "mouse:down": function(t) {
                        var n;
                        i.getActiveObject() ? (a = i.viewportTransform, s = i.getZoom(), n = e.util.transformPoint(new e.Point(r.left, r.top + r.height), a), o.css({
                            width: r.width * s - 2 + "px",
                            left: n.x + 1 + "px",
                            top: n.y + 2 + "px"
                        }), o.show()) : o.hide()
                    },
                    "mouse:up": function(t) {
                        o.hide()
                    }
                })
            }
        },
        86469: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t, e, i) {
                    var r, o = 1,
                        a = i.width,
                        s = i.height,
                        l = i.left,
                        h = i.top,
                        c = l + a,
                        u = h + s;

                    function f() {
                        r = e.viewportTransform, o = e.getZoom()
                    }
                    e.on({
                        "object:moving": function(i) {
                            (i = i.target).setCoords();
                            var f, d, p, g, v, m, y = i.getBoundingRect();
                            y.height, r[3], y.width, r[0], e._currentTransform && (f = l, m = h, d = c, p = u, 1 !== o && (f = (v = t.util.transformPoint(new t.Point(f, m), r)).x, m = v.y, d = (v = t.util.transformPoint(new t.Point(d, p), r)).x, p = v.y), v = y.top < m - .9 * y.height, m = y.top + y.height * (1 - .9) > p, p = y.left < f - .9 * y.width, g = y.left + y.width * (1 - .9) > d, (v || m || p || g) && !i.disableCentering && i.setPositionByOrigin(new t.Point(l + a / 2, h + s / 2), "center", "center"), v = y.left <= f - y.width / 2, m = y.left + y.width / 2 >= d, i.subType === n.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP && (v || m) && (m ? i.setPositionByOrigin(new t.Point(l + a / 2, h + s / 2), "left", "center") : i.setPositionByOrigin(new t.Point(l + a / 2, h + s / 2), "right", "center")))
                        },
                        "mouse:down": f,
                        "canvas:zoomed": f
                    })
                }, r(i(279)))
        },
        7318: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = function(t) {
                    function e(t, e, i, r, n, o, s, l, h) {
                        var c, u, f, d, p;
                        if (void 0 === h && (h = !0), "" !== e.trim() && 0 !== t.globalAlpha) {
                            if (isNaN(i) || isNaN(r) || isNaN(n) || isNaN(s) || null != l && isNaN(l)) throw console.error(i, r, n, s, l), TypeError("circle text arguments requires a number for x,y, radius, start, and end.");
                            if (p = t.textAlign, h = h ? -1 : 1, f = 1 / n, c = t.measureText(e).width + o * (e.length - 1) / 10, null != l) d = (u = (l - s) / c * h) / f * h;
                            else switch (u = -f * h, d = -1 * h, p) {
                                case "center":
                                    l = (s -= u * c / 2) + u * c;
                                    break;
                                case "right":
                                case "end":
                                    l = s, s -= u * c;
                                    break;
                                case "left":
                                case "start":
                                    l = s + u * c
                            }
                            t.textAlign = "center", g = s;
                            for (var g, v = 0; v < e.length; v += 1) g = a(t, e[v], i, r, n, g, u, d), o && v + 1 < e.length && (g = a(t, "", i, r, n, g, u, d, o / 10));
                            t.textAlign = p
                        }
                    }
                    var i = {},
                        r = 0,
                        a = function(t, e, i, n, o, a, s, l, h) {
                            h = (h || t.measureText(e).width) * s, s = Math.cos(a + h / 2);
                            var c = Math.sin(a + h / 2);
                            return t.save(), t.transform(-c * l, s * l, -s, -c, s * o + i, c * o + n), 0 === r ? t.fillText(e, 0, 0) : t.strokeText(e, 0, 0), t.restore(), a + h
                        },
                        s = {};
                    s = "undefined" != typeof window ? window.isWebWorker ? {} : window.CanvasRenderingContext2D : t.nodeCanvas.CanvasRenderingContext2D;
                    "undefined" != typeof window && void 0 !== window && window.isWebWorker || (s.prototype.fillCircleText = function(t, i, n, o, a, s, l, h) {
                        r = 0, e(this, t, i, n, o, a, s, l, h)
                    }, s.prototype.strokeCircleText = function(t, i, n, o, a, s, l, h) {
                        r = 1, e(this, t, i, n, o, a, s, l, h)
                    }), t.PFTextbox = t.util.createClass(t.Text, {
                        type: "pf-textbox",
                        shadowOffsetX: 0,
                        shadowOffsetY: 0,
                        shadowColor: "#3ee",
                        strokeOffset: 0,
                        strokeOffsetColor: "#fff",
                        customizedWidth: 0,
                        scaleTextLineToHeight: function(t) {
                            return this.scale(t * this._fontSizeMult / this.getHeightOfLine(0))
                        },
                        _render: function(t) {
                            this._setTextStyles(t), this._renderTextLinesBackground(t), this._renderTextDecoration(t, "underline"), this._renderText(t), this._renderTextDecoration(t, "overline"), this._renderTextDecoration(t, "linethrough")
                        },
                        _renderText: function(t) {
                            this._renderTextStroke(t), this._renderTextOffset(t), this._renderTextFill(t)
                        },
                        _renderTextOffset: function(t) {
                            (this.strokeOffsetColor && 0 !== this.strokeOffset || !this.isEmptyStyles()) && (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this._setLineDash(t, this.strokeDashArray), t.beginPath(), this._renderTextCommon(t, "strokeOffsetText"), t.closePath(), t.restore())
                        },
                        getCustomSvgProperties: function(e, r) {
                            var n = (l = t.util.object.clone(this)).strokeWidth,
                                a = (l.strokeWidth = 0, l.getScaledHeight()),
                                s = (n = (l.strokeWidth = n, l.scaleX), l.scaleTextLineToHeight(e.size), l.scaleX),
                                l = (a = (l.scaleToHeight(a), s / n * l.lineHeight), (n = (s = (l.fill && "string" == typeof l.fill || (l.fill = "#000000"), this.createTextDimensionCanvasAddObject(l))).getContext()).lineJoin = this.strokeLineJoin, n.getImageData(0, 0, parseInt(s.width), parseInt(s.height)).data);
                            n = [e.text, e.fontPath, e.strokeWeight, e.strokeOffset, e.letterSpacing, e.lineHeight, e.arcAngle].join("-"), e = i[n] || this._getTextDimensionsFromImage(l, parseInt(s.width), parseInt(s.height)), i[n] || (i[n] = Object.assign({}, e)), l = "";
                            return r || (l = s.toSVG({
                                suppressPreamble: !0,
                                viewBox: {
                                    x: e.left,
                                    y: e.top,
                                    width: e.width,
                                    height: e.height
                                },
                                width: e.width,
                                height: e.height
                            })), (0, o.clearCanvas)(s), {
                                svgDimensions: e,
                                width: e.width * a,
                                height: e.height * a,
                                svgString: l,
                                scaleBackRatio: a
                            }
                        },
                        _getTextDimensionsFromImage: function(t, e, i) {
                            for (var r, n = null, o = null, a = null, s = null, l = 0; l < i && null === o; l++)
                                for (r = 0; r < e; r++)
                                    if (0 < t[4 * (l * e + r) + 3]) {
                                        o = l;
                                        break
                                    } for (r = 0; r < e && null === n; r++)
                                for (l = o; l < i; l++)
                                    if (0 < t[4 * (l * e + r) + 3]) {
                                        n = r;
                                        break
                                    } for (l = parseInt(i); o <= l && null === s; l--)
                                for (r = parseInt(e); n <= r; r--)
                                    if (0 < t[4 * (l * e + r) + 3]) {
                                        s = l;
                                        break
                                    } for (r = parseInt(e); n <= r && null === a; r--)
                                for (l = parseInt(i); o <= l; l--)
                                    if (0 < t[4 * (l * e + r) + 3]) {
                                        a = r;
                                        break
                                    } return null === n || null === o || null === a || null === s ? (console.warn("Could not get dimensions: minX ", n, ", minY", o, ", maxX", a, ", maxY", s, "width", e, "height", i), {
                                left: 0,
                                top: 0,
                                width: e,
                                height: i
                            }) : {
                                left: n,
                                top: o,
                                width: a - n,
                                height: s - o
                            }
                        },
                        calcArcDimensions: function() {
                            this.arcAngle *= 1, this.arcAngle ? 1 < this.text.length && (this.arcRadius = this.getAdvancedArcRadius(), this.prevWidth = this.width, this.prevHeight = this.height, this.height = this._arcGetApproxHeight(), this.width = this._arcGetApproxWidth()) : this.arcRadius = null
                        },
                        calcArcRadius: function(t) {
                            return 180 * t / (Math.PI * this.arcAngle)
                        },
                        getAdvancedArcRadius: function() {
                            if (1 === this._textLines.length) return this.calcArcRadius(this.width);
                            var t, e, i, r = 0,
                                n = 1,
                                o = -1,
                                a = (0 < this.arcAngle && (r = this._textLines.length - 1, n = -1, o = 1), this.measureLine(r).width),
                                s = this.calcArcRadius(a);
                            for (r += n; 0 <= r && r < this._textLines.length;) e = this.measureLine(r).width, i = this.arcAngle < 0 ? r * o : (this._textLines.length - 1 - r) * o, t = s + this.getHeightOfLine(r) * i, t = 2 * Math.PI * t, e > Math.abs(t) && (s = this.calcArcRadius(e) - this.getHeightOfLine(r) * i), r += n;
                            return s
                        },
                        createTextDimensionCanvasAddObject: function(e) {
                            var i = e.arcAngle && 1 < e.text.length,
                                r = i ? 1 : 1 + e.strokeWidth / n.default.FONT_SIZE_MULTIPLIER,
                                o = i ? 1.75 : 2,
                                a = parseInt(e.height * o * r);
                            o = parseInt(e.width * o * r), r = new t.StaticCanvas(null, {
                                enableRetinaScaling: !1,
                                renderOnAddRemove: !1,
                                skipOffscreen: !1,
                                width: o,
                                height: a
                            });
                            return e.objectCaching = !1, i ? (o = e._arcGetApproxTop(r.height), e.set({
                                top: o,
                                left: r.width / 2,
                                originX: "center",
                                originY: "center"
                            })) : e.set({
                                top: r.height / 4,
                                left: r.width / 4
                            }), e.setCoords(), r.add(e), r.renderAll(), r
                        },
                        _arcGetApproxHeight: function() {
                            var e = Math.abs(this.arcAngle) / 2,
                                i = Math.abs(this.arcRadius),
                                r = e % 90;
                            return 180 == e ? 2 * (i + this.prevHeight) : e < 90 ? i + this.prevHeight - i * Math.cos(t.util.degreesToRadians(r)) : i + this.prevHeight + (i + this.prevHeight) * Math.sin(t.util.degreesToRadians(r))
                        },
                        _arcGetApproxWidth: function() {
                            var e = Math.abs(this.arcAngle) / 2,
                                i = Math.abs(this.arcRadius);
                            i = e < 90 ? (i + this.prevHeight) * Math.sin(t.util.degreesToRadians(e)) * 2 : 2 * (i + this.prevHeight);
                            return e < 25 && i < this.prevWidth ? this.prevWidth : i
                        },
                        _arcGetApproxTop: function(t) {
                            var e = Math.abs(this.arcRadius);
                            return 0 < this.arcAngle ? e + t / 2 : -(e + this.prevHeight) + this.height + this.prevHeight / 2 + (t - this.height) / 2
                        },
                        toObject: function(t) {
                            return this.callSuper("toObject", ["shadowOffsetX", "shadowOffsetY", "shadowColor", "strokeOffset", "strokeColor", "strokeOffsetColor"].concat(t))
                        },
                        _wrapSVGTextAndBg: function(t) {
                            var e, i = this,
                                r = this.getSvgTextDecoration(this),
                                n = (a = this.getSvgStyles(!0)).split(";"),
                                o = [t.textBgRects.join("")],
                                a = (this.stroke && this.strokeWidth && (this._addStyledTextToArray(o, r, a, t.textSpans.join("")), this.strokeOffsetColor && this.strokeOffset && (e = [], n.forEach((function(t) {
                                    0 <= t.indexOf("stroke:") ? t = "stroke: " + i.strokeOffsetColor : 0 <= t.indexOf("stroke-width:") && (t = "stroke-width: " + i.strokeOffset), e.push(t)
                                })), this._addStyledTextToArray(o, r, e.join(";"), t.textSpans.join("")))), n.filter((function(t) {
                                    return t.indexOf("stroke") < 0
                                })));
                            return this._addStyledTextToArray(o, r, a.join(";"), t.textSpans.join("")), o
                        },
                        _addStyledTextToArray: function(t, e, i, r) {
                            t.push('\t\t<text xml:space="preserve" ', this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "", this.fontSize ? 'font-size="' + this.fontSize + '" ' : "", this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "", this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "", e ? 'text-decoration="' + e + '" ' : "", 'style="', i, '"', this.addPaintOrder(), " >", r, "</text>\n")
                        }
                    }), t.PFTextbox.prototype._renderTextCommon = function(t, e) {
                        t.save();
                        var i = 0,
                            r = this._getLeftOffset(),
                            n = this._getTopOffset(),
                            o = this._applyPatternGradientTransform(t, "fillText" === e ? this.fill : "strokeOffsetText" === e ? this.strokeOffsetColor : this.stroke);
                        this._isPFShadowRender && (r += this.shadowTemp.offsetX / this.scaleX, n += this.shadowTemp.offsetY / this.scaleY);
                        for (var a = 0, s = this._textLines.length; a < s; a++) {
                            var l = this.getHeightOfLine(a),
                                h = l / this.lineHeight,
                                c = this._getLineLeftOffset(a);
                            this._renderTextLine(e, t, this._textLines[a], r + c - o.offsetX, n + i + h - o.offsetY, a), i += l
                        }
                        t.restore()
                    }, t.PFTextbox.prototype._renderChars = function(t, e, i, r, n, o) {
                        this.isArc = this.arcAngle && this.arcRadius;
                        var a, s, l, h = this.getHeightOfLine(o),
                            c = -1 !== this.textAlign.indexOf("justify"),
                            u = "",
                            f = 0,
                            d = this.path,
                            p = !c && (0 === this.charSpacing || this.isArc) && this.isEmptyStyles(o) && !d,
                            g = "ltr" === this.direction,
                            v = "ltr" === this.direction ? 1 : -1;
                        if (e.save(), n -= h * this._fontSizeFraction / this.lineHeight, p) return e.canvas.setAttribute("dir", g ? "ltr" : "rtl"), e.direction = g ? "ltr" : "rtl", e.textAlign = g ? "left" : "right", this._renderChar(t, e, o, 0, i.join(""), r, n, h), void e.restore();
                        for (var m = 0, y = i.length - 1; m <= y; m++) {
                            var b = m === y || this.charSpacing || d;
                            u += i[m], l = this.__charBounds[o][m], 0 === f ? (r += v * (l.kernedWidth - l.width), f += l.width) : f += l.kernedWidth, (b = !(!c || b || !this._reSpaceAndTab.test(i[m])) || b) || (a = a || this.getCompleteStyleDeclaration(o, m), s = this.getCompleteStyleDeclaration(o, m + 1), b = this._hasStyleChanged(a, s)), b && (d ? (b = -f / 2, e.save(), e.translate(l.renderLeft, l.renderTop), e.rotate(l.angle), this._renderChar(t, e, o, m, u, b, 0, h), e.restore()) : (l = r, e.canvas.setAttribute("dir", g ? "ltr" : "rtl"), e.direction = g ? "ltr" : "rtl", e.textAlign = g ? "left" : "right", this._renderChar(t, e, o, m, u, l, n, h)), u = "", a = s, r += v * f, f = 0)
                        }
                        e.restore()
                    }, t.PFTextbox.prototype._renderChar = function(t, e, i, r, n, o, a) {
                        var s, l, h = this._getStyleDeclaration(i, r),
                            c = (r = this.getCompleteStyleDeclaration(i, r), "fillText" === t && r.fill),
                            u = "strokeOffsetText" === t && this.strokeOffsetColor && this.strokeOffset;
                        ((t = "strokeText" === t && r.stroke && r.strokeWidth) || c) && (e.save(), this.isArc && (e.textAlign = this.textAlign), this._isPFShadowRender && (r.fill = this.shadowTemp.color, r.stroke = this.shadowTemp.color), h && h.textBackgroundColor && this._removeShadow(e), c && this._setFillStyles(e, r), t && this._setStrokeStyles(e, r), e.font = this._getFontDeclaration(r), r = this._textLines.length - 1 - i, this.isArc && this.arcAngle < 0 && (r = -i), this.isArc && (s = this.arcRadius + this.getHeightOfLine(i) * r, a += this.getHeightOfLine(i) * r, l = 1.5 * Math.PI), h && h.textBackgroundColor && this._removeShadow(e), h && h.deltaY && (a += h.deltaY), i = this._isPFShadowRender ? this.shadowTemp.offsetX / this.scaleX : 0, c && this.isArc && e.fillCircleText(n, i, a, s, this.charSpacing, l), c && !this.isArc && e.fillText(n, o, a), t && this.isArc && e.strokeCircleText(n, i, a, s, this.charSpacing, l), t && !this.isArc && e.strokeText(n, o, a), u && (e.strokeStyle = this.strokeOffsetColor, e.lineWidth = this.strokeOffset, this.isArc && e.strokeCircleText(n, i, a, s, this.charSpacing, l), this.isArc || e.strokeText(n, o, a)), e.restore())
                    }, t.PFTextbox.fromObject = function(e, i) {
                        return t.Object._fromObject("PFTextbox", e, i, "text")
                    }, t.PFTextGroup = t.util.createClass(t.Group, t.Collection, {
                        drawObject: function(t, e) {
                            var i;
                            this._objects.forEach((function(t) {
                                i || t.type !== n.default.COLOR_GRAPHIC_TYPE || (i = t)
                            })), i && !this.scaledGraphic && i.set({
                                top: -i.graphicPosition.top / this.scaleX - this.height / 2,
                                left: -i.graphicPosition.left / this.scaleY - this.width / 2 + (i.customizedLeft || 0),
                                scaleX: 1 / this.scaleX,
                                scaleY: 1 / this.scaleY
                            });
                            for (var r, o, a = 0, s = this._objects.length; a < s; a++) this.overrideFunctions(this._objects[a]), this._objects[a].shadow && this._objects[a].shadow.color && !this._objects[a].insideClipGroup && (r = i && !this._objects[a].fill ? this._objects[a].shadow.color : null, o = this._objects[a].fill, t.renderPFShadow = !0, this._objects[a].fill = r || o, this._objects[a].shadowTemp = this._objects[a].shadow, this._objects[a].shadow = null, this._objects[a].render(t), this._objects[a].shadow = this._objects[a].shadowTemp, this._objects[a].shadowTemp = null, this._objects[a].fill = o, t.renderPFShadow = !1);
                            for (a = 0, s = this._objects.length; a < s; a++) t.renderPFShadow = !1, this._objects[a].render(t);
                            this._drawClipPath(t)
                        },
                        overrideFunctions: function(e) {
                            "text" === e.type && (e.render = function(t) {
                                !this.visible || this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen() || (this._shouldClearDimensionCache() && this.initDimensions(), this._isPFShadowRender = !!t.renderPFShadow, this.callSuper("render", t), this._isPFShadowRender = !1)
                            }.bind(e), e._renderTextCommon = t.PFTextbox.prototype._renderTextCommon.bind(e), e._renderChars = t.PFTextbox.prototype._renderChars.bind(e), e._renderChar = t.PFTextbox.prototype._renderChar.bind(e), e._setShadow = function(i) {
                                var r, n, o, a, s;
                                (this.shadow && this._isPFShadowRender || !e || e.insideClipGroup) && (r = this.shadow, o = (n = this.canvas) && n.viewportTransform[0] || 1, a = n && n.viewportTransform[3] || 1, s = r.nonScaling ? {
                                    scaleX: 1,
                                    scaleY: 1
                                } : this.getObjectScaling(), n && n._isRetinaScaling() && (o *= t.devicePixelRatio, a *= t.devicePixelRatio), i.shadowColor = r.color, i.shadowBlur = r.blur * t.browserShadowBlurConstant * (o + a) * (s.scaleX + s.scaleY) / 4, i.shadowOffsetX = r.offsetX * o * s.scaleX, i.shadowOffsetY = r.offsetY * a * s.scaleY)
                            })
                        }
                    }), t.PFTextGroup.fromObject = function(e, i) {
                        t.util.enlivenObjects(e.objects, (function(r) {
                            t.util.enlivenObjects([e.clipPath], (function(n) {
                                var o = t.util.object.clone(e, !0);
                                o.clipPath = n[0], delete o.objects, i && i(new t.Group(r, o, !0))
                            }))
                        }))
                    }
                }, r(i(279))),
                o = i(91204)
        },
        7574: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t, e) {
                var i, r;

                function n(t) {
                    var n, o = t.target || e.getActiveObject();
                    o && i && !e._isCropState ? (r.removeClass("degrees dimensions"), t = 0 === t.transform.action.indexOf("scale") ? (t = e.mainScale, n = "(" + (o.getScaledWidth() / t).toFixed(2) + "; " + (o.getScaledHeight() / t).toFixed(2) + ")", "dimensions") : (n = (180 < o.angle ? o.angle - 360 : o.angle) + "Â°", "degrees"), r.text(n), r.addClass(t), o = i.x, n = i.y, r.css({
                        left: o + 15,
                        top: n + 15
                    }), r.show()) : r.hide()
                }

                function o(t) {
                    t = t.touches ? t.touches[0] : t, i = {
                        x: t.clientX,
                        y: t.clientY
                    }
                }
                "undefined" != typeof window && window.isWebWorker || (t || console.warn("fabricRotationTooltip - no jQuery!"), (r = t(".canvas-rotation-tooltip").length ? t(".canvas-rotation-tooltip") : t('<span class="canvas-rotation-tooltip pf-py-2 pf-text-white pf-bg-dark text-center"></span>')).hide(), t("body").append(r), e.on({
                    "object:rotating": n,
                    "object:scaling": n,
                    "object:rotated": function() {
                        r.hide()
                    },
                    "object:scaled": function() {
                        r.hide()
                    }
                }), window.addEventListener("mousemove", o), window.addEventListener("touchmove", o))
            }
        },
        91204: (t, e) => {
            "use strict";

            function i(t, e) {
                var i, n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                if (n) return (n = n.call(t)).next.bind(n);
                if (Array.isArray(t) || (n = function(t, e) {
                        if (t) {
                            if ("string" == typeof t) return r(t, e);
                            var i = Object.prototype.toString.call(t).slice(8, -1);
                            return "Map" === (i = "Object" === i && t.constructor ? t.constructor.name : i) || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? r(t, e) : void 0
                        }
                    }(t)) || e && t && "number" == typeof t.length) return n && (t = n), i = 0,
                    function() {
                        return i >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[i++]
                        }
                    };
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function r(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var i = 0, r = new Array(e); i < e; i++) r[i] = t[i];
                return r
            }

            function n(t) {
                return !(void 0 === t || !t) && (t = t.navigator.userAgent || "", /(Version\/\d+.*\/\d+.0.0.0 Mobile|; ?wv|(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari))/i.test(t))
            }

            function o(t) {
                return !(void 0 === t || !t) && !!t.navigator && (/iPad|iPhone|iPod/.test(t.navigator.platform) || "MacIntel" === t.navigator.platform && 1 < t.navigator.maxTouchPoints)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.NUMFIX = function(t, e) {
                return e = e || 4, t.toFixed || (t = Number(t)), Number(t.toFixed(e))
            }, e.browserVersion = function(t) {
                if (void 0 === t || !t) return "";
                var e, i = t.navigator.userAgent || "",
                    r = i.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
                return /trident/i.test(r[1]) ? "IE " + ((e = /\brv[ :]+(\d+)/g.exec(i) || [])[1] || "") : "Chrome" === r[1] && null != (e = i.match(/\b(OPR|Edge)\/(\d+)/)) ? e.slice(1).join(" ").replace("OPR", "Opera") : (r = r[2] ? [r[1], r[2]] : [t.navigator.appName, t.navigator.appVersion, "-?"], null != (e = i.match(/version\/(\d+)/i)) && r.splice(1, 1, e[1]), r.join(" "))
            }, e.clearCanvas = function(t, e) {
                if (void 0 === e && (e = !1), "undefined" != typeof window && (n(window) || o(window))) {
                    var r = function(t) {
                        t && t.getContext && (t.width = 1, t.height = 1, (t = t.getContext("2d")) && (t.save(), t.setTransform(1, 0, 0, 1, 0, 0), t.clearRect(0, 0, 1, 1), t.restore()))
                    };
                    if (t.set("width", 1), t.set("height", 1), !e && t._objects.length)
                        for (var a = i(t._objects); !(s = a()).done;) {
                            var s = s.value;
                            r(s._cacheCanvas), s._filteredEl && r(s._filteredEl)
                        }
                    r(t.lowerCanvasEl), r(t.upperCanvasEl), r(t.cacheCanvasEl), r(t._cacheCanvas), t._element && r(t._element), t._filteredEl && r(t._filteredEl), e || (t.clear(), t.dispose())
                }
            }, e.isIOS = o, e.isWebview = n
        },
        99765: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(64687))),
                o = r(i(17156)),
                a = r(i(56690)),
                s = r(i(89728)),
                l = r(i(279)),
                h = r(i(52673)),
                c = i(91204),
                u = i(33466),
                f = r(i(23329)),
                d = function() {
                    function t() {
                        (0, a.default)(this, t)
                    }
                    var e;
                    return (0, s.default)(t, null, [{
                        key: "getCropElement",
                        value: function(t, e, i) {
                            var r = this,
                                n = (i.cropPosition && (i.cropPosition.areaWidth = i.position.areaWidth, i.cropPosition.areaHeight = i.position.areaHeight, i.cropPosition.rotation = i.position.rotation), t.setLayerToBeClipped(i), this.isCropState(t, e.id)),
                                o = t._getDefaultOptions(),
                                a = null != (a = i.cropPosition) && a.width ? t._fabric.mainScale * i.cropPosition.width : null,
                                s = null != (s = i.cropPosition) && s.height ? t._fabric.mainScale * i.cropPosition.height : null,
                                c = null != (null == (c = i.cropPosition) ? void 0 : c.left) ? t._fabric.mainScale * i.cropPosition.left + t.position.left : e.left,
                                f = null != (null == (f = i.cropPosition) ? void 0 : f.top) ? t._fabric.mainScale * i.cropPosition.top + t.position.top : e.top,
                                d = i.patternType !== l.default.PATTERN_TYPE.REFLECT ? .3 : 0,
                                p = (f = Object.assign({}, o, {
                                    id: e.id,
                                    type: l.default.LAYER_TYPE.CROP,
                                    top: f,
                                    left: c,
                                    fill: "rgba(0, 0, 0, " + d + ")",
                                    strokeWidth: 0,
                                    zIndex: e.zIndex,
                                    objectCaching: !1,
                                    disableRemove: n,
                                    lockUniScaling: !n,
                                    centeredScaling: !n,
                                    hasRotatingPoint: !n,
                                    minScaleLimit: e.minScaleLimit,
                                    cornerStyle: n ? "rect" : o.cornerStyle,
                                    cornerColor: n ? "#222222" : o.cornerColor,
                                    cornerStrokeColor: n ? "#ffffff" : o.cornerStrokeColor,
                                    cornerSize: (0, u.isTouchDevice)() ? 16 : n ? 14 : 10,
                                    borderColor: n ? "#757575" : o.borderColor,
                                    globalCompositeOperation: "source-over",
                                    selectable: !1,
                                    evented: !1,
                                    flipX: !1,
                                    flipY: !1,
                                    animation: e.animation
                                }), i.isInCustomClipMask && (f.clipPath = t.getCustomClipMaskObject()), this.getCropElementById(t, e.id));
                            p ? this.isCropState(t, p.id) || (p.width = a, p.height = s, "undefined" != typeof window && (this._fillValue = 0, this._fillChangeInterval && clearInterval(this._fillChangeInterval), this._fillChangeInterval = setInterval((function() {
                                r._fillValue += 10, p.fill = "rgba(" + r._fillValue + ", " + r._fillValue + ", " + r._fillValue + ", 0.3)"
                            }), 25))) : ((p = new h.default.Rect({
                                width: a || e.width,
                                height: s || e.height,
                                top: 0
                            })).on("scaling", this.resizeCropElementPreservingScale.bind(this, t, p, !1)), t._fabric.insertAt(p, p.zIndex)), p.rotate(0), p.setCoords(), p.set(f), a !== p.getScaledWidth() && p.scaleToWidth(a, !0), i.cropPosition || p.scaleToWidth(e.getScaledWidth(), !0), this.resizeCropElementPreservingScale(t, p, !0), d = (null == (c = i.cropPosition) ? void 0 : c.rotation) || i.position.rotation;
                            return p.rotate(d), p
                        }
                    }, {
                        key: "drawCropElement",
                        value: (e = (0, o.default)(n.default.mark((function t(e, i, r, a) {
                            var s, l, u, d, p = this;
                            return n.default.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (l = function(t) {
                                                return a && a(t)
                                            }, r.cropPosition = null != r && r.cropPosition && 0 < Object.keys(r.cropPosition).length ? r.cropPosition : null, this.isCropElementNeededInCanvas(e, r)) {
                                            t.next = 8;
                                            break
                                        }
                                        return (s = this.getCropElementById(e, i.id)) && (e.removeLayer(s), i.globalCompositeOperation = "source-over", i.opacity = 1), e.sortLayers(), l(i), t.abrupt("return");
                                    case 8:
                                        if (u = this.getUnRotatedObjClone(i), s = this.getCropElement(e, u, r)) {
                                            t.next = 13;
                                            break
                                        }
                                        return l(i), t.abrupt("return");
                                    case 13:
                                        if (i.set({
                                                selectable: !1,
                                                evented: !1
                                            }), this.calcCropOffset(e, s, i), this.isCropState(e, i.id)) return i.opacity = 1, s.fill = (null == (u = e.opts.productColor) ? void 0 : u.hex) || "rgba(255, 255, 255, 1)", s.setCoords(), null != (d = s.controls) && d.deleteControl && (s.controls.deleteControl.visible = !1), this.activateCropObjectsIfNeeded(e, s, r.isLocked), e.sortLayers(), e._fabric.renderAll(), l(s), t.abrupt("return");
                                        t.next = 25;
                                        break;
                                    case 25:
                                        f.default.imageFromCache(r.url, function() {
                                            var t = (0, o.default)(n.default.mark((function t(o) {
                                                var a, u, f, d, g, v;
                                                return n.default.wrap((function(t) {
                                                    for (;;) switch (t.prev = t.next) {
                                                        case 0:
                                                            if (a = "undefined" == typeof window, o.set({
                                                                    metaScaleX: i.scaleX,
                                                                    metaScaleY: i.scaleY,
                                                                    flipX: r.flipX,
                                                                    flipY: r.flipY
                                                                }), a && o.scaleToWidth(i.getScaledWidth(), !0), u = new h.default.StaticCanvas, e._colorImageFilters.apply(e, [o, r]), u.setDimensions({
                                                                    width: o.getScaledWidth(),
                                                                    height: o.getScaledHeight()
                                                                }), u.add(o), u.enableRetinaScaling = !1, u.renderAll(), f = u.getElement(), "undefined" != typeof window && window.isWebWorker) return t.next = 13, f.convertToBlob();
                                                            t.next = 17;
                                                            break;
                                                        case 13:
                                                            return d = t.sent, t.next = 16, createImageBitmap(d);
                                                        case 16:
                                                            f = t.sent;
                                                        case 17:
                                                            g = new h.default.Pattern({
                                                                source: f,
                                                                offsetX: (null == (d = s._cropOffset) ? void 0 : d.x) || 0,
                                                                offsetY: (null == (g = s._cropOffset) ? void 0 : g.y) || 0,
                                                                repeat: "no-repeat"
                                                            }), a || (v = window.devicePixelRatio || 1, g.patternTransform = [i.scaleX / v, 0, 0, i.scaleY / v, 0, 0]), s.globalCompositeOperation = "source-over", p._fillChangeInterval && clearInterval(p._fillChangeInterval), s.set("fill", new h.default.Pattern(g)), a || (0, c.clearCanvas)(u), i.opacity = 0, s.setCoords(), null != (v = s.controls) && v.deleteControl && (s.controls.deleteControl.visible = !0), p.activateCropObjectsIfNeeded(e, s, r.isLocked), e.sortLayers(), l(s);
                                                        case 29:
                                                        case "end":
                                                            return t.stop()
                                                    }
                                                }), t)
                                            })));
                                            return function(e) {
                                                return t.apply(this, arguments)
                                            }
                                        }(), !0);
                                    case 26:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this)
                        }))), function(t, i, r, n) {
                            return e.apply(this, arguments)
                        })
                    }, {
                        key: "updateLinkedBaseLayerPosition",
                        value: function(t, e, i, r, n, o, a, s, l, c) {
                            if (!e) return null;
                            var u, f, d, p, g, v, m, y = i.getPointByOrigin("center", "center"),
                                b = ("drag" === t ? (s._addDiffPosition(r, o), i._unrotatedCropSetImgCenter.x += y.x - (null == (g = i._prevCenter) ? void 0 : g.x), i._unrotatedCropSetImgCenter.y += y.y - (null == (g = i._prevCenter) ? void 0 : g.y), i._prevCenter = y) : "rotate" === t ? (g = new h.default.Point(i._unrotatedCropSetImgCenter.x, i._unrotatedCropSetImgCenter.y), v = i.angle, v = h.default.util.degreesToRadians(v), g = h.default.util.rotatePoint(g, y, v), e.setPositionByOrigin(g, "center", "center"), e.angle = i.angle, e.setCoords(), v = s._getFabricPosition(e), s._normalizeLayerPosition(r, v), r.rotation = i.angle) : "flip" === t ? (g = r.rotation, v = h.default.util.degreesToRadians(g), t = new h.default.Point(e.aCoords.tl.x, e.aCoords.tl.y), g = new h.default.Point(i.aCoords.tl.x, i.aCoords.tl.y), t = h.default.util.rotatePoint(t, y, -v), g = h.default.util.rotatePoint(g, y, -v), d = p = 0, c && (b = g.y + i.getScaledHeight(), f = g.y, m = t.y + e.getScaledHeight(), p = f - t.y - (m - b)), l && (f = g.x + i.getScaledWidth(), m = g.x, b = t.x + e.getScaledWidth(), d = m - t.x - (b - f)), g = new h.default.Point(t.x + d, t.y + p), m = h.default.util.rotatePoint(g, y, v), e.top = m.y, e.left = m.x, e.setCoords(), b = s._getFabricPosition(e), s._normalizeLayerPosition(r, b)) : (f = i.angle, d = h.default.util.degreesToRadians(f), t = r.width, g = (p = new h.default.Point(n.left + n.width / 2, n.top + n.height / 2)).x - r.left, y = p.y - r.top, r.width *= o.scale, r.height *= o.scale, r.left = p.x - g * o.scale, r.top = p.y - y * o.scale, u = o.scale * t, v = new h.default.Point(a.left + r.left + r.width / 2, a.top + r.top + r.height / 2), m = new h.default.Point(a.left + n.left + n.width / 2, a.top + n.top + n.height / 2), s = h.default.util.rotatePoint(v, m, -d), i._unrotatedCropSetImgCenter.x = s.x, i._unrotatedCropSetImgCenter.y = s.y), l || c);
                            return this.repositionBaseImgObject(e, r, a, u, b), r
                        }
                    }, {
                        key: "repositionBaseImgObject",
                        value: function(t, e, i, r, n) {
                            t.rotate(0), r && t.scaleToWidth(r), t.top = i.top + e.top, t.left = i.left + e.left, t.rotate(e.rotation), n && t.setCoords()
                        }
                    }, {
                        key: "calcCropOffset",
                        value: function(t, e, i) {
                            var r, n, o;
                            i = i || this.getImgElementBeingCroppedById(t, e.id), e && i && (e.setCoords(), i.setCoords(), t = e.getPointByOrigin("center", "center"), r = e.angle, r = h.default.util.degreesToRadians(r), n = new h.default.Point(i.aCoords.tl.x, i.aCoords.tl.y), o = new h.default.Point(e.aCoords.tl.x, e.aCoords.tl.y), n = h.default.util.rotatePoint(n, t, -r), o = h.default.util.rotatePoint(o, t, -r), e._cropOffset = {
                                x: n.x - o.x,
                                y: n.y - o.y
                            }, e._prevCenter = t, e._unrotatedCropSetImgCenter = this.calcUnrotatedBaseImgCenter(e, i))
                        }
                    }, {
                        key: "calcUnrotatedBaseImgCenter",
                        value: function(t, e) {
                            var i = t.angle;
                            i = h.default.util.degreesToRadians(i), t = t.getPointByOrigin("center", "center"), e = e.getPointByOrigin("center", "center"), e = new h.default.Point(e.x, e.y);
                            return h.default.util.rotatePoint(e, t, -i)
                        }
                    }, {
                        key: "getCropElementById",
                        value: function(t, e) {
                            var i;
                            return null != (i = t._fabric) && i.getObjects ? t._fabric.getObjects().find((function(t) {
                                return String(t.id) === String(e) && t.type === l.default.LAYER_TYPE.CROP && !t.patternId
                            })) : null
                        }
                    }, {
                        key: "afterCropToggleActions",
                        value: function(t, e, i, r) {
                            var n;
                            this.prepareObjectsForCropState(t, r), (r = this.getCropElementById(t, e)) && (n = this.isCropState(t, e), r.lockUniScaling = !n, r.hasRotatingPoint = !n, null != (n = r.controls) && n.deleteControl && (r.controls.deleteControl.visible = !0)), t.callbacks.onCropStateChanged && t.callbacks.onCropStateChanged(e, r, this, i), t.setUniScaleLock(r), t.renderBackgroundFill()
                        }
                    }, {
                        key: "isObjBeingCropped",
                        value: function(t, e) {
                            return t.getObjects().some((function(t) {
                                return t.type === l.default.LAYER_TYPE.CROP && t.id === e
                            }))
                        }
                    }, {
                        key: "isCropElementNeededInCanvas",
                        value: function(t, e) {
                            return !!this.isCropState(t) || this.isCropElementNeeded(e)
                        }
                    }, {
                        key: "isCropElementNeeded",
                        value: function(t) {
                            return !(!t.cropPosition || !(this.checkLayerTypeForCrop(t.type) || t.isImageLayer && t.isImageLayer() || t.isLicensedAssetLayer && t.isLicensedAssetLayer()))
                        }
                    }, {
                        key: "checkLayerTypeForCrop",
                        value: function(t) {
                            return t === l.default.LAYER_TYPE.FILE || t === l.default.LAYER_TYPE.LICENSED_ASSET || t === l.default.LAYER_TYPE.EXTERNAL
                        }
                    }, {
                        key: "prepareObjectsForCropState",
                        value: function(e, i) {
                            var r = this;
                            e._fabric.getObjects().forEach((function(n) {
                                r.isCropState(e) ? (n.globalCompositeOperation = "source-atop", n.selectable = !1, n.evented = !1, n.opacity = t.isObjBeingCropped(e._fabric, n.id) && n.type !== l.default.LAYER_TYPE.CROP || n.isHidden ? 0 : 1) : (n.globalCompositeOperation = "source-over", r.canObjBeCropped(e, n) && r.isObjBeingCropped(e._fabric, n.id) && n.type !== l.default.LAYER_TYPE.CROP ? (n.selectable = !1, n.evented = !1, n.opacity = 0) : (n.selectable = !0, n.evented = n.subType !== l.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP || !i))
                            }))
                        }
                    }, {
                        key: "canObjBeCropped",
                        value: function(t, e) {
                            var i;
                            return e && !e.patternId && (!e.patternType || (null == (i = t.opts) ? void 0 : i.isCropPatternAvailable()) && e.patternType !== l.default.PATTERN_TYPE.REFLECT) && (null == (i = t.opts) ? void 0 : i.isCropToolAvailable()) && "image" === e.type
                        }
                    }, {
                        key: "resizeCropElementPreservingScale",
                        value: function(t, e, i) {
                            var r, n, o;
                            e.type === l.default.LAYER_TYPE.CROP && (this.isCropState(t, e.id) || i) && (t = e.width * e.scaleX, r = e.height * e.scaleY, n = e.top, o = e.left, i || 0 !== e.angle || (t <= l.default.CROP_RECT_MIN_SIZE && (o = e._lastLeft || e.left, t = l.default.CROP_RECT_MIN_SIZE), r <= l.default.CROP_RECT_MIN_SIZE && (n = e._lastTop || e.top, r = l.default.CROP_RECT_MIN_SIZE)), e.set({
                                width: (0, c.NUMFIX)(t),
                                height: (0, c.NUMFIX)(r),
                                scaleX: 1,
                                scaleY: 1,
                                objectCaching: !1,
                                top: n,
                                left: o,
                                _lastLeft: o,
                                _lastTop: n
                            }))
                        }
                    }, {
                        key: "getUnRotatedObjClone",
                        value: function(t) {
                            return (t = h.default.util.object.clone(t)).rotate(0), t.setCoords(), t
                        }
                    }, {
                        key: "isCropState",
                        value: function(t, e) {
                            return e ? t._activeCropStateLayerId === e : !!t._activeCropStateLayerId
                        }
                    }, {
                        key: "activateCropObjectsIfNeeded",
                        value: function(t, e, i) {
                            if (e && "undefined" != typeof window) {
                                if (i) return e.disableRemove = i, void(e.hasControls = !i);
                                e.selectable = !0, e.evented = !0, this.isObjBeingCropped(t._fabric, e.id) && t.getActiveLayerId() === e.id && t._fabric.setActiveObject(e)
                            }
                        }
                    }, {
                        key: "getImgElementBeingCroppedById",
                        value: function(t, e) {
                            return this.getCropElementById(t, e) ? t._fabric.getObjects().find((function(t) {
                                return !(t.id !== e || t.type === l.default.LAYER_TYPE.CROP || t.patternId)
                            })) : null
                        }
                    }, {
                        key: "restrictCropLayerMoving",
                        value: function(t, e, i, r, n) {
                            var o, a, s, l, u, f, d, p, g, v;
                            n && i && e && this.isCropState(t, e.id) && (n = i.getScaledWidth(), t = i.getScaledHeight(), a = h.default.util.degreesToRadians(i.angle), f = h.default.util.degreesToRadians(e.angle), o = i.getCenterPoint(), i = h.default.util.rotatePoint(new h.default.Point(i.aCoords.tl.x, i.aCoords.tl.y), o, -a), s = (a = (0, c.NUMFIX)(i.y)) + t, l = (i = (0, c.NUMFIX)(i.x)) + n, f = h.default.util.rotatePoint(new h.default.Point(e.aCoords.tl.x, e.aCoords.tl.y), o, -f), u = (0, c.NUMFIX)(f.y), f = (0, c.NUMFIX)(f.x), v = (0, c.NUMFIX)(e.getScaledWidth()), p = u + (d = (0, c.NUMFIX)(e.getScaledHeight())), (g = f + v) < i || p < a || l < f || s < u ? (f = o.x - v / 2, u = o.y - d / 2) : isNaN(v) || isNaN(d) ? (f = i, u = a, e.width = n, e.height = t) : (f < i && (e.width = g - i, f = i), u < a && (e.height = p - a, u = a), l < g && (e.width = l - f), s < p && (e.height = s - u)), v = h.default.util.rotatePoint(new h.default.Point(f, u), o, h.default.util.degreesToRadians(e.angle)), e.left = v.x, e.top = v.y, "drag" === r.transform.action && (e._lastLeft = v.x, e._lastTop = v.y), e.setCoords())
                        }
                    }]), t
                }();
            e.default = d
        },
        23329: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(64687))),
                o = r(i(17156)),
                a = r(i(56690)),
                s = r(i(89728)),
                l = r(i(38416)),
                h = r(i(52673)),
                c = function(t, e) {
                    if (!e && t && t.__esModule) return t;
                    if (null === t || "object" != typeof t && "function" != typeof t) return {
                        default: t
                    };
                    if ((e = T(e)) && e.has(t)) return e.get(t);
                    var i, r, n = {},
                        o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (i in t) "default" !== i && Object.prototype.hasOwnProperty.call(t, i) && ((r = o ? Object.getOwnPropertyDescriptor(t, i) : null) && (r.get || r.set) ? Object.defineProperty(n, i, r) : n[i] = t[i]);
                    return n.default = t, e && e.set(t, n), n
                }(i(95281)),
                u = r(i(279)),
                f = r(i(99765)),
                d = i(91204),
                p = i(33466),
                g = r(i(45601)),
                v = r(i(66792)),
                m = r(i(10783)),
                y = r(i(64124)),
                b = r(i(86469)),
                x = r(i(7574)),
                _ = r(i(63311)),
                w = r(i(68370)),
                S = i(50744),
                C = i(67633);

            function T(t) {
                if ("function" != typeof WeakMap) return null;
                var e = new WeakMap,
                    i = new WeakMap;
                return (T = function(t) {
                    return t ? i : e
                })(t)
            }
            var E = function() {
                function t(e, i, r, n) {
                    var o = this;
                    (0, a.default)(this, t), (0, l.default)(this, "_fabric", null), (0, l.default)(this, "_mask", null), (0, l.default)(this, "_embroideryOutline", null), (0, l.default)(this, "_layersLoaded", null), (0, l.default)(this, "_layersRequired", null), (0, l.default)(this, "uid", null), (0, l.default)(this, "activeGroup", null), (0, l.default)(this, "_activeCropStateLayerId", null), (0, l.default)(this, "_printColorMode", null), (0, l.default)(this, "_printColorModes", null), (0, l.default)(this, "_printColorModeTimeout", null), (0, l.default)(this, "_isConverting", !1), (0, l.default)(this, "_drawPatternTimeout", null), (0, l.default)(this, "_sortLayersTimeout", null), (0, l.default)(this, "_cleanupInterval", null), (0, l.default)(this, "_cleanupTimeout", null), (0, l.default)(this, "_skipFilters", null), (0, l.default)(this, "_customMaskObject", null), (0, l.default)(this, "customMaskMode", null), (0, l.default)(this, "position", {}), (0, l.default)(this, "callbacks", {}), (0, l.default)(this, "videoData", null), (0, l.default)(this, "isAnimationPlaying", !1), (0, l.default)(this, "opts", {}), t.VERSION_PRINTED || (t.VERSION_PRINTED = !0, console.log(t.VERSION_STRING)), this.position = e || {}, this.callbacks = r || {}, this.opts = n || {}, this.uid = h.default.util.getRandomInt(1, 9999999), e = this.opts.customMockupPosition && this.opts.customMockupPosition.areaWidth ? this.opts.customMockupPosition : this.position, t.setFontDependencies(this.opts.canvasFontsObject), h.default.Object.NUM_FRACTION_DIGITS = 4, "undefined" == typeof window && this.opts.canvasParams && (this.opts.canvasParams.perfLimitSizeTotal && (h.default.perfLimitSizeTotal = Number(this.opts.canvasParams.perfLimitSizeTotal)), this.opts.canvasParams.maxCacheSideLimit && (h.default.maxCacheSideLimit = Number(this.opts.canvasParams.maxCacheSideLimit))), n = this.opts.maskSvgPath || null != (r = this.opts.embroideryParams) && r.hasEmbroideryOutline ? 0 : 1, r = {
                        width: this.position.width + 2 * n,
                        height: this.position.height + 2 * n,
                        left: this.opts.isMaskSvgPathCentered ? this.position.width / 2 + this.position.left : this.position.left - n,
                        top: this.opts.isMaskSvgPathCentered ? this.position.height / 2 + this.position.top : this.position.top - n,
                        absolutePositioned: !0,
                        originX: this.opts.isMaskSvgPathCentered ? "center" : "left",
                        originY: this.opts.isMaskSvgPathCentered ? "center" : "top"
                    }, this.opts.maskSvgPath ? this._mask = new h.default.Path(this.opts.maskSvgPath, r) : null != (n = this.opts.embroideryParams) && n.hasEmbroideryOutline ? (r.strokeWidth = 0, this._mask = new h.default.Path(this.opts.embroideryParams.embroideryOutlineSvgPath, r), this._mask.scaleToWidth(r.width), this._mask.scaleToHeight(r.height)) : this._mask = new h.default.Rect(r), n = {
                        width: this.position.areaWidth,
                        height: this.position.areaHeight,
                        selection: !1,
                        imageSmoothingEnabled: "undefined" == typeof window || window.isWebWorker ? this.opts.canvasParams && this.opts.canvasParams.imageSmoothingEnabled : !this.opts.isReadOnly || this.opts.isCustomizingMode,
                        imageSmoothingQuality: "undefined" == typeof window || window.isWebWorker ? this.opts.canvasParams && this.opts.canvasParams.imageSmoothingQuality : "high",
                        preserveObjectStacking: !0,
                        controlsAboveOverlay: !0,
                        clipPath: this._mask,
                        renderOnAddRemove: !1,
                        stopContextMenu: !0,
                        allowTouchScrolling: !0
                    };
                    if (i && !this.opts.isReadOnly ? (this._fabric = new h.default.Canvas(i, n), (0, v.default)(h.default, this._fabric, e), (0, g.default)(h.default, this), (0, b.default)(h.default, this._fabric, e), (0, x.default)("undefined" != typeof window ? window.$ : null, this._fabric), this.callbacks.onLayerRemoved && (0, m.default)(this._fabric, this.callbacks.onLayerRemoved), this.opts.labelText && (0, y.default)("undefined" != typeof window ? window.$ : null, h.default, this._fabric, e, this.opts.labelText)) : (i && this.opts.isReadOnly ? this._fabric = new h.default.StaticCanvas(i, n) : this._fabric = new h.default.StaticCanvas(null, n), this._overrideStaticCanvasMethod()), "undefined" == typeof window || window.isWebWorker) return this._fabric.getContext().antialias = this.opts.canvasParams.antialias || "subpixel", this._fabric.getContext().quality = this.opts.canvasParams.quality || "best", this._fabric.getContext().patternQuality = this.opts.canvasParams.patternQuality || "good", this._fabric.getContext().lineJoin = this.opts.canvasParams.lineJoin || "round", this._fabric.getContext().strokeLineJoin = this.opts.canvasParams.strokeLineJoin || "round", void this._drawEmbroideryOutline();
                    null != (r = this.opts) && null != (e = r.fill) && e.designFillType && this.opts.fill.designFillType !== u.default.DESIGN_FILL_TYPE.COLOR && this._layersRequired++, this._setBackgroundOverlay(), this._isSelectable() && this._fabric.on({
                        "selection:created": this._onLayerSelected.bind(this),
                        "selection:updated": this._onLayerSelected.bind(this),
                        "selection:cleared": this._onLayerSelected.bind(this),
                        "object:selected": this._onLayerSelected.bind(this),
                        "mouse:dblclick": this.onMouseDoubleClick.bind(this)
                    }), !this.opts.isReadOnly && this.callbacks.onLayerChanged && this._fabric.on({
                        "mouse:down": function(t) {
                            o._skipFilters = !0
                        },
                        "mouse:up": function(t) {
                            o._skipFilters = !1, null != (t = t.target) && t.setControlsVisibility && t.setControlsVisibility({
                                deleteControl: !0,
                                tr: !1
                            })
                        },
                        "object:modified": function(t) {
                            var e = t.target;
                            o.callbacks.onLayerChanged(!1, !0, t), o._debounceDetectPrintColorMode(), o._debounceDrawPattern(e)
                        },
                        "object:moved": function(t) {
                            o._isConverting = !1;
                            var e, i = t.target;
                            for (e in i._objects) i._objects[e].patternType && (o._fabric.setActiveObject(i._objects[e]), o._drawPattern(i._objects[e]), o.showActiveGroup(i.groupId))
                        },
                        "object:moving": function(t) {
                            o._isConverting = !0, o.callbacks.onLayerChanged(!0, !1, t);
                            var e, i, r = t.target;
                            for (e in r._objects) r._objects[e].patternType && (i = r._objects[e].patternType, o._drawPattern(r._objects[e], {
                                patternType: null,
                                patternSpacing: 0
                            }), r._objects[e].patternType = i);
                            o._debounceDrawPattern(r)
                        },
                        "object:scaling": function(t) {
                            o.callbacks.onLayerChanged(!0, !1, t);
                            var e, i, r = t.target;
                            for (e in o.setupTempClipMask(r, !0), r.setControlsVisibility({
                                    deleteControl: !1,
                                    tr: !0
                                }), r._objects) r._objects[e].patternType && (i = r._objects[e].patternType, f.default.resizeCropElementPreservingScale(o, r._objects[e]), o._drawPattern(r._objects[e], {
                                patternType: null,
                                patternSpacing: 0
                            }), r._objects[e].patternType = i);
                            f.default.resizeCropElementPreservingScale(o, r), o._debounceDrawPattern(r)
                        },
                        "object:rotating": function(t) {
                            t.target && t.target.shadow && t.target.shadow.color && o.callbacks.onRotationShadowChanged && (t.isLifelike = o._isLifelikeForCurrentVariant(), o.callbacks.onRotationShadowChanged(t)), o.callbacks.onLayerChanged(!0, !1, t);
                            var e, i, r = t.target;
                            for (e in r._objects) r._objects[e].patternType && (i = r._objects[e].patternType, o._drawPattern(r._objects[e], {
                                patternType: null,
                                patternSpacing: 0
                            }), r._objects[e].patternType = i);
                            o._debounceDrawPattern(r)
                        },
                        "object:scaled": function(t) {
                            var e = t.target;
                            e && (o.setupTempClipMask(e, !1), o._redrawObject(e), o.callbacks.onLayerScaled && o.callbacks.onLayerScaled(!0, t))
                        },
                        "object:rotated": function(t) {
                            t = t.target, o._redrawObject(t, !0)
                        }
                    }), this._isSelectable() && (i = function() {
                        o._fabric._showFill && (o._fabric._showFill = !1, o.renderBackgroundFill())
                    }, this._fabric.on({
                        "object:modified": (n = function(t) {
                            var e;
                            o._fabric._showFill || (null == t || null == (e = t.transform) ? void 0 : e.action) === u.default.COLOR_GRAPHIC_IMAGE_LOAD && !0 === t.transform.actionPerformed || (o._fabric._showFill = !0, o.renderBackgroundFill())
                        }).bind(this),
                        "object:scaling": n.bind(this),
                        "object:moving": n.bind(this),
                        "object:rotating": n.bind(this),
                        "mouse:down": i.bind(this),
                        "mouse:up": i.bind(this)
                    })), this._drawEmbroideryOutline(), clearInterval(this._cleanupInterval), this._cleanupInterval = setInterval(this._handleCleanup.bind(this), 1e4), window.dumpFabric = this._dumpFabric.bind(this)
                }
                var e, i;
                return (0, s.default)(t, [{
                    key: "_redrawObject",
                    value: function(t, e) {
                        var i, r = this,
                            n = (void 0 === e && (e = !1), this.getActiveGroupId());
                        for (i in n && e && this.showActiveGroup(n), n && t.forEachObject ? t.forEachObject((function(t) {
                                r._colorImageFilters(t), r._drawPattern(t)
                            })) : (this._colorImageFilters(t), this._drawPattern(t)), t._objects) t._objects[i].patternType && (this._fabric.setActiveObject(t._objects[i]), this._drawPattern(t._objects[i]), this.showActiveGroup(t.groupId))
                    }
                }, {
                    key: "_handleCleanup",
                    value: function() {
                        var t, e, i;
                        "undefined" != typeof window && window.isWebWorker || (t = this._fabric && this._fabric.wrapperEl && this._fabric.wrapperEl.closest("html"), e = this._fabric && this._fabric.lowerCanvasEl && this._fabric.lowerCanvasEl.closest("html"), i = this._fabric && this._fabric.upperCanvasEl && this._fabric.upperCanvasEl.closest("html"), t || e || i || this.clearFabric())
                    }
                }, {
                    key: "_createCustomMaskObject",
                    value: function(t) {
                        var e = this.position.width / t.position.areaWidth,
                            i = this.position.height / t.position.areaHeight,
                            r = e * t.position.width,
                            n = i * t.position.height;
                        i *= t.position.top, e *= t.position.left;
                        this._customMaskObject = new h.default.Rect({
                            width: r,
                            height: n,
                            top: i + this.position.top,
                            left: e + this.position.left,
                            absolutePositioned: !0
                        })
                    }
                }, {
                    key: "_setupCustomClipMask",
                    value: function(t) {
                        this.customMaskMode === u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE && (t = t.filter((function(t) {
                            return t.groupType === u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE
                        })), this._createCustomMaskObject(t[t.length - 1]))
                    }
                }, {
                    key: "setLayerToBeClipped",
                    value: function(t) {
                        this._customMaskObject && this.customMaskMode === u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE && t.groupType !== u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE && (t.isInCustomClipMask = !0)
                    }
                }, {
                    key: "getCustomClipMaskObject",
                    value: function() {
                        return this._customMaskObject
                    }
                }, {
                    key: "setupTempClipMask",
                    value: function(t, e) {
                        this._customMaskObject && t && t._objects && t._objects.length && t._objects.some((function(t) {
                            return t.type === u.default.COLOR_GRAPHIC_TYPE
                        })) && (t.clipPath = e ? null : t.tempClipMask, t.tempClipMask = e ? t.tempClipMask : null)
                    }
                }, {
                    key: "_debounceDetectPrintColorMode",
                    value: function() {
                        clearTimeout(this._printColorModeTimeout), this._printColorModeTimeout = setTimeout(this._detectPrintColorMode.bind(this, !0), 100)
                    }
                }, {
                    key: "_detectPrintColorMode",
                    value: (i = (0, o.default)(n.default.mark((function e(i) {
                        var r, o, a, s, l, c, u, f, d, p = this;
                        return n.default.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (void 0 === i && (i = !1), "undefined" == typeof window) return e.abrupt("return");
                                    e.next = 3;
                                    break;
                                case 3:
                                    if (this._skipFilters || !this._useLifelike() && !this._checkColorDataOnly()) return e.abrupt("return");
                                    e.next = 5;
                                    break;
                                case 5:
                                    if (this._isConverting) return e.abrupt("return");
                                    e.next = 7;
                                    break;
                                case 7:
                                    if (this.isCropState(this._activeCropStateLayerId)) return e.abrupt("return");
                                    e.next = 9;
                                    break;
                                case 9:
                                    if (this._getObjects().length < 1) return this._printColorMode = null, this._printColorModes = {}, e.abrupt("return");
                                    e.next = 13;
                                    break;
                                case 13:
                                    if (this._fabric.getElement() && this._fabric.isRendering, this._fabric.backgroundImage || this._fabric.backgroundColor || this._fabric.overlayImage || this._fabric.overlayColor, this._isConverting = !0, r = {}, o = null != (o = this.opts.productColors) && o.length ? this.opts.productColors : [this.opts.productColor], a = t.Hash(JSON.stringify(this._fabric.toJSON()) + "###" + JSON.stringify(o.map((function(t) {
                                            return t.hex + "__" + t.name
                                        })).join())), !t.LIFELIKE_CACHE[a]) {
                                        e.next = 23;
                                        break
                                    }
                                    r = t.LIFELIKE_CACHE[a], e.next = 49;
                                    break;
                                case 23:
                                    if (s = this._cloneCanvas(), l = Object.assign({}, this.position, {}), e.prev = 25, l = s.toCanvasElement(l.multiplier, l.position), c = (c = l.getContext("2d")).getImageData(this.position.left, this.position.top, this.position.width, this.position.height), this.opts.webWorkers) return u = this.opts.webWorkers.lifelikeWorker, e.next = 33, u({
                                        imageData: c,
                                        productColors: o,
                                        position: this.position,
                                        colorCheck: this._checkColorDataOnly(),
                                        action: C.HELPER_WORKER_TYPES.LIFE_LIKE_CALCULATION,
                                        isWebWorker: !0
                                    });
                                    e.next = 36;
                                    break;
                                case 33:
                                    r = e.sent, e.next = 37;
                                    break;
                                case 36:
                                    r = (0, S.detectPrintColorMode)({
                                        imageData: c,
                                        productColors: o,
                                        position: this.position,
                                        colorCheck: this._checkColorDataOnly(),
                                        isWebWorker: "undefined" != typeof window && window.isWebWorker,
                                        fabric: h.default
                                    });
                                case 37:
                                    t.LIFELIKE_CACHE[a] = r, e.next = 47;
                                    break;
                                case 40:
                                    return e.prev = 40, e.t0 = e.catch(25), console.warn("Could not detect lifelike mode!", e.t0), l && (l.width = 0, l.height = 0), "undefined" == typeof window || window.isWebWorker || (s.clear(), s.dispose(), s = null), this._isConverting = !1, e.abrupt("return");
                                case 47:
                                    l && (l.width = 0, l.height = 0), "undefined" == typeof window || window.isWebWorker || (s.clear(), s.dispose(), s = null);
                                case 49:
                                    d = (null == (u = this.opts.productColor) ? void 0 : u.hex) + "__" + (null == (d = this.opts.productColor) ? void 0 : d.name), (f = r[d]) || Object.keys(r).forEach((function(t) {
                                        var e = t.split("__"),
                                            i = e[0];
                                        e[1] !== (null == (e = p.opts.productColor) ? void 0 : e.name) && i !== (null == (e = p.opts.productColor) ? void 0 : e.hex) || (f = r[t])
                                    })), d = (i || this._printColorMode !== f || JSON.stringify(this._printColorModes) !== JSON.stringify(r)) && this.callbacks && (this.callbacks.onLifelikeChanged || this.callbacks.onColorDataChanged), this._printColorMode = f, this._printColorModes = r, d && (this._useLifelike() ? (d = this._getObjects(), this.callbacks.onLifelikeChanged(this.shouldShowLiveLifelike(), this.getLifelikeColors(), d, this.getActiveObject())) : this._checkColorDataOnly() && this.callbacks.onColorDataChanged(this._printColorModes)), this._isConverting = !1;
                                case 57:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this, [
                            [25, 40]
                        ])
                    }))), function(t) {
                        return i.apply(this, arguments)
                    })
                }, {
                    key: "getActiveObject",
                    value: function() {
                        var t, e;
                        return (null == (t = this._fabric) || null == (e = t.getActiveObject) ? void 0 : e.call(t)) || null
                    }
                }, {
                    key: "_cloneCanvas",
                    value: function() {
                        for (var t = [], e = 0, i = this._fabric._objects.length; e < i; e++) {
                            var r, n = this._fabric._objects[e];
                            n.type === u.default.LAYER_TYPE.TEXTBOX && (n.clipPath = null), f.default.isObjBeingCropped(this._fabric, n.id) && n.type !== u.default.LAYER_TYPE.CROP || ((r = h.default.util.object.clone(n)).set(n), r.filters && r.filters.length && r.applyFilters && (r.filters[u.default.FILTER_INDEX.SCALE] = null, r.filters[u.default.FILTER_INDEX.PRINT] = null, r.dirty = !0, r.applyFilters()), t.push(r))
                        }
                        var o = new h.default.StaticCanvas(null, {
                            width: this.position.areaWidth,
                            height: this.position.areaHeight
                        });
                        return o.add.apply(o, t), o.renderAll(), o
                    }
                }, {
                    key: "_useLifelike",
                    value: function() {
                        return !!this.opts.canvasParams.useLifelike && ("function" == typeof this.opts.canvasParams.useLifelike ? this.opts.canvasParams.useLifelike() : this.opts.canvasParams.useLifelike)
                    }
                }, {
                    key: "_useLifelikeToggleEnabled",
                    value: function() {
                        return !!this.opts.canvasParams.useLifelikeToggleEnabled && ("function" == typeof this.opts.canvasParams.useLifelikeToggleEnabled ? this.opts.canvasParams.useLifelikeToggleEnabled() : this.opts.canvasParams.useLifelikeToggleEnabled)
                    }
                }, {
                    key: "_checkColorDataOnly",
                    value: function() {
                        return !!this.opts.canvasParams.checkColorDataOnly && ("function" == typeof this.opts.canvasParams.checkColorDataOnly ? this.opts.canvasParams.checkColorDataOnly() : this.opts.canvasParams.checkColorDataOnly)
                    }
                }, {
                    key: "shouldShowLiveLifelike",
                    value: function() {
                        return this._printColorMode === u.default.PRINT_COLOR_MODE.WHITE_COLOR
                    }
                }, {
                    key: "_dumpFabric",
                    value: function(t) {
                        if (t = void 0 !== t && t) return [null == (t = this._fabric) ? void 0 : t.getObjects(), this];
                        console.log(null == (t = this._fabric) ? void 0 : t.getObjects())
                    }
                }, {
                    key: "getLifelikeColors",
                    value: function() {
                        var t = this;
                        return Object.keys(this._printColorModes || {}).map((function(e) {
                            return t._printColorModes[e] === u.default.PRINT_COLOR_MODE.WHITE_COLOR && e
                        })).filter(Boolean)
                    }
                }, {
                    key: "_isSelectable",
                    value: function() {
                        return !(this.opts.isReadOnly || !this.callbacks.onLayerSelected)
                    }
                }, {
                    key: "_onLayerSelected",
                    value: function(t) {
                        var e = this;
                        if (this._embroideryOutline && this._embroideryOutline.bringToFront(), "function" == typeof this.callbacks.onLayerSelected) {
                            var i = t.selected ? t.selected[0] : t.target;
                            if (this._cropPatternReflectSwitch && this._cropPatternReflectSwitchLastObj && (null == (t = i) ? void 0 : t.patternId) === this._cropPatternReflectSwitchLastObj.id) this._fabric.setActiveObject(this._cropPatternReflectSwitchLastObj);
                            else {
                                if (i && i.group && i.group.subType === u.default.LAYER_TYPE.QUICK_DESIGN && this.callbacks.onGroupSelected) return i = i.group, void this.callbacks.onGroupSelected(i);
                                var r, n, o, a = null;
                                t = null;
                                i && i.patternId && (r = i.type === u.default.LAYER_TYPE.CROP ? f.default.getImgElementBeingCroppedById(this, i.id) : null, this._fabric.getObjects().forEach((function(t) {
                                    t.patternId || t.id !== i.patternId || t === r || (t.patternId = i.patternId, a = t), t.type === u.default.LAYER_TYPE.CROP && t.patternType === u.default.PATTERN_TYPE.REFLECT && (e._cropPatternReflectSwitchLastObj = i, e._cropPatternReflectSwitch = setTimeout((function() {
                                        e._cropPatternReflectSwitch = null
                                    }), 1e3))
                                })), i.patternId = null), this.setUniScaleLock(i), this.isCropState(this._activeCropStateLayerId) && this._activeCropStateLayerId !== (null == (n = i) ? void 0 : n.id) && this.toggleCropState(this._activeCropStateLayerId), a && (n = !!i.flipX != !!a.flipX, o = !!i.flipY != !!a.flipY, t = {
                                    target: i,
                                    transform: {
                                        action: "drag",
                                        isPatternSwitch: !0,
                                        flippedX: n,
                                        flippedY: o
                                    }
                                }), this.callbacks.onLayerSelected(i, t)
                            }
                        }
                    }
                }, {
                    key: "_getObjects",
                    value: function() {
                        return this._fabric.getObjects ? this._fabric.getObjects().filter((function(t) {
                            return !t.patternId && (t.selectable && t.evented || -1 < t.zIndex)
                        })) : []
                    }
                }, {
                    key: "_setBackgroundOverlay",
                    value: function() {
                        var e, i, r = this;
                        "undefined" == typeof window ? this.opts.fill && this.renderBackgroundFill() : (e = this._fabric.getElement()) && e.style && ((i = {
                            image: this.opts.backgroundImage || "",
                            shadow: this.opts.backgroundShadow || "",
                            base: 0 < this.opts.mockupPrintZIndex && this.opts.baseImageUrl ? this.opts.baseImageUrl : ""
                        }).image || i.shadow || i.base ? t.backgroundFromCache(i, {
                            width: Math.ceil(this._fabric.width),
                            height: Math.ceil(this._fabric.height)
                        }, (function(t) {
                            var e = r._fabric.getElement();
                            if (e) {
                                if (!t) return r.opts.errorCallback ? r.opts.errorCallback("Couldnt backgroundFromCache " + JSON.stringify(i)) : void console.warn("Couldnt backgroundFromCache", i);
                                e.style.backgroundImage = "url(" + t + ")", r._fabric.fire("background:changed"), r._setOverlay(e)
                            } else console.warn("Couldnt backgroundFromCache, element missing!", i)
                        })) : this._setOverlay(e))
                    }
                }, {
                    key: "_setOverlay",
                    value: function(e) {
                        var i = this;
                        this.opts.baseImageUrl && this.opts.mockupPrintZIndex < 1 ? t.imageFromCache(this.opts.baseImageUrl, (function(t) {
                            var e = i._fabric.getElement();
                            if (e) {
                                if (!t) return i.opts.errorCallback ? i.opts.errorCallback("Couldnt setOverlayImage " + i.opts.baseImageUrl) : void console.warn("Couldnt setOverlayImage", i.opts.baseImageUrl);
                                t.set({
                                    scaleX: i._fabric.width / t._originalElement.naturalWidth,
                                    scaleY: i._fabric.height / t._originalElement.naturalHeight,
                                    backgroundImageStretch: !0
                                }), !i.opts.isCustomizingMode && i.opts.isReadOnly && i._fabric.renderAll ? i._fabric.setOverlayImage(t, i._fabric.renderAll.bind(i._fabric), {
                                    backgroundImageStretch: !0
                                }) : i.hasTemplateDynamicTexts() ? i._addTemplateDynamicTextOverlay(t) : (i._fabric.overlayImage = t, i._fabric.requestRenderAll()), i._onSetOverlayDone(e)
                            } else console.warn("Couldnt imageFromCache, element missing!", backgroundUrls)
                        })) : this._onSetOverlayDone(e)
                    }
                }, {
                    key: "_onSetOverlayDone",
                    value: function(t) {
                        this.opts.backgroundColor && (t.style.backgroundColor = this.opts.backgroundColor), this.opts.overlayColor && (this._fabric.overlayColor = this.opts.overlayColor), this.renderBackgroundFill()
                    }
                }, {
                    key: "hasTemplateDynamicTexts",
                    value: function() {
                        return !(!this.opts.templateDynamicTexts || !this.opts.templateDynamicTexts.length)
                    }
                }, {
                    key: "_addTemplateDynamicTextOverlay",
                    value: function(t) {
                        var e, i, r = this;
                        this.hasTemplateDynamicTexts() && (e = new h.default.StaticCanvas(null, {
                            width: this.position.areaWidth,
                            height: this.position.areaHeight
                        }), this.opts.templateDynamicTexts.forEach((function(t) {
                            var i = new h.default.Textbox(t.text, {
                                width: t.width,
                                height: t.height,
                                top: t.top,
                                left: t.left,
                                fontFamily: "ProximaNova, sans-serif",
                                fontSize: t.fontSize,
                                fontWeight: t.fontWeight || "normal",
                                fill: t.color || "black",
                                textAlign: t.textAlign || "center"
                            });
                            t.rotate && i.rotate(t.rotate), i.setCoords(), e.add(i)
                        })), i = e.toDataURL(), (0, d.clearCanvas)(e), h.default.Image.fromURL(i, (function(e) {
                            var i;
                            e ? ((i = new h.default.Group).add(t), i.addWithUpdate(e), r._fabric.overlayImage = i) : r._fabric.overlayImage = t, r._fabric.requestRenderAll()
                        }), {
                            crossOrigin: "anonymous"
                        }))
                    }
                }, {
                    key: "toggleGuidelines",
                    value: function(t, e) {
                        this._fabric._showGuidelines = t, this._fabric._guidelinesOptions = e || {}, this.renderBackgroundFill(), this._fabric.fire("mouse:up")
                    }
                }, {
                    key: "renderBackgroundFill",
                    value: function(e) {
                        function i() {
                            var t;
                            a ? e && e() : null != (t = r.opts) && null != (t = t.fill) && t.designFillType && r.opts.fill.designFillType !== u.default.DESIGN_FILL_TYPE.COLOR && setTimeout((function() {
                                r._layerLoaded()
                            }), 100)
                        }
                        var r = this,
                            n = null == (n = this.opts) || null == (n = n.fill) ? void 0 : n.designFillType,
                            o = !1,
                            a = ((n = n || u.default.DESIGN_FILL_TYPE.COLOR) !== u.default.DESIGN_FILL_TYPE.COLOR && this._activeCropStateLayerId && (n = u.default.DESIGN_FILL_TYPE.COLOR, o = !0), "undefined" == typeof window);
                        switch (n) {
                            case u.default.DESIGN_FILL_TYPE.GRAPHIC:
                            case u.default.DESIGN_FILL_TYPE.GRADIENT:
                                var s = this.opts.fill.designFillUrls,
                                    l = a ? "full" : "large";
                                s && s[l] ? t.imageFromCache(s[l], (function(e) {
                                    var n = r.position,
                                        o = n.left + n.width / 2,
                                        s = n.top + n.height / 2,
                                        l = Math.max(n.width, n.height),
                                        h = s - l / 2,
                                        c = o - l / 2;
                                    r.opts.hasAnimatedLayers && "undefined" == typeof window ? (s = {
                                        manualScaling: !0,
                                        position: {
                                            width: e.width,
                                            height: e.height,
                                            areaWidth: e.width,
                                            areaHeight: e.height
                                        }
                                    }, o = r._getFillScale(s), s.position = {
                                        width: e.width * o,
                                        height: e.height * o,
                                        areaWidth: e.width * o,
                                        areaHeight: e.height * o
                                    }, h = (n.height - s.position.height) / 2, c = (n.width - s.position.width) / 2, t.imageFromCache(e.getSrc(), (function(t) {
                                        r._setBackgroundImage(t, a, h, c, i)
                                    }), !0, r.position, s, r.opts)) : (n.width > n.height ? e.scaleToWidth(n.width) : e.scaleToHeight(n.height), r._setBackgroundImage(e, a, h, c, i))
                                }), !0) : (console.error("no urls received for fill graphic ", s), i());
                                break;
                            case u.default.DESIGN_FILL_TYPE.PREMIUM:
                                l = this.opts.fill.designFillUrls, s = a ? "full" : "large";
                                l && l[s] ? t.imageFromCache(l[s], (function(t) {
                                    var e, n, o, s = r.position.width / r.position.height;
                                    t.width / t.height <= s ? (o = r.position.width / t.width, n = r.position.left, e = -(t.height * o - r.position.height) / 2 + r.position.top) : (o = r.position.height / t.height, e = r.position.top, n = -(t.width * o - r.position.width) / 2 + r.position.left), r._fabric.setBackgroundImage(t, (function() {
                                        a || r._fabric.requestRenderAll(), i()
                                    }), {
                                        top: e,
                                        left: n,
                                        scaleX: o,
                                        scaleY: o
                                    })
                                }), !0) : (console.error("no urls received for fill premium ", l), i());
                                break;
                            case u.default.DESIGN_FILL_TYPE.COLOR:
                                if (a) this._fabric.backgroundColor = null == (s = this.opts.fill) ? void 0 : s.designFillValue;
                                else {
                                    if ((s = this._fabric._showFill || this._fabric._showGuidelines || this._activeCropStateLayerId ? u.default.GUIDE_BACKGROUND : (null == (l = this.opts.fill) ? void 0 : l.designFillValue) || null) === this._fabric.backgroundColor && !o) return;
                                    o && (this._fabric.backgroundImage = null), this._fabric.setBackgroundColor(s, this._fabric.requestRenderAll.bind(this._fabric))
                                }
                                i()
                        }
                    }
                }, {
                    key: "_setBackgroundImage",
                    value: function(t, e, i, r, n) {
                        var o = this;
                        this._fabric.setBackgroundImage(t, (function() {
                            e || o._fabric.requestRenderAll(), n()
                        }), {
                            top: i,
                            left: r
                        })
                    }
                }, {
                    key: "_layerLoaded",
                    value: function() {
                        var e = this;
                        if (this._layersLoaded += 1, this._layersLoaded && this._layersRequired && this._layersLoaded >= this._layersRequired && this.opts.readyCallback) {
                            this._layersLoaded = 0, this._layersRequired = 0, "undefined" == typeof window && this._fabric.getObjects().find((function(t) {
                                return t.animation
                            })) ? t.DEPENDENCIES.GenerateVideo(this, h.default, (function(t) {
                                e.videoData = t, e.opts.readyCallback(e)
                            })) : this.opts.readyCallback(this);
                            try {
                                this._debounceDetectPrintColorMode()
                            } catch (t) {
                                console.warn(t)
                            }
                        }
                    }
                }, {
                    key: "setLayers",
                    value: function(e) {
                        var i = this;
                        if (this._fabric) {
                            if (this.customMaskMode || (this.setCustomClipMaskMode(e), this._setupCustomClipMask(e)), this._layersLoaded = 0, this._layersRequired = e.length, "undefined" == typeof window) e.forEach((function(e) {
                                e.uniqueId || (e.uniqueId = t.LayerIdCounter, t.LayerIdCounter++)
                            }));
                            else {
                                var r = this._getObjects().map((function(t) {
                                        return t.id
                                    })),
                                    n = e.map((function(t) {
                                        return t.uniqueId
                                    }));
                                if (JSON.stringify(r) === JSON.stringify(n) && 0 < e.length) return r = this.getActiveGroupId(), e.map((function(t) {
                                    return i.setPosition(t.uniqueId, t)
                                })), void(r && this.showActiveGroup(r));
                                this._fabric.clear(), null != (n = this.opts) && null != (r = n.fill) && r.designFillType && this.opts.fill.designFillType !== u.default.DESIGN_FILL_TYPE.COLOR && this._layersRequired++, this._setBackgroundOverlay()
                            }
                            if (this._layersRequired < 1) return this.opts.readyCallback && this.opts.readyCallback(this), void(null != (n = this.opts.embroideryParams) && n.hasEmbroideryOutline && this._fabric.add(this._embroideryOutline));
                            null != (r = this.opts.embroideryParams) && r.hasEmbroideryOutline && (this._fabric.add(this._embroideryOutline), "undefined" == typeof window && this._embroideryOutline.center()), e.map((function(t, e) {
                                t.zIndex = t.zIndex || e, i.drawLayer(t)
                            }))
                        }
                    }
                }, {
                    key: "showActiveLayer",
                    value: function(t, e) {
                        var i = this;
                        if ("undefined" != typeof window && this._fabric.discardActiveObject) {
                            this.clearActiveGroup();
                            var r = function(t) {
                                i.showActiveLayer(t)
                            };
                            if (!t) return this._fabric.discardActiveObject(), void this._fabric.requestRenderAll();
                            var n = this._getObjects();
                            if ((!n || n.length < 1) && e && (e.type === u.default.LAYER_TYPE.TEXTBOX ? this.drawTextbox(e, r.bind(null, t)) : e.type === u.default.LAYER_TYPE.TEXT ? this.drawText(e, r.bind(null, t)) : e.type !== u.default.LAYER_TYPE.FILE && e.type !== u.default.LAYER_TYPE.EXTERNAL || this.drawImage(e, r(null))), n && !(n.length < 1))
                                for (var o = 0, a = n.length; o < a; o++) {
                                    var s = n[o];
                                    if (String(s.id) === String(t)) {
                                        var l = f.default.getCropElementById(this, t);
                                        this._fabric.setActiveObject(l || s), this._fabric.requestRenderAll();
                                        break
                                    }
                                }
                        }
                    }
                }, {
                    key: "clearActiveGroup",
                    value: function() {
                        null !== this.activeGroup && (this._fabric.discardActiveObject(), this.activeGroup = null)
                    }
                }, {
                    key: "_getObjectsForActiveGroup",
                    value: function(t) {
                        var e = this._getObjects();
                        return !e || e.length < 1 ? [] : e.filter((function(e) {
                            return String(e.groupId) === String(t)
                        }))
                    }
                }, {
                    key: "showActiveGroup",
                    value: function(t) {
                        if ("undefined" != typeof window && this._fabric.discardActiveObject) {
                            if (this.clearActiveGroup(), !t) return this._fabric.discardActiveObject(), void this._fabric.requestRenderAll();
                            var e, i = this._getObjectsForActiveGroup(t);
                            i && i.length && (e = i.some((function(t) {
                                return !t.isGroupLocked
                            })), e = i.some((function(t) {
                                return t.isLockedAndSelectable
                            })) || !e, e = Object.assign({}, this._getDefaultOptions(), {
                                selectable: !e,
                                evented: !e,
                                hasControls: !e,
                                disableRemove: e,
                                originX: "center",
                                originY: "center",
                                canvas: this._fabric,
                                lockUniScaling: !0,
                                uniScaleTransform: !0,
                                minScaleLimit: "undefined" == typeof window || this.opts.isReadOnly ? .002 : .04
                            }), this.activeGroup = new h.default.ActiveSelection(i, e), this.activeGroup.groupId = t, this.activeGroup.subType = u.default.LAYER_TYPE.QUICK_DESIGN, this.activeGroup.setControlsVisibility(this._getDefaultControls()), this._setDefaultControlOptions(this.activeGroup), this._fabric.setActiveObject(this.activeGroup), this._fabric.requestRenderAll())
                        }
                    }
                }, {
                    key: "getActiveLayerId",
                    value: function() {
                        var t = this.getActiveObject();
                        return (null == t ? void 0 : t.id) || null
                    }
                }, {
                    key: "getActiveGroupId",
                    value: function() {
                        var t = this.getActiveObject();
                        return t && t.subType === u.default.LAYER_TYPE.QUICK_DESIGN && t.groupId ? t.groupId : null
                    }
                }, {
                    key: "setPosition",
                    value: function(t, e, i) {
                        var r = this,
                            n = this._fabric.getObjects(),
                            o = this.getActiveLayerId();
                        if (n && !(n.length < 1))
                            for (var a = this.activeGroup && this.activeGroup.groupId, s = (e.parentLayerUniqueId || this.clearActiveGroup(), function(t) {
                                    o === e.uniqueId && r.showActiveLayer(e.uniqueId, e), t && r.removeLayerById(t), t = r.activeGroup && r.activeGroup.groupId || a, !o && t && r.showActiveGroup(t), r._detectPrintColorMode(), r.opts.readyCallback(r)
                                }), l = 0, h = n.length; l < h; l++) {
                                var c, f = n[l];
                                if (String(f.id) === String(t) && f.type !== u.default.LAYER_TYPE.CROP) return e && e.font ? (c = e.uniqueId + "-old", f.id = c, f.evented = !1, f.selectable = !1, e.zIndex = f.zIndex, this.setLayerToBeClipped(e), e.embroideryType && this.removeLayer(f), void(e.type === u.default.LAYER_TYPE.TEXTBOX ? this.drawTextbox(e, s.bind(null, c)) : e.type === u.default.LAYER_TYPE.TEXT && this.drawText(e, s.bind(null, c)))) : (this._repositionLayer(f, e), void this._colorImage(f, e, (function() {
                                    r.sortLayers(!0), i && i()
                                })))
                            }
                    }
                }, {
                    key: "updateLayer",
                    value: function(t, e, i) {
                        void 0 === i && (i = !1);
                        var r = this._getObjects();
                        if (r && !(r.length < 1))
                            for (var n = 0, o = r.length; n < o; n++) {
                                var a, s = r[n];
                                if (String(s.id) === String(t.uniqueId) && s.type !== u.default.LAYER_TYPE.CROP) return (!!s.flipX != !!t.flipX || !!s.flipY != !!t.flipY) && this._repositionLayer(s, t), this.updateCroppedImageAnimation(s, t), this.managePropsAfterObjectUpdate(s, t), this.manageLayerLock(t, s), this.setUniScaleLock(s), i && (a = this.getActiveObject(), s.patternType && (null == a ? void 0 : a.groupId) === (null == s ? void 0 : s.groupId) && this._fabric.discardActiveObject()), this._colorImage(s, t, e), void this._debounceDetectPrintColorMode()
                            }
                    }
                }, {
                    key: "managePropsAfterObjectUpdate",
                    value: function(t, e) {
                        t && e && (t.layerType === u.default.LAYER_TYPE.CLIPART && (t.lockUniScaling = e.lockUniScaling), t.layerType === u.default.LAYER_TYPE.MOCKUP_MAKER && (t.hasBorders = !e.isLocked, t.evented = !e.isLocked), e.animation ? t.animation = e.animation : t.animation && delete t.animation)
                    }
                }, {
                    key: "sortLayers",
                    value: function(t) {
                        var e;
                        !this._fabric._objects || this._fabric._objects.length < 1 || (e = [], t || (e = this._fabric._objects.map((function(t) {
                            return t.zIndex
                        }))), this._fabric._objects.sort((function(t, e) {
                            return t.zIndex - e.zIndex || (t.type === u.default.LAYER_TYPE.CROP && e.type !== u.default.LAYER_TYPE.CROP ? -1 : t.type !== u.default.LAYER_TYPE.CROP && e.type === u.default.LAYER_TYPE.CROP ? 1 : 0) || (0, d.NUMFIX)(t.top, 1) - (0, d.NUMFIX)(e.top, 1) || (0, d.NUMFIX)(t.left, 1) - (0, d.NUMFIX)(e.left, 1)
                        })), t || (t = this._fabric._objects.map((function(t) {
                            return t.zIndex
                        })), JSON.stringify(e), JSON.stringify(t)))
                    }
                }, {
                    key: "removeLayerById",
                    value: function(t) {
                        var e = this._getObjects();
                        if (e && !(e.length < 1))
                            for (var i = 0, r = e.length; i < r; i++) {
                                var n = e[i];
                                if (String(n.id) === String(t)) return void this.removeLayer(n)
                            }
                    }
                }, {
                    key: "removeLayer",
                    value: function(t) {
                        this._fabric.remove && ((0, d.clearCanvas)(t, !0), this._fabric.remove(t))
                    }
                }, {
                    key: "drawLayer",
                    value: function(t, e) {
                        switch (t.zIndex || 0 === t.zIndex || (t.zIndex = this._getObjects().length), this.setLayerToBeClipped(t), t.type) {
                            case u.default.LAYER_TYPE.FILE:
                            case u.default.LAYER_TYPE.MOCKUP_MAKER:
                            case u.default.LAYER_TYPE.EXTERNAL:
                                this.drawImage(t, e);
                                break;
                            case u.default.LAYER_TYPE.TEXT:
                                this.drawText(t, e);
                                break;
                            case u.default.LAYER_TYPE.TEXTBOX:
                                this.drawTextbox(t, e);
                                break;
                            case u.default.LAYER_TYPE.LICENSED_ASSET:
                                t.svg ? this.drawClipart(t, e) : this.drawImage(t, e);
                                break;
                            case u.default.LAYER_TYPE.CLIPART:
                                this.drawClipart(t, e);
                                break;
                            default:
                                void 0 !== e && e && e(null), this.opts.errorCallback ? this.opts.errorCallback("Couldnt drawLayer on " + t.type) : console.error("Invalid layer type")
                        }
                        return this
                    }
                }, {
                    key: "drawImage",
                    value: function(e, i) {
                        var r = this,
                            n = this._getRemoveBackgroundImage(e, !1, !0) || "";
                        t.imageFromCache(n, (function(n) {
                            var o = r._getRemoveBackgroundImage(e, !1) || e.url;
                            t.imageFromCache(o, (function(t) {
                                function o() {
                                    void 0 !== i && i ? i(t) : r._layerLoaded()
                                }
                                if (!t) return r.opts.errorCallback ? r.opts.errorCallback("Couldnt drawImage " + e.url) : (console.warn("Couldnt drawImage:", e.url), void o());
                                t.setControlsVisibility && (t.setControlsVisibility(r._getDefaultControls(e)), r._setDefaultControlOptions(t)), t.zIndex = e.zIndex, t.id = e.uniqueId, t.animation = e.animation, t.opacity = e.isHidden ? 0 : "3d" === e.embroideryType ? 2 : e.cropPosition ? 0 : 1, t._lastFillColor = "", t.patternId = null, t.patternType = e.patternType, t.patternSpacing = e.patternSpacing, t.groupId = e.groupId, t.originalUrl = e.url, t.mask = n || "", t.isEmbroidery = void 0 !== e.embroideryType, t.layerType = e.type, t.lockMovementY = e.object === u.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP, t.evented = e.object !== u.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP || !e.isLocked, t.isLockedAndSelectable = e.isLockedAndSelectable, t.isHidden = e.isHidden, t.isGroupLocked = e.isGroupLocked, e.isInCustomClipMask && (t.clipPath = r._customMaskObject), r._insertObject(t, e, null, o)
                            }), !1, r.position, e, r.opts)
                        }), !1, this.position, e, this.opts)
                    }
                }, {
                    key: "drawClipart",
                    value: function(t, e) {
                        var i = this;
                        t.svg ? h.default.loadSVGFromString(t.svg, (function(r, n) {
                            n && (n.width && n.height ? n.centerPoint = {
                                x: n.width / 2,
                                y: n.height / 2
                            } : (delete n.width, delete n.height));
                            var o = new h.default.Group(r, n);
                            "undefined" != typeof path && (o.sourcePath = path), o.setControlsVisibility(i._getDefaultControls(t)), o.zIndex = t.zIndex, o.id = t.uniqueId, o.animation = t.animation, o.patternId = null, o._lastFillColor = "", o.patternType = t.patternType, o.patternSpacing = t.patternSpacing, o.opacity = t.isHidden ? 0 : "3d" === t.embroideryType ? 2 : 1, o.groupId = t.groupId, o.isHidden = t.isHidden, o.isGroupLocked = t.isGroupLocked, t.isInCustomClipMask && (o.clipPath = i._customMaskObject), i._setDefaultControlOptions(o), i._insertObject(o, t, n, (function() {
                                void 0 !== e && e ? e(o) : i._layerLoaded()
                            }))
                        })) : this.drawImage(t, e)
                    }
                }, {
                    key: "drawText",
                    value: function(e, i) {
                        var r = this;
                        if (!t.DEPENDENCIES.TEXT2SVG) throw new Error("PFCanvas - TEXT2SVG not set!");
                        t.DEPENDENCIES.TEXT2SVG.TextCalculator(e, (function(t, n) {
                            var o = t.canvas.outerHTML || (new XMLSerializer).serializeToString(t.canvas),
                                a = h.default.document.createElement("div"),
                                s = (a.innerHTML = o, a.firstChild);
                            s.style = null, s.setAttribute("preserveAspectRatio", "xMidYMid"), o = s.outerHTML || (new XMLSerializer).serializeToString(a), t.remove(), h.default.loadSVGFromString(o, (function(t, n) {
                                var o = h.default.util.groupSVGElements(t, n);
                                o.setControlsVisibility(r._getDefaultControls(e)), o.zIndex = e.zIndex, o.id = e.uniqueId, o.animation = e.animation, o.text = e.text, o.resizeToPercent = e.isCustomizable ? Math.round(e.position.width / e.position.areaWidth * 100) : null, e.resizeToPercent = o.resizeToPercent, o.isCustomizable = e.isCustomizable, o.opacity = "3d" === e.embroideryType ? 2 : 1, o.patternId = null, o.groupId = e.groupId, e.isInCustomClipMask && (o.clipPath = r._customMaskObject), r._setDefaultControlOptions(o), r._insertObject(o, e, n, (function() {
                                    void 0 !== i && i ? i(o) : r._layerLoaded()
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "_drawEmbroideryOutline",
                    value: function() {
                        var t, e, i, r, n;
                        null != (e = this.opts.embroideryParams) && e.hasEmbroideryOutline && (this._embroideryOutline ? this.updateEmbroideryOutlineColor(null == (e = this.opts.embroideryParams) ? void 0 : e.embroideryOutlineColor) : (e = Object.assign({}, this._getDefaultOptions(), {
                            fill: "rgba(0,0,0,0)",
                            stroke: null == (e = this.opts.embroideryParams) ? void 0 : e.embroideryOutlineColor,
                            strokeWidth: null != (e = null == (e = this.opts.embroideryParams) ? void 0 : e.outlineWidth) ? e : u.default.EMBROIDERY_OUTLINE_WIDTH,
                            selectable: !1,
                            evented: !1,
                            width: this.position.width,
                            height: this.position.height,
                            originX: "center",
                            originY: "center",
                            left: this.position.width / 2 + this.position.left,
                            top: this.position.height / 2 + this.position.top
                        }), i = null != (i = null == (i = this.opts.embroideryParams) ? void 0 : i.outlineScaleX) ? i : u.default.EMBROIDERY_OUTLINE_SCALE_ADJUSTMENT, r = null != (r = null == (r = this.opts.embroideryParams) ? void 0 : r.outlineScaleY) ? r : u.default.EMBROIDERY_OUTLINE_SCALE_ADJUSTMENT, n = "undefined" == typeof window ? 3.5 : 0, this._embroideryOutline = new h.default.Path(null == (t = this.opts.embroideryParams) ? void 0 : t.embroideryOutlineSvgPath, e), this._embroideryOutline.set("scaleX", (e.width * i + n) / this._embroideryOutline.width), this._embroideryOutline.set("scaleY", (e.height * r + n) / this._embroideryOutline.height)))
                    }
                }, {
                    key: "updateEmbroideryOutlineColor",
                    value: function(t) {
                        this._embroideryOutline.set("stroke", t), this._fabric.renderAll()
                    }
                }, {
                    key: "_loadTextBoxFillImage",
                    value: function(e, i, r, n) {
                        var o, a = this;
                        e.colorGraphic && e.colorGraphic.image && this.position.width ? (o = e.colorGraphic.image, o = "undefined" == typeof window ? o.urlFull : o.urlLarge, t.imageFromCache(o, (function(o) {
                            var s, l, c = (l = r._objects ? r._objects[0] : r).stroke ? l.strokeWidth : 0,
                                f = ((l = ((c = new h.default.PFTextbox(l.text, {
                                    fontFamily: l.fontFamily,
                                    fontSize: l.fontSize,
                                    textAlign: l.textAlign,
                                    lineHeight: l.lineHeight,
                                    charSpacing: l.charSpacing,
                                    strokeWidth: c,
                                    arcRadius: l.arcRadius,
                                    arcAngle: l.arcAngle,
                                    scaleX: r.scaleX,
                                    scaleY: r.scaleY
                                })).calcArcDimensions(), c.createTextDimensionCanvasAddObject(c))).setWidth(parseInt(l.width * r.scaleX)), l.setHeight(parseInt(l.height * r.scaleX)), l.getObjects());
                            for (s in f) f[s].left = f[s].left * r.scaleX, f[s].top = f[s].top * r.scaleX, f[s].setCoords();
                            o.scaleToWidth(a.position.width / e.colorGraphic.scale, !0);
                            var p = ((c = new h.default.StaticCanvas(null, {
                                    imageSmoothingEnabled: a.opts.canvasParams.imageSmoothingEnabled
                                })).add(o), c.setDimensions({
                                    width: o.getScaledWidth(),
                                    height: o.getScaledHeight()
                                }), c.renderAll(), new h.default.Pattern({
                                    source: c.getElement(),
                                    repeat: "repeat",
                                    offsetX: parseInt(l.width / 2),
                                    offsetY: parseInt(l.height / 2)
                                })),
                                g = (p = new h.default.Rect({
                                    width: l.width,
                                    height: l.height,
                                    fill: p,
                                    globalCompositeOperation: "source-in"
                                }), p = (l.add(p), l.renderAll(), l.toDataURL()), {
                                    top: i.svgDimensions.top * r.scaleX,
                                    left: i.svgDimensions.left * r.scaleX,
                                    width: i.svgDimensions.width * r.scaleX,
                                    height: i.svgDimensions.height * r.scaleX
                                });
                            (0, d.clearCanvas)(l), (0, d.clearCanvas)(c), h.default.Image.fromURL(p, (function(e) {
                                setTimeout((function() {
                                    t.isInvalidImage(e) || (e.set({
                                        type: u.default.COLOR_GRAPHIC_TYPE,
                                        graphicPosition: g
                                    }), void 0 !== n && n && n(e))
                                }), t.isInvalidImage(o) ? 50 : 0)
                            }), {
                                crossOrigin: "anonymous"
                            })
                        }))) : n && n()
                    }
                }, {
                    key: "drawTextbox",
                    value: function(e, i) {
                        var r, n, o, a, s, l = this,
                            c = "object" == typeof e.font && e.font.fontKey ? e.font.fontKey : e.font || e.fontKey,
                            f = ("object" == typeof e.font && e.font.fontPath ? e.font : e).fontPath,
                            d = ("object" == typeof e.font && e.font.fontUrl ? e.font : e).fontUrl;
                        t.DEPENDENCIES.Fonts.LOADED_TTF_FONTS.hasOwnProperty(c) ? ([u.default.TEXT_ALIGNMENT.ABSOLUTE_RIGHT, u.default.TEXT_ALIGNMENT.ABSOLUTE_LEFT, u.default.TEXT_ALIGNMENT.ABSOLUTE_CENTER].includes(e.alignment) && t.calculateTextboxPositions(e), r = t.getTextboxConfigFromLayerData(e), "" === (s = t.getSupportedCharacters(e)) && (console.error("Font not supported: ", e.font), s = e.text), (n = new h.default.PFTextbox(s, r)).isCustomized = e.customizeKey && "0" !== e.customizeKey, n.isCustomized && "undefined" == typeof window && this._overrideLayerPosition(e), o = this._getMainScale(e), n.calcArcDimensions(), s = (a = n.getCustomSvgProperties(e)).svgString, h.default.loadSVGFromString(s, (function(s, c) {
                            s.length < 2 && s.push(new h.default.Path), e.shadowColor && "undefined" == typeof window && (s = s.map((function(t) {
                                return t.shadow = new h.default.Shadow({
                                    color: r.shadowColor,
                                    blur: 0,
                                    offsetX: r.shadowOffsetX,
                                    offsetY: r.shadowOffsetY
                                }), t
                            }))), l._adjustSvgOptions(c);
                            var f = t.groupSVGElements(s, c);
                            s = f.height * a.scaleBackRatio * o * l._fabric.getZoom();
                            l._isPngRequired(e, s, 0 < parseFloat(e.strokeWeight), n._textLines.length, e.font) ? l._drawTextboxPng(n, e, a, r, o, i, c) : (f.setControlsVisibility(l._getDefaultControls(e)), f.isCustomized = e.customizeKey && "0" !== e.customizeKey, f.zIndex = e.zIndex, f.id = e.uniqueId, f.animation = e.animation, f.text = e.text, f.resizeToPercent = e.isCustomizable ? Math.round(e.position.width / e.position.areaWidth * 100) : null, e.resizeToPercent = f.resizeToPercent, f.isCustomizable = e.isCustomizable, f.opacity = e.isHidden ? 0 : "3d" === e.embroideryType ? 2 : 1, f.groupId = e.groupId, f.isGroupLocked = e.isGroupLocked, f.isLockedAndSelectable = e.isLockedAndSelectable, f.isHidden = e.isHidden, e.isInCustomClipMask && (f.clipPath = l._customMaskObject, e.shadowColor && "undefined" != typeof window && (f._objects[0].shadow = new h.default.Shadow({
                                color: r.shadowColor,
                                blur: 0,
                                offsetX: r.shadowOffsetX,
                                offsetY: r.shadowOffsetY
                            }), f._objects[0].insideClipGroup = !0, e.colorGraphic && (f._objects[0].fill = "white"))), e.shadowColor && !e.isInCustomClipMask && "undefined" != typeof window && (f.shadow = new h.default.Shadow({
                                color: r.shadowColor,
                                blur: 0,
                                offsetX: r.shadowOffsetX,
                                offsetY: r.shadowOffsetY
                            })), l._setDefaultControlOptions(f), f.set("type", u.default.LAYER_TYPE.TEXTBOX), f.scaleToHeight(f.height * a.scaleBackRatio * o), l._loadTextBoxFillImage(e, a, f, (function(t) {
                                t && (f.add(t), f.dirty = !0, l._fabric.fire("object:modified", {
                                    target: f,
                                    transform: {
                                        action: u.default.COLOR_GRAPHIC_IMAGE_LOAD,
                                        actionPerformed: !0,
                                        target: f
                                    }
                                })), l._insertObject(f, e, c, (function() {
                                    var t;
                                    void 0 !== i && i ? i(f) : l._layerLoaded(), null != (t = l._fabric) && t.requestRenderAll()
                                }))
                            })))
                        }), (function(t, e) {
                            for (var i = parseFloat(t.childNodes[0].getAttribute("x")), o = parseFloat(t.childNodes[0].getAttribute("y")), a = 1; a < t.childNodes.length; a++) i = Math.min(parseFloat(t.childNodes[a].getAttribute("x")), i);
                            e.top += o * e.scaleY, e.left += i * e.scaleX, e.text = n.text, e.textLines = n.textLines, e.lineHeight = r.lineHeight, e.charSpacing = r.charSpacing, e._text = n._text, e._textLines = n._textLines, e._unwrappedTextLines = n._unwrappedTextLines, e.textAlign = n.textAlign.replace("absolute_", ""), e.arcAngle = n.arcAngle, e.arcRadius = n.arcRadius, e.fill = n.fill
                        }))) : t.loadTTFFont(c, f, d, this.drawTextbox.bind(this, e, i))
                    }
                }, {
                    key: "_overrideLayerPosition",
                    value: function(t) {
                        t.position.width = t.customWidth || t.position.width, t.position.height = t.customHeight || t.position.height, t.position.top = t.customTop || t.position.top, t.position.left = t.customLeft || t.position.left
                    }
                }, {
                    key: "_adjustSvgOptions",
                    value: function(t) {
                        t && "undefined" == typeof window && (t.width += u.default.ADJUST_SVG_OPTIONS_BY, t.height += u.default.ADJUST_SVG_OPTIONS_BY, t.minX += u.default.ADJUST_SVG_OPTIONS_BY, t.minY += u.default.ADJUST_SVG_OPTIONS_BY, t.viewBoxWidth = t.width, t.viewBoxHeight = t.height)
                    }
                }, {
                    key: "_isPngRequired",
                    value: function(t, e, i, r, n) {
                        if ("undefined" != typeof window && (this._useLifelike() || this.shouldShowLiveLifelike())) return !0;
                        if (t && (t.isCustomizable || t.resizeToPercent || t.customizeKey && "0" !== t.customizeKey)) return !1;
                        if (this.opts.textToPng) return !0;
                        t = h.default.window.chrome;
                        var o, a = (c = h.default.window.navigator).vendor,
                            s = void 0 !== h.default.window.opr,
                            l = -1 < c.userAgent.indexOf("Edge"),
                            c = c.userAgent.match("CriOS");
                        if (!i || !(c || null != t && "Google Inc." === a && 0 == s && 0 == l)) return !1;
                        if (1 !== r) return 200 <= e;
                        if (375 < e) return !1;
                        if (250 < e) return !0;
                        for (o in u.default.PNG_FONT_HEIGHT_PIXELS)
                            if (-1 < u.default.PNG_FONT_HEIGHT_PIXELS[o].indexOf(n) && o < e) return !0;
                        return !1
                    }
                }, {
                    key: "_drawTextboxPng",
                    value: function(e, i, r, n, o, a, s) {
                        var l = this,
                            c = h.default.util.object.clone(e),
                            f = this._isLifelikeForCurrentVariant() ? u.default.PNG_TEXT_LIFELIKE_MULTIPLIER : u.default.PNG_TEXT_MULTIPLIER,
                            p = (e = c.createTextDimensionCanvasAddObject(c)).toDataURL({
                                format: "png",
                                left: r.svgDimensions.left,
                                top: r.svgDimensions.top + 1,
                                width: r.svgDimensions.width,
                                height: r.svgDimensions.height,
                                multiplier: f
                            });
                        (0, d.clearCanvas)(e), h.default.Image.fromURL(p, (function(e) {
                            setTimeout((function() {
                                if (!t.isInvalidImage(e)) {
                                    if (!e) {
                                        if (l.opts.errorCallback) return l.opts.errorCallback("Couldn't drawImage " + p);
                                        console.warn("Couldn't drawImage:", p)
                                    }
                                    l._setTextPngVariablesOnObject(e, i, n, f), e.scaleToHeight(e.height * r.scaleBackRatio * o / f), c.scaleToHeight(c.height * r.scaleBackRatio * o);
                                    var u = function(t) {
                                        l._insertObject(t, i, s, (function() {
                                            l.opts.generateTextCache && w.default.setCache(t, i), void 0 !== a && a ? a(t) : l._layerLoaded(), l._fabric.requestRenderAll()
                                        }))
                                    };
                                    l._loadTextBoxFillImage(i, r, c, (function(t) {
                                        var r;
                                        t ? (r = new h.default.StaticCanvas(null, {
                                            enableRetinaScaling: !1,
                                            renderOnAddRemove: !1,
                                            skipOffscreen: !1,
                                            width: e.getScaledWidth(),
                                            height: e.getScaledHeight()
                                        }), e.shadow = null, r.add(e), t.set({
                                            top: -t.graphicPosition.top,
                                            left: -t.graphicPosition.left
                                        }), r.add(t), r.renderAll(), p = r.toDataURL(), (0, d.clearCanvas)(r), h.default.Image.fromURL(p, (function(t) {
                                            if (!t) {
                                                if (l.opts.errorCallback) return l.opts.errorCallback("Couldn't drawImage " + p);
                                                console.warn("Couldn't drawImage:", p)
                                            }
                                            l._setTextPngVariablesOnObject(t, i, n, c.scaleX), u(t)
                                        }), {
                                            crossOrigin: "anonymous"
                                        })) : u(e)
                                    }))
                                }
                            }), t.isInvalidImage(e) ? 50 : 0)
                        }), {
                            crossOrigin: "anonymous"
                        })
                    }
                }, {
                    key: "_setTextPngVariablesOnObject",
                    value: function(e, i, r, n) {
                        e.setControlsVisibility(this._getDefaultControls(i)), e.zIndex = i.zIndex, e.id = i.uniqueId, e.animation = i.animation, e.text = i.text, e.resizeToPercent = i.isCustomizable ? Math.round(i.position.width / i.position.areaWidth * 100) : null, i.resizeToPercent = e.resizeToPercent, e.isCustomizable = i.isCustomizable, e.opacity = "3d" === i.embroideryType ? 2 : 1, e.backgroundColor = "", e.shadow = new h.default.Shadow({
                            color: this._isLifelikeForCurrentVariant() ? t.convertToLifelikeColor(r.shadowColor) : r.shadowColor,
                            blur: 0,
                            offsetX: r.shadowOffsetX * n,
                            offsetY: r.shadowOffsetY * n
                        }), e.groupId = i.groupId, e.set("type", u.default.LAYER_TYPE.TEXTBOX), e.set("subType", u.default.LAYER_TYPE.TEXTBOX_PNG), this._setDefaultControlOptions(e)
                    }
                }, {
                    key: "setRotation",
                    value: function(t, e) {
                        var i = parseFloat(parseFloat(e.left) + parseFloat(e.width / 2)),
                            r = parseFloat(parseFloat(e.top) + parseFloat(e.height / 2)),
                            n = h.default.document.createElementNS("http://www.w3.org/2000/svg", "g");
                        return n.setAttribute("transform", "rotate(" + e.rotation + " " + i + " " + r + ")"), n.appendChild(t), n
                    }
                }, {
                    key: "_insertObject",
                    value: function(t, e, i, r) {
                        -1 < [u.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP, u.default.SUB_TYPE.MOCKUP_MAKER_PROP].indexOf(e.object) && t.set("subType", e.object), this._repositionLayer(t, e, i);
                        for (var n = t.zIndex, o = 0, a = this._fabric._objects.length; o < a; o++) {
                            if (this._fabric._objects[o].zIndex > t.zIndex) {
                                n = o;
                                break
                            }
                            n = o + 1
                        }
                        this._fabric.insertAt(t, n), this.manageLayerLock(e, t), this._colorImage(t, e, r)
                    }
                }, {
                    key: "_getMainScale",
                    value: function(t) {
                        var e = t.position.areaWidth / t.position.areaHeight,
                            i = this.position.width / this.position.height,
                            r = this.position.width / t.position.areaWidth;
                        t = this.position.height / t.position.areaHeight;
                        return i < e ? r : t
                    }
                }, {
                    key: "_getFillScale",
                    value: function(t) {
                        var e = this.position.width / t.position.areaWidth;
                        return (t = this.position.height / t.position.areaHeight) < e ? e : t
                    }
                }, {
                    key: "_repositionLayer",
                    value: function(e, i, r) {
                        var n, o, a, s, l, h, c, f = this._getMainScale(i);
                        (this._fabric.mainScale = f) !== 1 / 0 && (r = Object.assign({}, r || {}, this._getDefaultOptions(), {
                            left: f * i.position.left + this.position.left,
                            top: f * i.position.top + this.position.top,
                            width: e.width,
                            height: e.height,
                            angle: 0,
                            backgroundColor: "",
                            flipX: i.flipX,
                            flipY: i.flipY,
                            evented: e.layerType === u.default.LAYER_TYPE.MOCKUP_MAKER ? !i.isLocked : this._isSelectable(),
                            disableCentering: i.disableCentering
                        }), e.set(r), e.type === u.default.LAYER_TYPE.TEXTBOX ? (r = e.subType === u.default.LAYER_TYPE.TEXTBOX_PNG, n = t.getTextboxCustomizedWidth(i, r, this._isLifelikeForCurrentVariant()) * u.default.FONT_SIZE_MULTIPLIER, o = e.getScaledWidth() / e.scaleX, e.lockUniScaling = !0, o < n && (e.subType === u.default.LAYER_TYPE.TEXTBOX_PNG ? (this._overridePngImageObj(e), e.customizedWidth = n) : (e.width = n, e._objects.forEach((function(t) {
                            t.type === u.default.COLOR_GRAPHIC_TYPE && (t.customizedLeft = (n - o) / 2)
                        })))), i.originalWidth && (this.opts.isCustomizingMode || e.isCustomized) && (h = i.size / u.default.DEFAULT_TEXT_SIZE, r = r ? this._isLifelikeForCurrentVariant() ? u.default.PNG_TEXT_LIFELIKE_MULTIPLIER : u.default.PNG_TEXT_MULTIPLIER : 1, a = s = e.getScaledHeight(), l = (0, d.NUMFIX)(e.width / u.default.FONT_SIZE_MULTIPLIER * h), (c = (0, d.NUMFIX)(i.originalWidth)) < l && (l = c * u.default.FONT_SIZE_MULTIPLIER / h * e.scaleX * r, e.scaleToWidth(l, !0), a < (s = e.getScaledHeight()) && (e.scaleToHeight(a, !0), s = a)), e.top += (a - s) / 2)) : i.type !== u.default.LAYER_TYPE.CLIPART || this.opts.disableScaling ? e.drawResized || (c = this.position.width / i.position.areaWidth, h = this.position.height / i.position.areaHeight, r = c * i.position.width, l = h * i.position.height, e.set("scaleX", (0, d.NUMFIX)(r / e.width)), a = e.width, e.set("scaleY", (0, d.NUMFIX)(l / e.height)), s = f * i.position.width / e.scaleX, c = a * e.resizeToPercent / 100, e.lockUniScaling = !0, e.isCustomizable && "undefined" == typeof window ? (h = e.getScaledWidth(), (r = i.position.width * f) < h ? e.scaleToWidth(r, !0) : (l = (i.position.width * f - e.getScaledWidth()) / 2, e.left += l)) : null != (h = this.opts.embroideryParams) && h.hasEmbroideryOutline && "undefined" == typeof window ? e.center() : (e.isCustomizable && null !== e.resizeToPercent && (e.width = c), (0, d.NUMFIX)(e.width) !== (0, d.NUMFIX)(a) && e.set("width", Math.max(a, s)), r = Math.abs((0, d.NUMFIX)(s) - (0, d.NUMFIX)(a)) / (0, d.NUMFIX)(s), e.isCustomizable && .09 < r && e.set("width", s))) : (f = this.position.width / i.position.areaWidth, l = this.position.height / i.position.areaHeight, h = f * i.position.width, c = l * i.position.height, e.set("scaleX", (0, d.NUMFIX)(h / e.width)), e.set("scaleY", (0, d.NUMFIX)(c / e.height)), e.lockUniScaling = !0), e.rotate(i.position.rotation), e.setCoords())
                    }
                }, {
                    key: "_overridePngImageObj",
                    value: function(t) {
                        t && (t._getNonTransformedDimensions = function() {
                            var t = this.strokeWidth,
                                e = this.width + t,
                                i = (t = this.height + t, this.customizedWidth || 0);
                            return {
                                x: e < i ? i : e,
                                y: t
                            }
                        }.bind(t))
                    }
                }, {
                    key: "_overrideStaticCanvasMethod",
                    value: function() {
                        this._fabric._setSVGBgOverlayColor = function(t, e) {
                            var i, r = this[e + "Color"],
                                n = this.viewportTransform,
                                o = this.width,
                                a = this.height;
                            r && (r.toLive ? (i = r.repeat, n = h.default.util.invertTransform(n), e = this[e + "Vpt"] ? h.default.util.matrixToSVG(n) : "", t.push('<rect transform="' + e + " translate(", o / 2, ",", a / 2, ')"', ' x="', r.offsetX - o / 2, '" y="', r.offsetY - a / 2, '" ', 'width="', "repeat-y" === i || "no-repeat" === i ? r.source.width : o, '" height="', "repeat-x" === i || "no-repeat" === i ? r.source.height : a, '" fill="url(#SVGID_' + r.id + ')"', "></rect>\n")) : (n = this.clipPath.translateX - this.clipPath.width / 2, e = this.clipPath.translateY - this.clipPath.height / 2, t.push('<rect x="' + n + '" y="' + e + '" width="100%" height="100%" ', 'fill="', r, '"', "></rect>\n")))
                        }.bind(this._fabric)
                    }
                }, {
                    key: "_canDisplayOverrideImage",
                    value: function(t, e) {
                        return e && e !== t._lastOverrideImage && (t.type !== u.default.LAYER_TYPE.TEXTBOX || !(t.isCustomizable && t.type === u.default.LAYER_TYPE.TEXTBOX))
                    }
                }, {
                    key: "_getOverrideImage",
                    value: function(t, e, i) {
                        if (!t) return null;
                        var r = 1 !== (null == (r = this._fabric) ? void 0 : r.getZoom()),
                            n = this._getRemoveBackgroundImage(t, !0);
                        e = "undefined" == typeof window ? null : e, n = (r = this.opts.disablePulseImageOverride || r ? null : t.overrideImagePulse) || n || t.overrideImage || e;
                        return i ? r : n
                    }
                }, {
                    key: "_getRemoveBackgroundImage",
                    value: function(t, e, i) {
                        return void 0 === i && (i = !1), t && t.isRemovedBg && (t.removeBgPreview || t.removeBgFull) && !t.shouldUseTempFile ? e ? "undefined" == typeof window ? null : t.removeBgPreview : i ? "undefined" == typeof window ? t.removeBgFull : null : "undefined" != typeof window || t.removeBgFull ? null : t.removeBgPreview : null
                    }
                }, {
                    key: "_colorImage",
                    value: function(e, i, r) {
                        var n, o, a, s, l, h = this,
                            c = !1;
                        "image" === e.type && t.isInvalidImage(e) ? setTimeout(this._colorImage.bind(this, e, i, r), 50) : (n = function() {
                            h._embroideryOutline && h._embroideryOutline.bringToFront(), h._colorImageFilters(e, i), "undefined" == typeof window || "image" === e.type && t.isInvalidImage(e) || h._fabric.renderAll(), "function" == typeof r && r()
                        }, i.colorGraphic || (e.fill = i && i.color ? i.color : null), o = e._lastOverrideImage ? e.originalUrl : null, a = this._getOverrideImage(i, o), s = i.overrideImage || null, this._canDisplayOverrideImage(e, a) ? (l = a !== o, e._lastOverrideImage = a, c = !0, t.imageFromCache(a, (function(t) {
                            if (!t) return h.opts.errorCallback ? h.opts.errorCallback("Couldnt _colorImage " + a) : console.warn("Couldnt _colorImage", a), i.overrideImage = null, i.overrideImagePulse = null, void(e._lastOverrideImage = null);
                            "group" === e.type ? (t.set({
                                top: e.top,
                                left: e.left,
                                scaleX: e.width / t._originalElement.naturalWidth,
                                scaleY: e.height / t._originalElement.naturalHeight
                            }), e.forEachObject((function(t) {
                                "undefined" == typeof window ? e.remove(t) : e.removeWithUpdate(t)
                            })), "undefined" == typeof window ? e.add(t) : e.addWithUpdate(t), h._repositionLayer(e, i), n()) : "path" === e.type || e.type === u.default.LAYER_TYPE.TEXTBOX || "image" === e.type ? (t._lastOverrideImage = e._lastOverrideImage, e.id = e.id + "__before-override", t.setControlsVisibility(h._getDefaultControls(i)), t.zIndex = i.zIndex || e.zIndex, t.id = i.uniqueId, t.groupId = i.groupId, t.originalUrl = e.originalUrl, t.originalType = e.type, t.isEmbroidery = e.isEmbroidery, t.layerType = e.layerType, t.isOriginalUrlOverride = l, "image" === e.type ? t.imgWithoutPulse = s : e.type === u.default.LAYER_TYPE.TEXTBOX && (t.imgWithoutPulse = e.toDataURL()), h._setDefaultControlOptions(t), h._insertObject(t, i, {}, n.bind(null, !0)), h.removeLayerById(i.uniqueId + "__before-override"), n()) : h.opts.errorCallback ? h.opts.errorCallback("Couldnt set embroidery preview to " + e.type) : console.warn("Couldnt set embroidery preview to " + e.type)
                        }), !1, this.position, i, this.opts)) : i && i.svg && i.fillColor ? (e.fill = i.fillColor, "group" === e.type && e.forEachObject((function(t) {
                            t.fill = i.fillColor
                        }))) : (i.object === u.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP ? e.evented = !i.isLocked : this.manageLayerLock(i, e), this._colorImageFilters(e, i)), f.default.drawCropElement(this, e, i, (function(t) {
                            var e;
                            t.type !== u.default.LAYER_TYPE.CROP || "undefined" == typeof window || null != (e = h.opts) && e.isCropPatternAvailable && h.opts.isCropPatternAvailable() ? h._drawPattern(t, i, (function() {
                                c || n()
                            })) : c || n()
                        })))
                    }
                }, {
                    key: "_colorImageFilters",
                    value: function(e, i, r) {
                        if (void 0 === r && (r = !0), void 0 === e.applyFilters || this._skipFilters) this._skipFilters && r && setTimeout(this._colorImageFilters.bind(this, e, i, !r), 50);
                        else if ("image" === e.type && t.isInvalidImage(e) && r) setTimeout(this._colorImageFilters.bind(this, e, i, !r), 50);
                        else {
                            r = !1;
                            var n, o = !1,
                                a = !1,
                                s = !1,
                                l = this._getOverrideImage.apply(this, [i, null, !0]);
                            if (e.filters[u.default.FILTER_INDEX.SCALE] && (r = !0), e.filters[u.default.FILTER_INDEX.SCALE] = null, i && "undefined" != typeof window && (o = i.fillColor && e._lastFillColor !== i.fillColor, n = !e.filters[u.default.FILTER_INDEX.FILL] && e._lastFillColor, e._lastFillColor = i.fillColor, l || !o && !n || (e.filters[u.default.FILTER_INDEX.FILL] = new h.default.Image.filters.BlendColor({
                                    image: e,
                                    mode: "tint",
                                    alpha: 1,
                                    color: i.fillColor
                                }), o = !0)), "undefined" == typeof window && e.mask ? (e.filters[u.default.FILTER_INDEX.MASK] = new h.default.Image.filters.BlendImage({
                                    image: e.mask,
                                    mode: "pf-mask"
                                }), a = !0) : (e.filters[u.default.FILTER_INDEX.MASK] && (a = !0), e.filters[u.default.FILTER_INDEX.MASK] = null), this._useLifelike() && this.shouldShowLiveLifelike() && this._useLifelikeToggleEnabled() ? (e.filters[u.default.FILTER_INDEX.PRINT] = new h.default.Image.filters.Underbase({
                                    useColorMix: !0
                                }), s = !0) : (e.filters[u.default.FILTER_INDEX.PRINT] && (s = !0), e.filters[u.default.FILTER_INDEX.PRINT] = null, "image" === e.type && !this._useLifelikeToggleEnabled() && this.shouldShowLiveLifelike() && e.applyFilters()), r || o || a || s) {
                                if (!e._originalElement.width) return;
                                e._element && !e._element.width ? (e._element = e._originalElement, e._filteredEl = null) : e._element && "CANVAS" === e._element.tagName && (e._filteredEl = e._element);
                                try {
                                    e.applyFilters()
                                } catch (e) {
                                    console.warn("Could not apply filters!")
                                }
                            }
                            if (this.managePropsAfterObjectUpdate(e, i), this._shouldEnableResizeFilter() && e.resizeFilter && void 0 !== e.applyResizeFilters) {
                                e.resizeFilter = null == (l = this._getDefaultOptions()) ? void 0 : l.resizeFilter;
                                try {
                                    e.applyResizeFilters()
                                } catch (e) {
                                    console.warn("Could not apply resize filters!")
                                }
                            }
                        }
                    }
                }, {
                    key: "_debounceDrawPattern",
                    value: function() {
                        var t;
                        clearTimeout(this._drawPatternTimeout), this._drawPatternTimeout = setTimeout((t = this._drawPattern).bind.apply(t, [this].concat(Array.prototype.slice.call(arguments))), 100)
                    }
                }, {
                    key: "_drawPattern",
                    value: function(e, i, r) {
                        var n = this;
                        if (e.animationInProgress && this.updatePatternAnimation(e), !this._getObjects().length || e.animationInProgress) return r && r();
                        this._fabric.cancelRequestedRender();
                        var o = f.default.getImgElementBeingCroppedById(this, e.id);
                        if (e.setCoords(), i && (e.patternType = i.patternType, e.patternSpacing = Math.min(u.default.PATTERN_SPACING.MAX, Math.max(u.default.PATTERN_SPACING.MIN, parseFloat(i.patternSpacing) || 0))), e.patternId = null, o && (o.patternId = null), f.default.isCropState(this, e.id) && null != (i = this.opts) && i.isCropPatternAvailable()) return (i = this._fabric.getObjects().filter((function(t) {
                            return t !== e && t !== o && t.id === e.id
                        }))).map((function(t) {
                            return (0, d.clearCanvas)(t, !0)
                        })), this._fabric.remove.apply(this._fabric, i), this._fabric.requestRenderAll(), r && r();
                        var a = [];
                        if ("undefined" != typeof window && this._fabric.getObjects().forEach((function(t) {
                                var i = t.patternId && t.patternId === e.id,
                                    r = t.id === e.id && !t.patternId;
                                (i || r && t !== e && t !== o) && a.push(t)
                            })), !e.patternType) return 0 < (null == (i = a) ? void 0 : i.length) && (a.map((function(t) {
                            return (0, d.clearCanvas)(t, !0)
                        })), this._fabric.remove.apply(this._fabric, a), this._fabric.requestRenderAll()), r && r();
                        i = 1 + e.patternSpacing;
                        for (var s, l = "undefined" == typeof window && 1 === i && e.patternType && 0 === Math.abs(e.angle % 90), c = this.opts.canvasParams.printfileAntialias && this.opts.canvasParams.imageSmoothingEnabled && void 0 !== e.lostWidth, p = (l && (e.patternType !== u.default.PATTERN_TYPE.HORIZONTAL && (e.top = t.HALFFIX(e.top)), e.patternType !== u.default.PATTERN_TYPE.VERTICAL && (e.left = t.HALFFIX(e.left)), e.width = t.HALFFIX(e.width), e.height = t.HALFFIX(e.height), v = p = !1, e.patternType !== u.default.PATTERN_TYPE.VERTICAL && (p = e.getScaledWidth() !== t.HALFFIX(e.getScaledWidth())), e.patternType !== u.default.PATTERN_TYPE.HORIZONTAL && (v = e.getScaledHeight() !== t.HALFFIX(e.getScaledHeight())), p || v ? (x = e.angle, e.angle = 0, e.setCoords(), p && e.scaleToWidth(t.HALFFIX(e.getScaledWidth())), v && e.scaleToHeight(t.HALFFIX(e.getScaledHeight())), e.angle = x) : (e.left = Math.floor(e.left), e.top = Math.floor(e.top), e.width = Math.floor(e.width), e.height = Math.floor(e.height)), e.setCoords()), e.getBoundingRect()), g = {
                                top: (0, d.NUMFIX)(p.top),
                                left: (0, d.NUMFIX)(p.left),
                                width: (0, d.NUMFIX)(p.width),
                                height: (0, d.NUMFIX)(p.height),
                                right: (0, d.NUMFIX)(p.left + p.width),
                                bottom: (0, d.NUMFIX)(p.top + p.height),
                                widthSpaced: (0, d.NUMFIX)(p.width * i),
                                heightSpaced: (0, d.NUMFIX)(p.height * i),
                                rightSpaced: (0, d.NUMFIX)(p.left + p.width * i),
                                bottomSpaced: (0, d.NUMFIX)(p.top + p.height * i)
                            }, v = this._mask.getBoundingRect(), m = {
                                top: (0, d.NUMFIX)(v.top),
                                left: (0, d.NUMFIX)(v.left),
                                width: (0, d.NUMFIX)(v.width),
                                height: (0, d.NUMFIX)(v.height),
                                right: (0, d.NUMFIX)(v.left + v.width),
                                bottom: (0, d.NUMFIX)(v.top + v.height)
                            }, y = {
                                top: Math.ceil((g.top - m.top) / g.heightSpaced),
                                left: Math.ceil((g.left - m.left) / g.widthSpaced),
                                bottom: Math.ceil((m.bottom - g.bottom) / g.heightSpaced),
                                right: Math.ceil((m.right - g.right) / g.widthSpaced),
                                width: 0,
                                height: 0
                            }, b = (i < 1 && (y.left += 1, y.top += 1, y.right += 1, y.bottom += 1), y.width = y.left + 1 + (e.patternType === u.default.PATTERN_TYPE.BRICK ? 1 : 0) + y.right, y.height = y.top + 1 + (e.patternType === u.default.PATTERN_TYPE.HALFDROP ? 1 : 0) + y.bottom, {
                                top: (0, d.NUMFIX)(g.top - g.heightSpaced * y.top),
                                left: (0, d.NUMFIX)(g.left - g.widthSpaced * y.left),
                                width: (0, d.NUMFIX)(g.widthSpaced * y.width),
                                height: (0, d.NUMFIX)(g.heightSpaced * y.height),
                                bottom: 0,
                                right: 0
                            }), x = (b.bottom = (0, d.NUMFIX)(b.top + b.height), b.right = (0, d.NUMFIX)(b.left + b.width), Math.max(0, y.left) % 2 == 0), _ = Math.max(0, y.top) % 2 == 0, w = x, S = _, C = [], T = [], E = 0, k = 0, O = (e.fill && (s = e.fill, e.fill = null), !("undefined" != typeof window || e.type !== u.default.LAYER_TYPE.CROP)), I = function() {
                                return s && (e.fill = s), n._fabric._activeObject = e, a = [], C = [], n.sortLayers(), n._fabric.requestRenderAll(), r && r()
                            }, P = function(t, i) {
                                var r = t.leftCenter,
                                    o = t.topCenter,
                                    u = t.flipX,
                                    f = t.flipY;
                                t.oddX, t.oddY, t.x, t.y, k++, i ? ((t = -1 < a.indexOf(i)) && i.set(e), s && (i.fill = s), i.patternId = e.id, i.setPositionByOrigin(new h.default.Point(r, o), "center", "center"), i.set("flipX", u), i.set("flipY", f), i.setCoords(), i.animation = e.animation, t || C.push(i), k < E || (l && c && !e.animation ? L(i, C) : (n._fabric.add.apply(n._fabric, C), I()))) : console.error("Failed to clone image for pattern!", e.type)
                            }, L = function(t, i) {
                                var r = y.width * t.lostWidth,
                                    o = y.height * t.lostHeight,
                                    a = n.position.width,
                                    s = n.position.height;
                                (a = new h.default.StaticCanvas(null, Object.assign({}, n.opts.canvasParams, {
                                    width: Math.floor(a),
                                    height: Math.floor(s)
                                }))).add.apply(a, i), a.renderAll(), s = a.getElement(), i = new h.default.Image(s);
                                (0, d.clearCanvas)(a), i.set({
                                    scaleX: (n.position.width + r) / n.position.width,
                                    scaleY: (n.position.height + o) / n.position.height,
                                    left: -Math.abs(y.left) * t.lostWidth,
                                    top: -Math.abs(y.top) * t.lostHeight,
                                    zIndex: e.zIndex
                                }), n._fabric.insertAt(i, i.zIndex), I()
                            }, M = b.left; M < b.right; M = (0, d.NUMFIX)(M + g.widthSpaced)) {
                            w = !w, S = _;
                            for (var A = b.top; A < b.bottom; A = (0, d.NUMFIX)(A + g.heightSpaced)) {
                                S = !S;
                                var D, R, F = (0, d.NUMFIX)(M + g.width / 2),
                                    j = (0, d.NUMFIX)(A + g.height / 2),
                                    B = e.flipX,
                                    U = e.flipY;
                                if (o && e.patternType === u.default.PATTERN_TYPE.REFLECT && e.type === u.default.LAYER_TYPE.CROP && (B = o.flipX, U = o.flipY), e.patternType === u.default.PATTERN_TYPE.HALFDROP && w && (j = (D = (0, d.NUMFIX)(j - g.heightSpaced / 2)) + ((D -= g.height / 2) !== t.HALFFIX(D) ? -.5 : 0)), e.patternType === u.default.PATTERN_TYPE.BRICK && S && (F = (D = (0, d.NUMFIX)(F - g.widthSpaced / 2)) + ((R = D - g.width / 2) !== t.HALFFIX(R) ? -.5 : 0)), e.patternType === u.default.PATTERN_TYPE.REFLECT && ((w && (null == o || !o.flipX) || !w && null != o && o.flipX) && (B = !B), (S && (null == o || !o.flipY) || !S && null != o && o.flipY) && (U = !U)), !(e.patternType === u.default.PATTERN_TYPE.HORIZONTAL && (.09 < t.NUMDIFF(A, g.top) || .09 < t.NUMDIFF(A + g.height, g.bottom)) || e.patternType === u.default.PATTERN_TYPE.VERTICAL && (.09 < t.NUMDIFF(M, g.left) || .09 < t.NUMDIFF(M + g.width, g.right)))) {
                                    if ((0, d.NUMFIX)(g.left) === (0, d.NUMFIX)(M) && (0, d.NUMFIX)(g.top) === (0, d.NUMFIX)(A)) {
                                        if (!l || !c) continue;
                                        this._fabric.remove(e)
                                    }(0, d.NUMFIX)(A + g.height) < (0, d.NUMFIX)(m.top) && w || (0, d.NUMFIX)(j - g.height / 2) > (0, d.NUMFIX)(m.bottom) || (0, d.NUMFIX)(M + g.width) < (0, d.NUMFIX)(m.left) && S || (0, d.NUMFIX)(F - g.width / 2) > (0, d.NUMFIX)(m.right) || T.push({
                                        leftCenter: F,
                                        topCenter: j,
                                        flipX: B,
                                        flipY: U,
                                        oddX: w,
                                        oddY: S,
                                        x: M,
                                        y: A
                                    })
                                }
                            }
                        }
                        E = T.length, T.length && T.length < a.length && ((p = a.splice(T.length)).map((function(t) {
                            return (0, d.clearCanvas)(t, !0)
                        })), this._fabric.remove.apply(this._fabric, p));
                        for (var N = 0, G = T.length, X = a.length; N < G; N++) {
                            var z, W = T[N];
                            N < X ? ((z = a[N]).patternId = e.id, P(W, z)) : O || "undefined" == typeof window && !(e instanceof h.default.Image || "image" === e.type) ? e.clone(P.bind(this, W), ["id", "patternId", "zIndex", "isCustomizable", "_lastFillColor", "patternType", "patternSpacing"]) : ((z = h.default.util.object.clone(e)).patternId = e.id, P.call(this, W, z))
                        }
                        T.length || I()
                    }
                }, {
                    key: "convertToSvg",
                    value: function(t) {
                        if ((t = (o = (o = this._fabric.toSVG(Object.assign({}, {
                                suppressPreamble: !0,
                                viewBox: {
                                    x: this.position.left,
                                    y: this.position.top,
                                    width: this.position.width,
                                    height: this.position.height
                                },
                                width: this.position.width,
                                height: this.position.height
                            }, t || {}))).replace(/\ href=/gim, " xlink:href=")).match(/href="(.*?)"/gim)) && t.length)
                            for (var e = t.filter((function(t, e, i) {
                                    return i.indexOf(t) === e
                                })), i = 0, r = e.length; i < r; i++) {
                                var n, o, a = e[i]; - 1 < a.indexOf('="data:') || (n = a.replace(/\&/gim, "&amp;"), o = o.replace(new RegExp(a.replace(/[-[\]{}()*+?.,\\^$|#\s]/gim, "\\$&"), "gmi"), n))
                            }
                        return o
                    }
                }, {
                    key: "convertToPreview",
                    value: function(t, e) {
                        if (this._isConverting || this._skipFilters) return "";
                        var i, r, n = {
                                enableRetinaScaling: !(this._isConverting = !0),
                                renderOnAddRemove: !1,
                                skipOffscreen: !1,
                                width: this.position.areaWidth,
                                height: this.position.areaHeight,
                                imageSmoothingEnabled: !0,
                                imageSmoothingQuality: "high",
                                clipPath: this._mask,
                                backgroundColor: (null == (n = this.opts.fill) ? void 0 : n.designFillType) === u.default.DESIGN_FILL_TYPE.COLOR ? (null == (n = this.opts) || null == (n = n.fill) ? void 0 : n.designFillValue) || (null == (n = t) ? void 0 : n.fill) : null,
                                backgroundImage: null
                            },
                            o = -1 < [u.default.DESIGN_FILL_TYPE.GRAPHIC, u.default.DESIGN_FILL_TYPE.GRADIENT, u.default.DESIGN_FILL_TYPE.PREMIUM].indexOf(null == (o = this.opts.fill) ? void 0 : o.designFillType);
                        if (!this._getObjects().length && !this._fabric.backgroundColor && !this._embroideryOutline) return s = new h.default.StaticCanvas(null, n), o && this._fabric.backgroundImage && (s.backgroundImage = this._fabric.backgroundImage), l = (l = null) != (i = t) && i.toCanvas || "undefined" != typeof window && window.isWebWorker ? s.toCanvasElement((null == (i = t) ? void 0 : i.multiplier) || 1, this.position) : s.toDataURL(Object.assign({}, this.position, t || {})), (0, d.clearCanvas)(s), this._isConverting = !1, l;
                        if (e) return i = this._fabric.overlayImage, this._fabric.overlayImage = null, r = this.convertToSvg(t), this._getObjects().forEach((function(t) {
                            ("image" === t.originalType && t.imgWithoutPulse || t.originalType === u.default.LAYER_TYPE.TEXTBOX && t.imgWithoutPulse) && (r = r.replace(t.getSvgSrc(), t.imgWithoutPulse))
                        })), this._isConverting = !1, this._fabric.overlayImage = i, r;
                        t = Object.assign({}, {
                            multiplier: this._fabric.getZoom()
                        }, t || {});
                        var a, s = "",
                            l = new h.default.StaticCanvas(null, n);
                        o && this._fabric.backgroundImage && (l.backgroundImage = this._fabric.backgroundImage), l._objects = this._fabric._objects;
                        try {
                            s = t.toCanvas || "undefined" != typeof window && window.isWebWorker ? l.toCanvasElement((null == (a = t) ? void 0 : a.multiplier) || 1, this.position) : l.toDataURL(Object.assign({}, this.position, t || {}))
                        } catch (t) {
                            console.warn(t), s = null
                        }
                        return (0, d.clearCanvas)(l, !0), this._isConverting = !1, s
                    }
                }, {
                    key: "convertToSvgNode",
                    value: function(t) {
                        t = this.convertToSvg(t);
                        var e = h.default.document.createElement("div");
                        return (t = (e.innerHTML = t, e.firstChild)).style = null, t.setAttribute("preserveAspectRatio", "xMidYMid"), t
                    }
                }, {
                    key: "convertToScaledSize",
                    value: function(t, e) {
                        var i, r, n;
                        if (!this._isConverting && !this._skipFilters) return this._isConverting = !0, r = this._fabric.getWidth(), n = this._fabric.getHeight(), t /= Math.max(r, n), i = new h.default.Image(this._fabric.toCanvasElement()).scale(t), n = (r = (new h.default.StaticCanvas).setDimensions({
                            width: r * t,
                            height: n * t
                        }).setBackgroundImage(i)).toDataURL(), (0, d.clearCanvas)(r), this._isConverting = !1, e ? Buffer.from(n.replace(/^data:image\/(png);base64,/, ""), "base64") : n
                    }
                }, {
                    key: "convertToLifelike",
                    value: function(t, e, i, r) {
                        if (void 0 === t && (t = 0), void 0 === e && (e = !1), void 0 === i && (i = !1), void 0 === r && (r = 1), this._isConverting || this._skipFilters) return "";
                        if (this._printColorMode || this._debounceDetectPrintColorMode(), this._fabric._objects.some((function(t) {
                                var e;
                                return (null == (e = t.filters) ? void 0 : e.length) > u.default.FILTER_INDEX.PRINT && (null == (e = t.filters[u.default.FILTER_INDEX.PRINT]) ? void 0 : e.type) === u.default.FILTER_TYPE.UNDERBASE
                            }))) return this.convertToPreview();
                        if (!(r = this.convertToPreview({
                                toCanvas: !0,
                                multiplier: r
                            }))) return "";
                        if (!(r = new h.default.Image(r)).width || !r.height) return "";
                        var n = r.width,
                            o = r.height;
                        (r = 1 != (t = 0 < t ? t / Math.max(n, o) : 1) && r.scale ? r.scale(t) : r).filters.push(new h.default.Image.filters.Underbase({
                            useColorMix: !0
                        })), r.applyFilters(), n = (new h.default.StaticCanvas).setDimensions({
                            width: n * t,
                            height: o * t
                        }).setBackgroundImage(r);
                        return i ? n : (o = n.toDataURL(), (0, d.clearCanvas)(n), r = null, e ? Buffer.from(o.replace(/^data:image\/(png);base64,/, ""), "base64") : o)
                    }
                }, {
                    key: "clearFabric",
                    value: function() {
                        var t = this;
                        this._cleanupTimeout || (this._cleanupTimeout = setTimeout((function() {
                            t._skipFilters = !0, t._isConverting = !0, clearInterval(t._cleanupInterval), clearTimeout(t._printColorModeTimeout), clearTimeout(t._drawPatternTimeout), (0, d.clearCanvas)(t._fabric), clearTimeout(t._cleanupTimeout)
                        }), 4e3))
                    }
                }, {
                    key: "_getDefaultOptions",
                    value: function() {
                        return {
                            hasControls: !0,
                            hasBorders: !0,
                            hasRotatingPoint: !0,
                            visible: !0,
                            selectable: this._isSelectable(),
                            evented: this._isSelectable(),
                            transparentCorners: !1,
                            centeredScaling: !0,
                            centeredRotation: !0,
                            cornerStyle: "circle",
                            padding: 0,
                            cornerSize: (0, p.isTouchDevice)() ? 16 : 10,
                            rotatingPointOffset: 20,
                            borderColor: "#4affff",
                            cornerColor: "#4affff",
                            cornerStrokeColor: "#4affff",
                            borderDashArray: [3, 3],
                            minScaleLimit: "undefined" == typeof window || this.opts.isReadOnly ? .002 : .01,
                            snapAngle: 1,
                            snapThreshold: 0,
                            lockScalingFlip: !0,
                            lockUniScaling: !1,
                            uniScaleTransform: !1,
                            lockSkewingX: !0,
                            lockSkewingY: !0,
                            strokeWidth: 0,
                            strokeLineJoin: "round",
                            strokeLineCap: "round",
                            filters: [null, null, null, null],
                            resizeFilter: this._shouldEnableResizeFilter() ? new h.default.Image.filters.Resize({
                                resizeType: "lanczos",
                                lanczosLobes: 2
                            }) : null,
                            minimumScaleTrigger: .6,
                            disableCentering: !1
                        }
                    }
                }, {
                    key: "_shouldEnableResizeFilter",
                    value: function() {
                        var t = !!h.default.window.navigator && /MSIE|Trident|Edge/.test(h.default.window.navigator.userAgent);
                        return "undefined" != typeof window && !t && !(0, d.isIOS)(h.default.window) && (!this.opts.isReadOnly || this.opts.isForceResizeFilter)
                    }
                }, {
                    key: "_getDefaultControls",
                    value: function(t) {
                        var e = !this.opts.disableScaling && !(!t || t.type !== u.default.LAYER_TYPE.CLIPART);
                        return {
                            tl: t = (null == t ? void 0 : t.object) !== u.default.SUB_TYPE.MOCKUP_MAKER_MOCKUP,
                            tr: t && !this.callbacks.onLayerRemoved,
                            br: t,
                            bl: t,
                            mtr: t,
                            ml: e,
                            mt: e,
                            mr: e,
                            mb: e
                        }
                    }
                }, {
                    key: "_setDefaultControlOptions",
                    value: function(t) {
                        t && t.controls && (t.controls.mtr.offsetY = -23)
                    }
                }, {
                    key: "setUniScaleLock",
                    value: function(t) {
                        var e = this.getActiveLayerId();
                        e = !t || !t.id || t.id !== e || t.lockUniScaling;
                        this._fabric.uniformScaling = e, t && (this._fabric.uniScaleKey = t.isEmbroidery || t.layerType !== u.default.LAYER_TYPE.CLIPART ? "" : "shiftKey", t.setControlsVisibility({
                            mb: !e,
                            ml: !e,
                            mr: !e,
                            mt: !e
                        }))
                    }
                }, {
                    key: "toggleZoom",
                    value: function(t) {
                        this._embroideryOutline && this._embroideryOutline.bringToFront();
                        var e = this._getAdjustedZoom(t),
                            i = new h.default.Point(this.position.left + this.position.width / 2, this.position.top + this.position.height / 2),
                            r = (o = new h.default.Point(this.position.areaWidth / 2, this.position.areaHeight / 2)).x - i.x,
                            n = o.y - i.y,
                            o = (i = (r += this._adjustPanXIfNeeded(t, e), t ? i : o), this._fabric.zoomToPoint(i, e), this._fabric.getElement());
                        t ? (this._fabric.viewportTransform[4] += r, this._fabric.viewportTransform[5] += n, this._fabric.panX = r, this._fabric.panY = n, o && o.style.backgroundImage && (o.style.backgroundSize = 100 * e + "%", o.style.backgroundPositionX = this._fabric.viewportTransform[4] + "px", o.style.backgroundPositionY = this._fabric.viewportTransform[5] + "px", o.style.backgroundRepeatX = "no-repeat", o.style.backgroundRepeatY = "no-repeat")) : (this._fabric.viewportTransform[4] = 0, this._fabric.viewportTransform[5] = 0, this._fabric.panX = null, this._fabric.panY = null, o && o.style.backgroundImage && (o.style.backgroundSize = "", o.style.backgroundPositionX = "", o.style.backgroundPositionY = "", o.style.backgroundRepeatX = "", o.style.backgroundRepeatY = "")), this._fabric.requestRenderAll(), this._fabric.fire("canvas:zoomed"), this._fabric.fire("mouse:up"), this._fabric.getObjects().forEach((function(t) {
                            t.setCoords()
                        }))
                    }
                }, {
                    key: "_calcZoom",
                    value: function(t, e) {
                        if (!t) return 1;
                        var i = this._fabric.getZoom(),
                            r = 1;
                        e = e || 0, r = this.position.width >= this.position.height ? this.position.areaWidth / (this.position.width + u.default.ZOOM_MARGIN + e) : this.position.areaHeight / (this.position.height + u.default.ZOOM_MARGIN + e);
                        return i * (t ? r : 1 / r)
                    }
                }, {
                    key: "_getAdjustedZoom",
                    value: function(t) {
                        var e = 0,
                            i = this._calcZoom(t, 0),
                            r = Math.round(this.position.width * i);
                        r = this.position.areaWidth - r;
                        return t && this._isZoomPanAdjustmentNeeded(t) && r <= this._getActionsContainerSize().width && (r = 10 * Math.ceil((this._getActionsContainerSize().width - r) / 10), i = this._calcZoom(t, e += r)), i
                    }
                }, {
                    key: "_adjustPanXIfNeeded",
                    value: function(t, e) {
                        return this._isZoomPanAdjustmentNeeded(t) ? (t = Math.round(this.position.width * e), e = (this.position.areaWidth - t) / 2, (this.position.areaWidth - t - this._getActionsContainerSize().width) / 2 - e) : 0
                    }
                }, {
                    key: "_isZoomPanAdjustmentNeeded",
                    value: function(t) {
                        t = this._calcZoom(t);
                        var e, i, r = h.default.window.innerWidth < u.default.MOBILE_BREAKPOINT_DOTS;
                        if (this.position.height >= this.position.width) {
                            if (r) return !0;
                            e = (this.position.areaWidth - this.position.width * t) / 2, i = this._getActionsContainerSize().width
                        } else e = (this.position.areaHeight - this.position.height * t) / 2, i = this._getActionsContainerSize().height;
                        return e < i
                    }
                }, {
                    key: "isCropState",
                    value: function(t) {
                        return f.default.isCropState(this, t)
                    }
                }, {
                    key: "toggleCropState",
                    value: function(t, e, i) {
                        this._activeCropStateLayerId = this.isCropState() ? null : t, this._fabric._isCropState = this.isCropState(), f.default.afterCropToggleActions(this, t, e, i)
                    }
                }, {
                    key: "manageLayerLock",
                    value: function(t, e) {
                        t.isLockedAndSelectable ? (e.selectable = !0, e.disableRemove = !0, e.hasControls = !1, e.lockMovementY = !0, e.lockMovementX = !0) : t.isGroupLocked ? (e.evented = !t.isGroupLocked, e.disableRemove = t.isGroupLocked, e.hasControls = !t.isGroupLocked, e.isGroupLocked = t.isGroupLocked) : (e.evented = !t.isLocked, e.disableRemove = t.isLocked, e.hasControls = !t.isLocked, e.isGroupLocked = !1)
                    }
                }, {
                    key: "setAnimationLock",
                    value: function(t, e, i) {
                        t.isAnimationLocked = e ? e.isAnimationLocked : i, t.evented = e ? e.evented : !i, t.disableRemove = e ? e.disableRemove : i, t.hasControls = e ? e.hasControls : !i
                    }
                }, {
                    key: "onMouseDoubleClick",
                    value: function(t) {
                        (t = (null == t ? void 0 : t.target) || this.getActiveObject()) && "undefined" != typeof window && ((t.type === u.default.LAYER_TYPE.TEXTBOX || "image" === t.type && t.originalType === u.default.LAYER_TYPE.TEXTBOX) && this.textboxLayerDoubleClick(t.id), t.type === u.default.LAYER_TYPE.CROP && (t = this.getImgElementBeingCroppedById(t.id)), f.default.canObjBeCropped(this, t) && t.layerType && f.default.checkLayerTypeForCrop(t.layerType) && !t.isOriginalUrlOverride && this.toggleCropState(t.id))
                    }
                }, {
                    key: "textboxLayerDoubleClick",
                    value: function(t) {
                        if (this.callbacks.onTextboxLayerDoubleClick) return this.callbacks.onTextboxLayerDoubleClick(t)
                    }
                }, {
                    key: "updateLinkedBaseLayerPosition",
                    value: function(t, e, i, r, n, o, a, s, l) {
                        return f.default.updateLinkedBaseLayerPosition(t, e, i, r, n, o, this.position, a, s, l)
                    }
                }, {
                    key: "getImgElementBeingCroppedById",
                    value: function(t) {
                        return f.default.getImgElementBeingCroppedById(this, t)
                    }
                }, {
                    key: "calcCropOffset",
                    value: function(t) {
                        return f.default.calcCropOffset(this, t)
                    }
                }, {
                    key: "restrictCropLayerMoving",
                    value: function(t, e, i, r) {
                        f.default.restrictCropLayerMoving(this, t, e, i, r)
                    }
                }, {
                    key: "_getActionsContainerSize",
                    value: function() {
                        var t = $(".generator-mockup__actions--zoom-measure"),
                            e = 0,
                            i = 0;
                        return t && t.length && t[0].offsetWidth && (e = t[0].offsetWidth + u.default.ACTION_BUTTON_MARGIN, i = t[0].offsetHeight + u.default.ACTION_BUTTON_MARGIN), {
                            width: e,
                            height: i
                        }
                    }
                }, {
                    key: "_isLifelikeForCurrentVariant",
                    value: function() {
                        return "undefined" != typeof window && this._useLifelike() && this.shouldShowLiveLifelike()
                    }
                }, {
                    key: "previewAnimations",
                    value: function() {
                        (0, _.default)(this, h.default)
                    }
                }, {
                    key: "updatePatternAnimation",
                    value: function(t) {
                        this._fabric.getObjects().filter((function(e) {
                            return e.patternId === t.id
                        })).forEach((function(e) {
                            e.animation = t.animation
                        }))
                    }
                }, {
                    key: "updateCroppedImageAnimation",
                    value: function(t, e) {
                        t = f.default.getCropElementById(this, t.id) || {}, e.animation ? t.animation = e.animation : t.animation && delete t.animation
                    }
                }, {
                    key: "setCustomClipMaskMode",
                    value: function(t) {
                        t && t.length && t.some((function(t) {
                            return t.groupType === u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE
                        })) ? this.customMaskMode = u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE : this.customMaskMode = null
                    }
                }, {
                    key: "getTransparencyInfo",
                    value: (e = (0, o.default)(n.default.mark((function t(e) {
                        var i, r, o, a, s, l, c, f, d, p, g, v, m = this;
                        return n.default.wrap((function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return s = (a = void 0 === e ? {} : e).imageSizeMultiplier, i = void 0 === s ? 1 : s, s = a.transparentMaxAlpha, r = void 0 === s ? 0 : s, s = a.solidMinAlpha, o = void 0 === s ? 255 : s, t.next = 3, new Promise((function(t) {
                                        h.default.Image.fromURL(m.convertToPreview({
                                            multiplier: i
                                        }), (function(e) {
                                            var r = new h.default.StaticCanvas(null, {
                                                width: m.position.areaWidth * i,
                                                height: m.position.areaHeight * i
                                            });
                                            e.set({
                                                left: m.position.left * i,
                                                top: m.position.top * i
                                            }), t(r.add(e).renderAll())
                                        }))
                                    }));
                                case 3:
                                    for (a = t.sent, s = this.customMaskMode === u.default.LAYER_GROUP_TYPE.INSIDE_LABEL_TEMPLATE && this._customMaskObject, c = s ? this._customMaskObject : this.position, l = a.toCanvasElement().getContext("2d").getImageData(c.left * i, c.top * i, c.width * i, c.height * i), c = l.data.length / 4, g = p = d = f = 0; g < l.data.length; g += 4)(v = l.data[g + 3]) <= r ? f++ : v < o ? d++ : p++;
                                    return t.abrupt("return", {
                                        totalPixels: c,
                                        transparentPixelsCount: f,
                                        semiTransparentPixelsCount: d,
                                        solidPixelsCount: p
                                    });
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t, this)
                    }))), function(t) {
                        return e.apply(this, arguments)
                    })
                }], [{
                    key: "Hash",
                    value: function(t) {
                        void 0 === t && (t = "");
                        var e = 0;
                        if (!(t = String(t)).length) return e;
                        for (var i = 0, r = t.length; i < r; i++) e = (e << 5) - e + t.charCodeAt(i), e &= e;
                        return "H" + String(e).replace("-", "0")
                    }
                }, {
                    key: "HALFFIX",
                    value: function(t) {
                        var e = String((0, d.NUMFIX)(t).toString().split(".")[1]),
                            i = Number(e);
                        return 0 !== e.indexOf("0") && t !== Math.round((0, d.NUMFIX)(t)) && 5 === i ? t + -.5 : t
                    }
                }, {
                    key: "NUMDIFF",
                    value: function(t, e) {
                        return 100 * Math.abs((t - e) / ((t + e) / 2))
                    }
                }, {
                    key: "imageFromCache",
                    value: function(e, i, r, n, o, a) {
                        if (!(t.DEPENDENCIES.Url || "undefined" != typeof window && window.isWebWorker)) throw new Error("PFCanvas - Url not set!");
                        if (!e) return i(null);
                        if ("undefined" != typeof window && !(e instanceof Blob) && 0 === e.toLowerCase().indexOf("http")) {
                            try {
                                e = e.replace(/=$/, "%3D"), "undefined" != typeof window && window.isWebWorker ? (e = new URL(e)).searchParams.get("X-Amz-Signature") || e.searchParams.get("v") !== u.default.IMAGE_CACHE_VERSION && e.searchParams.set("v", u.default.IMAGE_CACHE_VERSION) : (e = new t.DEPENDENCIES.Url(e)).query["X-Amz-Signature"] || String(e.query.v).indexOf(u.default.IMAGE_CACHE_VERSION) < 0 && (e.query.v = (e.query.v || "") + "-" + u.default.IMAGE_CACHE_VERSION)
                            } catch (s) {
                                console.error(s)
                            }
                            e = e.toString()
                        }
                        if ("undefined" == typeof window) {
                            var s;
                            if (t.IMAGE_CACHE.hasOwnProperty(e) && t.IMAGE_CACHE[e] && !r) return s = t.IMAGE_CACHE[e], s = h.default.util.object.clone(s), i(s);
                            t.IMAGE_CACHE_CALLBACKS.hasOwnProperty(e) && t.IMAGE_CACHE_CALLBACKS[e] && !r ? t.IMAGE_CACHE_CALLBACKS[e].push(i) : h.default.Image.fromURL(e, (function(s) {
                                if (!t.DEPENDENCIES.DrawResize) throw new Error("PFCanvas - resizer not set!");
                                t.DEPENDENCIES.DrawResize(s, h.default, n, o, a, (function(s) {
                                    var l = e + (s.drawResized ? o.position.width + "-" + o.position.height : "");
                                    t.IMAGE_CACHE_CALLBACKS[l] = [], s = s && s._originalElement && s._originalElement.naturalWidth ? s : null, r || (t.IMAGE_CACHE[l] = s, t.IMAGE_CACHE_CALLBACKS[l].map((function(e) {
                                        t.imageFromCache(l, e, r, n, o, a)
                                    }))), i(s), delete t.IMAGE_CACHE_CALLBACKS[l]
                                }))
                            }), {
                                crossOrigin: "anonymous"
                            })
                        } else {
                            var l = e;
                            t.IMAGE_CACHE.hasOwnProperty(e) && t.IMAGE_CACHE[e] && (l = t.IMAGE_CACHE[e]), h.default.Image.fromURL(l, (function(r) {
                                setTimeout((function() {
                                    if (t.isInvalidImage(r)) return i(null);
                                    l === e && ("undefined" != typeof window && window.isWebWorker ? r._element.convertToBlob({
                                        type: "image/png",
                                        quality: 1
                                    }).then((function(i) {
                                        i && (t.IMAGE_CACHE[e] = i)
                                    })) : (n = r.toDataURL()) && (t.IMAGE_CACHE[e] = n));
                                    var n = h.default.util.object.clone(r);
                                    return i(n)
                                }), t.isInvalidImage(r) ? 50 : 0)
                            }), {
                                crossOrigin: "anonymous"
                            })
                        }
                    }
                }, {
                    key: "backgroundFromCache",
                    value: function(e, i, r, n) {
                        void 0 === n && (n = !1);
                        var o, a = "";
                        for (o in e) e.hasOwnProperty(o) && (a += String(o) + "-" + String(e[o]) + "--");
                        if (a += "w" + String(i.width) + "h" + String(i.height), t.BACKGROUND_CACHE.hasOwnProperty(a) && t.BACKGROUND_CACHE[a] && "data:," !== t.BACKGROUND_CACHE[a] && !n) return r(t.BACKGROUND_CACHE[a]);
                        var s, l, c = {},
                            u = (n = Object.keys(e).length, 0),
                            f = function(e) {
                                if (!(++u < e)) {
                                    if (Object.keys(c).length < 1) return r(null);
                                    for (var n = new h.default.StaticCanvas(null, {
                                            renderOnAddRemove: !1
                                        }), o = ["image", "shadow", "base"], s = 0, l = o.length; s < l; s++) {
                                        var f = o[s];
                                        c.hasOwnProperty(f) && (f = c[f]) && "string" != typeof f && (f.scaleToWidth(i.width), n.add(f))
                                    }
                                    if (n.setDimensions({
                                            width: i.width,
                                            height: i.height
                                        }), "undefined" == typeof window || !window.isWebWorker) return e = n.toDataURL(), (0, d.clearCanvas)(n), e ? (t.BACKGROUND_CACHE[a] = e, r(e)) : r(null);
                                    n.lowerCanvasEl.convertToBlob((function(e) {
                                        return (0, d.clearCanvas)(n), e ? (t.BACKGROUND_CACHE[a] = e, r(e)) : r(null)
                                    }))
                                }
                            }.bind(this, n);
                        for (s in e) e.hasOwnProperty(s) && ((l = e[s]) ? t.imageFromCache(l, function(t, e, i) {
                            if (!i) {
                                if ("undefined" != typeof window) throw new Error("Couldnt imageFromCache " + t);
                                console.warn("Couldnt imageFromCache", t)
                            }
                            c[e] = i, f()
                        }.bind(null, l, s)) : f())
                    }
                }, {
                    key: "loadTTFFont",
                    value: function(e, i, r, n) {
                        if (!t.DEPENDENCIES.Fonts) throw new Error("PFCanvas - Fonts not set!");
                        if (t.DEPENDENCIES.Fonts.LOADED_TTF_FONTS.hasOwnProperty(e)) return void 0 !== n && n && n(), !0;
                        if (!i && t.DEPENDENCIES.Fonts.FONTS_TTF_URLS.hasOwnProperty(e) && (i = t.DEPENDENCIES.Fonts.FONTS_TTF_URLS[e]), !t.DEPENDENCIES.Fonts.FONTS_TTF_URLS.hasOwnProperty(e) && !i) return !1;
                        if (r = r || t.DEPENDENCIES.Fonts.FONTS_TTF_URLS[e] || i, t.DEPENDENCIES.TTFFontLoader) return t.DEPENDENCIES.TTFFontLoader(i, e, r, t.DEPENDENCIES.Fonts, h.default, c, n), !0;
                        throw new Error("PFCanvas - TTFFontLoader not set!")
                    }
                }, {
                    key: "calculateTextboxPositions",
                    value: function(e, i) {
                        var r = e.hasOwnProperty("toArray") ? e.toArray() : e,
                            n = this.getTextboxConfigFromLayerData(r),
                            o = e.position.width,
                            a = e.position.height,
                            s = e.position.left,
                            l = e.position.left + e.position.width,
                            c = t.getSupportedCharacters(r);
                        (c = new h.default.PFTextbox(c, n)).calcArcDimensions(), n = c.getCustomSvgProperties(r, !0);
                        if (i && null == e.resizeToPercent && e.isCustomizable && (e.resizeToPercent = o / e.position.areaWidth * 100), null !== e.resizeToPercent && e.isCustomizable) {
                            r = e.size / u.default.DEFAULT_TEXT_SIZE;
                            var f = c.subType === u.default.LAYER_TYPE.TEXTBOX_PNG;
                            f = t.getTextboxCustomizedWidth(e, f) * r;
                            c.width * c.scaleX * n.scaleBackRatio < f && (n.width = f)
                        } else if (e.generatorOptions && e.generatorOptions.shouldUseOriginalAreaSize && e.generatorOptions.originalPosition && e.getType() === u.default.LAYER_TYPE.TEXTBOX) {
                            if (Math.abs(n.height - e.generatorOptions.originalPosition.height) > u.default.CUSTOMIZER_HEIGHT_DIFF_LIMIT) return r = n.height > e.generatorOptions.originalPosition.height ? -1 : 1, e.size += u.default.CUSTOMIZER_FONT_SIZE_ADJUST_STEP * r, void t.calculateTextboxPositions(e, i);
                            c = e.generatorOptions.originalPosition.width, n.width > c ? (t.DEPENDENCIES.Fonts.CUSTOMIZED_TEXT_SIZES[e.uniqueId] = e.size * c / n.width, n.width = c) : t.DEPENDENCIES.Fonts.CUSTOMIZED_TEXT_SIZES[e.uniqueId] && delete t.DEPENDENCIES.Fonts.CUSTOMIZED_TEXT_SIZES[e.uniqueId]
                        }
                        e.position.width = n.width, e.position.height = n.height, e.position.top += (a - e.position.height) / 2, e.alignment === u.default.TEXT_ALIGNMENT.ABSOLUTE_RIGHT ? e.position.left = l - e.position.width : e.alignment === u.default.TEXT_ALIGNMENT.ABSOLUTE_LEFT ? e.position.left = s : e.position.left += (o - e.position.width) / 2
                    }
                }, {
                    key: "getTextboxCustomizedWidth",
                    value: function(t, e, i) {
                        if (t.resizeToPercent && t.isCustomizable) return e = e ? i ? u.default.PNG_TEXT_LIFELIKE_MULTIPLIER : u.default.PNG_TEXT_MULTIPLIER : 1, i = t.size / u.default.DEFAULT_TEXT_SIZE, t.position.areaWidth * t.resizeToPercent / 100 / i * e
                    }
                }, {
                    key: "getTextboxConfigFromLayerData",
                    value: function(t) {
                        var e = parseFloat(parseFloat(t.strokeOffset).toFixed(2)),
                            i = parseFloat(parseFloat(t.strokeWeight).toFixed(2)),
                            r = "undefined" == typeof window ? 0 : t.position.rotation,
                            n = (r = parseFloat(t.shadowAngle - r).toFixed(1), Math.cos(-r * Math.PI / 180) * t.shadowDistance * u.default.FONT_SIZE_MULTIPLIER);
                        r = Math.sin(-r * Math.PI / 180) * t.shadowDistance * u.default.FONT_SIZE_MULTIPLIER;
                        return {
                            fontFamily: "object" == typeof t.font && t.font.fontKey ? t.font.fontKey : t.font || t.fontKey,
                            fontSize: u.default.DEFAULT_TEXT_SIZE * u.default.FONT_SIZE_MULTIPLIER,
                            textAlign: t.alignment,
                            lineHeight: t.lineHeight,
                            charSpacing: 1e3 * t.letterSpacing,
                            fill: t.color,
                            strokeLineJoin: "round",
                            strokeOffset: e * u.default.FONT_SIZE_MULTIPLIER,
                            strokeWidth: (e + i) * u.default.FONT_SIZE_MULTIPLIER,
                            stroke: t.strokeColor,
                            shadowOffsetX: parseFloat(n.toFixed(h.default.Object.NUM_FRACTION_DIGITS)),
                            shadowOffsetY: parseFloat(r.toFixed(h.default.Object.NUM_FRACTION_DIGITS)),
                            shadowColor: t.shadowColor,
                            arcAngle: t.arcAngle || null
                        }
                    }
                }, {
                    key: "groupSVGElements",
                    value: function(t, e, i) {
                        return t && 1 === t.length ? t[0] : (e && (e.width && e.height ? e.centerPoint = {
                            x: e.width / 2,
                            y: e.height / 2
                        } : (delete e.width, delete e.height)), t = new h.default.PFTextGroup(t, e), void 0 !== i && (t.sourcePath = i), t)
                    }
                }, {
                    key: "getSupportedCharacters",
                    value: function(e) {
                        var i, r, n, o = e.text,
                            a = (e = "object" == typeof e.font && e.font.fontKey ? e.font.fontKey : e.font || e.fontKey, "");
                        if (t.DEPENDENCIES.Fonts.LOADED_TTF_FONTS.hasOwnProperty(e) && t.DEPENDENCIES.Fonts.LOADED_TTF_FONTS[e].supported)
                            for (var s = t.DEPENDENCIES.Fonts.LOADED_TTF_FONTS[e], l = 0; l < o.length; l++) i = s, r = o[l], n = void 0, (n = i.charToGlyph(r)).unicode || (r = r.charCodeAt(0), u.default.CHARCODE_REPLACEMENTS[r] && (n = i.charToGlyph(String.fromCharCode(u.default.CHARCODE_REPLACEMENTS[r])))), n.unicode || /\r|\n/.test(o[l]) ? a += o[l] : a += String.fromCharCode(65533);
                        return a
                    }
                }, {
                    key: "setObjectShadow",
                    value: function(t, e, i) {
                        var r, n;
                        i = i ? u.default.PNG_TEXT_LIFELIKE_MULTIPLIER : u.default.PNG_TEXT_MULTIPLIER;
                        t && e.shadow && e.shadow.color && (n = parseFloat(t.shadowAngle - e.angle).toFixed(1), r = Math.cos(-n * Math.PI / 180) * t.shadowDistance * u.default.FONT_SIZE_MULTIPLIER, n = Math.sin(-n * Math.PI / 180) * t.shadowDistance * u.default.FONT_SIZE_MULTIPLIER, e.subType && e.subType === u.default.LAYER_TYPE.TEXTBOX_PNG && (r *= i, n *= i), e.shadow = new h.default.Shadow({
                            color: t.shadowColor,
                            blur: 0,
                            offsetX: r,
                            offsetY: n
                        }))
                    }
                }, {
                    key: "setDependencies",
                    value: function(e) {
                        t.DEPENDENCIES = Object.assign(t.DEPENDENCIES, e)
                    }
                }, {
                    key: "setFontDependencies",
                    value: function(e) {
                        t.DEPENDENCIES.Fonts && t.DEPENDENCIES.TEXT2SVG.DEPENDENCIES.Fonts || (!t.DEPENDENCIES.Fonts && e && (e ? t.setDependencies({
                            Fonts: e
                        }) : console.error("Canvas font object not given for PFCanvas dependency")), t.DEPENDENCIES.TEXT2SVG.DEPENDENCIES.Fonts || t.DEPENDENCIES.TEXT2SVG.setDependencies({
                            Fonts: t.DEPENDENCIES.Fonts
                        }))
                    }
                }, {
                    key: "convertToLifelikeColor",
                    value: function(t) {
                        if (!t) return t;
                        t = (t = new h.default.Color(t).toRgb()).substring(4, t.length - 1).split(",").map((function(t) {
                            return Number(t)
                        }));
                        var e = new h.default.Image.filters.Underbase({
                                useColorMix: !0
                            }),
                            i = (o = e.getColorSource())[0],
                            r = o[1],
                            n = o[2],
                            o = (o[3], e.mixColors(t[0], i));
                        i = e.mixColors(t[1], r), r = e.mixColors(t[2], n);
                        return "#" + Math.round(o).toString(16) + Math.round(i).toString(16) + Math.round(r).toString(16)
                    }
                }, {
                    key: "isInvalidImage",
                    value: function(t) {
                        return !("undefined" != typeof window && window.isWebWorker || t && t._originalElement && t._originalElement.naturalWidth && t._originalElement.width)
                    }
                }]), t
            }();
            e.default = E, (0, l.default)(E, "VERSION", "4.23.8"), (0, l.default)(E, "VERSION_STRING", "pf-canvas: v4.23.8"), (0, l.default)(E, "VERSION_PRINTED", !1), (0, l.default)(E, "IMAGE_CACHE", {}), (0, l.default)(E, "IMAGE_CACHE_CALLBACKS", {}), (0, l.default)(E, "BACKGROUND_CACHE", {}), (0, l.default)(E, "LIFELIKE_CACHE", {}), (0, l.default)(E, "TEXT_IMAGE_CALLBACKS", {}), (0, l.default)(E, "LayerIdCounter", 1), (0, l.default)(E, "DEPENDENCIES", {
                Url: null,
                Fonts: null,
                TEXT2SVG: null,
                TTFFontLoader: null
            })
        },
        87356: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(56690))),
                o = r(i(89728)),
                a = r(i(38416)),
                s = function() {
                    function t() {
                        (0, n.default)(this, t)
                    }
                    return (0, o.default)(t, null, [{
                        key: "realignTexts",
                        value: function(e, i) {
                            var r;
                            1 !== e.items.length && (e.items.reduce((function(e, i) {
                                return e < (i = t.getBBoxSafely(i).width) ? i : e
                            }), -9999), r = e.getBBox().width, "left" !== i && e.items.forEach((function(t) {
                                var e = t.getBBox();
                                "undefined" != typeof Element && t instanceof Element ? t.setAttributeNS(null, "transform", "translate(" + (r - e.width) / ("right" === i ? 1 : 2) + ",0)" + t.getAttributeNS(null, "transform")) : t.transform("t" + (r - e.width) / ("right" === i ? 1 : 2) + ",0...")
                            })))
                        }
                    }, {
                        key: "setFillColor",
                        value: function(t, e, i) {
                            e.items.forEach((function(t) {
                                t.attr ? t.attr("fill", i) : t.setAttribute ? t.setAttribute("fill", i) : console.warn("Cannot set fill color!")
                            })), t.canvas.setAttribute("fill", i)
                        }
                    }, {
                        key: "getSetBBoxWH",
                        value: function(t) {
                            for (var e = [], i = [], r = [], n = [], o = t.items.length; o--;) {
                                var a = "undefined" != typeof Node && t.items[o] instanceof Node ? t.items[o].realBBox : t.items[o].getBBox();
                                e.push(a.x), i.push(a.y), r.push(a.x + a.width), n.push(a.y + a.height)
                            }
                            return e = Math.min.apply(0, e), i = Math.min.apply(0, i), {
                                width: (r = Math.max.apply(0, r)) - e,
                                height: (n = Math.max.apply(0, n)) - i
                            }
                        }
                    }, {
                        key: "getBBoxSafely",
                        value: function(e) {
                            var i = {
                                    width: 0,
                                    height: 0,
                                    x: 0,
                                    y: 0
                                },
                                r = "undefined" != typeof Element && e instanceof Element,
                                n = (r ? e : e.node).getBoundingClientRect(),
                                o = (i.width = n.width, i.height = n.height, "undefined" != typeof window ? window : void 0 !== t.DEPENDENCIES.Raphael._g ? t.DEPENDENCIES.Raphael._g.win : {
                                    pageXOffset: 0,
                                    pageYOffset: 0
                                });
                            return void 0 !== n.x && void 0 !== n.y ? (i.x = n.x + o.pageXOffset, i.y = n.y + o.pageYOffset) : void 0 !== n.left && void 0 !== n.top ? (i.x = n.left + o.pageXOffset, i.y = n.top + o.pageYOffset) : (n = r ? e.realBBox : e.getBBox(), i.x = n.x, i.y = n.y, i.width = n.width, i.height = n.height), i
                        }
                    }, {
                        key: "getPaperFont",
                        value: function(t, e) {
                            return e = "object" == typeof e.font && e.font.name ? e.font.name : e.fontName || e.font, (t = t.getFont(e)) || console.warn("Font not preloaded:", e), t
                        }
                    }, {
                        key: "drawText",
                        value: function(e, i, r, n, o, a, s) {
                            return n *= a, a = t.getPaperFont(e, i), (e = e.print(0, 0, r, a, 1, "baseline", i.letterSpacing)).attr("stroke-width", 0), e.node.removeAttribute("fill"), e.node.setAttribute("fill-rule", "nonzero"), r = e.getBBox(), e.scale(o, o, 0, 0), s = !1 === s ? r.y : s, e.translate(-r.x, n - s), e
                        }
                    }, {
                        key: "drawAndGetTextSet",
                        value: function(e, i, r, n) {
                            var o = i.text.trim().split("\n"),
                                a = i.lineHeight || t.getDefaultLineHeight(t.getPaperFont(e, i)),
                                s = r ? i.size / (r.originalRatio || 1) : i.size,
                                l = e.set(),
                                h = !1;
                            return o.forEach((function(r, o) {
                                var c, u = t.getSavedPath(i, r);
                                n && null !== u ? (c = t.drawSimplePath(e, u, s, o * a, h), !1 === h && (h = u.bBox.y), l.items.push(c), l.length++) : (u = {
                                    path: (c = t.drawText(e, i, r, o, s, a, h)).node.getAttribute("d"),
                                    bBox: c.getBBox(!0)
                                }, t.savePath(i, r, u), l.push(c), !1 === h && (h = u.bBox.y))
                            })), l
                        }
                    }, {
                        key: "getDefaultLineHeight",
                        value: function(t) {
                            var e = t.face["units-per-em"];
                            t = t.face.bbox.split(" ");
                            if (!e) return 1;
                            if (4 !== t.length) return 1;
                            var i = t[1];
                            return (t[3] - i) / e
                        }
                    }, {
                        key: "getSavedPath",
                        value: function(e, i) {
                            return (e = t.getSavedPathKey(e, i)) && t.SAVED_PATHS.hasOwnProperty(e) ? t.SAVED_PATHS[e] : null
                        }
                    }, {
                        key: "getSavedPathKey",
                        value: function(t, e) {
                            var i = "object" == typeof t.font && t.font.fontKey ? t.font.fontKey : t.font || t.fontKey;
                            return e ? e + "-" + i + "-" + t.letterSpacing : null
                        }
                    }, {
                        key: "savePath",
                        value: function(e, i, r) {
                            (e = t.getSavedPathKey(e, i)) && (t.SAVED_PATHS[e] = r)
                        }
                    }, {
                        key: "drawSimplePath",
                        value: function(e, i, r, n, o) {
                            var a = t.createPath(e.canvas, i.path),
                                s = (o = !1 === o ? i.bBox.y : o, a.setAttributeNS(null, "transform", "scale(" + r + "," + r + ") translate(" + -i.bBox.x + "," + (-o + n) + ")"), {});
                            return s.x = 0, s.y = (i.bBox.y - o + n) * r, s.width = i.bBox.width * r, s.height = i.bBox.height * r, a.realBBox = s, a.firstLineOffset = o, e.canvas.appendChild(a), a
                        }
                    }, {
                        key: "createPath",
                        value: function(t, e) {
                            return (t = document.createElementNS(t.namespaceURI, "path")).setAttributeNS(null, "d", e), t
                        }
                    }, {
                        key: "TextCalculator",
                        value: function(e, i) {
                            if (e.hasOwnProperty("isTextLayer") ? e.isTextLayer() : e.font) {
                                var r = e.position;
                                if (!t.DEPENDENCIES.Raphael) throw new Error("TEXT2SVG - Raphael not set!");
                                var n = new t.DEPENDENCIES.Raphael(0, 0, 1, 1),
                                    o = (n.canvas.removeAttribute("xmlns"), n.canvas.removeAttribute("xmlns:xlink"), n.canvas.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "http://www.w3.org/2000/svg"), n.canvas.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xlink", "http://www.w3.org/1999/xlink"), "object" == typeof e.font && e.font.fontKey ? e.font.fontKey : e.font),
                                    a = ("object" == typeof e.font && e.font.fontPath ? e.font : e).fontPath;
                                o = "undefined" != typeof window ? o : a;
                                if (!t.DEPENDENCIES.JSFontLoader) throw new Error("PFTEXT2SVG - JSFontLoader not set!");
                                t.DEPENDENCIES.JSFontLoader([o], 0, t, (function() {
                                    var o = t.drawAndGetTextSet(n, e, r, !1),
                                        a = t.getSetBBoxWH(o);
                                    if (n.canvas.setAttribute("viewbox", "0 0 " + a.width.toString() + " " + a.height.toString()), n.canvas.setAttribute("width", e.position.width.toString()), n.canvas.setAttribute("height", e.position.height.toString()), n.canvas.setAttribute("preserveAspectRatio", "xMidYMid meet"), t.realignTexts(o, e.alignment), t.setFillColor(n, o, e.color), void 0 !== i && i) return i(n, a);
                                    o = a.width, a = a.height;
                                    var s, l, h = (null != e.resizeToPercent && e.isCustomizable ? (o = e.originalPosition.areaWidth * e.resizeToPercent / 100, (c = e.originalPosition.areaHeight * e.resizeToPercent / 100) < a && (a = c)) : e.generatorOptions && e.generatorOptions.shouldUseOriginalAreaSize && e.generatorOptions.originalPosition && (c = o, s = a, h = e.generatorOptions.originalPosition.width, l = e.generatorOptions.originalPosition.height, o = c * (l = Math.min(l / s, h / c)), a = s * l), e.position.width),
                                        c = e.position.height;
                                    e.position.width = o, e.position.height = a, e.position.left += h / 2 - e.position.width / 2, e.position.top += c / 2 - e.position.height / 2
                                }))
                            } else console.error(dlang("generator", "Not a text layer"))
                        }
                    }, {
                        key: "setDependencies",
                        value: function(e) {
                            t.DEPENDENCIES = Object.assign(t.DEPENDENCIES, e), e && e.Raphael && "undefined" != typeof window && (window.Raphael = e.Raphael)
                        }
                    }]), t
                }();
            e.default = s, (0, a.default)(s, "SAVED_PATHS", {}), (0, a.default)(s, "DEPENDENCIES", {
                Raphael: null,
                Fonts: null,
                JSFontLoader: null
            })
        },
        67633: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.HELPER_WORKER_TYPES = void 0;
            e.HELPER_WORKER_TYPES = {
                LIFE_LIKE_CALCULATION: "LIFE_LIKE_CALCULATION",
                CLOSE: "CLOSE"
            }
        },
        50744: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.detectPrintColorMode = function(t) {
                    var e = t.imageData,
                        i = t.productColors,
                        r = t.colorCheck,
                        o = t.singleColor,
                        a = t.isWebWorker,
                        s = t.fabric;
                    if (!a && "undefined" == typeof window) return console.error("detectPrintColorMode should never be called in backend canvas! (We set color mode manually)"), [];
                    if (!e && !o && !a) return console.error("detectPrintColorMode no canvas context!"), [];
                    for (var l = {}, h = function(t) {
                            t = t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (function(t, e, i, r) {
                                return [e, e, i, i, r, r].join("")
                            }));
                            var e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);
                            if (e) return {
                                r: parseInt(e[1], 16),
                                g: parseInt(e[2], 16),
                                b: parseInt(e[3], 16)
                            };
                            throw new Error("Invalid hex! " + String(t))
                        }, c = function(t) {
                            var e, i = t.r,
                                r = t.g,
                                n = t.b,
                                o = (t = (i /= 255, r /= 255, n /= 255, Math.max(i, r, n)), Math.min(i, r, n)),
                                a = (t + o) / 2;
                            if (t === o) e = l = 0;
                            else {
                                var s = t - o,
                                    l = .5 < a ? s / (2 - t - o) : s / (t + o);
                                switch (t) {
                                    case i:
                                        e = (r - n) / s + (r < n ? 6 : 0);
                                        break;
                                    case r:
                                        e = (n - i) / s + 2;
                                        break;
                                    case n:
                                        e = (i - r) / s + 4
                                }
                                e /= 6
                            }
                            return {
                                h: e,
                                s: l,
                                l: a
                            }
                        }, u = function(t, e) {
                            return (Math.max(t, e) + .05) / (Math.min(t, e) + .05)
                        }, f = function(t) {
                            return .56 < p(t)
                        }, d = function(t) {
                            return p(t) < .065
                        }, p = function(t) {
                            return .2126 * (t = [t.r, t.g, t.b].map((function(t) {
                                return (t /= 255) <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
                            })))[0] + .7152 * t[1] + .0722 * t[2]
                        }, g = function(t, e) {
                            return e < t ? (e + .05) / (t + .05) : (t + .05) / (e + .05)
                        }, v = function(t) {
                            return Number(t).toFixed(4)
                        }, m = (!a && s && s.document.getElementById("mockup-generator-color-debug") && (s.document.getElementById("mockup-generator-color-debug").innerHTML = ""), !e && o && (t = h(o), e = {
                            data: [t.r, t.g, t.b, 255]
                        }), function(t, o) {
                            for (var m, y, b, x, _, w = n.default.PRINT_COLOR_MODE.UNKNOWN, S = i[t].hex, C = (t = i[t].hex + "__" + i[t].name, h(S || "#fff")), T = {
                                    transparent: 0,
                                    semitransparent: 0,
                                    solid: 0,
                                    solidWhite: 0,
                                    solidBlack: 0,
                                    solidColor: 0,
                                    solidBrighter: 0,
                                    solidLuminance: 0,
                                    solidContrastClose: 0
                                }, E = e.data.length, k = E / 4, O = 0; O < E; O += 4) {
                                var I = e.data[O],
                                    P = e.data[O + 1],
                                    L = e.data[O + 2],
                                    M = e.data[O + 3];
                                ! function(t) {
                                    return t.a < 12.75
                                }({
                                    r: I,
                                    g: P,
                                    b: L,
                                    a: M
                                }) ? function(t) {
                                    return t.r, t.g, t.b, 12.75 <= (t = t.a) && t <= 237.15
                                }({
                                    r: I,
                                    g: P,
                                    b: L,
                                    a: M
                                }) ? T.semitransparent += 1: r ? (m = C, u(p({
                                    r: I,
                                    g: P,
                                    b: L
                                }), p(m)) < 1.5 && (T.solidContrastClose += 1)) : (T.solid += 1, f({
                                    r: I,
                                    g: P,
                                    b: L,
                                    a: M
                                }) ? T.solidWhite += 1 : d({
                                    r: I,
                                    g: P,
                                    b: L,
                                    a: M
                                }) ? T.solidBlack += 1 : T.solidColor += 1, m = C, c({
                                    r: I,
                                    g: P,
                                    b: L
                                }).l >= .5 * c(m).l && (T.solidBrighter += 1), M = C, .85 < g(c({
                                    r: I,
                                    g: P,
                                    b: L
                                }).l, c(M).l) && (T.solidLuminance += 1)): T.transparent += 1
                            }
                            T._solid = T.solid, Object.keys(T).map((function(t, e) {
                                var i = t.includes("solid") && "solid" !== t ? T._solid : k;
                                i = Number(T[t] / (i / 100));
                                T[t] = isNaN(i) ? 0 : Number(i.toFixed(2))
                            })), delete T._solid, r ? T.solidContrastClose && (w = n.default.PREVIEW_WARNINGS.LOW_CONTRAST) : T.solidColor < 1 && T.solidBlack < 1 && 0 < T.solidWhite || f(C) ? w = n.default.PRINT_COLOR_MODE.WHITE : d(C) && (T.solidBlack > T.solidColor / 8 && d(C) || T.semitransparent > T.solid / 3 && 3 < T.solid || T.semitransparent > T.transparent / 3 || 10 < T.semitransparent / T.solid || 33 < T.solidLuminance ? w = n.default.PRINT_COLOR_MODE.WHITE_COLOR : 1 < T.solidColor && T.solidWhite <= .1 * T.solidColor ? w = n.default.PRINT_COLOR_MODE.COLOR : T.solidLuminance > T.solidColor / 2 && (w = n.default.PRINT_COLOR_MODE.WHITE_COLOR)), !a && s && s.document.getElementById("mockup-generator-color-debug") && (y = "Print color mode: <b>" + w + " (Lifelike: " + (w === n.default.PRINT_COLOR_MODE.WHITE_COLOR ? "Yes" : "No") + ")</b>\n", b = (d(C) ? "Black" : f(C) ? "White" : "Colorful") + "-ish", x = c(C), x = Object.values(x).map(v).join(", "), _ = v(p(C)), y += "<b>Shirt Lum: " + _ + " (needs < 0.065 for lifelike)</b>\nShirt HSL: <b>" + x + "</b>\nShirt Color: <b>" + S + " (" + b + ")</b>\nStats:\n", Object.keys(T).map((function(t, e) {
                                var i = -1 < t.indexOf("solid") && "solid" !== t ? "  " + t.split("solid")[1].toLowerCase() : t;
                                y += i + ": <b>" + T[t] + "%</b>\n"
                            })), s.document.getElementById("mockup-generator-color-debug").innerHTML += y), (r && w !== n.default.PRINT_COLOR_MODE.UNKNOWN || !r) && (l[t] = w)
                        }), y = 0, b = i.length; y < b; y++) m(y);
                    return l
                }, r(i(279)))
        },
        5300: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(23329))),
                o = r(i(87356));
            if ("undefined" == typeof window) throw new Error("Tried to load pf-canvas browser version in non-browser environment!");
            o.default.setDependencies({
                Raphael: i(36575).Z,
                JSFontLoader: i(53266).Z
            }), n.default.setDependencies({
                Url: window.Url,
                TEXT2SVG: o.default,
                TTFFontLoader: i(9304).default
            }), void 0 === window.Url && function(t) {
                "complete" === document.readyState || "interactive" === document.readyState ? setTimeout(t, 1) : document.addEventListener("DOMContentLoaded", t)
            }((function() {
                n.default.setDependencies({
                    Url: window.Url
                })
            }));
            var a = n.default;
            e.default = a
        },
        279: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            e.default = {
                LAYER_TYPE: {
                    FILE: "file",
                    TEXT: "text",
                    TEXTBOX: "textbox",
                    TEXTBOX_PNG: "png",
                    CLIPART: "clipart",
                    QUICK_DESIGN: "quick_design",
                    LICENSED_ASSET: "licensedAsset",
                    CROP: "crop",
                    MOCKUP_MAKER: "mockupMaker",
                    EXTERNAL: "external"
                },
                SUB_TYPE: {
                    MOCKUP_MAKER_MOCKUP: "mockupMakerMockup",
                    MOCKUP_MAKER_PROP: "mockupMakerObject"
                },
                PATTERN_TYPE: {
                    BLOCK: "block",
                    HALFDROP: "halfdrop",
                    BRICK: "brick",
                    REFLECT: "reflect",
                    HORIZONTAL: "horizontal",
                    VERTICAL: "vertical"
                },
                PATTERN_SPACING: {
                    MIN: -.5,
                    STEP: .01,
                    DEFAULT: 0,
                    MAX: 3
                },
                DESIGN_FILL_TYPE: {
                    COLOR: "color",
                    GRAPHIC: "graphic",
                    GRADIENT: "gradient",
                    PREMIUM: "premium"
                },
                GUIDE_BACKGROUND: "rgba(60, 60, 60, 0.2)",
                COLOR_GRAPHIC_TYPE: "color-graphic",
                CHARCODE_REPLACEMENTS: {
                    32: 12288,
                    12288: 32
                },
                PNG_FONT_HEIGHT_PIXELS: {
                    240: ["amaranth", "bangers", "berkshire-swash", "caveat-b", "chela-one", "cookie", "creepster", "dancing-script_bold", "germania-one", "hanalei-fill", "knewave", "leckerli-one", "luckiest-guy", "molle", "pattaya", "playfair-display-bold", "princess-sofia", "rakkas", "spicy-rice", "vollkorn-b", "vollkorn-sb"],
                    230: ["acme"],
                    220: ["permanent-marker", "vampiro-one"],
                    210: ["notable"],
                    200: ["shojumaru"]
                },
                DEFAULT_TEXT_SIZE: 2,
                FONT_SIZE_MULTIPLIER: 50,
                PNG_TEXT_MULTIPLIER: 3,
                PNG_TEXT_LIFELIKE_MULTIPLIER: 1,
                ZOOM_MARGIN: 20,
                ACTION_BUTTON_MARGIN: 8,
                MOBILE_BREAKPOINT_DOTS: 992,
                ADJUST_SVG_OPTIONS_BY: 3,
                CUSTOMIZER_HEIGHT_DIFF_LIMIT: .1,
                CUSTOMIZER_FONT_SIZE_ADJUST_STEP: .1,
                IMAGE_CACHE_VERSION: "canvas-v8",
                EMBROIDERY_OUTLINE_WIDTH: 11,
                EMBROIDERY_OUTLINE_SCALE_ADJUSTMENT: .9491,
                PRINT_COLOR_MODE: {
                    UNKNOWN: "Unknown",
                    WHITE: "White only",
                    COLOR: "Color only",
                    WHITE_COLOR: "White + Color"
                },
                PREVIEW_WARNINGS: {
                    LOW_CONTRAST: "LOW_CONTRAST"
                },
                FILTER_INDEX: {
                    SCALE: 0,
                    FILL: 1,
                    MASK: 2,
                    PRINT: 3
                },
                FILTER_TYPE: {
                    UNDERBASE: "Underbase"
                },
                COLOR_GRAPHIC_IMAGE_LOAD: "graphic-load",
                CROP_RECT_MIN_SIZE: 30,
                LAYER_GROUP_TYPE: {
                    INSIDE_LABEL_TEMPLATE: "INSIDE_LABEL_TEMPLATE"
                },
                TEXT_ALIGNMENT: {
                    ABSOLUTE_LEFT: "absolute_left",
                    ABSOLUTE_RIGHT: "absolute_right",
                    ABSOLUTE_CENTER: "absolute_center"
                }
            }
        },
        11042: (t, e, i) => {
            "use strict";
            var r = i(64836),
                n = (Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.default = void 0, r(i(56690))),
                o = r(i(89728)),
                a = r(i(38416)),
                s = function() {
                    function t() {
                        (0, n.default)(this, t)
                    }
                    return (0, o.default)(t, null, [{
                        key: "setInitialFonts",
                        value: function(e, i, r) {
                            e && (t.FONTS = e), i && (t.FONTS_JS_URLS = i), r && (t.FONTS_TTF_URLS = r)
                        }
                    }, {
                        key: "loadJSFontFrontend",
                        value: function(e, i) {
                            if (t.LOADED_JS_FONTS.hasOwnProperty(e)) return void 0 !== i && i && i(), !0;
                            if (!t.FONTS_JS_URLS.hasOwnProperty(e)) return console.warn("Couldnt find font:", e), void 0 !== i && i && i(), !1;
                            if ("undefined" == typeof window) return console.warn("Trying to load JS font in non-browser environment:", e), void 0 !== i && i && i(), !1;
                            var r = t.FONTS_JS_URLS[e],
                                n = window.document.createElement("script");
                            return n.src = r, n.type = "text/javascript", n.async = !1, n.onload = function() {
                                t.LOADED_JS_FONTS[e] = !0, void 0 !== i && i && i()
                            }, window.document.body.appendChild(n), !0
                        }
                    }]), t
                }();
            e.default = s, (0, a.default)(s, "LOADED_TTF_FONTS", {}), (0, a.default)(s, "LOADED_JS_FONTS", {}), (0, a.default)(s, "CUSTOMIZED_TEXT_SIZES", {}), (0, a.default)(s, "FONTS", {}), (0, a.default)(s, "FONTS_TTF_URLS", {}), (0, a.default)(s, "FONTS_JS_URLS", {})
        },
        32777: (t, e, i) => {
            var r, n, o, a, s, l, h, c, u, f, d, p, g, v, m, y, b, x, _, w, S, C, T = T || {
                version: "4.6.0"
            };
            if (e.fabric = T, "undefined" != typeof document && "undefined" != typeof window) document instanceof("undefined" != typeof HTMLDocument ? HTMLDocument : Document) ? T.document = document : T.document = document.implementation.createHTMLDocument(""), T.window = window;
            else {
                var E = new(i(85857).JSDOM)(decodeURIComponent("%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E"), {
                    features: {
                        FetchExternalResources: ["img"]
                    },
                    resources: "usable"
                }).window;
                T.document = E.document, T.jsdomImplForWrapper = i(81774).implForWrapper, T.nodeCanvas = i(56254).Canvas, T.window = E, DOMParser = T.window.DOMParser
            }

            function k(t, e) {
                var i = t.canvas,
                    r = e.targetCanvas,
                    n = r.getContext("2d");
                n.translate(0, r.height), n.scale(1, -1);
                var o = i.height - r.height;
                n.drawImage(i, 0, o, r.width, r.height, 0, 0, r.width, r.height)
            }

            function O(t, e) {
                var i = e.targetCanvas.getContext("2d"),
                    r = e.destinationWidth,
                    n = e.destinationHeight,
                    o = r * n * 4,
                    a = new Uint8Array(this.imageBuffer, 0, o),
                    s = new Uint8ClampedArray(this.imageBuffer, 0, o);
                t.readPixels(0, 0, r, n, t.RGBA, t.UNSIGNED_BYTE, a);
                var l = new ImageData(s, r, n);
                i.putImageData(l, 0, 0)
            }
            T.isTouchSupported = "ontouchstart" in T.window || "ontouchstart" in T.document || T.window && T.window.navigator && T.window.navigator.maxTouchPoints > 0, T.isLikelyNode = "undefined" != typeof Buffer && "undefined" == typeof window, T.SHARED_ATTRIBUTES = ["display", "transform", "fill", "fill-opacity", "fill-rule", "opacity", "stroke", "stroke-dasharray", "stroke-linecap", "stroke-dashoffset", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "id", "paint-order", "vector-effect", "instantiated_by_use", "clip-path"], T.DPI = 96, T.reNum = "(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?)", T.commaWsp = "(?:\\s+,?\\s*|,\\s*)", T.rePathCommand = /([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:[eE][-+]?\d+)?)/gi, T.reNonWord = /[ \n\.,;!\?\-]/, T.fontPaths = {}, T.iMatrix = [1, 0, 0, 1, 0, 0], T.svgNS = "http://www.w3.org/2000/svg", T.perfLimitSizeTotal = 2097152, T.maxCacheSideLimit = 4096, T.minCacheSideLimit = 256, T.charWidthsCache = {}, T.textureSize = 2048, T.disableStyleCopyPaste = !1, T.enableGLFiltering = !0, T.devicePixelRatio = T.window.devicePixelRatio || T.window.webkitDevicePixelRatio || T.window.mozDevicePixelRatio || 1, T.browserShadowBlurConstant = 1, T.arcToSegmentsCache = {}, T.boundsOfCurveCache = {}, T.cachesBoundsOfCurve = !0, T.forceGLPutImageData = !1, T.initFilterBackend = function() {
                    return T.enableGLFiltering && T.isWebglSupported && T.isWebglSupported(T.textureSize) ? (console.log("max texture size: " + T.maxTextureSize), new T.WebglFilterBackend({
                        tileSize: T.textureSize
                    })) : T.Canvas2dFilterBackend ? new T.Canvas2dFilterBackend : void 0
                }, "undefined" != typeof document && "undefined" != typeof window && (window.fabric = T),
                function() {
                    function t(t, e) {
                        if (this.__eventListeners[t]) {
                            var i = this.__eventListeners[t];
                            e ? i[i.indexOf(e)] = !1 : T.util.array.fill(i, !1)
                        }
                    }

                    function e(t, e) {
                        var i = function() {
                            e.apply(this, arguments), this.off(t, i)
                        }.bind(this);
                        this.on(t, i)
                    }
                    T.Observable = {
                        fire: function(t, e) {
                            if (!this.__eventListeners) return this;
                            var i = this.__eventListeners[t];
                            if (!i) return this;
                            for (var r = 0, n = i.length; r < n; r++) i[r] && i[r].call(this, e || {});
                            return this.__eventListeners[t] = i.filter((function(t) {
                                return !1 !== t
                            })), this
                        },
                        on: function(t, e) {
                            if (this.__eventListeners || (this.__eventListeners = {}), 1 === arguments.length)
                                for (var i in t) this.on(i, t[i]);
                            else this.__eventListeners[t] || (this.__eventListeners[t] = []), this.__eventListeners[t].push(e);
                            return this
                        },
                        once: function(t, i) {
                            if (1 === arguments.length)
                                for (var r in t) e.call(this, r, t[r]);
                            else e.call(this, t, i);
                            return this
                        },
                        off: function(e, i) {
                            if (!this.__eventListeners) return this;
                            if (0 === arguments.length)
                                for (e in this.__eventListeners) t.call(this, e);
                            else if (1 === arguments.length && "object" == typeof arguments[0])
                                for (var r in e) t.call(this, r, e[r]);
                            else t.call(this, e, i);
                            return this
                        }
                    }
                }(), T.Collection = {
                    _objects: [],
                    add: function() {
                        if (this._objects.push.apply(this._objects, arguments), this._onObjectAdded)
                            for (var t = 0, e = arguments.length; t < e; t++) this._onObjectAdded(arguments[t]);
                        return this.renderOnAddRemove && this.requestRenderAll(), this
                    },
                    insertAt: function(t, e, i) {
                        var r = this._objects;
                        return i ? r[e] = t : r.splice(e, 0, t), this._onObjectAdded && this._onObjectAdded(t), this.renderOnAddRemove && this.requestRenderAll(), this
                    },
                    remove: function() {
                        for (var t, e = this._objects, i = !1, r = 0, n = arguments.length; r < n; r++) - 1 !== (t = e.indexOf(arguments[r])) && (i = !0, e.splice(t, 1), this._onObjectRemoved && this._onObjectRemoved(arguments[r]));
                        return this.renderOnAddRemove && i && this.requestRenderAll(), this
                    },
                    forEachObject: function(t, e) {
                        for (var i = this.getObjects(), r = 0, n = i.length; r < n; r++) t.call(e, i[r], r, i);
                        return this
                    },
                    getObjects: function(t) {
                        return void 0 === t ? this._objects.concat() : this._objects.filter((function(e) {
                            return e.type === t
                        }))
                    },
                    item: function(t) {
                        return this._objects[t]
                    },
                    isEmpty: function() {
                        return 0 === this._objects.length
                    },
                    size: function() {
                        return this._objects.length
                    },
                    contains: function(t, e) {
                        return this._objects.indexOf(t) > -1 || !!e && this._objects.some((function(e) {
                            return "function" == typeof e.contains && e.contains(t, !0)
                        }))
                    },
                    complexity: function() {
                        return this._objects.reduce((function(t, e) {
                            return t += e.complexity ? e.complexity() : 0
                        }), 0)
                    }
                }, T.CommonMethods = {
                    _setOptions: function(t) {
                        for (var e in t) this.set(e, t[e])
                    },
                    _initGradient: function(t, e) {
                        !t || !t.colorStops || t instanceof T.Gradient || this.set(e, new T.Gradient(t))
                    },
                    _initPattern: function(t, e, i) {
                        !t || !t.source || t instanceof T.Pattern ? i && i() : this.set(e, new T.Pattern(t, i))
                    },
                    _setObject: function(t) {
                        for (var e in t) this._set(e, t[e])
                    },
                    set: function(t, e) {
                        return "object" == typeof t ? this._setObject(t) : this._set(t, e), this
                    },
                    _set: function(t, e) {
                        this[t] = e
                    },
                    toggle: function(t) {
                        var e = this.get(t);
                        return "boolean" == typeof e && this.set(t, !e), this
                    },
                    get: function(t) {
                        return this[t]
                    }
                }, r = e, n = Math.sqrt, o = Math.atan2, a = Math.pow, s = Math.PI / 180, l = Math.PI / 2, T.util = {
                    cos: function(t) {
                        if (0 === t) return 1;
                        switch (t < 0 && (t = -t), t / l) {
                            case 1:
                            case 3:
                                return 0;
                            case 2:
                                return -1
                        }
                        return Math.cos(t)
                    },
                    sin: function(t) {
                        if (0 === t) return 0;
                        var e = 1;
                        switch (t < 0 && (e = -1), t / l) {
                            case 1:
                                return e;
                            case 2:
                                return 0;
                            case 3:
                                return -e
                        }
                        return Math.sin(t)
                    },
                    removeFromArray: function(t, e) {
                        var i = t.indexOf(e);
                        return -1 !== i && t.splice(i, 1), t
                    },
                    getRandomInt: function(t, e) {
                        return Math.floor(Math.random() * (e - t + 1)) + t
                    },
                    degreesToRadians: function(t) {
                        return t * s
                    },
                    radiansToDegrees: function(t) {
                        return t / s
                    },
                    rotatePoint: function(t, e, i) {
                        var r = new T.Point(t.x - e.x, t.y - e.y),
                            n = T.util.rotateVector(r, i);
                        return new T.Point(n.x, n.y).addEquals(e)
                    },
                    rotateVector: function(t, e) {
                        var i = T.util.sin(e),
                            r = T.util.cos(e);
                        return {
                            x: t.x * r - t.y * i,
                            y: t.x * i + t.y * r
                        }
                    },
                    transformPoint: function(t, e, i) {
                        return i ? new T.Point(e[0] * t.x + e[2] * t.y, e[1] * t.x + e[3] * t.y) : new T.Point(e[0] * t.x + e[2] * t.y + e[4], e[1] * t.x + e[3] * t.y + e[5])
                    },
                    makeBoundingBoxFromPoints: function(t, e) {
                        if (e)
                            for (var i = 0; i < t.length; i++) t[i] = T.util.transformPoint(t[i], e);
                        var r = [t[0].x, t[1].x, t[2].x, t[3].x],
                            n = T.util.array.min(r),
                            o = T.util.array.max(r) - n,
                            a = [t[0].y, t[1].y, t[2].y, t[3].y],
                            s = T.util.array.min(a);
                        return {
                            left: n,
                            top: s,
                            width: o,
                            height: T.util.array.max(a) - s
                        }
                    },
                    invertTransform: function(t) {
                        var e = 1 / (t[0] * t[3] - t[1] * t[2]),
                            i = [e * t[3], -e * t[1], -e * t[2], e * t[0]],
                            r = T.util.transformPoint({
                                x: t[4],
                                y: t[5]
                            }, i, !0);
                        return i[4] = -r.x, i[5] = -r.y, i
                    },
                    toFixed: function(t, e) {
                        return parseFloat(Number(t).toFixed(e))
                    },
                    parseUnit: function(t, e) {
                        var i = /\D{0,2}$/.exec(t),
                            r = parseFloat(t);
                        switch (e || (e = T.Text.DEFAULT_SVG_FONT_SIZE), i[0]) {
                            case "mm":
                                return r * T.DPI / 25.4;
                            case "cm":
                                return r * T.DPI / 2.54;
                            case "in":
                                return r * T.DPI;
                            case "pt":
                                return r * T.DPI / 72;
                            case "pc":
                                return r * T.DPI / 72 * 12;
                            case "em":
                                return r * e;
                            default:
                                return r
                        }
                    },
                    falseFunction: function() {
                        return !1
                    },
                    getKlass: function(t, e) {
                        return t = T.util.string.camelize(t.charAt(0).toUpperCase() + t.slice(1)), T.util.resolveNamespace(e)[t]
                    },
                    getSvgAttributes: function(t) {
                        var e = ["instantiated_by_use", "style", "id", "class"];
                        switch (t) {
                            case "linearGradient":
                                e = e.concat(["x1", "y1", "x2", "y2", "gradientUnits", "gradientTransform"]);
                                break;
                            case "radialGradient":
                                e = e.concat(["gradientUnits", "gradientTransform", "cx", "cy", "r", "fx", "fy", "fr"]);
                                break;
                            case "stop":
                                e = e.concat(["offset", "stop-color", "stop-opacity"])
                        }
                        return e
                    },
                    resolveNamespace: function(t) {
                        if (!t) return T;
                        var e, i = t.split("."),
                            n = i.length,
                            o = r || T.window;
                        for (e = 0; e < n; ++e) o = o[i[e]];
                        return o
                    },
                    loadImage: function(t, e, i, r) {
                        if (t) {
                            var n = T.util.createImage(),
                                o = function() {
                                    e && e.call(i, n, !1), n = n.onload = n.onerror = null
                                };
                            n.onload = o, n.onerror = function() {
                                T.log("Error loading " + n.src), e && e.call(i, null, !0), n = n.onload = n.onerror = null
                            }, 0 !== t.indexOf("data") && null != r && (n.crossOrigin = r), "data:image/svg" === t.substring(0, 14) && (n.onload = null, T.util.loadImageInDom(n, o)), n.src = t
                        } else e && e.call(i, t)
                    },
                    loadImageInDom: function(t, e) {
                        var i = T.document.createElement("div");
                        i.style.width = i.style.height = "1px", i.style.left = i.style.top = "-100%", i.style.position = "absolute", i.appendChild(t), T.document.querySelector("body").appendChild(i), t.onload = function() {
                            e(), i.parentNode.removeChild(i), i = null
                        }
                    },
                    enlivenObjects: function(t, e, i, r) {
                        var n = [],
                            o = 0,
                            a = (t = t || []).length;

                        function s() {
                            ++o === a && e && e(n.filter((function(t) {
                                return t
                            })))
                        }
                        a ? t.forEach((function(t, e) {
                            t && t.type ? T.util.getKlass(t.type, i).fromObject(t, (function(i, o) {
                                o || (n[e] = i), r && r(t, i, o), s()
                            })) : s()
                        })) : e && e(n)
                    },
                    enlivenPatterns: function(t, e) {
                        function i() {
                            ++n === o && e && e(r)
                        }
                        var r = [],
                            n = 0,
                            o = (t = t || []).length;
                        o ? t.forEach((function(t, e) {
                            t && t.source ? new T.Pattern(t, (function(t) {
                                r[e] = t, i()
                            })) : (r[e] = t, i())
                        })) : e && e(r)
                    },
                    groupSVGElements: function(t, e, i) {
                        var r;
                        return t && 1 === t.length ? t[0] : (e && (e.width && e.height ? e.centerPoint = {
                            x: e.width / 2,
                            y: e.height / 2
                        } : (delete e.width, delete e.height)), r = new T.Group(t, e), void 0 !== i && (r.sourcePath = i), r)
                    },
                    populateWithProperties: function(t, e, i) {
                        if (i && "[object Array]" === Object.prototype.toString.call(i))
                            for (var r = 0, n = i.length; r < n; r++) i[r] in t && (e[i[r]] = t[i[r]])
                    },
                    drawDashedLine: function(t, e, i, r, a, s) {
                        var l = r - e,
                            h = a - i,
                            c = n(l * l + h * h),
                            u = o(h, l),
                            f = s.length,
                            d = 0,
                            p = !0;
                        for (t.save(), t.translate(e, i), t.moveTo(0, 0), t.rotate(u), e = 0; c > e;)(e += s[d++ % f]) > c && (e = c), t[p ? "lineTo" : "moveTo"](e, 0), p = !p;
                        t.restore()
                    },
                    createCanvasElement: function() {
                        return T.document.createElement("canvas")
                    },
                    copyCanvasElement: function(t) {
                        var e = T.util.createCanvasElement();
                        return e.width = t.width, e.height = t.height, e.getContext("2d").drawImage(t, 0, 0), e
                    },
                    toDataURL: function(t, e, i) {
                        return t.toDataURL("image/" + e, i)
                    },
                    createImage: function() {
                        return T.document.createElement("img")
                    },
                    multiplyTransformMatrices: function(t, e, i) {
                        return [t[0] * e[0] + t[2] * e[1], t[1] * e[0] + t[3] * e[1], t[0] * e[2] + t[2] * e[3], t[1] * e[2] + t[3] * e[3], i ? 0 : t[0] * e[4] + t[2] * e[5] + t[4], i ? 0 : t[1] * e[4] + t[3] * e[5] + t[5]]
                    },
                    qrDecompose: function(t) {
                        var e = o(t[1], t[0]),
                            i = a(t[0], 2) + a(t[1], 2),
                            r = n(i),
                            l = (t[0] * t[3] - t[2] * t[1]) / r,
                            h = o(t[0] * t[2] + t[1] * t[3], i);
                        return {
                            angle: e / s,
                            scaleX: r,
                            scaleY: l,
                            skewX: h / s,
                            skewY: 0,
                            translateX: t[4],
                            translateY: t[5]
                        }
                    },
                    calcRotateMatrix: function(t) {
                        if (!t.angle) return T.iMatrix.concat();
                        var e = T.util.degreesToRadians(t.angle),
                            i = T.util.cos(e),
                            r = T.util.sin(e);
                        return [i, r, -r, i, 0, 0]
                    },
                    calcDimensionsMatrix: function(t) {
                        var e = void 0 === t.scaleX ? 1 : t.scaleX,
                            i = void 0 === t.scaleY ? 1 : t.scaleY,
                            r = [t.flipX ? -e : e, 0, 0, t.flipY ? -i : i, 0, 0],
                            n = T.util.multiplyTransformMatrices,
                            o = T.util.degreesToRadians;
                        return t.skewX && (r = n(r, [1, 0, Math.tan(o(t.skewX)), 1], !0)), t.skewY && (r = n(r, [1, Math.tan(o(t.skewY)), 0, 1], !0)), r
                    },
                    composeMatrix: function(t) {
                        var e = [1, 0, 0, 1, t.translateX || 0, t.translateY || 0],
                            i = T.util.multiplyTransformMatrices;
                        return t.angle && (e = i(e, T.util.calcRotateMatrix(t))), (1 !== t.scaleX || 1 !== t.scaleY || t.skewX || t.skewY || t.flipX || t.flipY) && (e = i(e, T.util.calcDimensionsMatrix(t))), e
                    },
                    resetObjectTransform: function(t) {
                        t.scaleX = 1, t.scaleY = 1, t.skewX = 0, t.skewY = 0, t.flipX = !1, t.flipY = !1, t.rotate(0)
                    },
                    saveObjectTransform: function(t) {
                        return {
                            scaleX: t.scaleX,
                            scaleY: t.scaleY,
                            skewX: t.skewX,
                            skewY: t.skewY,
                            angle: t.angle,
                            left: t.left,
                            flipX: t.flipX,
                            flipY: t.flipY,
                            top: t.top
                        }
                    },
                    isTransparent: function(t, e, i, r) {
                        r > 0 && (e > r ? e -= r : e = 0, i > r ? i -= r : i = 0);
                        var n, o = !0,
                            a = t.getImageData(e, i, 2 * r || 1, 2 * r || 1),
                            s = a.data.length;
                        for (n = 3; n < s && !1 != (o = a.data[n] <= 0); n += 4);
                        return a = null, o
                    },
                    parsePreserveAspectRatioAttribute: function(t) {
                        var e, i = "meet",
                            r = t.split(" ");
                        return r && r.length && ("meet" !== (i = r.pop()) && "slice" !== i ? (e = i, i = "meet") : r.length && (e = r.pop())), {
                            meetOrSlice: i,
                            alignX: "none" !== e ? e.slice(1, 4) : "none",
                            alignY: "none" !== e ? e.slice(5, 8) : "none"
                        }
                    },
                    clearFabricFontCache: function(t) {
                        (t = (t || "").toLowerCase()) ? T.charWidthsCache[t] && delete T.charWidthsCache[t]: T.charWidthsCache = {}
                    },
                    limitDimsByArea: function(t, e) {
                        var i = Math.sqrt(e * t),
                            r = Math.floor(e / i);
                        return {
                            x: Math.floor(i),
                            y: r
                        }
                    },
                    capValue: function(t, e, i) {
                        return Math.max(t, Math.min(e, i))
                    },
                    findScaleToFit: function(t, e) {
                        return Math.min(e.width / t.width, e.height / t.height)
                    },
                    findScaleToCover: function(t, e) {
                        return Math.max(e.width / t.width, e.height / t.height)
                    },
                    matrixToSVG: function(t) {
                        return "matrix(" + t.map((function(t) {
                            return T.util.toFixed(t, T.Object.NUM_FRACTION_DIGITS)
                        })).join(" ") + ")"
                    },
                    removeTransformFromObject: function(t, e) {
                        var i = T.util.invertTransform(e),
                            r = T.util.multiplyTransformMatrices(i, t.calcOwnMatrix());
                        T.util.applyTransformToObject(t, r)
                    },
                    addTransformToObject: function(t, e) {
                        T.util.applyTransformToObject(t, T.util.multiplyTransformMatrices(e, t.calcOwnMatrix()))
                    },
                    applyTransformToObject: function(t, e) {
                        var i = T.util.qrDecompose(e),
                            r = new T.Point(i.translateX, i.translateY);
                        t.flipX = !1, t.flipY = !1, t.set("scaleX", i.scaleX), t.set("scaleY", i.scaleY), t.skewX = i.skewX, t.skewY = i.skewY, t.angle = i.angle, t.setPositionByOrigin(r, "center", "center")
                    },
                    sizeAfterTransform: function(t, e, i) {
                        var r = t / 2,
                            n = e / 2,
                            o = [{
                                x: -r,
                                y: -n
                            }, {
                                x: r,
                                y: -n
                            }, {
                                x: -r,
                                y: n
                            }, {
                                x: r,
                                y: n
                            }],
                            a = T.util.calcDimensionsMatrix(i),
                            s = T.util.makeBoundingBoxFromPoints(o, a);
                        return {
                            x: s.width,
                            y: s.height
                        }
                    }
                },
                function() {
                    var t = Array.prototype.join,
                        e = {
                            m: 2,
                            l: 2,
                            h: 1,
                            v: 1,
                            c: 6,
                            s: 4,
                            q: 4,
                            t: 2,
                            a: 7
                        },
                        i = {
                            m: "l",
                            M: "L"
                        };

                    function r(t, e, i, r, n, o, a, s, l, h, c) {
                        var u = T.util.cos(t),
                            f = T.util.sin(t),
                            d = T.util.cos(e),
                            p = T.util.sin(e),
                            g = i * n * d - r * o * p + a,
                            v = r * n * d + i * o * p + s;
                        return ["C", h + l * (-i * n * f - r * o * u), c + l * (-r * n * f + i * o * u), g + l * (i * n * p + r * o * d), v + l * (r * n * p - i * o * d), g, v]
                    }

                    function n(t, e, i, n, a, s, l) {
                        var h = Math.PI,
                            c = l * h / 180,
                            u = T.util.sin(c),
                            f = T.util.cos(c),
                            d = 0,
                            p = 0,
                            g = -f * t * .5 - u * e * .5,
                            v = -f * e * .5 + u * t * .5,
                            m = (i = Math.abs(i)) * i,
                            y = (n = Math.abs(n)) * n,
                            b = v * v,
                            x = g * g,
                            _ = m * y - m * b - y * x,
                            w = 0;
                        if (_ < 0) {
                            var S = Math.sqrt(1 - _ / (m * y));
                            i *= S, n *= S
                        } else w = (a === s ? -1 : 1) * Math.sqrt(_ / (m * b + y * x));
                        var C = w * i * v / n,
                            E = -w * n * g / i,
                            k = f * C - u * E + .5 * t,
                            O = u * C + f * E + .5 * e,
                            I = o(1, 0, (g - C) / i, (v - E) / n),
                            P = o((g - C) / i, (v - E) / n, (-g - C) / i, (-v - E) / n);
                        0 === s && P > 0 ? P -= 2 * h : 1 === s && P < 0 && (P += 2 * h);
                        for (var L = Math.ceil(Math.abs(P / h * 2)), M = [], A = P / L, D = 8 / 3 * Math.sin(A / 4) * Math.sin(A / 4) / Math.sin(A / 2), R = I + A, F = 0; F < L; F++) M[F] = r(I, R, f, u, i, n, k, O, D, d, p), d = M[F][5], p = M[F][6], I = R, R += A;
                        return M
                    }

                    function o(t, e, i, r) {
                        var n = Math.atan2(e, t),
                            o = Math.atan2(r, i);
                        return o >= n ? o - n : 2 * Math.PI - (n - o)
                    }

                    function a(e, i, r, n, o, a, s, l) {
                        var h;
                        if (T.cachesBoundsOfCurve && (h = t.call(arguments), T.boundsOfCurveCache[h])) return T.boundsOfCurveCache[h];
                        var c, u, f, d, p, g, v, m, y = Math.sqrt,
                            b = Math.min,
                            x = Math.max,
                            _ = Math.abs,
                            w = [],
                            S = [
                                [],
                                []
                            ];
                        u = 6 * e - 12 * r + 6 * o, c = -3 * e + 9 * r - 9 * o + 3 * s, f = 3 * r - 3 * e;
                        for (var C = 0; C < 2; ++C)
                            if (C > 0 && (u = 6 * i - 12 * n + 6 * a, c = -3 * i + 9 * n - 9 * a + 3 * l, f = 3 * n - 3 * i), _(c) < 1e-12) {
                                if (_(u) < 1e-12) continue;
                                0 < (d = -f / u) && d < 1 && w.push(d)
                            } else(v = u * u - 4 * f * c) < 0 || (0 < (p = (-u + (m = y(v))) / (2 * c)) && p < 1 && w.push(p), 0 < (g = (-u - m) / (2 * c)) && g < 1 && w.push(g));
                        for (var E, k, O, I = w.length, P = I; I--;) E = (O = 1 - (d = w[I])) * O * O * e + 3 * O * O * d * r + 3 * O * d * d * o + d * d * d * s, S[0][I] = E, k = O * O * O * i + 3 * O * O * d * n + 3 * O * d * d * a + d * d * d * l, S[1][I] = k;
                        S[0][P] = e, S[1][P] = i, S[0][P + 1] = s, S[1][P + 1] = l;
                        var L = [{
                            x: b.apply(null, S[0]),
                            y: b.apply(null, S[1])
                        }, {
                            x: x.apply(null, S[0]),
                            y: x.apply(null, S[1])
                        }];
                        return T.cachesBoundsOfCurve && (T.boundsOfCurveCache[h] = L), L
                    }

                    function s(t, e, i) {
                        for (var r = i[1], o = i[2], a = i[3], s = i[4], l = i[5], h = n(i[6] - t, i[7] - e, r, o, s, l, a), c = 0, u = h.length; c < u; c++) h[c][1] += t, h[c][2] += e, h[c][3] += t, h[c][4] += e, h[c][5] += t, h[c][6] += e;
                        return h
                    }

                    function l(t, e, i, r) {
                        return Math.sqrt((i - t) * (i - t) + (r - e) * (r - e))
                    }

                    function h(t, e, i, r, n, o, a, s) {
                        return function(l) {
                            var h, c = (h = l) * h * h,
                                u = function(t) {
                                    return 3 * t * t * (1 - t)
                                }(l),
                                f = function(t) {
                                    return 3 * t * (1 - t) * (1 - t)
                                }(l),
                                d = function(t) {
                                    return (1 - t) * (1 - t) * (1 - t)
                                }(l);
                            return {
                                x: a * c + n * u + i * f + t * d,
                                y: s * c + o * u + r * f + e * d
                            }
                        }
                    }

                    function c(t, e, i, r, n, o, a, s) {
                        return function(l) {
                            var h = 1 - l,
                                c = 3 * h * h * (i - t) + 6 * h * l * (n - i) + 3 * l * l * (a - n),
                                u = 3 * h * h * (r - e) + 6 * h * l * (o - r) + 3 * l * l * (s - o);
                            return Math.atan2(u, c)
                        }
                    }

                    function u(t, e, i, r, n, o) {
                        return function(a) {
                            var s, l = (s = a) * s,
                                h = function(t) {
                                    return 2 * t * (1 - t)
                                }(a),
                                c = function(t) {
                                    return (1 - t) * (1 - t)
                                }(a);
                            return {
                                x: n * l + i * h + t * c,
                                y: o * l + r * h + e * c
                            }
                        }
                    }

                    function f(t, e, i, r, n, o) {
                        return function(a) {
                            var s = 1 - a,
                                l = 2 * s * (i - t) + 2 * a * (n - i),
                                h = 2 * s * (r - e) + 2 * a * (o - r);
                            return Math.atan2(h, l)
                        }
                    }

                    function d(t, e, i) {
                        var r, n, o = {
                                x: e,
                                y: i
                            },
                            a = 0;
                        for (n = 1; n <= 100; n += 1) r = t(n / 100), a += l(o.x, o.y, r.x, r.y), o = r;
                        return a
                    }

                    function p(t, e) {
                        for (var i, r, n, o = 0, a = 0, s = t.iterator, h = {
                                x: t.x,
                                y: t.y
                            }, c = .01, u = t.angleFinder; a < e && o <= 1 && c > 1e-4;) i = s(o), n = o, (r = l(h.x, h.y, i.x, i.y)) + a > e ? o -= c /= 2 : (h = i, o += c, a += r);
                        return i.angle = u(n), i
                    }

                    function g(t) {
                        for (var e, i, r, n, o = 0, a = t.length, s = 0, p = 0, g = 0, v = 0, m = [], y = 0; y < a; y++) {
                            switch (r = {
                                    x: s,
                                    y: p,
                                    command: (e = t[y])[0]
                                }, e[0]) {
                                case "M":
                                    r.length = 0, g = s = e[1], v = p = e[2];
                                    break;
                                case "L":
                                    r.length = l(s, p, e[1], e[2]), s = e[1], p = e[2];
                                    break;
                                case "C":
                                    i = h(s, p, e[1], e[2], e[3], e[4], e[5], e[6]), n = c(s, p, e[1], e[2], e[3], e[4], e[5], e[6]), r.iterator = i, r.angleFinder = n, r.length = d(i, s, p), s = e[5], p = e[6];
                                    break;
                                case "Q":
                                    i = u(s, p, e[1], e[2], e[3], e[4]), n = f(s, p, e[1], e[2], e[3], e[4]), r.iterator = i, r.angleFinder = n, r.length = d(i, s, p), s = e[3], p = e[4];
                                    break;
                                case "Z":
                                case "z":
                                    r.destX = g, r.destY = v, r.length = l(s, p, g, v), s = g, p = v
                            }
                            o += r.length, m.push(r)
                        }
                        return m.push({
                            length: o,
                            x: s,
                            y: p
                        }), m
                    }
                    T.util.joinPath = function(t) {
                        return t.map((function(t) {
                            return t.join(" ")
                        })).join(" ")
                    }, T.util.parsePath = function(t) {
                        var r, n, o, a, s, l = [],
                            h = [],
                            c = T.rePathCommand,
                            u = "[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?\\s*",
                            f = "(" + u + ")" + T.commaWsp,
                            d = "([01])" + T.commaWsp + "?",
                            p = new RegExp(f + "?" + f + "?" + f + d + d + f + "?(" + u + ")", "g");
                        if (!t || !t.match) return l;
                        for (var g, v = 0, m = (s = t.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi)).length; v < m; v++) {
                            a = (r = s[v]).slice(1).trim(), h.length = 0;
                            var y = r.charAt(0);
                            if (g = [y], "a" === y.toLowerCase())
                                for (var b; b = p.exec(a);)
                                    for (var x = 1; x < b.length; x++) h.push(b[x]);
                            else
                                for (; o = c.exec(a);) h.push(o[0]);
                            x = 0;
                            for (var _ = h.length; x < _; x++) n = parseFloat(h[x]), isNaN(n) || g.push(n);
                            var w = e[y.toLowerCase()],
                                S = i[y] || y;
                            if (g.length - 1 > w)
                                for (var C = 1, E = g.length; C < E; C += w) l.push([y].concat(g.slice(C, C + w))), y = S;
                            else l.push(g)
                        }
                        return l
                    }, T.util.makePathSimpler = function(t) {
                        var e, i, r, n, o, a, l = 0,
                            h = 0,
                            c = t.length,
                            u = 0,
                            f = 0,
                            d = [];
                        for (i = 0; i < c; ++i) {
                            switch (r = !1, (e = t[i].slice(0))[0]) {
                                case "l":
                                    e[0] = "L", e[1] += l, e[2] += h;
                                case "L":
                                    l = e[1], h = e[2];
                                    break;
                                case "h":
                                    e[1] += l;
                                case "H":
                                    e[0] = "L", e[2] = h, l = e[1];
                                    break;
                                case "v":
                                    e[1] += h;
                                case "V":
                                    e[0] = "L", h = e[1], e[1] = l, e[2] = h;
                                    break;
                                case "m":
                                    e[0] = "M", e[1] += l, e[2] += h;
                                case "M":
                                    l = e[1], h = e[2], u = e[1], f = e[2];
                                    break;
                                case "c":
                                    e[0] = "C", e[1] += l, e[2] += h, e[3] += l, e[4] += h, e[5] += l, e[6] += h;
                                case "C":
                                    o = e[3], a = e[4], l = e[5], h = e[6];
                                    break;
                                case "s":
                                    e[0] = "S", e[1] += l, e[2] += h, e[3] += l, e[4] += h;
                                case "S":
                                    "C" === n ? (o = 2 * l - o, a = 2 * h - a) : (o = l, a = h), l = e[3], h = e[4], e[0] = "C", e[5] = e[3], e[6] = e[4], e[3] = e[1], e[4] = e[2], e[1] = o, e[2] = a, o = e[3], a = e[4];
                                    break;
                                case "q":
                                    e[0] = "Q", e[1] += l, e[2] += h, e[3] += l, e[4] += h;
                                case "Q":
                                    o = e[1], a = e[2], l = e[3], h = e[4];
                                    break;
                                case "t":
                                    e[0] = "T", e[1] += l, e[2] += h;
                                case "T":
                                    "Q" === n ? (o = 2 * l - o, a = 2 * h - a) : (o = l, a = h), e[0] = "Q", l = e[1], h = e[2], e[1] = o, e[2] = a, e[3] = l, e[4] = h;
                                    break;
                                case "a":
                                    e[0] = "A", e[6] += l, e[7] += h;
                                case "A":
                                    r = !0, d = d.concat(s(l, h, e)), l = e[6], h = e[7];
                                    break;
                                case "z":
                                case "Z":
                                    l = u, h = f
                            }
                            r || d.push(e), n = e[0]
                        }
                        return d
                    }, T.util.getSmoothPathFromPoints = function(t, e) {
                        var i, r = [],
                            n = new T.Point(t[0].x, t[0].y),
                            o = new T.Point(t[1].x, t[1].y),
                            a = t.length,
                            s = 1,
                            l = 0,
                            h = a > 2;
                        for (e = e || 0, h && (s = t[2].x < o.x ? -1 : t[2].x === o.x ? 0 : 1, l = t[2].y < o.y ? -1 : t[2].y === o.y ? 0 : 1), r.push(["M", n.x - s * e, n.y - l * e]), i = 1; i < a; i++) {
                            if (!n.eq(o)) {
                                var c = n.midPointFrom(o);
                                r.push(["Q", n.x, n.y, c.x, c.y])
                            }
                            n = t[i], i + 1 < t.length && (o = t[i + 1])
                        }
                        return h && (s = n.x > t[i - 2].x ? 1 : n.x === t[i - 2].x ? 0 : -1, l = n.y > t[i - 2].y ? 1 : n.y === t[i - 2].y ? 0 : -1), r.push(["L", n.x + s * e, n.y + l * e]), r
                    }, T.util.getPathSegmentsInfo = g, T.util.getBoundsOfCurve = a, T.util.getPointOnPath = function(t, e, i) {
                        i || (i = g(t));
                        for (var r = 0; e - i[r].length > 0 && r < i.length - 2;) e -= i[r].length, r++;
                        var n, o = i[r],
                            a = e / o.length,
                            s = o.command,
                            l = t[r];
                        switch (s) {
                            case "M":
                                return {
                                    x: o.x, y: o.y, angle: 0
                                };
                            case "Z":
                            case "z":
                                return (n = new T.Point(o.x, o.y).lerp(new T.Point(o.destX, o.destY), a)).angle = Math.atan2(o.destY - o.y, o.destX - o.x), n;
                            case "L":
                                return (n = new T.Point(o.x, o.y).lerp(new T.Point(l[1], l[2]), a)).angle = Math.atan2(l[2] - o.y, l[1] - o.x), n;
                            case "C":
                            case "Q":
                                return p(o, e)
                        }
                    }, T.util.transformPath = function(t, e, i) {
                        return i && (e = T.util.multiplyTransformMatrices(e, [1, 0, 0, 1, -i.x, -i.y])), t.map((function(t) {
                            for (var i = t.slice(0), r = {}, n = 1; n < t.length - 1; n += 2) r.x = t[n], r.y = t[n + 1], r = T.util.transformPoint(r, e), i[n] = r.x, i[n + 1] = r.y;
                            return i
                        }))
                    }, T.util.fromArcToBeizers = s, T.util.getBoundsOfArc = function(t, e, i, r, o, s, l, h, c) {
                        for (var u, f = 0, d = 0, p = [], g = n(h - t, c - e, i, r, s, l, o), v = 0, m = g.length; v < m; v++) u = a(f, d, g[v][1], g[v][2], g[v][3], g[v][4], g[v][5], g[v][6]), p.push({
                            x: u[0].x + t,
                            y: u[0].y + e
                        }), p.push({
                            x: u[1].x + t,
                            y: u[1].y + e
                        }), f = g[v][5], d = g[v][6];
                        return p
                    }, T.util.drawArc = function(t, e, i, r) {
                        s(e, i, r = r.slice(0).unshift("X")).forEach((function(e) {
                            t.bezierCurveTo.apply(t, e.slice(1))
                        }))
                    }
                }(),
                function() {
                    var t = Array.prototype.slice;

                    function e(t, e, i) {
                        if (t && 0 !== t.length) {
                            var r = t.length - 1,
                                n = e ? t[r][e] : t[r];
                            if (e)
                                for (; r--;) i(t[r][e], n) && (n = t[r][e]);
                            else
                                for (; r--;) i(t[r], n) && (n = t[r]);
                            return n
                        }
                    }
                    T.util.array = {
                        fill: function(t, e) {
                            for (var i = t.length; i--;) t[i] = e;
                            return t
                        },
                        invoke: function(e, i) {
                            for (var r = t.call(arguments, 2), n = [], o = 0, a = e.length; o < a; o++) n[o] = r.length ? e[o][i].apply(e[o], r) : e[o][i].call(e[o]);
                            return n
                        },
                        min: function(t, i) {
                            return e(t, i, (function(t, e) {
                                return t < e
                            }))
                        },
                        max: function(t, i) {
                            return e(t, i, (function(t, e) {
                                return t >= e
                            }))
                        }
                    }
                }(),
                function() {
                    function t(e, i, r) {
                        if (r)
                            if (!T.isLikelyNode && i instanceof Element) e = i;
                            else if (i instanceof Array) {
                            e = [];
                            for (var n = 0, o = i.length; n < o; n++) e[n] = t({}, i[n], r)
                        } else if (i && "object" == typeof i)
                            for (var a in i) "canvas" === a || "group" === a ? e[a] = null : i.hasOwnProperty(a) && (e[a] = t({}, i[a], r));
                        else e = i;
                        else
                            for (var a in i) e[a] = i[a];
                        return e
                    }
                    T.util.object = {
                        extend: t,
                        clone: function(e, i) {
                            return t({}, e, i)
                        }
                    }, T.util.object.extend(T.util, T.Observable)
                }(),
                function() {
                    function t(t, e) {
                        var i = t.charCodeAt(e);
                        if (isNaN(i)) return "";
                        if (i < 55296 || i > 57343) return t.charAt(e);
                        if (55296 <= i && i <= 56319) {
                            if (t.length <= e + 1) throw "High surrogate without following low surrogate";
                            var r = t.charCodeAt(e + 1);
                            if (56320 > r || r > 57343) throw "High surrogate without following low surrogate";
                            return t.charAt(e) + t.charAt(e + 1)
                        }
                        if (0 === e) throw "Low surrogate without preceding high surrogate";
                        var n = t.charCodeAt(e - 1);
                        if (55296 > n || n > 56319) throw "Low surrogate without preceding high surrogate";
                        return !1
                    }
                    T.util.string = {
                        camelize: function(t) {
                            return t.replace(/-+(.)?/g, (function(t, e) {
                                return e ? e.toUpperCase() : ""
                            }))
                        },
                        capitalize: function(t, e) {
                            return t.charAt(0).toUpperCase() + (e ? t.slice(1) : t.slice(1).toLowerCase())
                        },
                        escapeXml: function(t) {
                            return t.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
                        },
                        graphemeSplit: function(e) {
                            var i, r = 0,
                                n = [];
                            for (r = 0; r < e.length; r++) !1 !== (i = t(e, r)) && n.push(i);
                            return n
                        }
                    }
                }(),
                function() {
                    var t = Array.prototype.slice,
                        e = function() {},
                        i = function() {
                            for (var t in {
                                    toString: 1
                                })
                                if ("toString" === t) return !1;
                            return !0
                        }(),
                        r = function(t, e, r) {
                            for (var n in e) n in t.prototype && "function" == typeof t.prototype[n] && (e[n] + "").indexOf("callSuper") > -1 ? t.prototype[n] = function(t) {
                                return function() {
                                    var i = this.constructor.superclass;
                                    this.constructor.superclass = r;
                                    var n = e[t].apply(this, arguments);
                                    if (this.constructor.superclass = i, "initialize" !== t) return n
                                }
                            }(n) : t.prototype[n] = e[n], i && (e.toString !== Object.prototype.toString && (t.prototype.toString = e.toString), e.valueOf !== Object.prototype.valueOf && (t.prototype.valueOf = e.valueOf))
                        };

                    function n() {}

                    function o(e) {
                        for (var i = null, r = this; r.constructor.superclass;) {
                            var n = r.constructor.superclass.prototype[e];
                            if (r[e] !== n) {
                                i = n;
                                break
                            }
                            r = r.constructor.superclass.prototype
                        }
                        return i ? arguments.length > 1 ? i.apply(this, t.call(arguments, 1)) : i.call(this) : console.log("tried to callSuper " + e + ", method not found in prototype chain", this)
                    }
                    T.util.createClass = function() {
                        var i = null,
                            a = t.call(arguments, 0);

                        function s() {
                            this.initialize.apply(this, arguments)
                        }
                        "function" == typeof a[0] && (i = a.shift()), s.superclass = i, s.subclasses = [], i && (n.prototype = i.prototype, s.prototype = new n, i.subclasses.push(s));
                        for (var l = 0, h = a.length; l < h; l++) r(s, a[l], i);
                        return s.prototype.initialize || (s.prototype.initialize = e), s.prototype.constructor = s, s.prototype.callSuper = o, s
                    }
                }(), h = !!T.document.createElement("div").attachEvent, c = ["touchstart", "touchmove", "touchend"], T.util.addListener = function(t, e, i, r) {
                    t && t.addEventListener(e, i, !h && r)
                }, T.util.removeListener = function(t, e, i, r) {
                    t && t.removeEventListener(e, i, !h && r)
                }, T.util.getPointer = function(t) {
                    var e = t.target,
                        i = T.util.getScrollLeftTop(e),
                        r = function(t) {
                            var e = t.changedTouches;
                            return e && e[0] ? e[0] : t
                        }(t);
                    return {
                        x: r.clientX + i.left,
                        y: r.clientY + i.top
                    }
                }, T.util.isTouchEvent = function(t) {
                    return c.indexOf(t.type) > -1 || "touch" === t.pointerType
                }, u = T.document.createElement("div"), f = "string" == typeof u.style.opacity, d = "string" == typeof u.style.filter, p = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/, g = function(t) {
                    return t
                }, f ? g = function(t, e) {
                    return t.style.opacity = e, t
                } : d && (g = function(t, e) {
                    var i = t.style;
                    return t.currentStyle && !t.currentStyle.hasLayout && (i.zoom = 1), p.test(i.filter) ? (e = e >= .9999 ? "" : "alpha(opacity=" + 100 * e + ")", i.filter = i.filter.replace(p, e)) : i.filter += " alpha(opacity=" + 100 * e + ")", t
                }), T.util.setStyle = function(t, e) {
                    var i = t.style;
                    if (!i) return t;
                    if ("string" == typeof e) return t.style.cssText += ";" + e, e.indexOf("opacity") > -1 ? g(t, e.match(/opacity:\s*(\d?\.?\d*)/)[1]) : t;
                    for (var r in e) "opacity" === r ? g(t, e[r]) : i["float" === r || "cssFloat" === r ? void 0 === i.styleFloat ? "cssFloat" : "styleFloat" : r] = e[r];
                    return t
                },
                function() {
                    var t = Array.prototype.slice;
                    var e, i, r, n, o = function(e) {
                        return t.call(e, 0)
                    };
                    try {
                        e = o(T.document.childNodes) instanceof Array
                    } catch (t) {}

                    function a(t, e) {
                        var i = T.document.createElement(t);
                        for (var r in e) "class" === r ? i.className = e[r] : "for" === r ? i.htmlFor = e[r] : i.setAttribute(r, e[r]);
                        return i
                    }

                    function s(t) {
                        for (var e = 0, i = 0, r = T.document.documentElement, n = T.document.body || {
                                scrollLeft: 0,
                                scrollTop: 0
                            }; t && (t.parentNode || t.host) && ((t = t.parentNode || t.host) === T.document ? (e = n.scrollLeft || r.scrollLeft || 0, i = n.scrollTop || r.scrollTop || 0) : (e += t.scrollLeft || 0, i += t.scrollTop || 0), 1 !== t.nodeType || "fixed" !== t.style.position););
                        return {
                            left: e,
                            top: i
                        }
                    }
                    e || (o = function(t) {
                        for (var e = new Array(t.length), i = t.length; i--;) e[i] = t[i];
                        return e
                    }), i = T.document.defaultView && T.document.defaultView.getComputedStyle ? function(t, e) {
                        var i = T.document.defaultView.getComputedStyle(t, null);
                        return i ? i[e] : void 0
                    } : function(t, e) {
                        var i = t.style[e];
                        return !i && t.currentStyle && (i = t.currentStyle[e]), i
                    }, r = T.document.documentElement.style, n = "userSelect" in r ? "userSelect" : "MozUserSelect" in r ? "MozUserSelect" : "WebkitUserSelect" in r ? "WebkitUserSelect" : "KhtmlUserSelect" in r ? "KhtmlUserSelect" : "", T.util.makeElementUnselectable = function(t) {
                        return void 0 !== t.onselectstart && (t.onselectstart = T.util.falseFunction), n ? t.style[n] = "none" : "string" == typeof t.unselectable && (t.unselectable = "on"), t
                    }, T.util.makeElementSelectable = function(t) {
                        return void 0 !== t.onselectstart && (t.onselectstart = null), n ? t.style[n] = "" : "string" == typeof t.unselectable && (t.unselectable = ""), t
                    }, T.util.setImageSmoothing = function(t, e) {
                        t.imageSmoothingEnabled = t.imageSmoothingEnabled || t.webkitImageSmoothingEnabled || t.mozImageSmoothingEnabled || t.msImageSmoothingEnabled || t.oImageSmoothingEnabled, t.imageSmoothingEnabled = e
                    }, T.util.getById = function(t) {
                        return "string" == typeof t ? T.document.getElementById(t) : t
                    }, T.util.toArray = o, T.util.addClass = function(t, e) {
                        t && -1 === (" " + t.className + " ").indexOf(" " + e + " ") && (t.className += (t.className ? " " : "") + e)
                    }, T.util.makeElement = a, T.util.wrapElement = function(t, e, i) {
                        return "string" == typeof e && (e = a(e, i)), t.parentNode && t.parentNode.replaceChild(e, t), e.appendChild(t), e
                    }, T.util.getScrollLeftTop = s, T.util.getElementOffset = function(t) {
                        var e, r, n = t && t.ownerDocument,
                            o = {
                                left: 0,
                                top: 0
                            },
                            a = {
                                left: 0,
                                top: 0
                            },
                            l = {
                                borderLeftWidth: "left",
                                borderTopWidth: "top",
                                paddingLeft: "left",
                                paddingTop: "top"
                            };
                        if (!n) return a;
                        for (var h in l) a[l[h]] += parseInt(i(t, h), 10) || 0;
                        return e = n.documentElement, void 0 !== t.getBoundingClientRect && (o = t.getBoundingClientRect()), r = s(t), {
                            left: o.left + r.left - (e.clientLeft || 0) + a.left,
                            top: o.top + r.top - (e.clientTop || 0) + a.top
                        }
                    }, T.util.getNodeCanvas = function(t) {
                        var e = T.jsdomImplForWrapper(t);
                        return e._canvas || e._image
                    }, T.util.cleanUpJsdomNode = function(t) {
                        if (T.isLikelyNode) {
                            var e = T.jsdomImplForWrapper(t);
                            e && (e._image = null, e._canvas = null, e._currentSrc = null, e._attributes = null, e._classList = null)
                        }
                    }
                }(),
                function() {
                    function t() {}
                    T.util.request = function(e, i) {
                        i || (i = {});
                        var r = i.method ? i.method.toUpperCase() : "GET",
                            n = i.onComplete || function() {},
                            o = new T.window.XMLHttpRequest,
                            a = i.body || i.parameters;
                        return o.onreadystatechange = function() {
                            4 === o.readyState && (n(o), o.onreadystatechange = t)
                        }, "GET" === r && (a = null, "string" == typeof i.parameters && (e = function(t, e) {
                            return t + (/\?/.test(t) ? "&" : "?") + e
                        }(e, i.parameters))), o.open(r, e, !0), "POST" !== r && "PUT" !== r || o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), o.send(a), o
                    }
                }(), T.log = console.log, T.warn = console.warn,
                function() {
                    function t() {
                        return !1
                    }

                    function e(t, e, i, r) {
                        return -i * Math.cos(t / r * (Math.PI / 2)) + i + e
                    }
                    var i = T.window.requestAnimationFrame || T.window.webkitRequestAnimationFrame || T.window.mozRequestAnimationFrame || T.window.oRequestAnimationFrame || T.window.msRequestAnimationFrame || function(t) {
                            return T.window.setTimeout(t, 1e3 / 60)
                        },
                        r = T.window.cancelAnimationFrame || T.window.clearTimeout;

                    function n() {
                        return i.apply(T.window, arguments)
                    }
                    T.util.animate = function(i) {
                        var r = !1;
                        return n((function(o) {
                                i || (i = {});
                                var a, s = o || +new Date,
                                    l = i.duration || 500,
                                    h = s + l,
                                    c = i.onChange || t,
                                    u = i.abort || t,
                                    f = i.onComplete || t,
                                    d = i.easing || e,
                                    p = "startValue" in i ? i.startValue : 0,
                                    g = "endValue" in i ? i.endValue : 100,
                                    v = i.byValue || g - p;
                                i.onStart && i.onStart(),
                                    function t(e) {
                                        var i = (a = e || +new Date) > h ? l : a - s,
                                            o = i / l,
                                            m = d(i, p, v, l),
                                            y = Math.abs((m - p) / v);
                                        if (!r) {
                                            if (!u(m, y, o)) return a > h ? (c(g, 1, 1), void f(g, 1, 1)) : (c(m, y, o), void n(t));
                                            f(g, 1, 1)
                                        }
                                    }(s)
                            })),
                            function() {
                                r = !0
                            }
                    }, T.util.requestAnimFrame = n, T.util.cancelAnimFrame = function() {
                        return r.apply(T.window, arguments)
                    }
                }(),
                function() {
                    function t(t, e, i) {
                        var r = "rgba(" + parseInt(t[0] + i * (e[0] - t[0]), 10) + "," + parseInt(t[1] + i * (e[1] - t[1]), 10) + "," + parseInt(t[2] + i * (e[2] - t[2]), 10);
                        return r += "," + (t && e ? parseFloat(t[3] + i * (e[3] - t[3])) : 1), r += ")"
                    }
                    T.util.animateColor = function(e, i, r, n) {
                        var o = new T.Color(e).getSource(),
                            a = new T.Color(i).getSource(),
                            s = n.onComplete,
                            l = n.onChange;
                        return n = n || {}, T.util.animate(T.util.object.extend(n, {
                            duration: r || 500,
                            startValue: o,
                            endValue: a,
                            byValue: a,
                            easing: function(e, i, r, o) {
                                return t(i, r, n.colorEasing ? n.colorEasing(e, o) : 1 - Math.cos(e / o * (Math.PI / 2)))
                            },
                            onComplete: function(e, i, r) {
                                if (s) return s(t(a, a, 0), i, r)
                            },
                            onChange: function(e, i, r) {
                                if (l) {
                                    if (Array.isArray(e)) return l(t(e, e, 0), i, r);
                                    l(e, i, r)
                                }
                            }
                        }))
                    }
                }(),
                function() {
                    function t(t, e, i, r) {
                        return t < Math.abs(e) ? (t = e, r = i / 4) : r = 0 === e && 0 === t ? i / (2 * Math.PI) * Math.asin(1) : i / (2 * Math.PI) * Math.asin(e / t), {
                            a: t,
                            c: e,
                            p: i,
                            s: r
                        }
                    }

                    function e(t, e, i) {
                        return t.a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * i - t.s) * (2 * Math.PI) / t.p)
                    }

                    function i(t, e, i, n) {
                        return i - r(n - t, 0, i, n) + e
                    }

                    function r(t, e, i, r) {
                        return (t /= r) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e
                    }
                    T.util.ease = {
                        easeInQuad: function(t, e, i, r) {
                            return i * (t /= r) * t + e
                        },
                        easeOutQuad: function(t, e, i, r) {
                            return -i * (t /= r) * (t - 2) + e
                        },
                        easeInOutQuad: function(t, e, i, r) {
                            return (t /= r / 2) < 1 ? i / 2 * t * t + e : -i / 2 * (--t * (t - 2) - 1) + e
                        },
                        easeInCubic: function(t, e, i, r) {
                            return i * (t /= r) * t * t + e
                        },
                        easeOutCubic: function(t, e, i, r) {
                            return i * ((t = t / r - 1) * t * t + 1) + e
                        },
                        easeInOutCubic: function(t, e, i, r) {
                            return (t /= r / 2) < 1 ? i / 2 * t * t * t + e : i / 2 * ((t -= 2) * t * t + 2) + e
                        },
                        easeInQuart: function(t, e, i, r) {
                            return i * (t /= r) * t * t * t + e
                        },
                        easeOutQuart: function(t, e, i, r) {
                            return -i * ((t = t / r - 1) * t * t * t - 1) + e
                        },
                        easeInOutQuart: function(t, e, i, r) {
                            return (t /= r / 2) < 1 ? i / 2 * t * t * t * t + e : -i / 2 * ((t -= 2) * t * t * t - 2) + e
                        },
                        easeInQuint: function(t, e, i, r) {
                            return i * (t /= r) * t * t * t * t + e
                        },
                        easeOutQuint: function(t, e, i, r) {
                            return i * ((t = t / r - 1) * t * t * t * t + 1) + e
                        },
                        easeInOutQuint: function(t, e, i, r) {
                            return (t /= r / 2) < 1 ? i / 2 * t * t * t * t * t + e : i / 2 * ((t -= 2) * t * t * t * t + 2) + e
                        },
                        easeInSine: function(t, e, i, r) {
                            return -i * Math.cos(t / r * (Math.PI / 2)) + i + e
                        },
                        easeOutSine: function(t, e, i, r) {
                            return i * Math.sin(t / r * (Math.PI / 2)) + e
                        },
                        easeInOutSine: function(t, e, i, r) {
                            return -i / 2 * (Math.cos(Math.PI * t / r) - 1) + e
                        },
                        easeInExpo: function(t, e, i, r) {
                            return 0 === t ? e : i * Math.pow(2, 10 * (t / r - 1)) + e
                        },
                        easeOutExpo: function(t, e, i, r) {
                            return t === r ? e + i : i * (1 - Math.pow(2, -10 * t / r)) + e
                        },
                        easeInOutExpo: function(t, e, i, r) {
                            return 0 === t ? e : t === r ? e + i : (t /= r / 2) < 1 ? i / 2 * Math.pow(2, 10 * (t - 1)) + e : i / 2 * (2 - Math.pow(2, -10 * --t)) + e
                        },
                        easeInCirc: function(t, e, i, r) {
                            return -i * (Math.sqrt(1 - (t /= r) * t) - 1) + e
                        },
                        easeOutCirc: function(t, e, i, r) {
                            return i * Math.sqrt(1 - (t = t / r - 1) * t) + e
                        },
                        easeInOutCirc: function(t, e, i, r) {
                            return (t /= r / 2) < 1 ? -i / 2 * (Math.sqrt(1 - t * t) - 1) + e : i / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + e
                        },
                        easeInElastic: function(i, r, n, o) {
                            var a = 0;
                            return 0 === i ? r : 1 === (i /= o) ? r + n : (a || (a = .3 * o), -e(t(n, n, a, 1.70158), i, o) + r)
                        },
                        easeOutElastic: function(e, i, r, n) {
                            var o = 0;
                            if (0 === e) return i;
                            if (1 === (e /= n)) return i + r;
                            o || (o = .3 * n);
                            var a = t(r, r, o, 1.70158);
                            return a.a * Math.pow(2, -10 * e) * Math.sin((e * n - a.s) * (2 * Math.PI) / a.p) + a.c + i
                        },
                        easeInOutElastic: function(i, r, n, o) {
                            var a = 0;
                            if (0 === i) return r;
                            if (2 === (i /= o / 2)) return r + n;
                            a || (a = o * (.3 * 1.5));
                            var s = t(n, n, a, 1.70158);
                            return i < 1 ? -.5 * e(s, i, o) + r : s.a * Math.pow(2, -10 * (i -= 1)) * Math.sin((i * o - s.s) * (2 * Math.PI) / s.p) * .5 + s.c + r
                        },
                        easeInBack: function(t, e, i, r, n) {
                            return void 0 === n && (n = 1.70158), i * (t /= r) * t * ((n + 1) * t - n) + e
                        },
                        easeOutBack: function(t, e, i, r, n) {
                            return void 0 === n && (n = 1.70158), i * ((t = t / r - 1) * t * ((n + 1) * t + n) + 1) + e
                        },
                        easeInOutBack: function(t, e, i, r, n) {
                            return void 0 === n && (n = 1.70158), (t /= r / 2) < 1 ? i / 2 * (t * t * ((1 + (n *= 1.525)) * t - n)) + e : i / 2 * ((t -= 2) * t * ((1 + (n *= 1.525)) * t + n) + 2) + e
                        },
                        easeInBounce: i,
                        easeOutBounce: r,
                        easeInOutBounce: function(t, e, n, o) {
                            return t < o / 2 ? .5 * i(2 * t, 0, n, o) + e : .5 * r(2 * t - o, 0, n, o) + .5 * n + e
                        }
                    }
                }(),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.util.object.clone,
                        n = e.util.toFixed,
                        o = e.util.parseUnit,
                        a = e.util.multiplyTransformMatrices,
                        s = {
                            cx: "left",
                            x: "left",
                            r: "radius",
                            cy: "top",
                            y: "top",
                            display: "visible",
                            visibility: "visible",
                            transform: "transformMatrix",
                            "fill-opacity": "fillOpacity",
                            "fill-rule": "fillRule",
                            "font-family": "fontFamily",
                            "font-size": "fontSize",
                            "font-style": "fontStyle",
                            "font-weight": "fontWeight",
                            "letter-spacing": "charSpacing",
                            "paint-order": "paintFirst",
                            "stroke-dasharray": "strokeDashArray",
                            "stroke-dashoffset": "strokeDashOffset",
                            "stroke-linecap": "strokeLineCap",
                            "stroke-linejoin": "strokeLineJoin",
                            "stroke-miterlimit": "strokeMiterLimit",
                            "stroke-opacity": "strokeOpacity",
                            "stroke-width": "strokeWidth",
                            "text-decoration": "textDecoration",
                            "text-anchor": "textAnchor",
                            opacity: "opacity",
                            "clip-path": "clipPath",
                            "clip-rule": "clipRule",
                            "vector-effect": "strokeUniform",
                            "image-rendering": "imageSmoothing"
                        },
                        l = {
                            stroke: "strokeOpacity",
                            fill: "fillOpacity"
                        },
                        h = "font-size",
                        c = "clip-path";

                    function u(t) {
                        return t in s ? s[t] : t
                    }

                    function f(t, i, r, n) {
                        var s, l = "[object Array]" === Object.prototype.toString.call(i);
                        if ("fill" !== t && "stroke" !== t || "none" !== i) {
                            if ("strokeUniform" === t) return "non-scaling-stroke" === i;
                            if ("strokeDashArray" === t) i = "none" === i ? null : i.replace(/,/g, " ").split(/\s+/).map(parseFloat);
                            else if ("transformMatrix" === t) i = r && r.transformMatrix ? a(r.transformMatrix, e.parseTransformAttribute(i)) : e.parseTransformAttribute(i);
                            else if ("visible" === t) i = "none" !== i && "hidden" !== i, r && !1 === r.visible && (i = !1);
                            else if ("opacity" === t) i = parseFloat(i), r && void 0 !== r.opacity && (i *= r.opacity);
                            else if ("textAnchor" === t) i = "start" === i ? "left" : "end" === i ? "right" : "center";
                            else if ("charSpacing" === t) s = o(i, n) / n * 1e3;
                            else if ("paintFirst" === t) {
                                var h = i.indexOf("fill"),
                                    c = i.indexOf("stroke");
                                i = "fill";
                                (h > -1 && c > -1 && c < h || -1 === h && c > -1) && (i = "stroke")
                            } else {
                                if ("href" === t || "xlink:href" === t || "font" === t) return i;
                                if ("imageSmoothing" === t) return "optimizeQuality" === i;
                                s = l ? i.map(o) : o(i, n)
                            }
                        } else i = "";
                        return !l && isNaN(s) ? i : s
                    }

                    function d(t) {
                        return new RegExp("^(" + t.join("|") + ")\\b", "i")
                    }

                    function p(t, e) {
                        var i, r, n, o, a = [];
                        for (n = 0, o = e.length; n < o; n++) i = e[n], r = t.getElementsByTagName(i), a = a.concat(Array.prototype.slice.call(r));
                        return a
                    }

                    function g(t, e) {
                        var i, r = !0;
                        return (i = v(t, e.pop())) && e.length && (r = function(t, e) {
                            var i, r = !0;
                            for (; t.parentNode && 1 === t.parentNode.nodeType && e.length;) r && (i = e.pop()), r = v(t = t.parentNode, i);
                            return 0 === e.length
                        }(t, e)), i && r && 0 === e.length
                    }

                    function v(t, e) {
                        var i, r, n = t.nodeName,
                            o = t.getAttribute("class"),
                            a = t.getAttribute("id");
                        if (i = new RegExp("^" + n, "i"), e = e.replace(i, ""), a && e.length && (i = new RegExp("#" + a + "(?![a-zA-Z\\-]+)", "i"), e = e.replace(i, "")), o && e.length)
                            for (r = (o = o.split(" ")).length; r--;) i = new RegExp("\\." + o[r] + "(?![a-zA-Z\\-]+)", "i"), e = e.replace(i, "");
                        return 0 === e.length
                    }

                    function m(t, e) {
                        var i;
                        if (t.getElementById && (i = t.getElementById(e)), i) return i;
                        var r, n, o, a = t.getElementsByTagName("*");
                        for (n = 0, o = a.length; n < o; n++)
                            if (e === (r = a[n]).getAttribute("id")) return r
                    }
                    e.svgValidTagNamesRegEx = d(["path", "circle", "polygon", "polyline", "ellipse", "rect", "line", "image", "text"]), e.svgViewBoxElementsRegEx = d(["symbol", "image", "marker", "pattern", "view", "svg"]), e.svgInvalidAncestorsRegEx = d(["pattern", "defs", "symbol", "metadata", "clipPath", "mask", "desc"]), e.svgValidParentsRegEx = d(["symbol", "g", "a", "svg", "clipPath", "defs"]), e.cssRules = {}, e.gradientDefs = {}, e.clipPaths = {}, e.parseTransformAttribute = function() {
                        function t(t, i, r) {
                            t[r] = Math.tan(e.util.degreesToRadians(i[0]))
                        }
                        var i = e.iMatrix,
                            r = e.reNum,
                            n = e.commaWsp,
                            o = "(?:" + ("(?:(matrix)\\s*\\(\\s*(" + r + ")" + n + "(" + r + ")" + n + "(" + r + ")" + n + "(" + r + ")" + n + "(" + r + ")" + n + "(" + r + ")\\s*\\))") + "|" + ("(?:(translate)\\s*\\(\\s*(" + r + ")(?:" + n + "(" + r + "))?\\s*\\))") + "|" + ("(?:(scale)\\s*\\(\\s*(" + r + ")(?:" + n + "(" + r + "))?\\s*\\))") + "|" + ("(?:(rotate)\\s*\\(\\s*(" + r + ")(?:" + n + "(" + r + ")" + n + "(" + r + "))?\\s*\\))") + "|" + ("(?:(skewX)\\s*\\(\\s*(" + r + ")\\s*\\))") + "|" + ("(?:(skewY)\\s*\\(\\s*(" + r + ")\\s*\\))") + ")",
                            a = new RegExp("^\\s*(?:" + ("(?:" + o + "(?:" + n + "*" + o + ")*)") + "?)\\s*$"),
                            s = new RegExp(o, "g");
                        return function(r) {
                            var n = i.concat(),
                                l = [];
                            if (!r || r && !a.test(r)) return n;
                            r.replace(s, (function(r) {
                                var a = new RegExp(o).exec(r).filter((function(t) {
                                        return !!t
                                    })),
                                    s = a[1],
                                    h = a.slice(2).map(parseFloat);
                                switch (s) {
                                    case "translate":
                                        ! function(t, e) {
                                            t[4] = e[0], 2 === e.length && (t[5] = e[1])
                                        }(n, h);
                                        break;
                                    case "rotate":
                                        h[0] = e.util.degreesToRadians(h[0]),
                                            function(t, i) {
                                                var r = e.util.cos(i[0]),
                                                    n = e.util.sin(i[0]),
                                                    o = 0,
                                                    a = 0;
                                                3 === i.length && (o = i[1], a = i[2]), t[0] = r, t[1] = n, t[2] = -n, t[3] = r, t[4] = o - (r * o - n * a), t[5] = a - (n * o + r * a)
                                            }(n, h);
                                        break;
                                    case "scale":
                                        ! function(t, e) {
                                            var i = e[0],
                                                r = 2 === e.length ? e[1] : e[0];
                                            t[0] = i, t[3] = r
                                        }(n, h);
                                        break;
                                    case "skewX":
                                        t(n, h, 2);
                                        break;
                                    case "skewY":
                                        t(n, h, 1);
                                        break;
                                    case "matrix":
                                        n = h
                                }
                                l.push(n.concat()), n = i.concat()
                            }));
                            for (var h = l[0]; l.length > 1;) l.shift(), h = e.util.multiplyTransformMatrices(h, l[0]);
                            return h
                        }
                    }();
                    var y = new RegExp("^\\s*(" + e.reNum + "+)\\s*,?\\s*(" + e.reNum + "+)\\s*,?\\s*(" + e.reNum + "+)\\s*,?\\s*(" + e.reNum + "+)\\s*$");

                    function b(t) {
                        if (!e.svgViewBoxElementsRegEx.test(t.nodeName)) return {};
                        var i, r, n, a, s, l, h = t.getAttribute("viewBox"),
                            c = 1,
                            u = 1,
                            f = t.getAttribute("width"),
                            d = t.getAttribute("height"),
                            p = t.getAttribute("x") || 0,
                            g = t.getAttribute("y") || 0,
                            v = t.getAttribute("preserveAspectRatio") || "",
                            m = !h || !(h = h.match(y)),
                            b = !f || !d || "100%" === f || "100%" === d,
                            x = m && b,
                            _ = {},
                            w = "",
                            S = 0,
                            C = 0;
                        if (_.width = 0, _.height = 0, _.toBeParsed = x, m && (p || g) && t.parentNode && "#document" !== t.parentNode.nodeName && (w = " translate(" + o(p) + " " + o(g) + ") ", s = (t.getAttribute("transform") || "") + w, t.setAttribute("transform", s), t.removeAttribute("x"), t.removeAttribute("y")), x) return _;
                        if (m) return _.width = o(f), _.height = o(d), _;
                        if (i = -parseFloat(h[1]), r = -parseFloat(h[2]), n = parseFloat(h[3]), a = parseFloat(h[4]), _.minX = i, _.minY = r, _.viewBoxWidth = n, _.viewBoxHeight = a, b ? (_.width = n, _.height = a) : (_.width = o(f), _.height = o(d), c = _.width / n, u = _.height / a), "none" !== (v = e.util.parsePreserveAspectRatioAttribute(v)).alignX && ("meet" === v.meetOrSlice && (u = c = c > u ? u : c), "slice" === v.meetOrSlice && (u = c = c > u ? c : u), S = _.width - n * c, C = _.height - a * c, "Mid" === v.alignX && (S /= 2), "Mid" === v.alignY && (C /= 2), "Min" === v.alignX && (S = 0), "Min" === v.alignY && (C = 0)), 1 === c && 1 === u && 0 === i && 0 === r && 0 === p && 0 === g) return _;
                        if ((p || g) && "#document" !== t.parentNode.nodeName && (w = " translate(" + o(p) + " " + o(g) + ") "), s = w + " matrix(" + c + " 0 0 " + u + " " + (i * c + S) + " " + (r * u + C) + ") ", "svg" === t.nodeName) {
                            for (l = t.ownerDocument.createElementNS(e.svgNS, "g"); t.firstChild;) l.appendChild(t.firstChild);
                            t.appendChild(l)
                        } else(l = t).removeAttribute("x"), l.removeAttribute("y"), s = l.getAttribute("transform") + s;
                        return l.setAttribute("transform", s), _
                    }

                    function x(t, e) {
                        var i = "xlink:href",
                            r = m(t, e.getAttribute(i).substr(1));
                        if (r && r.getAttribute(i) && x(t, r), ["gradientTransform", "x1", "x2", "y1", "y2", "gradientUnits", "cx", "cy", "r", "fx", "fy"].forEach((function(t) {
                                r && !e.hasAttribute(t) && r.hasAttribute(t) && e.setAttribute(t, r.getAttribute(t))
                            })), !e.children.length)
                            for (var n = r.cloneNode(!0); n.firstChild;) e.appendChild(n.firstChild);
                        e.removeAttribute(i)
                    }
                    e.parseSVGDocument = function(t, i, n, o) {
                        if (t) {
                            ! function(t) {
                                for (var i = p(t, ["use", "svg:use"]), r = 0; i.length && r < i.length;) {
                                    var n = i[r],
                                        o = n.getAttribute("xlink:href") || n.getAttribute("href");
                                    if (null === o) return;
                                    var a, s, l, h, c = o.substr(1),
                                        u = n.getAttribute("x") || 0,
                                        f = n.getAttribute("y") || 0,
                                        d = m(t, c).cloneNode(!0),
                                        g = (d.getAttribute("transform") || "") + " translate(" + u + ", " + f + ")",
                                        v = i.length,
                                        y = e.svgNS;
                                    if (b(d), /^svg$/i.test(d.nodeName)) {
                                        var x = d.ownerDocument.createElementNS(y, "g");
                                        for (s = 0, h = (l = d.attributes).length; s < h; s++) a = l.item(s), x.setAttributeNS(y, a.nodeName, a.nodeValue);
                                        for (; d.firstChild;) x.appendChild(d.firstChild);
                                        d = x
                                    }
                                    for (s = 0, h = (l = n.attributes).length; s < h; s++) "x" !== (a = l.item(s)).nodeName && "y" !== a.nodeName && "xlink:href" !== a.nodeName && "href" !== a.nodeName && ("transform" === a.nodeName ? g = a.nodeValue + " " + g : d.setAttribute(a.nodeName, a.nodeValue));
                                    d.setAttribute("transform", g), d.setAttribute("instantiated_by_use", "1"), d.removeAttribute("id"), n.parentNode.replaceChild(d, n), i.length === v && r++
                                }
                            }(t);
                            var a, s, l = e.Object.__uid++,
                                h = b(t),
                                c = e.util.toArray(t.getElementsByTagName("*"));
                            if (h.crossOrigin = o && o.crossOrigin, h.svgUid = l, 0 === c.length && e.isLikelyNode) {
                                var u = [];
                                for (a = 0, s = (c = t.selectNodes('//*[name(.)!="svg"]')).length; a < s; a++) u[a] = c[a];
                                c = u
                            }
                            var f = c.filter((function(t) {
                                return b(t), e.svgValidTagNamesRegEx.test(t.nodeName.replace("svg:", "")) && ! function(t, e) {
                                    for (; t && (t = t.parentNode);)
                                        if (t.nodeName && e.test(t.nodeName.replace("svg:", "")) && !t.getAttribute("instantiated_by_use")) return !0;
                                    return !1
                                }(t, e.svgInvalidAncestorsRegEx)
                            }));
                            if (!f || f && !f.length) i && i([], {});
                            else {
                                var d = {};
                                c.filter((function(t) {
                                    return "clipPath" === t.nodeName.replace("svg:", "")
                                })).forEach((function(t) {
                                    var i = t.getAttribute("id");
                                    d[i] = e.util.toArray(t.getElementsByTagName("*")).filter((function(t) {
                                        return e.svgValidTagNamesRegEx.test(t.nodeName.replace("svg:", ""))
                                    }))
                                })), e.gradientDefs[l] = e.getGradientDefs(t), e.cssRules[l] = e.getCSSRules(t), e.clipPaths[l] = d, e.parseElements(f, (function(t, r) {
                                    i && (i(t, h, r, c), delete e.gradientDefs[l], delete e.cssRules[l], delete e.clipPaths[l])
                                }), r(h), n, o)
                            }
                        }
                    };
                    var _ = new RegExp("(normal|italic)?\\s*(normal|small-caps)?\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*(" + e.reNum + "(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|" + e.reNum + "))?\\s+(.*)");
                    i(e, {
                        parseFontDeclaration: function(t, e) {
                            var i = t.match(_);
                            if (i) {
                                var r = i[1],
                                    n = i[3],
                                    a = i[4],
                                    s = i[5],
                                    l = i[6];
                                r && (e.fontStyle = r), n && (e.fontWeight = isNaN(parseFloat(n)) ? n : parseFloat(n)), a && (e.fontSize = o(a)), l && (e.fontFamily = l), s && (e.lineHeight = "normal" === s ? 1 : s)
                            }
                        },
                        getGradientDefs: function(t) {
                            var e, i = p(t, ["linearGradient", "radialGradient", "svg:linearGradient", "svg:radialGradient"]),
                                r = 0,
                                n = {};
                            for (r = i.length; r--;)(e = i[r]).getAttribute("xlink:href") && x(t, e), n[e.getAttribute("id")] = e;
                            return n
                        },
                        parseAttributes: function(t, r, a) {
                            if (t) {
                                var s, d, p, v = {};
                                void 0 === a && (a = t.getAttribute("svgUid")), t.parentNode && e.svgValidParentsRegEx.test(t.parentNode.nodeName) && (v = e.parseAttributes(t.parentNode, r, a));
                                var m = r.reduce((function(e, i) {
                                        return (s = t.getAttribute(i)) && (e[i] = s), e
                                    }), {}),
                                    y = i(function(t, i) {
                                        var r = {};
                                        for (var n in e.cssRules[i])
                                            if (g(t, n.split(" ")))
                                                for (var o in e.cssRules[i][n]) r[o] = e.cssRules[i][n][o];
                                        return r
                                    }(t, a), e.parseStyleAttribute(t));
                                m = i(m, y), y[c] && t.setAttribute(c, y[c]), d = p = v.fontSize || e.Text.DEFAULT_SVG_FONT_SIZE, m[h] && (m[h] = d = o(m[h], p));
                                var b, x, _ = {};
                                for (var w in m) x = f(b = u(w), m[w], v, d), _[b] = x;
                                _ && _.font && e.parseFontDeclaration(_.font, _);
                                var S = i(v, _);
                                return e.svgValidParentsRegEx.test(t.nodeName) ? S : function(t) {
                                    for (var i in l)
                                        if (void 0 !== t[l[i]] && "" !== t[i]) {
                                            if (void 0 === t[i]) {
                                                if (!e.Object.prototype[i]) continue;
                                                t[i] = e.Object.prototype[i]
                                            }
                                            if (0 !== t[i].indexOf("url(")) {
                                                var r = new e.Color(t[i]);
                                                t[i] = r.setAlpha(n(r.getAlpha() * t[l[i]], 2)).toRgba()
                                            }
                                        } return t
                                }(S)
                            }
                        },
                        parseElements: function(t, i, r, n, o) {
                            new e.ElementsParser(t, i, r, n, o).parse()
                        },
                        parseStyleAttribute: function(t) {
                            var e = {},
                                i = t.getAttribute("style");
                            return i ? ("string" == typeof i ? function(t, e) {
                                var i, r;
                                t.replace(/;\s*$/, "").split(";").forEach((function(t) {
                                    var n = t.split(":");
                                    i = n[0].trim().toLowerCase(), r = n[1].trim(), e[i] = r
                                }))
                            }(i, e) : function(t, e) {
                                var i, r;
                                for (var n in t) void 0 !== t[n] && (i = n.toLowerCase(), r = t[n], e[i] = r)
                            }(i, e), e) : e
                        },
                        parsePointsAttribute: function(t) {
                            if (!t) return null;
                            var e, i, r = [];
                            for (e = 0, i = (t = (t = t.replace(/,/g, " ").trim()).split(/\s+/)).length; e < i; e += 2) r.push({
                                x: parseFloat(t[e]),
                                y: parseFloat(t[e + 1])
                            });
                            return r
                        },
                        getCSSRules: function(t) {
                            var i, r, n = t.getElementsByTagName("style"),
                                o = {};
                            for (i = 0, r = n.length; i < r; i++) {
                                var a = n[i].textContent;
                                "" !== (a = a.replace(/\/\*[\s\S]*?\*\//g, "")).trim() && a.match(/[^{]*\{[\s\S]*?\}/g).map((function(t) {
                                    return t.trim()
                                })).forEach((function(t) {
                                    var n = t.match(/([\s\S]*?)\s*\{([^}]*)\}/),
                                        a = {},
                                        s = n[2].trim().replace(/;$/, "").split(/\s*;\s*/);
                                    for (i = 0, r = s.length; i < r; i++) {
                                        var l = s[i].split(/\s*:\s*/),
                                            h = l[0],
                                            c = l[1];
                                        a[h] = c
                                    }(t = n[1]).split(",").forEach((function(t) {
                                        "" !== (t = t.replace(/^svg/i, "").trim()) && (o[t] ? e.util.object.extend(o[t], a) : o[t] = e.util.object.clone(a))
                                    }))
                                }))
                            }
                            return o
                        },
                        loadSVGFromURL: function(t, i, r, n) {
                            t = t.replace(/^\n\s*/, "").trim(), new e.util.request(t, {
                                method: "get",
                                onComplete: function(t) {
                                    var o = t.responseXML;
                                    if (!o || !o.documentElement) return i && i(null), !1;
                                    e.parseSVGDocument(o.documentElement, (function(t, e, r, n) {
                                        i && i(t, e, r, n)
                                    }), r, n)
                                }
                            })
                        },
                        loadSVGFromString: function(t, i, r, n) {
                            var o = (new e.window.DOMParser).parseFromString(t.trim(), "text/xml");
                            e.parseSVGDocument(o.documentElement, (function(t, e, r, n) {
                                i(t, e, r, n)
                            }), r, n)
                        }
                    })
                }(e), T.ElementsParser = function(t, e, i, r, n, o) {
                    this.elements = t, this.callback = e, this.options = i, this.reviver = r, this.svgUid = i && i.svgUid || 0, this.parsingOptions = n, this.regexUrl = /^url\(['"]?#([^'"]+)['"]?\)/g, this.doc = o
                }, (v = T.ElementsParser.prototype).parse = function() {
                    this.instances = new Array(this.elements.length), this.numElements = this.elements.length, this.createObjects()
                }, v.createObjects = function() {
                    var t = this;
                    this.elements.forEach((function(e, i) {
                        e.setAttribute("svgUid", t.svgUid), t.createObject(e, i)
                    }))
                }, v.findTag = function(t) {
                    return T[T.util.string.capitalize(t.tagName.replace("svg:", ""))]
                }, v.createObject = function(t, e) {
                    var i = this.findTag(t);
                    if (i && i.fromElement) try {
                        i.fromElement(t, this.createCallback(e, t), this.options)
                    } catch (t) {
                        T.log(t)
                    } else this.checkIfDone()
                }, v.createCallback = function(t, e) {
                    var i = this;
                    return function(r) {
                        var n;
                        i.resolveGradient(r, e, "fill"), i.resolveGradient(r, e, "stroke"), r instanceof T.Image && r._originalElement && (n = r.parsePreserveAspectRatioAttribute(e)), r._removeTransformMatrix(n), i.resolveClipPath(r, e), i.reviver && i.reviver(e, r), i.instances[t] = r, i.checkIfDone()
                    }
                }, v.extractPropertyDefinition = function(t, e, i) {
                    var r = t[e],
                        n = this.regexUrl;
                    if (n.test(r)) {
                        n.lastIndex = 0;
                        var o = n.exec(r)[1];
                        return n.lastIndex = 0, T[i][this.svgUid][o]
                    }
                }, v.resolveGradient = function(t, e, i) {
                    var r = this.extractPropertyDefinition(t, i, "gradientDefs");
                    if (r) {
                        var n = e.getAttribute(i + "-opacity"),
                            o = T.Gradient.fromElement(r, t, n, this.options);
                        t.set(i, o)
                    }
                }, v.createClipPathCallback = function(t, e) {
                    return function(t) {
                        t._removeTransformMatrix(), t.fillRule = t.clipRule, e.push(t)
                    }
                }, v.resolveClipPath = function(t, e) {
                    var i, r, n, o, a = this.extractPropertyDefinition(t, "clipPath", "clipPaths");
                    if (a) {
                        n = [], r = T.util.invertTransform(t.calcTransformMatrix());
                        for (var s = a[0].parentNode, l = e; l.parentNode && l.getAttribute("clip-path") !== t.clipPath;) l = l.parentNode;
                        l.parentNode.appendChild(s);
                        for (var h = 0; h < a.length; h++) i = a[h], this.findTag(i).fromElement(i, this.createClipPathCallback(t, n), this.options);
                        a = 1 === n.length ? n[0] : new T.Group(n), o = T.util.multiplyTransformMatrices(r, a.calcTransformMatrix()), a.clipPath && this.resolveClipPath(a, l);
                        var c = T.util.qrDecompose(o);
                        a.flipX = !1, a.flipY = !1, a.set("scaleX", c.scaleX), a.set("scaleY", c.scaleY), a.angle = c.angle, a.skewX = c.skewX, a.skewY = 0, a.setPositionByOrigin({
                            x: c.translateX,
                            y: c.translateY
                        }, "center", "center"), t.clipPath = a
                    } else delete t.clipPath
                }, v.checkIfDone = function() {
                    0 == --this.numElements && (this.instances = this.instances.filter((function(t) {
                        return null != t
                    })), this.callback(this.instances, this.elements))
                },
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});

                    function i(t, e) {
                        this.x = t, this.y = e
                    }
                    e.Point ? e.warn("fabric.Point is already defined") : (e.Point = i, i.prototype = {
                        type: "point",
                        constructor: i,
                        add: function(t) {
                            return new i(this.x + t.x, this.y + t.y)
                        },
                        addEquals: function(t) {
                            return this.x += t.x, this.y += t.y, this
                        },
                        scalarAdd: function(t) {
                            return new i(this.x + t, this.y + t)
                        },
                        scalarAddEquals: function(t) {
                            return this.x += t, this.y += t, this
                        },
                        subtract: function(t) {
                            return new i(this.x - t.x, this.y - t.y)
                        },
                        subtractEquals: function(t) {
                            return this.x -= t.x, this.y -= t.y, this
                        },
                        scalarSubtract: function(t) {
                            return new i(this.x - t, this.y - t)
                        },
                        scalarSubtractEquals: function(t) {
                            return this.x -= t, this.y -= t, this
                        },
                        multiply: function(t) {
                            return new i(this.x * t, this.y * t)
                        },
                        multiplyEquals: function(t) {
                            return this.x *= t, this.y *= t, this
                        },
                        divide: function(t) {
                            return new i(this.x / t, this.y / t)
                        },
                        divideEquals: function(t) {
                            return this.x /= t, this.y /= t, this
                        },
                        eq: function(t) {
                            return this.x === t.x && this.y === t.y
                        },
                        lt: function(t) {
                            return this.x < t.x && this.y < t.y
                        },
                        lte: function(t) {
                            return this.x <= t.x && this.y <= t.y
                        },
                        gt: function(t) {
                            return this.x > t.x && this.y > t.y
                        },
                        gte: function(t) {
                            return this.x >= t.x && this.y >= t.y
                        },
                        lerp: function(t, e) {
                            return void 0 === e && (e = .5), e = Math.max(Math.min(1, e), 0), new i(this.x + (t.x - this.x) * e, this.y + (t.y - this.y) * e)
                        },
                        distanceFrom: function(t) {
                            var e = this.x - t.x,
                                i = this.y - t.y;
                            return Math.sqrt(e * e + i * i)
                        },
                        midPointFrom: function(t) {
                            return this.lerp(t)
                        },
                        min: function(t) {
                            return new i(Math.min(this.x, t.x), Math.min(this.y, t.y))
                        },
                        max: function(t) {
                            return new i(Math.max(this.x, t.x), Math.max(this.y, t.y))
                        },
                        toString: function() {
                            return this.x + "," + this.y
                        },
                        setXY: function(t, e) {
                            return this.x = t, this.y = e, this
                        },
                        setX: function(t) {
                            return this.x = t, this
                        },
                        setY: function(t) {
                            return this.y = t, this
                        },
                        setFromPoint: function(t) {
                            return this.x = t.x, this.y = t.y, this
                        },
                        swap: function(t) {
                            var e = this.x,
                                i = this.y;
                            this.x = t.x, this.y = t.y, t.x = e, t.y = i
                        },
                        clone: function() {
                            return new i(this.x, this.y)
                        }
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});

                    function i(t) {
                        this.status = t, this.points = []
                    }
                    e.Intersection ? e.warn("fabric.Intersection is already defined") : (e.Intersection = i, e.Intersection.prototype = {
                        constructor: i,
                        appendPoint: function(t) {
                            return this.points.push(t), this
                        },
                        appendPoints: function(t) {
                            return this.points = this.points.concat(t), this
                        }
                    }, e.Intersection.intersectLineLine = function(t, r, n, o) {
                        var a, s = (o.x - n.x) * (t.y - n.y) - (o.y - n.y) * (t.x - n.x),
                            l = (r.x - t.x) * (t.y - n.y) - (r.y - t.y) * (t.x - n.x),
                            h = (o.y - n.y) * (r.x - t.x) - (o.x - n.x) * (r.y - t.y);
                        if (0 !== h) {
                            var c = s / h,
                                u = l / h;
                            0 <= c && c <= 1 && 0 <= u && u <= 1 ? (a = new i("Intersection")).appendPoint(new e.Point(t.x + c * (r.x - t.x), t.y + c * (r.y - t.y))) : a = new i
                        } else a = new i(0 === s || 0 === l ? "Coincident" : "Parallel");
                        return a
                    }, e.Intersection.intersectLinePolygon = function(t, e, r) {
                        var n, o, a, s, l = new i,
                            h = r.length;
                        for (s = 0; s < h; s++) n = r[s], o = r[(s + 1) % h], a = i.intersectLineLine(t, e, n, o), l.appendPoints(a.points);
                        return l.points.length > 0 && (l.status = "Intersection"), l
                    }, e.Intersection.intersectPolygonPolygon = function(t, e) {
                        var r, n = new i,
                            o = t.length;
                        for (r = 0; r < o; r++) {
                            var a = t[r],
                                s = t[(r + 1) % o],
                                l = i.intersectLinePolygon(a, s, e);
                            n.appendPoints(l.points)
                        }
                        return n.points.length > 0 && (n.status = "Intersection"), n
                    }, e.Intersection.intersectPolygonRectangle = function(t, r, n) {
                        var o = r.min(n),
                            a = r.max(n),
                            s = new e.Point(a.x, o.y),
                            l = new e.Point(o.x, a.y),
                            h = i.intersectLinePolygon(o, s, t),
                            c = i.intersectLinePolygon(s, a, t),
                            u = i.intersectLinePolygon(a, l, t),
                            f = i.intersectLinePolygon(l, o, t),
                            d = new i;
                        return d.appendPoints(h.points), d.appendPoints(c.points), d.appendPoints(u.points), d.appendPoints(f.points), d.points.length > 0 && (d.status = "Intersection"), d
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});

                    function i(t) {
                        t ? this._tryParsingColor(t) : this.setSource([0, 0, 0, 1])
                    }

                    function r(t, e, i) {
                        return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t
                    }
                    e.Color ? e.warn("fabric.Color is already defined.") : (e.Color = i, e.Color.prototype = {
                        _tryParsingColor: function(t) {
                            var e;
                            t in i.colorNameMap && (t = i.colorNameMap[t]), "transparent" === t && (e = [255, 255, 255, 0]), e || (e = i.sourceFromHex(t)), e || (e = i.sourceFromRgb(t)), e || (e = i.sourceFromHsl(t)), e || (e = [0, 0, 0, 1]), e && this.setSource(e)
                        },
                        _rgbToHsl: function(t, i, r) {
                            t /= 255, i /= 255, r /= 255;
                            var n, o, a, s = e.util.array.max([t, i, r]),
                                l = e.util.array.min([t, i, r]);
                            if (a = (s + l) / 2, s === l) n = o = 0;
                            else {
                                var h = s - l;
                                switch (o = a > .5 ? h / (2 - s - l) : h / (s + l), s) {
                                    case t:
                                        n = (i - r) / h + (i < r ? 6 : 0);
                                        break;
                                    case i:
                                        n = (r - t) / h + 2;
                                        break;
                                    case r:
                                        n = (t - i) / h + 4
                                }
                                n /= 6
                            }
                            return [Math.round(360 * n), Math.round(100 * o), Math.round(100 * a)]
                        },
                        getSource: function() {
                            return this._source
                        },
                        setSource: function(t) {
                            this._source = t
                        },
                        toRgb: function() {
                            var t = this.getSource();
                            return "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")"
                        },
                        toRgba: function() {
                            var t = this.getSource();
                            return "rgba(" + t[0] + "," + t[1] + "," + t[2] + "," + t[3] + ")"
                        },
                        toHsl: function() {
                            var t = this.getSource(),
                                e = this._rgbToHsl(t[0], t[1], t[2]);
                            return "hsl(" + e[0] + "," + e[1] + "%," + e[2] + "%)"
                        },
                        toHsla: function() {
                            var t = this.getSource(),
                                e = this._rgbToHsl(t[0], t[1], t[2]);
                            return "hsla(" + e[0] + "," + e[1] + "%," + e[2] + "%," + t[3] + ")"
                        },
                        toHex: function() {
                            var t, e, i, r = this.getSource();
                            return t = 1 === (t = r[0].toString(16)).length ? "0" + t : t, e = 1 === (e = r[1].toString(16)).length ? "0" + e : e, i = 1 === (i = r[2].toString(16)).length ? "0" + i : i, t.toUpperCase() + e.toUpperCase() + i.toUpperCase()
                        },
                        toHexa: function() {
                            var t, e = this.getSource();
                            return t = 1 === (t = (t = Math.round(255 * e[3])).toString(16)).length ? "0" + t : t, this.toHex() + t.toUpperCase()
                        },
                        getAlpha: function() {
                            return this.getSource()[3]
                        },
                        setAlpha: function(t) {
                            var e = this.getSource();
                            return e[3] = t, this.setSource(e), this
                        },
                        toGrayscale: function() {
                            var t = this.getSource(),
                                e = parseInt((.3 * t[0] + .59 * t[1] + .11 * t[2]).toFixed(0), 10),
                                i = t[3];
                            return this.setSource([e, e, e, i]), this
                        },
                        toBlackWhite: function(t) {
                            var e = this.getSource(),
                                i = (.3 * e[0] + .59 * e[1] + .11 * e[2]).toFixed(0),
                                r = e[3];
                            return t = t || 127, i = Number(i) < Number(t) ? 0 : 255, this.setSource([i, i, i, r]), this
                        },
                        overlayWith: function(t) {
                            t instanceof i || (t = new i(t));
                            var e, r = [],
                                n = this.getAlpha(),
                                o = this.getSource(),
                                a = t.getSource();
                            for (e = 0; e < 3; e++) r.push(Math.round(.5 * o[e] + .5 * a[e]));
                            return r[3] = n, this.setSource(r), this
                        }
                    }, e.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*((?:\d*\.?\d+)?)\s*)?\)$/i, e.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/i, e.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i, e.Color.colorNameMap = {
                        aliceblue: "#F0F8FF",
                        antiquewhite: "#FAEBD7",
                        aqua: "#00FFFF",
                        aquamarine: "#7FFFD4",
                        azure: "#F0FFFF",
                        beige: "#F5F5DC",
                        bisque: "#FFE4C4",
                        black: "#000000",
                        blanchedalmond: "#FFEBCD",
                        blue: "#0000FF",
                        blueviolet: "#8A2BE2",
                        brown: "#A52A2A",
                        burlywood: "#DEB887",
                        cadetblue: "#5F9EA0",
                        chartreuse: "#7FFF00",
                        chocolate: "#D2691E",
                        coral: "#FF7F50",
                        cornflowerblue: "#6495ED",
                        cornsilk: "#FFF8DC",
                        crimson: "#DC143C",
                        cyan: "#00FFFF",
                        darkblue: "#00008B",
                        darkcyan: "#008B8B",
                        darkgoldenrod: "#B8860B",
                        darkgray: "#A9A9A9",
                        darkgrey: "#A9A9A9",
                        darkgreen: "#006400",
                        darkkhaki: "#BDB76B",
                        darkmagenta: "#8B008B",
                        darkolivegreen: "#556B2F",
                        darkorange: "#FF8C00",
                        darkorchid: "#9932CC",
                        darkred: "#8B0000",
                        darksalmon: "#E9967A",
                        darkseagreen: "#8FBC8F",
                        darkslateblue: "#483D8B",
                        darkslategray: "#2F4F4F",
                        darkslategrey: "#2F4F4F",
                        darkturquoise: "#00CED1",
                        darkviolet: "#9400D3",
                        deeppink: "#FF1493",
                        deepskyblue: "#00BFFF",
                        dimgray: "#696969",
                        dimgrey: "#696969",
                        dodgerblue: "#1E90FF",
                        firebrick: "#B22222",
                        floralwhite: "#FFFAF0",
                        forestgreen: "#228B22",
                        fuchsia: "#FF00FF",
                        gainsboro: "#DCDCDC",
                        ghostwhite: "#F8F8FF",
                        gold: "#FFD700",
                        goldenrod: "#DAA520",
                        gray: "#808080",
                        grey: "#808080",
                        green: "#008000",
                        greenyellow: "#ADFF2F",
                        honeydew: "#F0FFF0",
                        hotpink: "#FF69B4",
                        indianred: "#CD5C5C",
                        indigo: "#4B0082",
                        ivory: "#FFFFF0",
                        khaki: "#F0E68C",
                        lavender: "#E6E6FA",
                        lavenderblush: "#FFF0F5",
                        lawngreen: "#7CFC00",
                        lemonchiffon: "#FFFACD",
                        lightblue: "#ADD8E6",
                        lightcoral: "#F08080",
                        lightcyan: "#E0FFFF",
                        lightgoldenrodyellow: "#FAFAD2",
                        lightgray: "#D3D3D3",
                        lightgrey: "#D3D3D3",
                        lightgreen: "#90EE90",
                        lightpink: "#FFB6C1",
                        lightsalmon: "#FFA07A",
                        lightseagreen: "#20B2AA",
                        lightskyblue: "#87CEFA",
                        lightslategray: "#778899",
                        lightslategrey: "#778899",
                        lightsteelblue: "#B0C4DE",
                        lightyellow: "#FFFFE0",
                        lime: "#00FF00",
                        limegreen: "#32CD32",
                        linen: "#FAF0E6",
                        magenta: "#FF00FF",
                        maroon: "#800000",
                        mediumaquamarine: "#66CDAA",
                        mediumblue: "#0000CD",
                        mediumorchid: "#BA55D3",
                        mediumpurple: "#9370DB",
                        mediumseagreen: "#3CB371",
                        mediumslateblue: "#7B68EE",
                        mediumspringgreen: "#00FA9A",
                        mediumturquoise: "#48D1CC",
                        mediumvioletred: "#C71585",
                        midnightblue: "#191970",
                        mintcream: "#F5FFFA",
                        mistyrose: "#FFE4E1",
                        moccasin: "#FFE4B5",
                        navajowhite: "#FFDEAD",
                        navy: "#000080",
                        oldlace: "#FDF5E6",
                        olive: "#808000",
                        olivedrab: "#6B8E23",
                        orange: "#FFA500",
                        orangered: "#FF4500",
                        orchid: "#DA70D6",
                        palegoldenrod: "#EEE8AA",
                        palegreen: "#98FB98",
                        paleturquoise: "#AFEEEE",
                        palevioletred: "#DB7093",
                        papayawhip: "#FFEFD5",
                        peachpuff: "#FFDAB9",
                        peru: "#CD853F",
                        pink: "#FFC0CB",
                        plum: "#DDA0DD",
                        powderblue: "#B0E0E6",
                        purple: "#800080",
                        rebeccapurple: "#663399",
                        red: "#FF0000",
                        rosybrown: "#BC8F8F",
                        royalblue: "#4169E1",
                        saddlebrown: "#8B4513",
                        salmon: "#FA8072",
                        sandybrown: "#F4A460",
                        seagreen: "#2E8B57",
                        seashell: "#FFF5EE",
                        sienna: "#A0522D",
                        silver: "#C0C0C0",
                        skyblue: "#87CEEB",
                        slateblue: "#6A5ACD",
                        slategray: "#708090",
                        slategrey: "#708090",
                        snow: "#FFFAFA",
                        springgreen: "#00FF7F",
                        steelblue: "#4682B4",
                        tan: "#D2B48C",
                        teal: "#008080",
                        thistle: "#D8BFD8",
                        tomato: "#FF6347",
                        turquoise: "#40E0D0",
                        violet: "#EE82EE",
                        wheat: "#F5DEB3",
                        white: "#FFFFFF",
                        whitesmoke: "#F5F5F5",
                        yellow: "#FFFF00",
                        yellowgreen: "#9ACD32"
                    }, e.Color.fromRgb = function(t) {
                        return i.fromSource(i.sourceFromRgb(t))
                    }, e.Color.sourceFromRgb = function(t) {
                        var e = t.match(i.reRGBa);
                        if (e) {
                            var r = parseInt(e[1], 10) / (/%$/.test(e[1]) ? 100 : 1) * (/%$/.test(e[1]) ? 255 : 1),
                                n = parseInt(e[2], 10) / (/%$/.test(e[2]) ? 100 : 1) * (/%$/.test(e[2]) ? 255 : 1),
                                o = parseInt(e[3], 10) / (/%$/.test(e[3]) ? 100 : 1) * (/%$/.test(e[3]) ? 255 : 1);
                            return [parseInt(r, 10), parseInt(n, 10), parseInt(o, 10), e[4] ? parseFloat(e[4]) : 1]
                        }
                    }, e.Color.fromRgba = i.fromRgb, e.Color.fromHsl = function(t) {
                        return i.fromSource(i.sourceFromHsl(t))
                    }, e.Color.sourceFromHsl = function(t) {
                        var e = t.match(i.reHSLa);
                        if (e) {
                            var n, o, a, s = (parseFloat(e[1]) % 360 + 360) % 360 / 360,
                                l = parseFloat(e[2]) / (/%$/.test(e[2]) ? 100 : 1),
                                h = parseFloat(e[3]) / (/%$/.test(e[3]) ? 100 : 1);
                            if (0 === l) n = o = a = h;
                            else {
                                var c = h <= .5 ? h * (l + 1) : h + l - h * l,
                                    u = 2 * h - c;
                                n = r(u, c, s + 1 / 3), o = r(u, c, s), a = r(u, c, s - 1 / 3)
                            }
                            return [Math.round(255 * n), Math.round(255 * o), Math.round(255 * a), e[4] ? parseFloat(e[4]) : 1]
                        }
                    }, e.Color.fromHsla = i.fromHsl, e.Color.fromHex = function(t) {
                        return i.fromSource(i.sourceFromHex(t))
                    }, e.Color.sourceFromHex = function(t) {
                        if (t.match(i.reHex)) {
                            var e = t.slice(t.indexOf("#") + 1),
                                r = 3 === e.length || 4 === e.length,
                                n = 8 === e.length || 4 === e.length,
                                o = r ? e.charAt(0) + e.charAt(0) : e.substring(0, 2),
                                a = r ? e.charAt(1) + e.charAt(1) : e.substring(2, 4),
                                s = r ? e.charAt(2) + e.charAt(2) : e.substring(4, 6),
                                l = n ? r ? e.charAt(3) + e.charAt(3) : e.substring(6, 8) : "FF";
                            return [parseInt(o, 16), parseInt(a, 16), parseInt(s, 16), parseFloat((parseInt(l, 16) / 255).toFixed(2))]
                        }
                    }, e.Color.fromSource = function(t) {
                        var e = new i;
                        return e.setSource(t), e
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = ["e", "se", "s", "sw", "w", "nw", "n", "ne", "e"],
                        r = ["ns", "nesw", "ew", "nwse"],
                        n = {},
                        o = "left",
                        a = "top",
                        s = "right",
                        l = "bottom",
                        h = "center",
                        c = {
                            top: l,
                            bottom: a,
                            left: s,
                            right: o,
                            center: h
                        },
                        u = e.util.radiansToDegrees,
                        f = Math.sign || function(t) {
                            return (t > 0) - (t < 0) || +t
                        };

                    function d(t, e) {
                        var i = t.angle + u(Math.atan2(e.y, e.x)) + 360;
                        return Math.round(i % 360 / 45)
                    }

                    function p(t, i) {
                        var r = i.transform.target,
                            n = r.canvas,
                            o = e.util.object.clone(i);
                        o.target = r, n && n.fire("object:" + t, o), r.fire(t, i)
                    }

                    function g(t, e) {
                        var i = e.canvas,
                            r = t[i.uniScaleKey];
                        return i.uniformScaling && !r || !i.uniformScaling && r
                    }

                    function v(t) {
                        return t.originX === h && t.originY === h
                    }

                    function m(t, e, i) {
                        var r = t.lockScalingX,
                            n = t.lockScalingY;
                        return !(!r || !n) || (!(e || !r && !n || !i) || (!(!r || "x" !== e) || !(!n || "y" !== e)))
                    }

                    function y(t, e, i, r) {
                        return {
                            e: t,
                            transform: e,
                            pointer: {
                                x: i,
                                y: r
                            }
                        }
                    }

                    function b(t) {
                        return function(e, i, r, n) {
                            var o = i.target,
                                a = o.getCenterPoint(),
                                s = o.translateToOriginPoint(a, i.originX, i.originY),
                                l = t(e, i, r, n);
                            return o.setPositionByOrigin(s, i.originX, i.originY), l
                        }
                    }

                    function x(t, e) {
                        return function(i, r, n, o) {
                            var a = e(i, r, n, o);
                            return a && p(t, y(i, r, n, o)), a
                        }
                    }

                    function _(t, i, r, n, o) {
                        var a = t.target,
                            s = a.controls[t.corner],
                            l = a.canvas.getZoom(),
                            h = a.padding / l,
                            c = a.toLocalPoint(new e.Point(n, o), i, r);
                        return c.x >= h && (c.x -= h), c.x <= -h && (c.x += h), c.y >= h && (c.y -= h), c.y <= h && (c.y += h), c.x -= s.offsetX, c.y -= s.offsetY, c
                    }

                    function w(t) {
                        return t.flipX !== t.flipY
                    }

                    function S(t, e, i, r, n) {
                        if (0 !== t[e]) {
                            var o = n / t._getTransformedDimensions()[r] * t[i];
                            t.set(i, o)
                        }
                    }

                    function C(t, e, i, r) {
                        var n, h = e.target,
                            c = h._getTransformedDimensions(0, h.skewY),
                            f = _(e, e.originX, e.originY, i, r),
                            d = Math.abs(2 * f.x) - c.x,
                            p = h.skewX;
                        d < 2 ? n = 0 : (n = u(Math.atan2(d / h.scaleX, c.y / h.scaleY)), e.originX === o && e.originY === l && (n = -n), e.originX === s && e.originY === a && (n = -n), w(h) && (n = -n));
                        var g = p !== n;
                        if (g) {
                            var v = h._getTransformedDimensions().y;
                            h.set("skewX", n), S(h, "skewY", "scaleY", "y", v)
                        }
                        return g
                    }

                    function T(t, e, i, r) {
                        var n, h = e.target,
                            c = h._getTransformedDimensions(h.skewX, 0),
                            f = _(e, e.originX, e.originY, i, r),
                            d = Math.abs(2 * f.y) - c.y,
                            p = h.skewY;
                        d < 2 ? n = 0 : (n = u(Math.atan2(d / h.scaleY, c.x / h.scaleX)), e.originX === o && e.originY === l && (n = -n), e.originX === s && e.originY === a && (n = -n), w(h) && (n = -n));
                        var g = p !== n;
                        if (g) {
                            var v = h._getTransformedDimensions().x;
                            h.set("skewY", n), S(h, "skewX", "scaleX", "x", v)
                        }
                        return g
                    }

                    function E(t, e, i, r, n) {
                        n = n || {};
                        var o, a, s, l, h, u, d = e.target,
                            p = d.lockScalingX,
                            y = d.lockScalingY,
                            b = n.by,
                            x = g(t, d),
                            w = m(d, b, x),
                            S = e.gestureScale;
                        if (w) return !1;
                        if (S) a = e.scaleX * S, s = e.scaleY * S;
                        else {
                            if (o = _(e, e.originX, e.originY, i, r), h = "y" !== b ? f(o.x) : 1, u = "x" !== b ? f(o.y) : 1, e.signX || (e.signX = h), e.signY || (e.signY = u), d.lockScalingFlip && (e.signX !== h || e.signY !== u)) return !1;
                            if (l = d._getTransformedDimensions(), x && !b) {
                                var C = Math.abs(o.x) + Math.abs(o.y),
                                    T = e.original,
                                    E = C / (Math.abs(l.x * T.scaleX / d.scaleX) + Math.abs(l.y * T.scaleY / d.scaleY));
                                a = T.scaleX * E, s = T.scaleY * E
                            } else a = Math.abs(o.x * d.scaleX / l.x), s = Math.abs(o.y * d.scaleY / l.y);
                            v(e) && (a *= 2, s *= 2), e.signX !== h && "y" !== b && (e.originX = c[e.originX], a *= -1, e.signX = h), e.signY !== u && "x" !== b && (e.originY = c[e.originY], s *= -1, e.signY = u)
                        }
                        var k = d.scaleX,
                            O = d.scaleY;
                        return b ? ("x" === b && d.set("scaleX", a), "y" === b && d.set("scaleY", s)) : (!p && d.set("scaleX", a), !y && d.set("scaleY", s)), k !== d.scaleX || O !== d.scaleY
                    }
                    n.scaleCursorStyleHandler = function(t, e, r) {
                        var n = g(t, r),
                            o = "";
                        if (0 !== e.x && 0 === e.y ? o = "x" : 0 === e.x && 0 !== e.y && (o = "y"), m(r, o, n)) return "not-allowed";
                        var a = d(r, e);
                        return i[a] + "-resize"
                    }, n.skewCursorStyleHandler = function(t, e, i) {
                        var n = "not-allowed";
                        if (0 !== e.x && i.lockSkewingY) return n;
                        if (0 !== e.y && i.lockSkewingX) return n;
                        var o = d(i, e) % 4;
                        return r[o] + "-resize"
                    }, n.scaleSkewCursorStyleHandler = function(t, e, i) {
                        return t[i.canvas.altActionKey] ? n.skewCursorStyleHandler(t, e, i) : n.scaleCursorStyleHandler(t, e, i)
                    }, n.rotationWithSnapping = x("rotating", b((function(t, e, i, r) {
                        var n = e,
                            o = n.target,
                            a = o.translateToOriginPoint(o.getCenterPoint(), n.originX, n.originY);
                        if (o.lockRotation) return !1;
                        var s, l = Math.atan2(n.ey - a.y, n.ex - a.x),
                            h = Math.atan2(r - a.y, i - a.x),
                            c = u(h - l + n.theta);
                        if (o.snapAngle > 0) {
                            var f = o.snapAngle,
                                d = o.snapThreshold || f,
                                p = Math.ceil(c / f) * f,
                                g = Math.floor(c / f) * f;
                            Math.abs(c - g) < d ? c = g : Math.abs(c - p) < d && (c = p)
                        }
                        return c < 0 && (c = 360 + c), c %= 360, s = o.angle !== c, o.angle = c, s
                    }))), n.scalingEqually = x("scaling", b((function(t, e, i, r) {
                        return E(t, e, i, r)
                    }))), n.scalingX = x("scaling", b((function(t, e, i, r) {
                        return E(t, e, i, r, {
                            by: "x"
                        })
                    }))), n.scalingY = x("scaling", b((function(t, e, i, r) {
                        return E(t, e, i, r, {
                            by: "y"
                        })
                    }))), n.scalingYOrSkewingX = function(t, e, i, r) {
                        return t[e.target.canvas.altActionKey] ? n.skewHandlerX(t, e, i, r) : n.scalingY(t, e, i, r)
                    }, n.scalingXOrSkewingY = function(t, e, i, r) {
                        return t[e.target.canvas.altActionKey] ? n.skewHandlerY(t, e, i, r) : n.scalingX(t, e, i, r)
                    }, n.changeWidth = x("resizing", b((function(t, e, i, r) {
                        var n = e.target,
                            o = _(e, e.originX, e.originY, i, r),
                            a = n.strokeWidth / (n.strokeUniform ? n.scaleX : 1),
                            s = v(e) ? 2 : 1,
                            l = n.width,
                            h = Math.abs(o.x * s / n.scaleX) - a;
                        return n.set("width", Math.max(h, 0)), l !== h
                    }))), n.skewHandlerX = function(t, e, i, r) {
                        var n, l = e.target,
                            c = l.skewX,
                            u = e.originY;
                        return !l.lockSkewingX && (0 === c ? n = _(e, h, h, i, r).x > 0 ? o : s : (c > 0 && (n = u === a ? o : s), c < 0 && (n = u === a ? s : o), w(l) && (n = n === o ? s : o)), e.originX = n, x("skewing", b(C))(t, e, i, r))
                    }, n.skewHandlerY = function(t, e, i, r) {
                        var n, s = e.target,
                            c = s.skewY,
                            u = e.originX;
                        return !s.lockSkewingY && (0 === c ? n = _(e, h, h, i, r).y > 0 ? a : l : (c > 0 && (n = u === o ? a : l), c < 0 && (n = u === o ? l : a), w(s) && (n = n === a ? l : a)), e.originY = n, x("skewing", b(T))(t, e, i, r))
                    }, n.dragHandler = function(t, e, i, r) {
                        var n = e.target,
                            o = i - e.offsetX,
                            a = r - e.offsetY,
                            s = !n.get("lockMovementX") && n.left !== o,
                            l = !n.get("lockMovementY") && n.top !== a;
                        return s && n.set("left", o), l && n.set("top", a), (s || l) && p("moving", y(t, e, i, r)), s || l
                    }, n.scaleOrSkewActionName = function(t, e, i) {
                        var r = t[i.canvas.altActionKey];
                        return 0 === e.x ? r ? "skewX" : "scaleY" : 0 === e.y ? r ? "skewY" : "scaleX" : void 0
                    }, n.rotationStyleHandler = function(t, e, i) {
                        return i.lockRotation ? "not-allowed" : e.cursorStyle
                    }, n.fireEvent = p, n.wrapWithFixedAnchor = b, n.wrapWithFireEvent = x, n.getLocalPoint = _, e.controlsUtils = n
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.degreesToRadians,
                        r = e.controlsUtils;
                    r.renderCircleControl = function(t, e, i, r, n) {
                        r = r || {};
                        var o, a = this.sizeX || r.cornerSize || n.cornerSize,
                            s = this.sizeY || r.cornerSize || n.cornerSize,
                            l = void 0 !== r.transparentCorners ? r.transparentCorners : n.transparentCorners,
                            h = l ? "stroke" : "fill",
                            c = !l && (r.cornerStrokeColor || n.cornerStrokeColor),
                            u = e,
                            f = i;
                        t.save(), t.fillStyle = r.cornerColor || n.cornerColor, t.strokeStyle = r.cornerStrokeColor || n.cornerStrokeColor, a > s ? (o = a, t.scale(1, s / a), f = i * a / s) : s > a ? (o = s, t.scale(a / s, 1), u = e * s / a) : o = a, t.lineWidth = 1, t.beginPath(), t.arc(u, f, o / 2, 0, 2 * Math.PI, !1), t[h](), c && t.stroke(), t.restore()
                    }, r.renderSquareControl = function(t, e, r, n, o) {
                        n = n || {};
                        var a = this.sizeX || n.cornerSize || o.cornerSize,
                            s = this.sizeY || n.cornerSize || o.cornerSize,
                            l = void 0 !== n.transparentCorners ? n.transparentCorners : o.transparentCorners,
                            h = l ? "stroke" : "fill",
                            c = !l && (n.cornerStrokeColor || o.cornerStrokeColor),
                            u = a / 2,
                            f = s / 2;
                        t.save(), t.fillStyle = n.cornerColor || o.cornerColor, t.strokeStyle = n.cornerStrokeColor || o.cornerStrokeColor, t.lineWidth = 1, t.translate(e, r), t.rotate(i(o.angle)), t[h + "Rect"](-u, -f, a, s), c && t.strokeRect(-u, -f, a, s), t.restore()
                    }
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});
                    e.Control = function(t) {
                        for (var e in t) this[e] = t[e]
                    }, e.Control.prototype = {
                        visible: !0,
                        actionName: "scale",
                        angle: 0,
                        x: 0,
                        y: 0,
                        offsetX: 0,
                        offsetY: 0,
                        sizeX: null,
                        sizeY: null,
                        touchSizeX: null,
                        touchSizeY: null,
                        cursorStyle: "crosshair",
                        withConnection: !1,
                        actionHandler: function() {},
                        mouseDownHandler: function() {},
                        mouseUpHandler: function() {},
                        getActionHandler: function() {
                            return this.actionHandler
                        },
                        getMouseDownHandler: function() {
                            return this.mouseDownHandler
                        },
                        getMouseUpHandler: function() {
                            return this.mouseUpHandler
                        },
                        cursorStyleHandler: function(t, e) {
                            return e.cursorStyle
                        },
                        getActionName: function(t, e) {
                            return e.actionName
                        },
                        getVisibility: function(t, e) {
                            var i = t._controlsVisibility;
                            return i && void 0 !== i[e] ? i[e] : this.visible
                        },
                        setVisibility: function(t) {
                            this.visible = t
                        },
                        positionHandler: function(t, i) {
                            return e.util.transformPoint({
                                x: this.x * t.x + this.offsetX,
                                y: this.y * t.y + this.offsetY
                            }, i)
                        },
                        calcCornerCoords: function(t, i, r, n, o) {
                            var a, s, l, h, c = o ? this.touchSizeX : this.sizeX,
                                u = o ? this.touchSizeY : this.sizeY;
                            if (c && u && c !== u) {
                                var f = Math.atan2(u, c),
                                    d = Math.sqrt(c * c + u * u) / 2,
                                    p = f - e.util.degreesToRadians(t),
                                    g = Math.PI / 2 - f - e.util.degreesToRadians(t);
                                a = d * e.util.cos(p), s = d * e.util.sin(p), l = d * e.util.cos(g), h = d * e.util.sin(g)
                            } else {
                                d = .7071067812 * (c && u ? c : i);
                                p = e.util.degreesToRadians(45 - t);
                                a = l = d * e.util.cos(p), s = h = d * e.util.sin(p)
                            }
                            return {
                                tl: {
                                    x: r - h,
                                    y: n - l
                                },
                                tr: {
                                    x: r + a,
                                    y: n - s
                                },
                                bl: {
                                    x: r - a,
                                    y: n + s
                                },
                                br: {
                                    x: r + h,
                                    y: n + l
                                }
                            }
                        },
                        render: function(t, i, r, n, o) {
                            if ("circle" === ((n = n || {}).cornerStyle || o.cornerStyle)) e.controlsUtils.renderCircleControl.call(this, t, i, r, n, o);
                            else e.controlsUtils.renderSquareControl.call(this, t, i, r, n, o)
                        }
                    }
                }(e),
                function() {
                    function t(t, e) {
                        var i, r, n, o, a = t.getAttribute("style"),
                            s = t.getAttribute("offset") || 0;
                        if (s = (s = parseFloat(s) / (/%$/.test(s) ? 100 : 1)) < 0 ? 0 : s > 1 ? 1 : s, a) {
                            var l = a.split(/\s*;\s*/);
                            for ("" === l[l.length - 1] && l.pop(), o = l.length; o--;) {
                                var h = l[o].split(/\s*:\s*/),
                                    c = h[0].trim(),
                                    u = h[1].trim();
                                "stop-color" === c ? i = u : "stop-opacity" === c && (n = u)
                            }
                        }
                        return i || (i = t.getAttribute("stop-color") || "rgb(0,0,0)"), n || (n = t.getAttribute("stop-opacity")), r = (i = new T.Color(i)).getAlpha(), n = isNaN(parseFloat(n)) ? 1 : parseFloat(n), n *= r * e, {
                            offset: s,
                            color: i.toRgb(),
                            opacity: n
                        }
                    }
                    var e = T.util.object.clone;
                    T.Gradient = T.util.createClass({
                        offsetX: 0,
                        offsetY: 0,
                        gradientTransform: null,
                        gradientUnits: "pixels",
                        type: "linear",
                        initialize: function(t) {
                            t || (t = {}), t.coords || (t.coords = {});
                            var e, i = this;
                            Object.keys(t).forEach((function(e) {
                                i[e] = t[e]
                            })), this.id ? this.id += "_" + T.Object.__uid++ : this.id = T.Object.__uid++, e = {
                                x1: t.coords.x1 || 0,
                                y1: t.coords.y1 || 0,
                                x2: t.coords.x2 || 0,
                                y2: t.coords.y2 || 0
                            }, "radial" === this.type && (e.r1 = t.coords.r1 || 0, e.r2 = t.coords.r2 || 0), this.coords = e, this.colorStops = t.colorStops.slice()
                        },
                        addColorStop: function(t) {
                            for (var e in t) {
                                var i = new T.Color(t[e]);
                                this.colorStops.push({
                                    offset: parseFloat(e),
                                    color: i.toRgb(),
                                    opacity: i.getAlpha()
                                })
                            }
                            return this
                        },
                        toObject: function(t) {
                            var e = {
                                type: this.type,
                                coords: this.coords,
                                colorStops: this.colorStops,
                                offsetX: this.offsetX,
                                offsetY: this.offsetY,
                                gradientUnits: this.gradientUnits,
                                gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform
                            };
                            return T.util.populateWithProperties(this, e, t), e
                        },
                        toSVG: function(t, i) {
                            var r, n, o, a, s = e(this.coords, !0),
                                l = (i = i || {}, e(this.colorStops, !0)),
                                h = s.r1 > s.r2,
                                c = this.gradientTransform ? this.gradientTransform.concat() : T.iMatrix.concat(),
                                u = -this.offsetX,
                                f = -this.offsetY,
                                d = !!i.additionalTransform,
                                p = "pixels" === this.gradientUnits ? "userSpaceOnUse" : "objectBoundingBox";
                            if (l.sort((function(t, e) {
                                    return t.offset - e.offset
                                })), "objectBoundingBox" === p ? (u /= t.width, f /= t.height) : (u += t.width / 2, f += t.height / 2), "path" === t.type && "percentage" !== this.gradientUnits && (u -= t.pathOffset.x, f -= t.pathOffset.y), c[4] -= u, c[5] -= f, a = 'id="SVGID_' + this.id + '" gradientUnits="' + p + '"', a += ' gradientTransform="' + (d ? i.additionalTransform + " " : "") + T.util.matrixToSVG(c) + '" ', "linear" === this.type ? o = ["<linearGradient ", a, ' x1="', s.x1, '" y1="', s.y1, '" x2="', s.x2, '" y2="', s.y2, '">\n'] : "radial" === this.type && (o = ["<radialGradient ", a, ' cx="', h ? s.x1 : s.x2, '" cy="', h ? s.y1 : s.y2, '" r="', h ? s.r1 : s.r2, '" fx="', h ? s.x2 : s.x1, '" fy="', h ? s.y2 : s.y1, '">\n']), "radial" === this.type) {
                                if (h)
                                    for ((l = l.concat()).reverse(), r = 0, n = l.length; r < n; r++) l[r].offset = 1 - l[r].offset;
                                var g = Math.min(s.r1, s.r2);
                                if (g > 0) {
                                    var v = g / Math.max(s.r1, s.r2);
                                    for (r = 0, n = l.length; r < n; r++) l[r].offset += v * (1 - l[r].offset)
                                }
                            }
                            for (r = 0, n = l.length; r < n; r++) {
                                var m = l[r];
                                o.push("<stop ", 'offset="', 100 * m.offset + "%", '" style="stop-color:', m.color, void 0 !== m.opacity ? ";stop-opacity: " + m.opacity : ";", '"/>\n')
                            }
                            return o.push("linear" === this.type ? "</linearGradient>\n" : "</radialGradient>\n"), o.join("")
                        },
                        toLive: function(t) {
                            var e, i, r, n = T.util.object.clone(this.coords);
                            if (this.type) {
                                for ("linear" === this.type ? e = t.createLinearGradient(n.x1, n.y1, n.x2, n.y2) : "radial" === this.type && (e = t.createRadialGradient(n.x1, n.y1, n.r1, n.x2, n.y2, n.r2)), i = 0, r = this.colorStops.length; i < r; i++) {
                                    var o = this.colorStops[i].color,
                                        a = this.colorStops[i].opacity,
                                        s = this.colorStops[i].offset;
                                    void 0 !== a && (o = new T.Color(o).setAlpha(a).toRgba()), e.addColorStop(s, o)
                                }
                                return e
                            }
                        }
                    }), T.util.object.extend(T.Gradient, {
                        fromElement: function(e, i, r, n) {
                            var o = parseFloat(r) / (/%$/.test(r) ? 100 : 1);
                            o = o < 0 ? 0 : o > 1 ? 1 : o, isNaN(o) && (o = 1);
                            var a, s, l, h, c = e.getElementsByTagName("stop"),
                                u = "userSpaceOnUse" === e.getAttribute("gradientUnits") ? "pixels" : "percentage",
                                f = e.getAttribute("gradientTransform") || "",
                                d = [],
                                p = 0,
                                g = 0;
                            for ("linearGradient" === e.nodeName || "LINEARGRADIENT" === e.nodeName ? (a = "linear", s = function(t) {
                                    return {
                                        x1: t.getAttribute("x1") || 0,
                                        y1: t.getAttribute("y1") || 0,
                                        x2: t.getAttribute("x2") || "100%",
                                        y2: t.getAttribute("y2") || 0
                                    }
                                }(e)) : (a = "radial", s = function(t) {
                                    return {
                                        x1: t.getAttribute("fx") || t.getAttribute("cx") || "50%",
                                        y1: t.getAttribute("fy") || t.getAttribute("cy") || "50%",
                                        r1: 0,
                                        x2: t.getAttribute("cx") || "50%",
                                        y2: t.getAttribute("cy") || "50%",
                                        r2: t.getAttribute("r") || "50%"
                                    }
                                }(e)), l = c.length; l--;) d.push(t(c[l], o));
                            return h = T.parseTransformAttribute(f),
                                function(t, e, i, r) {
                                    var n, o;
                                    Object.keys(e).forEach((function(t) {
                                        "Infinity" === (n = e[t]) ? o = 1: "-Infinity" === n ? o = 0 : (o = parseFloat(e[t], 10), "string" == typeof n && /^(\d+\.\d+)%|(\d+)%$/.test(n) && (o *= .01, "pixels" === r && ("x1" !== t && "x2" !== t && "r2" !== t || (o *= i.viewBoxWidth || i.width), "y1" !== t && "y2" !== t || (o *= i.viewBoxHeight || i.height)))), e[t] = o
                                    }))
                                }(0, s, n, u), "pixels" === u && (p = -i.left, g = -i.top), new T.Gradient({
                                    id: e.getAttribute("id"),
                                    type: a,
                                    coords: s,
                                    colorStops: d,
                                    gradientUnits: u,
                                    gradientTransform: h,
                                    offsetX: p,
                                    offsetY: g
                                })
                        }
                    })
                }(),
                function() {
                    "use strict";
                    var t = T.util.toFixed;
                    T.Pattern = T.util.createClass({
                        repeat: "repeat",
                        offsetX: 0,
                        offsetY: 0,
                        crossOrigin: "",
                        patternTransform: null,
                        initialize: function(t, e) {
                            if (t || (t = {}), this.id = T.Object.__uid++, this.setOptions(t), !t.source || t.source && "string" != typeof t.source) e && e(this);
                            else {
                                var i = this;
                                this.source = T.util.createImage(), T.util.loadImage(t.source, (function(t, r) {
                                    i.source = t, e && e(i, r)
                                }), null, this.crossOrigin)
                            }
                        },
                        toObject: function(e) {
                            var i, r, n = T.Object.NUM_FRACTION_DIGITS;
                            return "string" == typeof this.source.src ? i = this.source.src : "object" == typeof this.source && this.source.toDataURL && (i = this.source.toDataURL()), r = {
                                type: "pattern",
                                source: i,
                                repeat: this.repeat,
                                crossOrigin: this.crossOrigin,
                                offsetX: t(this.offsetX, n),
                                offsetY: t(this.offsetY, n),
                                patternTransform: this.patternTransform ? this.patternTransform.concat() : null
                            }, T.util.populateWithProperties(this, r, e), r
                        },
                        toSVG: function(t) {
                            var e = "function" == typeof this.source ? this.source() : this.source,
                                i = e.width / t.width,
                                r = e.height / t.height,
                                n = this.offsetX / t.width,
                                o = this.offsetY / t.height,
                                a = "";
                            return "repeat-x" !== this.repeat && "no-repeat" !== this.repeat || (r = 1, o && (r += Math.abs(o))), "repeat-y" !== this.repeat && "no-repeat" !== this.repeat || (i = 1, n && (i += Math.abs(n))), e.src ? a = e.src : e.toDataURL && (a = e.toDataURL()), '<pattern id="SVGID_' + this.id + '" x="' + n + '" y="' + o + '" width="' + i + '" height="' + r + '">\n<image x="0" y="0" width="' + e.width + '" height="' + e.height + '" xlink:href="' + a + '"></image>\n</pattern>\n'
                        },
                        setOptions: function(t) {
                            for (var e in t) this[e] = t[e]
                        },
                        toLive: function(t) {
                            var e = this.source;
                            if (!e) return "";
                            if (void 0 !== e.src) {
                                if (!e.complete) return "";
                                if (0 === e.naturalWidth || 0 === e.naturalHeight) return ""
                            }
                            return t.createPattern(e, this.repeat)
                        }
                    })
                }(),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.toFixed;
                    e.Shadow ? e.warn("fabric.Shadow is already defined.") : (e.Shadow = e.util.createClass({
                        color: "rgb(0,0,0)",
                        blur: 0,
                        offsetX: 0,
                        offsetY: 0,
                        affectStroke: !1,
                        includeDefaultValues: !0,
                        nonScaling: !1,
                        initialize: function(t) {
                            for (var i in "string" == typeof t && (t = this._parseShadow(t)), t) this[i] = t[i];
                            this.id = e.Object.__uid++
                        },
                        _parseShadow: function(t) {
                            var i = t.trim(),
                                r = e.Shadow.reOffsetsAndBlur.exec(i) || [];
                            return {
                                color: (i.replace(e.Shadow.reOffsetsAndBlur, "") || "rgb(0,0,0)").trim(),
                                offsetX: parseFloat(r[1], 10) || 0,
                                offsetY: parseFloat(r[2], 10) || 0,
                                blur: parseFloat(r[3], 10) || 0
                            }
                        },
                        toString: function() {
                            return [this.offsetX, this.offsetY, this.blur, this.color].join("px ")
                        },
                        toSVG: function(t) {
                            var r = 40,
                                n = 40,
                                o = e.Object.NUM_FRACTION_DIGITS,
                                a = e.util.rotateVector({
                                    x: this.offsetX,
                                    y: this.offsetY
                                }, e.util.degreesToRadians(-t.angle)),
                                s = new e.Color(this.color);
                            return t.width && t.height && (r = 100 * i((Math.abs(a.x) + this.blur) / t.width, o) + 20, n = 100 * i((Math.abs(a.y) + this.blur) / t.height, o) + 20), t.flipX && (a.x *= -1), t.flipY && (a.y *= -1), '<filter id="SVGID_' + this.id + '" y="-' + n + '%" height="' + (100 + 2 * n) + '%" x="-' + r + '%" width="' + (100 + 2 * r) + '%" >\n\t<feGaussianBlur in="SourceAlpha" stdDeviation="' + i(this.blur ? this.blur / 2 : 0, o) + '"></feGaussianBlur>\n\t<feOffset dx="' + i(a.x, o) + '" dy="' + i(a.y, o) + '" result="oBlur" ></feOffset>\n\t<feFlood flood-color="' + s.toRgb() + '" flood-opacity="' + s.getAlpha() + '"/>\n\t<feComposite in2="oBlur" operator="in" />\n\t<feMerge>\n\t\t<feMergeNode></feMergeNode>\n\t\t<feMergeNode in="SourceGraphic"></feMergeNode>\n\t</feMerge>\n</filter>\n'
                        },
                        toObject: function() {
                            if (this.includeDefaultValues) return {
                                color: this.color,
                                blur: this.blur,
                                offsetX: this.offsetX,
                                offsetY: this.offsetY,
                                affectStroke: this.affectStroke,
                                nonScaling: this.nonScaling
                            };
                            var t = {},
                                i = e.Shadow.prototype;
                            return ["color", "blur", "offsetX", "offsetY", "affectStroke", "nonScaling"].forEach((function(e) {
                                this[e] !== i[e] && (t[e] = this[e])
                            }), this), t
                        }
                    }), e.Shadow.reOffsetsAndBlur = /(?:\s|^)(-?\d+(?:\.\d*)?(?:px)?(?:\s?|$))?(-?\d+(?:\.\d*)?(?:px)?(?:\s?|$))?(\d+(?:\.\d*)?(?:px)?)?(?:\s?|$)(?:$|\s)/)
                }(e),
                function() {
                    "use strict";
                    if (T.StaticCanvas) T.warn("fabric.StaticCanvas is already defined.");
                    else {
                        var t = T.util.object.extend,
                            e = T.util.getElementOffset,
                            i = T.util.removeFromArray,
                            r = T.util.toFixed,
                            n = T.util.transformPoint,
                            o = T.util.invertTransform,
                            a = T.util.getNodeCanvas,
                            s = T.util.createCanvasElement,
                            l = new Error("Could not initialize `canvas` element");
                        T.StaticCanvas = T.util.createClass(T.CommonMethods, {
                            initialize: function(t, e) {
                                e || (e = {}), this.renderAndResetBound = this.renderAndReset.bind(this), this.requestRenderAllBound = this.requestRenderAll.bind(this), this._initStatic(t, e)
                            },
                            backgroundColor: "",
                            backgroundImage: null,
                            overlayColor: "",
                            overlayImage: null,
                            includeDefaultValues: !0,
                            stateful: !1,
                            renderOnAddRemove: !0,
                            controlsAboveOverlay: !1,
                            allowTouchScrolling: !1,
                            imageSmoothingEnabled: !0,
                            viewportTransform: T.iMatrix.concat(),
                            backgroundVpt: !0,
                            overlayVpt: !0,
                            enableRetinaScaling: !0,
                            vptCoords: {},
                            skipOffscreen: !0,
                            clipPath: void 0,
                            _initStatic: function(t, e) {
                                var i = this.requestRenderAllBound;
                                this._objects = [], this._createLowerCanvas(t), this._initOptions(e), this.interactive || this._initRetinaScaling(), e.overlayImage && this.setOverlayImage(e.overlayImage, i), e.backgroundImage && this.setBackgroundImage(e.backgroundImage, i), e.backgroundColor && this.setBackgroundColor(e.backgroundColor, i), e.overlayColor && this.setOverlayColor(e.overlayColor, i), this.calcOffset()
                            },
                            _isRetinaScaling: function() {
                                return 1 !== T.devicePixelRatio && this.enableRetinaScaling
                            },
                            getRetinaScaling: function() {
                                return this._isRetinaScaling() ? T.devicePixelRatio : 1
                            },
                            _initRetinaScaling: function() {
                                if (this._isRetinaScaling()) {
                                    var t = T.devicePixelRatio;
                                    this.__initRetinaScaling(t, this.lowerCanvasEl, this.contextContainer), this.upperCanvasEl && this.__initRetinaScaling(t, this.upperCanvasEl, this.contextTop)
                                }
                            },
                            __initRetinaScaling: function(t, e, i) {
                                e.setAttribute("width", this.width * t), e.setAttribute("height", this.height * t), i.scale(t, t)
                            },
                            calcOffset: function() {
                                return this._offset = e(this.lowerCanvasEl), this
                            },
                            setOverlayImage: function(t, e, i) {
                                return this.__setBgOverlayImage("overlayImage", t, e, i)
                            },
                            setBackgroundImage: function(t, e, i) {
                                return this.__setBgOverlayImage("backgroundImage", t, e, i)
                            },
                            setOverlayColor: function(t, e) {
                                return this.__setBgOverlayColor("overlayColor", t, e)
                            },
                            setBackgroundColor: function(t, e) {
                                return this.__setBgOverlayColor("backgroundColor", t, e)
                            },
                            __setBgOverlayImage: function(t, e, i, r) {
                                return "string" == typeof e ? T.util.loadImage(e, (function(e, n) {
                                    if (e) {
                                        var o = new T.Image(e, r);
                                        this[t] = o, o.canvas = this
                                    }
                                    i && i(e, n)
                                }), this, r && r.crossOrigin) : (r && e.setOptions(r), this[t] = e, e && (e.canvas = this), i && i(e, !1)), this
                            },
                            __setBgOverlayColor: function(t, e, i) {
                                return this[t] = e, this._initGradient(e, t), this._initPattern(e, t, i), this
                            },
                            _createCanvasElement: function() {
                                var t = s();
                                if (!t) throw l;
                                if (t.style || (t.style = {}), void 0 === t.getContext) throw l;
                                return t
                            },
                            _initOptions: function(t) {
                                var e = this.lowerCanvasEl;
                                this._setOptions(t), this.width = this.width || parseInt(e.width, 10) || 0, this.height = this.height || parseInt(e.height, 10) || 0, this.lowerCanvasEl.style && (e.width = this.width, e.height = this.height, e.style.width = this.width + "px", e.style.height = this.height + "px", this.viewportTransform = this.viewportTransform.slice())
                            },
                            _createLowerCanvas: function(t) {
                                t && t.getContext ? this.lowerCanvasEl = t : this.lowerCanvasEl = T.util.getById(t) || this._createCanvasElement(), T.util.addClass(this.lowerCanvasEl, "lower-canvas"), this._originalCanvasStyle = this.lowerCanvasEl.style, this.interactive && this._applyCanvasStyle(this.lowerCanvasEl), this.contextContainer = this.lowerCanvasEl.getContext("2d")
                            },
                            getWidth: function() {
                                return this.width
                            },
                            getHeight: function() {
                                return this.height
                            },
                            setWidth: function(t, e) {
                                return this.setDimensions({
                                    width: t
                                }, e)
                            },
                            setHeight: function(t, e) {
                                return this.setDimensions({
                                    height: t
                                }, e)
                            },
                            setDimensions: function(t, e) {
                                var i;
                                for (var r in e = e || {}, t) i = t[r], e.cssOnly || (this._setBackstoreDimension(r, t[r]), i += "px", this.hasLostContext = !0), e.backstoreOnly || this._setCssDimension(r, i);
                                return this._isCurrentlyDrawing && this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles(), this._initRetinaScaling(), this.calcOffset(), e.cssOnly || this.requestRenderAll(), this
                            },
                            _setBackstoreDimension: function(t, e) {
                                return this.lowerCanvasEl[t] = e, this.upperCanvasEl && (this.upperCanvasEl[t] = e), this.cacheCanvasEl && (this.cacheCanvasEl[t] = e), this[t] = e, this
                            },
                            _setCssDimension: function(t, e) {
                                return this.lowerCanvasEl.style[t] = e, this.upperCanvasEl && (this.upperCanvasEl.style[t] = e), this.wrapperEl && (this.wrapperEl.style[t] = e), this
                            },
                            getZoom: function() {
                                return this.viewportTransform[0]
                            },
                            setViewportTransform: function(t) {
                                var e, i, r, n = this._activeObject,
                                    o = this.backgroundImage,
                                    a = this.overlayImage;
                                for (this.viewportTransform = t, i = 0, r = this._objects.length; i < r; i++)(e = this._objects[i]).group || e.setCoords(!0);
                                return n && n.setCoords(), o && o.setCoords(!0), a && a.setCoords(!0), this.calcViewportBoundaries(), this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            zoomToPoint: function(t, e) {
                                var i = t,
                                    r = this.viewportTransform.slice(0);
                                t = n(t, o(this.viewportTransform)), r[0] = e, r[3] = e;
                                var a = n(t, r);
                                return r[4] += i.x - a.x, r[5] += i.y - a.y, this.setViewportTransform(r)
                            },
                            setZoom: function(t) {
                                return this.zoomToPoint(new T.Point(0, 0), t), this
                            },
                            absolutePan: function(t) {
                                var e = this.viewportTransform.slice(0);
                                return e[4] = -t.x, e[5] = -t.y, this.setViewportTransform(e)
                            },
                            relativePan: function(t) {
                                return this.absolutePan(new T.Point(-t.x - this.viewportTransform[4], -t.y - this.viewportTransform[5]))
                            },
                            getElement: function() {
                                return this.lowerCanvasEl
                            },
                            _onObjectAdded: function(t) {
                                this.stateful && t.setupState(), t._set("canvas", this), t.setCoords(), this.fire("object:added", {
                                    target: t
                                }), t.fire("added")
                            },
                            _onObjectRemoved: function(t) {
                                this.fire("object:removed", {
                                    target: t
                                }), t.fire("removed"), delete t.canvas
                            },
                            clearContext: function(t) {
                                return t.clearRect(0, 0, this.width, this.height), this
                            },
                            getContext: function() {
                                return this.contextContainer
                            },
                            clear: function() {
                                return this.remove.apply(this, this.getObjects()), this.backgroundImage = null, this.overlayImage = null, this.backgroundColor = "", this.overlayColor = "", this._hasITextHandlers && (this.off("mouse:up", this._mouseUpITextHandler), this._iTextInstances = null, this._hasITextHandlers = !1), this.clearContext(this.contextContainer), this.fire("canvas:cleared"), this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            renderAll: function() {
                                var t = this.contextContainer;
                                return this.renderCanvas(t, this._objects), this
                            },
                            renderAndReset: function() {
                                this.isRendering = 0, this.renderAll()
                            },
                            requestRenderAll: function() {
                                return this.isRendering || (this.isRendering = T.util.requestAnimFrame(this.renderAndResetBound)), this
                            },
                            calcViewportBoundaries: function() {
                                var t = {},
                                    e = this.width,
                                    i = this.height,
                                    r = o(this.viewportTransform);
                                return t.tl = n({
                                    x: 0,
                                    y: 0
                                }, r), t.br = n({
                                    x: e,
                                    y: i
                                }, r), t.tr = new T.Point(t.br.x, t.tl.y), t.bl = new T.Point(t.tl.x, t.br.y), this.vptCoords = t, t
                            },
                            cancelRequestedRender: function() {
                                this.isRendering && (T.util.cancelAnimFrame(this.isRendering), this.isRendering = 0)
                            },
                            renderCanvas: function(t, e) {
                                var i = this.viewportTransform,
                                    r = this.clipPath;
                                this.cancelRequestedRender(), this.calcViewportBoundaries(), this.clearContext(t), T.util.setImageSmoothing(t, this.imageSmoothingEnabled), this.fire("before:render", {
                                    ctx: t
                                }), this._renderBackground(t), t.save(), t.transform(i[0], i[1], i[2], i[3], i[4], i[5]), this._renderObjects(t, e), t.restore(), !this.controlsAboveOverlay && this.interactive && this.drawControls(t), r && (r.canvas = this, r.shouldCache(), r._transformDone = !0, r.renderCache({
                                    forClipping: !0
                                }), this.drawClipPathOnCanvas(t)), this._renderOverlay(t), this.controlsAboveOverlay && this.interactive && this.drawControls(t), this.fire("after:render", {
                                    ctx: t
                                })
                            },
                            drawClipPathOnCanvas: function(t) {
                                var e = this.viewportTransform,
                                    i = this.clipPath;
                                t.save(), t.transform(e[0], e[1], e[2], e[3], e[4], e[5]), t.globalCompositeOperation = "destination-in", i.transform(t), t.scale(1 / i.zoomX, 1 / i.zoomY), t.drawImage(i._cacheCanvas, -i.cacheTranslationX, -i.cacheTranslationY), t.restore()
                            },
                            _renderObjects: function(t, e) {
                                var i, r;
                                for (i = 0, r = e.length; i < r; ++i) e[i] && e[i].render(t)
                            },
                            _renderBackgroundOrOverlay: function(t, e) {
                                var i = this[e + "Color"],
                                    r = this[e + "Image"],
                                    n = this.viewportTransform,
                                    o = this[e + "Vpt"];
                                if (i || r) {
                                    if (i) {
                                        t.save(), t.beginPath(), t.moveTo(0, 0), t.lineTo(this.width, 0), t.lineTo(this.width, this.height), t.lineTo(0, this.height), t.closePath(), t.fillStyle = i.toLive ? i.toLive(t, this) : i, o && t.transform(n[0], n[1], n[2], n[3], n[4], n[5]), t.transform(1, 0, 0, 1, i.offsetX || 0, i.offsetY || 0);
                                        var a = i.gradientTransform || i.patternTransform;
                                        a && t.transform(a[0], a[1], a[2], a[3], a[4], a[5]), t.fill(), t.restore()
                                    }
                                    r && (t.save(), o && t.transform(n[0], n[1], n[2], n[3], n[4], n[5]), r.render(t), t.restore())
                                }
                            },
                            _renderBackground: function(t) {
                                this._renderBackgroundOrOverlay(t, "background")
                            },
                            _renderOverlay: function(t) {
                                this._renderBackgroundOrOverlay(t, "overlay")
                            },
                            getCenter: function() {
                                return {
                                    top: this.height / 2,
                                    left: this.width / 2
                                }
                            },
                            centerObjectH: function(t) {
                                return this._centerObject(t, new T.Point(this.getCenter().left, t.getCenterPoint().y))
                            },
                            centerObjectV: function(t) {
                                return this._centerObject(t, new T.Point(t.getCenterPoint().x, this.getCenter().top))
                            },
                            centerObject: function(t) {
                                var e = this.getCenter();
                                return this._centerObject(t, new T.Point(e.left, e.top))
                            },
                            viewportCenterObject: function(t) {
                                var e = this.getVpCenter();
                                return this._centerObject(t, e)
                            },
                            viewportCenterObjectH: function(t) {
                                var e = this.getVpCenter();
                                return this._centerObject(t, new T.Point(e.x, t.getCenterPoint().y)), this
                            },
                            viewportCenterObjectV: function(t) {
                                var e = this.getVpCenter();
                                return this._centerObject(t, new T.Point(t.getCenterPoint().x, e.y))
                            },
                            getVpCenter: function() {
                                var t = this.getCenter(),
                                    e = o(this.viewportTransform);
                                return n({
                                    x: t.left,
                                    y: t.top
                                }, e)
                            },
                            _centerObject: function(t, e) {
                                return t.setPositionByOrigin(e, "center", "center"), t.setCoords(), this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            toDatalessJSON: function(t) {
                                return this.toDatalessObject(t)
                            },
                            toObject: function(t) {
                                return this._toObjectMethod("toObject", t)
                            },
                            toDatalessObject: function(t) {
                                return this._toObjectMethod("toDatalessObject", t)
                            },
                            _toObjectMethod: function(e, i) {
                                var r = this.clipPath,
                                    n = {
                                        version: T.version,
                                        objects: this._toObjects(e, i)
                                    };
                                return r && !r.excludeFromExport && (n.clipPath = this._toObject(this.clipPath, e, i)), t(n, this.__serializeBgOverlay(e, i)), T.util.populateWithProperties(this, n, i), n
                            },
                            _toObjects: function(t, e) {
                                return this._objects.filter((function(t) {
                                    return !t.excludeFromExport
                                })).map((function(i) {
                                    return this._toObject(i, t, e)
                                }), this)
                            },
                            _toObject: function(t, e, i) {
                                var r;
                                this.includeDefaultValues || (r = t.includeDefaultValues, t.includeDefaultValues = !1);
                                var n = t[e](i);
                                return this.includeDefaultValues || (t.includeDefaultValues = r), n
                            },
                            __serializeBgOverlay: function(t, e) {
                                var i = {},
                                    r = this.backgroundImage,
                                    n = this.overlayImage,
                                    o = this.backgroundColor,
                                    a = this.overlayColor;
                                return o && o.toObject ? o.excludeFromExport || (i.background = o.toObject(e)) : o && (i.background = o), a && a.toObject ? a.excludeFromExport || (i.overlay = a.toObject(e)) : a && (i.overlay = a), r && !r.excludeFromExport && (i.backgroundImage = this._toObject(r, t, e)), n && !n.excludeFromExport && (i.overlayImage = this._toObject(n, t, e)), i
                            },
                            svgViewportTransformation: !0,
                            toSVG: function(t, e) {
                                t || (t = {}), t.reviver = e;
                                var i = [];
                                return this._setSVGPreamble(i, t), this._setSVGHeader(i, t), this.clipPath && i.push('<g clip-path="url(#' + this.clipPath.clipPathId + ')" >\n'), this._setSVGBgOverlayColor(i, "background"), this._setSVGBgOverlayImage(i, "backgroundImage", e), this._setSVGObjects(i, e), this.clipPath && i.push("</g>\n"), this._setSVGBgOverlayColor(i, "overlay"), this._setSVGBgOverlayImage(i, "overlayImage", e), i.push("</svg>"), i.join("")
                            },
                            _setSVGPreamble: function(t, e) {
                                e.suppressPreamble || t.push('<?xml version="1.0" encoding="', e.encoding || "UTF-8", '" standalone="no" ?>\n', '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ', '"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n')
                            },
                            _setSVGHeader: function(t, e) {
                                var i, n = e.width || this.width,
                                    o = e.height || this.height,
                                    a = 'viewBox="0 0 ' + this.width + " " + this.height + '" ',
                                    s = T.Object.NUM_FRACTION_DIGITS;
                                e.viewBox ? a = 'viewBox="' + e.viewBox.x + " " + e.viewBox.y + " " + e.viewBox.width + " " + e.viewBox.height + '" ' : this.svgViewportTransformation && (i = this.viewportTransform, a = 'viewBox="' + r(-i[4] / i[0], s) + " " + r(-i[5] / i[3], s) + " " + r(this.width / i[0], s) + " " + r(this.height / i[3], s) + '" '), t.push("<svg ", 'xmlns="http://www.w3.org/2000/svg" ', 'xmlns:xlink="http://www.w3.org/1999/xlink" ', 'version="1.1" ', 'width="', n, '" ', 'height="', o, '" ', a, 'xml:space="preserve">\n', "<desc>Created with Fabric.js ", T.version, "</desc>\n", "<defs>\n", this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), this.createSVGClipPathMarkup(e), "</defs>\n")
                            },
                            createSVGClipPathMarkup: function(t) {
                                var e = this.clipPath;
                                return e ? (e.clipPathId = "CLIPPATH_" + T.Object.__uid++, '<clipPath id="' + e.clipPathId + '" >\n' + this.clipPath.toClipPathSVG(t.reviver) + "</clipPath>\n") : ""
                            },
                            createSVGRefElementsMarkup: function() {
                                var t = this;
                                return ["background", "overlay"].map((function(e) {
                                    var i = t[e + "Color"];
                                    if (i && i.toLive) {
                                        var r = t[e + "Vpt"],
                                            n = t.viewportTransform,
                                            o = {
                                                width: t.width / (r ? n[0] : 1),
                                                height: t.height / (r ? n[3] : 1)
                                            };
                                        return i.toSVG(o, {
                                            additionalTransform: r ? T.util.matrixToSVG(n) : ""
                                        })
                                    }
                                })).join("")
                            },
                            createSVGFontFacesMarkup: function() {
                                var t, e, i, r, n, o, a, s, l = "",
                                    h = {},
                                    c = T.fontPaths,
                                    u = [];
                                for (this._objects.forEach((function t(e) {
                                        u.push(e), e._objects && e._objects.forEach(t)
                                    })), a = 0, s = u.length; a < s; a++)
                                    if (e = (t = u[a]).fontFamily, -1 !== t.type.indexOf("text") && !h[e] && c[e] && (h[e] = !0, t.styles))
                                        for (n in i = t.styles)
                                            for (o in r = i[n]) !h[e = r[o].fontFamily] && c[e] && (h[e] = !0);
                                for (var f in h) l += ["\t\t@font-face {\n", "\t\t\tfont-family: '", f, "';\n", "\t\t\tsrc: url('", c[f], "');\n", "\t\t}\n"].join("");
                                return l && (l = ['\t<style type="text/css">', "<![CDATA[\n", l, "]]>", "</style>\n"].join("")), l
                            },
                            _setSVGObjects: function(t, e) {
                                var i, r, n, o = this._objects;
                                for (r = 0, n = o.length; r < n; r++)(i = o[r]).excludeFromExport || this._setSVGObject(t, i, e)
                            },
                            _setSVGObject: function(t, e, i) {
                                t.push(e.toSVG(i))
                            },
                            _setSVGBgOverlayImage: function(t, e, i) {
                                this[e] && !this[e].excludeFromExport && this[e].toSVG && t.push(this[e].toSVG(i))
                            },
                            _setSVGBgOverlayColor: function(t, e) {
                                var i = this[e + "Color"],
                                    r = this.viewportTransform,
                                    n = this.width,
                                    o = this.height;
                                if (i)
                                    if (i.toLive) {
                                        var a = i.repeat,
                                            s = T.util.invertTransform(r),
                                            l = this[e + "Vpt"] ? T.util.matrixToSVG(s) : "";
                                        t.push('<rect transform="' + l + " translate(", n / 2, ",", o / 2, ')"', ' x="', i.offsetX - n / 2, '" y="', i.offsetY - o / 2, '" ', 'width="', "repeat-y" === a || "no-repeat" === a ? i.source.width : n, '" height="', "repeat-x" === a || "no-repeat" === a ? i.source.height : o, '" fill="url(#SVGID_' + i.id + ')"', "></rect>\n")
                                    } else t.push('<rect x="0" y="0" width="100%" height="100%" ', 'fill="', i, '"', "></rect>\n")
                            },
                            sendToBack: function(t) {
                                if (!t) return this;
                                var e, r, n, o = this._activeObject;
                                if (t === o && "activeSelection" === t.type)
                                    for (e = (n = o._objects).length; e--;) r = n[e], i(this._objects, r), this._objects.unshift(r);
                                else i(this._objects, t), this._objects.unshift(t);
                                return this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            bringToFront: function(t) {
                                if (!t) return this;
                                var e, r, n, o = this._activeObject;
                                if (t === o && "activeSelection" === t.type)
                                    for (n = o._objects, e = 0; e < n.length; e++) r = n[e], i(this._objects, r), this._objects.push(r);
                                else i(this._objects, t), this._objects.push(t);
                                return this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            sendBackwards: function(t, e) {
                                if (!t) return this;
                                var r, n, o, a, s, l = this._activeObject,
                                    h = 0;
                                if (t === l && "activeSelection" === t.type)
                                    for (s = l._objects, r = 0; r < s.length; r++) n = s[r], (o = this._objects.indexOf(n)) > 0 + h && (a = o - 1, i(this._objects, n), this._objects.splice(a, 0, n)), h++;
                                else 0 !== (o = this._objects.indexOf(t)) && (a = this._findNewLowerIndex(t, o, e), i(this._objects, t), this._objects.splice(a, 0, t));
                                return this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            _findNewLowerIndex: function(t, e, i) {
                                var r, n;
                                if (i)
                                    for (r = e, n = e - 1; n >= 0; --n) {
                                        if (t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t)) {
                                            r = n;
                                            break
                                        }
                                    } else r = e - 1;
                                return r
                            },
                            bringForward: function(t, e) {
                                if (!t) return this;
                                var r, n, o, a, s, l = this._activeObject,
                                    h = 0;
                                if (t === l && "activeSelection" === t.type)
                                    for (r = (s = l._objects).length; r--;) n = s[r], (o = this._objects.indexOf(n)) < this._objects.length - 1 - h && (a = o + 1, i(this._objects, n), this._objects.splice(a, 0, n)), h++;
                                else(o = this._objects.indexOf(t)) !== this._objects.length - 1 && (a = this._findNewUpperIndex(t, o, e), i(this._objects, t), this._objects.splice(a, 0, t));
                                return this.renderOnAddRemove && this.requestRenderAll(), this
                            },
                            _findNewUpperIndex: function(t, e, i) {
                                var r, n, o;
                                if (i)
                                    for (r = e, n = e + 1, o = this._objects.length; n < o; ++n) {
                                        if (t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t)) {
                                            r = n;
                                            break
                                        }
                                    } else r = e + 1;
                                return r
                            },
                            moveTo: function(t, e) {
                                return i(this._objects, t), this._objects.splice(e, 0, t), this.renderOnAddRemove && this.requestRenderAll()
                            },
                            dispose: function() {
                                return this.isRendering && (T.util.cancelAnimFrame(this.isRendering), this.isRendering = 0), this.forEachObject((function(t) {
                                    t.dispose && t.dispose()
                                })), this._objects = [], this.backgroundImage && this.backgroundImage.dispose && this.backgroundImage.dispose(), this.backgroundImage = null, this.overlayImage && this.overlayImage.dispose && this.overlayImage.dispose(), this.overlayImage = null, this._iTextInstances = null, this.contextContainer = null, this.lowerCanvasEl.classList.remove("lower-canvas"), this.lowerCanvasEl.style = this._originalCanvasStyle, delete this._originalCanvasStyle, this.lowerCanvasEl.setAttribute("width", this.width), this.lowerCanvasEl.setAttribute("height", this.height), T.util.cleanUpJsdomNode(this.lowerCanvasEl), this.lowerCanvasEl = void 0, this
                            },
                            toString: function() {
                                return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this._objects.length + " }>"
                            }
                        }), t(T.StaticCanvas.prototype, T.Observable), t(T.StaticCanvas.prototype, T.Collection), t(T.StaticCanvas.prototype, T.DataURLExporter), t(T.StaticCanvas, {
                            EMPTY_JSON: '{"objects": [], "background": "white"}',
                            supports: function(t) {
                                var e = s();
                                if (!e || !e.getContext) return null;
                                var i = e.getContext("2d");
                                return i && "setLineDash" === t ? void 0 !== i.setLineDash : null
                            }
                        }), T.StaticCanvas.prototype.toJSON = T.StaticCanvas.prototype.toObject, T.isLikelyNode && (T.StaticCanvas.prototype.createPNGStream = function() {
                            var t = a(this.lowerCanvasEl);
                            return t && t.createPNGStream()
                        }, T.StaticCanvas.prototype.createJPEGStream = function(t) {
                            var e = a(this.lowerCanvasEl);
                            return e && e.createJPEGStream(t)
                        })
                    }
                }(), T.BaseBrush = T.util.createClass({
                    color: "rgb(0, 0, 0)",
                    width: 1,
                    shadow: null,
                    strokeLineCap: "round",
                    strokeLineJoin: "round",
                    strokeMiterLimit: 10,
                    strokeDashArray: null,
                    limitedToCanvasSize: !1,
                    _setBrushStyles: function() {
                        var t = this.canvas.contextTop;
                        t.strokeStyle = this.color, t.lineWidth = this.width, t.lineCap = this.strokeLineCap, t.miterLimit = this.strokeMiterLimit, t.lineJoin = this.strokeLineJoin, t.setLineDash(this.strokeDashArray || [])
                    },
                    _saveAndTransform: function(t) {
                        var e = this.canvas.viewportTransform;
                        t.save(), t.transform(e[0], e[1], e[2], e[3], e[4], e[5])
                    },
                    _setShadow: function() {
                        if (this.shadow) {
                            var t = this.canvas,
                                e = this.shadow,
                                i = t.contextTop,
                                r = t.getZoom();
                            t && t._isRetinaScaling() && (r *= T.devicePixelRatio), i.shadowColor = e.color, i.shadowBlur = e.blur * r, i.shadowOffsetX = e.offsetX * r, i.shadowOffsetY = e.offsetY * r
                        }
                    },
                    needsFullRender: function() {
                        return new T.Color(this.color).getAlpha() < 1 || !!this.shadow
                    },
                    _resetShadow: function() {
                        var t = this.canvas.contextTop;
                        t.shadowColor = "", t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0
                    },
                    _isOutSideCanvas: function(t) {
                        return t.x < 0 || t.x > this.canvas.getWidth() || t.y < 0 || t.y > this.canvas.getHeight()
                    }
                }), T.PencilBrush = T.util.createClass(T.BaseBrush, {
                    decimate: .4,
                    initialize: function(t) {
                        this.canvas = t, this._points = []
                    },
                    _drawSegment: function(t, e, i) {
                        var r = e.midPointFrom(i);
                        return t.quadraticCurveTo(e.x, e.y, r.x, r.y), r
                    },
                    onMouseDown: function(t, e) {
                        this.canvas._isMainEvent(e.e) && (this._prepareForDrawing(t), this._captureDrawingPath(t), this._render())
                    },
                    onMouseMove: function(t, e) {
                        if (this.canvas._isMainEvent(e.e) && (!0 !== this.limitedToCanvasSize || !this._isOutSideCanvas(t)) && this._captureDrawingPath(t) && this._points.length > 1)
                            if (this.needsFullRender()) this.canvas.clearContext(this.canvas.contextTop), this._render();
                            else {
                                var i = this._points,
                                    r = i.length,
                                    n = this.canvas.contextTop;
                                this._saveAndTransform(n), this.oldEnd && (n.beginPath(), n.moveTo(this.oldEnd.x, this.oldEnd.y)), this.oldEnd = this._drawSegment(n, i[r - 2], i[r - 1], !0), n.stroke(), n.restore()
                            }
                    },
                    onMouseUp: function(t) {
                        return !this.canvas._isMainEvent(t.e) || (this.oldEnd = void 0, this._finalizeAndAddPath(), !1)
                    },
                    _prepareForDrawing: function(t) {
                        var e = new T.Point(t.x, t.y);
                        this._reset(), this._addPoint(e), this.canvas.contextTop.moveTo(e.x, e.y)
                    },
                    _addPoint: function(t) {
                        return !(this._points.length > 1 && t.eq(this._points[this._points.length - 1]) || (this._points.push(t), 0))
                    },
                    _reset: function() {
                        this._points = [], this._setBrushStyles(), this._setShadow()
                    },
                    _captureDrawingPath: function(t) {
                        var e = new T.Point(t.x, t.y);
                        return this._addPoint(e)
                    },
                    _render: function() {
                        var t, e, i = this.canvas.contextTop,
                            r = this._points[0],
                            n = this._points[1];
                        if (this._saveAndTransform(i), i.beginPath(), 2 === this._points.length && r.x === n.x && r.y === n.y) {
                            var o = this.width / 1e3;
                            r = new T.Point(r.x, r.y), n = new T.Point(n.x, n.y), r.x -= o, n.x += o
                        }
                        for (i.moveTo(r.x, r.y), t = 1, e = this._points.length; t < e; t++) this._drawSegment(i, r, n), r = this._points[t], n = this._points[t + 1];
                        i.lineTo(r.x, r.y), i.stroke(), i.restore()
                    },
                    convertPointsToSVGPath: function(t) {
                        var e = this.width / 1e3;
                        return T.util.getSmoothPathFromPoints(t, e)
                    },
                    _isEmptySVGPath: function(t) {
                        return "M 0 0 Q 0 0 0 0 L 0 0" === T.util.joinPath(t)
                    },
                    createPath: function(t) {
                        var e = new T.Path(t, {
                            fill: null,
                            stroke: this.color,
                            strokeWidth: this.width,
                            strokeLineCap: this.strokeLineCap,
                            strokeMiterLimit: this.strokeMiterLimit,
                            strokeLineJoin: this.strokeLineJoin,
                            strokeDashArray: this.strokeDashArray
                        });
                        return this.shadow && (this.shadow.affectStroke = !0, e.shadow = new T.Shadow(this.shadow)), e
                    },
                    decimatePoints: function(t, e) {
                        if (t.length <= 2) return t;
                        var i, r = this.canvas.getZoom(),
                            n = Math.pow(e / r, 2),
                            o = t.length - 1,
                            a = t[0],
                            s = [a];
                        for (i = 1; i < o - 1; i++) Math.pow(a.x - t[i].x, 2) + Math.pow(a.y - t[i].y, 2) >= n && (a = t[i], s.push(a));
                        return s.push(t[o]), s
                    },
                    _finalizeAndAddPath: function() {
                        this.canvas.contextTop.closePath(), this.decimate && (this._points = this.decimatePoints(this._points, this.decimate));
                        var t = this.convertPointsToSVGPath(this._points);
                        if (this._isEmptySVGPath(t)) this.canvas.requestRenderAll();
                        else {
                            var e = this.createPath(t);
                            this.canvas.clearContext(this.canvas.contextTop), this.canvas.fire("before:path:created", {
                                path: e
                            }), this.canvas.add(e), this.canvas.requestRenderAll(), e.setCoords(), this._resetShadow(), this.canvas.fire("path:created", {
                                path: e
                            })
                        }
                    }
                }), T.CircleBrush = T.util.createClass(T.BaseBrush, {
                    width: 10,
                    initialize: function(t) {
                        this.canvas = t, this.points = []
                    },
                    drawDot: function(t) {
                        var e = this.addPoint(t),
                            i = this.canvas.contextTop;
                        this._saveAndTransform(i), this.dot(i, e), i.restore()
                    },
                    dot: function(t, e) {
                        t.fillStyle = e.fill, t.beginPath(), t.arc(e.x, e.y, e.radius, 0, 2 * Math.PI, !1), t.closePath(), t.fill()
                    },
                    onMouseDown: function(t) {
                        this.points.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.drawDot(t)
                    },
                    _render: function() {
                        var t, e, i = this.canvas.contextTop,
                            r = this.points;
                        for (this._saveAndTransform(i), t = 0, e = r.length; t < e; t++) this.dot(i, r[t]);
                        i.restore()
                    },
                    onMouseMove: function(t) {
                        !0 === this.limitedToCanvasSize && this._isOutSideCanvas(t) || (this.needsFullRender() ? (this.canvas.clearContext(this.canvas.contextTop), this.addPoint(t), this._render()) : this.drawDot(t))
                    },
                    onMouseUp: function() {
                        var t, e, i = this.canvas.renderOnAddRemove;
                        this.canvas.renderOnAddRemove = !1;
                        var r = [];
                        for (t = 0, e = this.points.length; t < e; t++) {
                            var n = this.points[t],
                                o = new T.Circle({
                                    radius: n.radius,
                                    left: n.x,
                                    top: n.y,
                                    originX: "center",
                                    originY: "center",
                                    fill: n.fill
                                });
                            this.shadow && (o.shadow = new T.Shadow(this.shadow)), r.push(o)
                        }
                        var a = new T.Group(r);
                        a.canvas = this.canvas, this.canvas.fire("before:path:created", {
                            path: a
                        }), this.canvas.add(a), this.canvas.fire("path:created", {
                            path: a
                        }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = i, this.canvas.requestRenderAll()
                    },
                    addPoint: function(t) {
                        var e = new T.Point(t.x, t.y),
                            i = T.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,
                            r = new T.Color(this.color).setAlpha(T.util.getRandomInt(0, 100) / 100).toRgba();
                        return e.radius = i, e.fill = r, this.points.push(e), e
                    }
                }), T.SprayBrush = T.util.createClass(T.BaseBrush, {
                    width: 10,
                    density: 20,
                    dotWidth: 1,
                    dotWidthVariance: 1,
                    randomOpacity: !1,
                    optimizeOverlapping: !0,
                    initialize: function(t) {
                        this.canvas = t, this.sprayChunks = []
                    },
                    onMouseDown: function(t) {
                        this.sprayChunks.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.addSprayChunk(t), this.render(this.sprayChunkPoints)
                    },
                    onMouseMove: function(t) {
                        !0 === this.limitedToCanvasSize && this._isOutSideCanvas(t) || (this.addSprayChunk(t), this.render(this.sprayChunkPoints))
                    },
                    onMouseUp: function() {
                        var t = this.canvas.renderOnAddRemove;
                        this.canvas.renderOnAddRemove = !1;
                        for (var e = [], i = 0, r = this.sprayChunks.length; i < r; i++)
                            for (var n = this.sprayChunks[i], o = 0, a = n.length; o < a; o++) {
                                var s = new T.Rect({
                                    width: n[o].width,
                                    height: n[o].width,
                                    left: n[o].x + 1,
                                    top: n[o].y + 1,
                                    originX: "center",
                                    originY: "center",
                                    fill: this.color
                                });
                                e.push(s)
                            }
                        this.optimizeOverlapping && (e = this._getOptimizedRects(e));
                        var l = new T.Group(e);
                        this.shadow && l.set("shadow", new T.Shadow(this.shadow)), this.canvas.fire("before:path:created", {
                            path: l
                        }), this.canvas.add(l), this.canvas.fire("path:created", {
                            path: l
                        }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = t, this.canvas.requestRenderAll()
                    },
                    _getOptimizedRects: function(t) {
                        var e, i, r, n = {};
                        for (i = 0, r = t.length; i < r; i++) n[e = t[i].left + "" + t[i].top] || (n[e] = t[i]);
                        var o = [];
                        for (e in n) o.push(n[e]);
                        return o
                    },
                    render: function(t) {
                        var e, i, r = this.canvas.contextTop;
                        for (r.fillStyle = this.color, this._saveAndTransform(r), e = 0, i = t.length; e < i; e++) {
                            var n = t[e];
                            void 0 !== n.opacity && (r.globalAlpha = n.opacity), r.fillRect(n.x, n.y, n.width, n.width)
                        }
                        r.restore()
                    },
                    _render: function() {
                        var t, e, i = this.canvas.contextTop;
                        for (i.fillStyle = this.color, this._saveAndTransform(i), t = 0, e = this.sprayChunks.length; t < e; t++) this.render(this.sprayChunks[t]);
                        i.restore()
                    },
                    addSprayChunk: function(t) {
                        this.sprayChunkPoints = [];
                        var e, i, r, n, o = this.width / 2;
                        for (n = 0; n < this.density; n++) {
                            e = T.util.getRandomInt(t.x - o, t.x + o), i = T.util.getRandomInt(t.y - o, t.y + o), r = this.dotWidthVariance ? T.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance) : this.dotWidth;
                            var a = new T.Point(e, i);
                            a.width = r, this.randomOpacity && (a.opacity = T.util.getRandomInt(0, 100) / 100), this.sprayChunkPoints.push(a)
                        }
                        this.sprayChunks.push(this.sprayChunkPoints)
                    }
                }), T.PatternBrush = T.util.createClass(T.PencilBrush, {
                    getPatternSrc: function() {
                        var t = T.util.createCanvasElement(),
                            e = t.getContext("2d");
                        return t.width = t.height = 25, e.fillStyle = this.color, e.beginPath(), e.arc(10, 10, 10, 0, 2 * Math.PI, !1), e.closePath(), e.fill(), t
                    },
                    getPatternSrcFunction: function() {
                        return String(this.getPatternSrc).replace("this.color", '"' + this.color + '"')
                    },
                    getPattern: function() {
                        return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), "repeat")
                    },
                    _setBrushStyles: function() {
                        this.callSuper("_setBrushStyles"), this.canvas.contextTop.strokeStyle = this.getPattern()
                    },
                    createPath: function(t) {
                        var e = this.callSuper("createPath", t),
                            i = e._getLeftTopCoords().scalarAdd(e.strokeWidth / 2);
                        return e.stroke = new T.Pattern({
                            source: this.source || this.getPatternSrcFunction(),
                            offsetX: -i.x,
                            offsetY: -i.y
                        }), e
                    }
                }),
                function() {
                    var t = T.util.getPointer,
                        e = T.util.degreesToRadians,
                        i = T.util.isTouchEvent;
                    for (var r in T.Canvas = T.util.createClass(T.StaticCanvas, {
                            initialize: function(t, e) {
                                e || (e = {}), this.renderAndResetBound = this.renderAndReset.bind(this), this.requestRenderAllBound = this.requestRenderAll.bind(this), this._initStatic(t, e), this._initInteractive(), this._createCacheCanvas()
                            },
                            uniformScaling: !0,
                            uniScaleKey: "shiftKey",
                            centeredScaling: !1,
                            centeredRotation: !1,
                            centeredKey: "altKey",
                            altActionKey: "shiftKey",
                            interactive: !0,
                            selection: !0,
                            selectionKey: "shiftKey",
                            altSelectionKey: null,
                            selectionColor: "rgba(100, 100, 255, 0.3)",
                            selectionDashArray: [],
                            selectionBorderColor: "rgba(255, 255, 255, 0.3)",
                            selectionLineWidth: 1,
                            selectionFullyContained: !1,
                            hoverCursor: "move",
                            moveCursor: "move",
                            defaultCursor: "default",
                            freeDrawingCursor: "crosshair",
                            rotationCursor: "crosshair",
                            notAllowedCursor: "not-allowed",
                            containerClass: "canvas-container",
                            perPixelTargetFind: !1,
                            targetFindTolerance: 0,
                            skipTargetFind: !1,
                            isDrawingMode: !1,
                            preserveObjectStacking: !1,
                            snapAngle: 0,
                            snapThreshold: null,
                            stopContextMenu: !1,
                            fireRightClick: !1,
                            fireMiddleClick: !1,
                            targets: [],
                            _hoveredTarget: null,
                            _hoveredTargets: [],
                            _initInteractive: function() {
                                this._currentTransform = null, this._groupSelector = null, this._initWrapperElement(), this._createUpperCanvas(), this._initEventListeners(), this._initRetinaScaling(), this.freeDrawingBrush = T.PencilBrush && new T.PencilBrush(this), this.calcOffset()
                            },
                            _chooseObjectsToRender: function() {
                                var t, e, i, r = this.getActiveObjects();
                                if (r.length > 0 && !this.preserveObjectStacking) {
                                    e = [], i = [];
                                    for (var n = 0, o = this._objects.length; n < o; n++) t = this._objects[n], -1 === r.indexOf(t) ? e.push(t) : i.push(t);
                                    r.length > 1 && (this._activeObject._objects = i), e.push.apply(e, i)
                                } else e = this._objects;
                                return e
                            },
                            renderAll: function() {
                                !this.contextTopDirty || this._groupSelector || this.isDrawingMode || (this.clearContext(this.contextTop), this.contextTopDirty = !1), this.hasLostContext && this.renderTopLayer(this.contextTop);
                                var t = this.contextContainer;
                                return this.renderCanvas(t, this._chooseObjectsToRender()), this
                            },
                            renderTopLayer: function(t) {
                                t.save(), this.isDrawingMode && this._isCurrentlyDrawing && (this.freeDrawingBrush && this.freeDrawingBrush._render(), this.contextTopDirty = !0), this.selection && this._groupSelector && (this._drawSelection(t), this.contextTopDirty = !0), t.restore()
                            },
                            renderTop: function() {
                                var t = this.contextTop;
                                return this.clearContext(t), this.renderTopLayer(t), this.fire("after:render"), this
                            },
                            _normalizePointer: function(t, e) {
                                var i = t.calcTransformMatrix(),
                                    r = T.util.invertTransform(i),
                                    n = this.restorePointerVpt(e);
                                return T.util.transformPoint(n, r)
                            },
                            isTargetTransparent: function(t, e, i) {
                                if (t.shouldCache() && t._cacheCanvas && t !== this._activeObject) {
                                    var r = this._normalizePointer(t, {
                                            x: e,
                                            y: i
                                        }),
                                        n = Math.max(t.cacheTranslationX + r.x * t.zoomX, 0),
                                        o = Math.max(t.cacheTranslationY + r.y * t.zoomY, 0);
                                    return T.util.isTransparent(t._cacheContext, Math.round(n), Math.round(o), this.targetFindTolerance)
                                }
                                var a = this.contextCache,
                                    s = t.selectionBackgroundColor,
                                    l = this.viewportTransform;
                                return t.selectionBackgroundColor = "", this.clearContext(a), a.save(), a.transform(l[0], l[1], l[2], l[3], l[4], l[5]), t.render(a), a.restore(), t.selectionBackgroundColor = s, T.util.isTransparent(a, e, i, this.targetFindTolerance)
                            },
                            _isSelectionKeyPressed: function(t) {
                                return "[object Array]" === Object.prototype.toString.call(this.selectionKey) ? !!this.selectionKey.find((function(e) {
                                    return !0 === t[e]
                                })) : t[this.selectionKey]
                            },
                            _shouldClearSelection: function(t, e) {
                                var i = this.getActiveObjects(),
                                    r = this._activeObject;
                                return !e || e && r && i.length > 1 && -1 === i.indexOf(e) && r !== e && !this._isSelectionKeyPressed(t) || e && !e.evented || e && !e.selectable && r && r !== e
                            },
                            _shouldCenterTransform: function(t, e, i) {
                                var r;
                                if (t) return "scale" === e || "scaleX" === e || "scaleY" === e || "resizing" === e ? r = this.centeredScaling || t.centeredScaling : "rotate" === e && (r = this.centeredRotation || t.centeredRotation), r ? !i : i
                            },
                            _getOriginFromCorner: function(t, e) {
                                var i = {
                                    x: t.originX,
                                    y: t.originY
                                };
                                return "ml" === e || "tl" === e || "bl" === e ? i.x = "right" : "mr" !== e && "tr" !== e && "br" !== e || (i.x = "left"), "tl" === e || "mt" === e || "tr" === e ? i.y = "bottom" : "bl" !== e && "mb" !== e && "br" !== e || (i.y = "top"), i
                            },
                            _getActionFromCorner: function(t, e, i, r) {
                                if (!e || !t) return "drag";
                                var n = r.controls[e];
                                return n.getActionName(i, n, r)
                            },
                            _setupCurrentTransform: function(t, i, r) {
                                if (i) {
                                    var n = this.getPointer(t),
                                        o = i.__corner,
                                        a = i.controls[o],
                                        s = r && o ? a.getActionHandler(t, i, a) : T.controlsUtils.dragHandler,
                                        l = this._getActionFromCorner(r, o, t, i),
                                        h = this._getOriginFromCorner(i, o),
                                        c = t[this.centeredKey],
                                        u = {
                                            target: i,
                                            action: l,
                                            actionHandler: s,
                                            corner: o,
                                            scaleX: i.scaleX,
                                            scaleY: i.scaleY,
                                            skewX: i.skewX,
                                            skewY: i.skewY,
                                            offsetX: n.x - i.left,
                                            offsetY: n.y - i.top,
                                            originX: h.x,
                                            originY: h.y,
                                            ex: n.x,
                                            ey: n.y,
                                            lastX: n.x,
                                            lastY: n.y,
                                            theta: e(i.angle),
                                            width: i.width * i.scaleX,
                                            shiftKey: t.shiftKey,
                                            altKey: c,
                                            original: T.util.saveObjectTransform(i)
                                        };
                                    this._shouldCenterTransform(i, l, c) && (u.originX = "center", u.originY = "center"), u.original.originX = h.x, u.original.originY = h.y, this._currentTransform = u, this._beforeTransform(t)
                                }
                            },
                            setCursor: function(t) {
                                this.upperCanvasEl.style.cursor = t
                            },
                            _drawSelection: function(t) {
                                var e = this._groupSelector,
                                    i = new T.Point(e.ex, e.ey),
                                    r = T.util.transformPoint(i, this.viewportTransform),
                                    n = new T.Point(e.ex + e.left, e.ey + e.top),
                                    o = T.util.transformPoint(n, this.viewportTransform),
                                    a = Math.min(r.x, o.x),
                                    s = Math.min(r.y, o.y),
                                    l = Math.max(r.x, o.x),
                                    h = Math.max(r.y, o.y),
                                    c = this.selectionLineWidth / 2;
                                this.selectionColor && (t.fillStyle = this.selectionColor, t.fillRect(a, s, l - a, h - s)), this.selectionLineWidth && this.selectionBorderColor && (t.lineWidth = this.selectionLineWidth, t.strokeStyle = this.selectionBorderColor, a += c, s += c, l -= c, h -= c, T.Object.prototype._setLineDash.call(this, t, this.selectionDashArray), t.strokeRect(a, s, l - a, h - s))
                            },
                            findTarget: function(t, e) {
                                if (!this.skipTargetFind) {
                                    var r, n, o = this.getPointer(t, !0),
                                        a = this._activeObject,
                                        s = this.getActiveObjects(),
                                        l = i(t),
                                        h = s.length > 1 && !e || 1 === s.length;
                                    if (this.targets = [], h && a._findTargetCorner(o, l)) return a;
                                    if (s.length > 1 && !e && a === this._searchPossibleTargets([a], o)) return a;
                                    if (1 === s.length && a === this._searchPossibleTargets([a], o)) {
                                        if (!this.preserveObjectStacking) return a;
                                        r = a, n = this.targets, this.targets = []
                                    }
                                    var c = this._searchPossibleTargets(this._objects, o);
                                    return t[this.altSelectionKey] && c && r && c !== r && (c = r, this.targets = n), c
                                }
                            },
                            _checkTarget: function(t, e, i) {
                                if (e && e.visible && e.evented && e.containsPoint(t)) {
                                    if (!this.perPixelTargetFind && !e.perPixelTargetFind || e.isEditing) return !0;
                                    if (!this.isTargetTransparent(e, i.x, i.y)) return !0
                                }
                            },
                            _searchPossibleTargets: function(t, e) {
                                for (var i, r, n = t.length; n--;) {
                                    var o = t[n],
                                        a = o.group ? this._normalizePointer(o.group, e) : e;
                                    if (this._checkTarget(a, o, e)) {
                                        (i = t[n]).subTargetCheck && i instanceof T.Group && (r = this._searchPossibleTargets(i._objects, e)) && this.targets.push(r);
                                        break
                                    }
                                }
                                return i
                            },
                            restorePointerVpt: function(t) {
                                return T.util.transformPoint(t, T.util.invertTransform(this.viewportTransform))
                            },
                            getPointer: function(e, i) {
                                if (this._absolutePointer && !i) return this._absolutePointer;
                                if (this._pointer && i) return this._pointer;
                                var r, n = t(e),
                                    o = this.upperCanvasEl,
                                    a = o.getBoundingClientRect(),
                                    s = a.width || 0,
                                    l = a.height || 0;
                                s && l || ("top" in a && "bottom" in a && (l = Math.abs(a.top - a.bottom)), "right" in a && "left" in a && (s = Math.abs(a.right - a.left))), this.calcOffset(), n.x = n.x - this._offset.left, n.y = n.y - this._offset.top, i || (n = this.restorePointerVpt(n));
                                var h = this.getRetinaScaling();
                                return 1 !== h && (n.x /= h, n.y /= h), r = 0 === s || 0 === l ? {
                                    width: 1,
                                    height: 1
                                } : {
                                    width: o.width / s,
                                    height: o.height / l
                                }, {
                                    x: n.x * r.width,
                                    y: n.y * r.height
                                }
                            },
                            _createUpperCanvas: function() {
                                var t = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, ""),
                                    e = this.lowerCanvasEl,
                                    i = this.upperCanvasEl;
                                i ? i.className = "" : (i = this._createCanvasElement(), this.upperCanvasEl = i), T.util.addClass(i, "upper-canvas " + t), this.wrapperEl.appendChild(i), this._copyCanvasStyle(e, i), this._applyCanvasStyle(i), this.contextTop = i.getContext("2d")
                            },
                            _createCacheCanvas: function() {
                                this.cacheCanvasEl = this._createCanvasElement(), this.cacheCanvasEl.setAttribute("width", this.width), this.cacheCanvasEl.setAttribute("height", this.height), this.contextCache = this.cacheCanvasEl.getContext("2d")
                            },
                            _initWrapperElement: function() {
                                this.wrapperEl = T.util.wrapElement(this.lowerCanvasEl, "div", {
                                    class: this.containerClass
                                }), T.util.setStyle(this.wrapperEl, {
                                    width: this.width + "px",
                                    height: this.height + "px",
                                    position: "relative"
                                }), T.util.makeElementUnselectable(this.wrapperEl)
                            },
                            _applyCanvasStyle: function(t) {
                                var e = this.width || t.width,
                                    i = this.height || t.height;
                                T.util.setStyle(t, {
                                    position: "absolute",
                                    width: e + "px",
                                    height: i + "px",
                                    left: 0,
                                    top: 0,
                                    "touch-action": this.allowTouchScrolling ? "manipulation" : "none",
                                    "-ms-touch-action": this.allowTouchScrolling ? "manipulation" : "none"
                                }), t.width = e, t.height = i, T.util.makeElementUnselectable(t)
                            },
                            _copyCanvasStyle: function(t, e) {
                                e.style.cssText = t.style.cssText
                            },
                            getSelectionContext: function() {
                                return this.contextTop
                            },
                            getSelectionElement: function() {
                                return this.upperCanvasEl
                            },
                            getActiveObject: function() {
                                return this._activeObject
                            },
                            getActiveObjects: function() {
                                var t = this._activeObject;
                                return t ? "activeSelection" === t.type && t._objects ? t._objects.slice(0) : [t] : []
                            },
                            _onObjectRemoved: function(t) {
                                t === this._activeObject && (this.fire("before:selection:cleared", {
                                    target: t
                                }), this._discardActiveObject(), this.fire("selection:cleared", {
                                    target: t
                                }), t.fire("deselected")), t === this._hoveredTarget && (this._hoveredTarget = null, this._hoveredTargets = []), this.callSuper("_onObjectRemoved", t)
                            },
                            _fireSelectionEvents: function(t, e) {
                                var i = !1,
                                    r = this.getActiveObjects(),
                                    n = [],
                                    o = [];
                                t.forEach((function(t) {
                                    -1 === r.indexOf(t) && (i = !0, t.fire("deselected", {
                                        e,
                                        target: t
                                    }), o.push(t))
                                })), r.forEach((function(r) {
                                    -1 === t.indexOf(r) && (i = !0, r.fire("selected", {
                                        e,
                                        target: r
                                    }), n.push(r))
                                })), t.length > 0 && r.length > 0 ? i && this.fire("selection:updated", {
                                    e,
                                    selected: n,
                                    deselected: o,
                                    updated: n[0] || o[0],
                                    target: this._activeObject
                                }) : r.length > 0 ? this.fire("selection:created", {
                                    e,
                                    selected: n,
                                    target: this._activeObject
                                }) : t.length > 0 && this.fire("selection:cleared", {
                                    e,
                                    deselected: o
                                })
                            },
                            setActiveObject: function(t, e) {
                                var i = this.getActiveObjects();
                                return this._setActiveObject(t, e), this._fireSelectionEvents(i, e), this
                            },
                            _setActiveObject: function(t, e) {
                                return this._activeObject !== t && (!!this._discardActiveObject(e, t) && (!t.onSelect({
                                    e
                                }) && (this._activeObject = t, !0)))
                            },
                            _discardActiveObject: function(t, e) {
                                var i = this._activeObject;
                                if (i) {
                                    if (i.onDeselect({
                                            e: t,
                                            object: e
                                        })) return !1;
                                    this._activeObject = null
                                }
                                return !0
                            },
                            discardActiveObject: function(t) {
                                var e = this.getActiveObjects(),
                                    i = this.getActiveObject();
                                return e.length && this.fire("before:selection:cleared", {
                                    target: i,
                                    e: t
                                }), this._discardActiveObject(t), this._fireSelectionEvents(e, t), this
                            },
                            dispose: function() {
                                var t = this.wrapperEl;
                                return this.removeListeners(), t.removeChild(this.upperCanvasEl), t.removeChild(this.lowerCanvasEl), this.contextCache = null, this.contextTop = null, ["upperCanvasEl", "cacheCanvasEl"].forEach(function(t) {
                                    T.util.cleanUpJsdomNode(this[t]), this[t] = void 0
                                }.bind(this)), t.parentNode && t.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl), delete this.wrapperEl, T.StaticCanvas.prototype.dispose.call(this), this
                            },
                            clear: function() {
                                return this.discardActiveObject(), this.clearContext(this.contextTop), this.callSuper("clear")
                            },
                            drawControls: function(t) {
                                var e = this._activeObject;
                                e && e._renderControls(t)
                            },
                            _toObject: function(t, e, i) {
                                var r = this._realizeGroupTransformOnObject(t),
                                    n = this.callSuper("_toObject", t, e, i);
                                return this._unwindGroupTransformOnObject(t, r), n
                            },
                            _realizeGroupTransformOnObject: function(t) {
                                if (t.group && "activeSelection" === t.group.type && this._activeObject === t.group) {
                                    var e = {};
                                    return ["angle", "flipX", "flipY", "left", "scaleX", "scaleY", "skewX", "skewY", "top"].forEach((function(i) {
                                        e[i] = t[i]
                                    })), T.util.addTransformToObject(t, this._activeObject.calcOwnMatrix()), e
                                }
                                return null
                            },
                            _unwindGroupTransformOnObject: function(t, e) {
                                e && t.set(e)
                            },
                            _setSVGObject: function(t, e, i) {
                                var r = this._realizeGroupTransformOnObject(e);
                                this.callSuper("_setSVGObject", t, e, i), this._unwindGroupTransformOnObject(e, r)
                            },
                            setViewportTransform: function(t) {
                                this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing && this._activeObject.clearContextTop(), T.StaticCanvas.prototype.setViewportTransform.call(this, t)
                            }
                        }), T.StaticCanvas) "prototype" !== r && (T.Canvas[r] = T.StaticCanvas[r])
                }(),
                function() {
                    var t = T.util.addListener,
                        e = T.util.removeListener,
                        i = {
                            passive: !1
                        };

                    function r(t, e) {
                        return t.button && t.button === e - 1
                    }
                    T.util.object.extend(T.Canvas.prototype, {
                        mainTouchId: null,
                        _initEventListeners: function() {
                            this.removeListeners(), this._bindEvents(), this.addOrRemove(t, "add")
                        },
                        _getEventPrefix: function() {
                            return this.enablePointerEvents ? "pointer" : "mouse"
                        },
                        addOrRemove: function(t, e) {
                            var r = this.upperCanvasEl,
                                n = this._getEventPrefix();
                            t(T.window, "resize", this._onResize), t(r, n + "down", this._onMouseDown), t(r, n + "move", this._onMouseMove, i), t(r, n + "out", this._onMouseOut), t(r, n + "enter", this._onMouseEnter), t(r, "wheel", this._onMouseWheel), t(r, "contextmenu", this._onContextMenu), t(r, "dblclick", this._onDoubleClick), t(r, "dragover", this._onDragOver), t(r, "dragenter", this._onDragEnter), t(r, "dragleave", this._onDragLeave), t(r, "drop", this._onDrop), this.enablePointerEvents || t(r, "touchstart", this._onTouchStart, i), "undefined" != typeof eventjs && e in eventjs && (eventjs[e](r, "gesture", this._onGesture), eventjs[e](r, "drag", this._onDrag), eventjs[e](r, "orientation", this._onOrientationChange), eventjs[e](r, "shake", this._onShake), eventjs[e](r, "longpress", this._onLongPress))
                        },
                        removeListeners: function() {
                            this.addOrRemove(e, "remove");
                            var t = this._getEventPrefix();
                            e(T.document, t + "up", this._onMouseUp), e(T.document, "touchend", this._onTouchEnd, i), e(T.document, t + "move", this._onMouseMove, i), e(T.document, "touchmove", this._onMouseMove, i)
                        },
                        _bindEvents: function() {
                            this.eventsBound || (this._onMouseDown = this._onMouseDown.bind(this), this._onTouchStart = this._onTouchStart.bind(this), this._onMouseMove = this._onMouseMove.bind(this), this._onMouseUp = this._onMouseUp.bind(this), this._onTouchEnd = this._onTouchEnd.bind(this), this._onResize = this._onResize.bind(this), this._onGesture = this._onGesture.bind(this), this._onDrag = this._onDrag.bind(this), this._onShake = this._onShake.bind(this), this._onLongPress = this._onLongPress.bind(this), this._onOrientationChange = this._onOrientationChange.bind(this), this._onMouseWheel = this._onMouseWheel.bind(this), this._onMouseOut = this._onMouseOut.bind(this), this._onMouseEnter = this._onMouseEnter.bind(this), this._onContextMenu = this._onContextMenu.bind(this), this._onDoubleClick = this._onDoubleClick.bind(this), this._onDragOver = this._onDragOver.bind(this), this._onDragEnter = this._simpleEventHandler.bind(this, "dragenter"), this._onDragLeave = this._simpleEventHandler.bind(this, "dragleave"), this._onDrop = this._simpleEventHandler.bind(this, "drop"), this.eventsBound = !0)
                        },
                        _onGesture: function(t, e) {
                            this.__onTransformGesture && this.__onTransformGesture(t, e)
                        },
                        _onDrag: function(t, e) {
                            this.__onDrag && this.__onDrag(t, e)
                        },
                        _onMouseWheel: function(t) {
                            this.__onMouseWheel(t)
                        },
                        _onMouseOut: function(t) {
                            var e = this._hoveredTarget;
                            this.fire("mouse:out", {
                                target: e,
                                e: t
                            }), this._hoveredTarget = null, e && e.fire("mouseout", {
                                e: t
                            });
                            var i = this;
                            this._hoveredTargets.forEach((function(r) {
                                i.fire("mouse:out", {
                                    target: e,
                                    e: t
                                }), r && e.fire("mouseout", {
                                    e: t
                                })
                            })), this._hoveredTargets = [], this._iTextInstances && this._iTextInstances.forEach((function(t) {
                                t.isEditing && t.hiddenTextarea.focus()
                            }))
                        },
                        _onMouseEnter: function(t) {
                            this._currentTransform || this.findTarget(t) || (this.fire("mouse:over", {
                                target: null,
                                e: t
                            }), this._hoveredTarget = null, this._hoveredTargets = [])
                        },
                        _onOrientationChange: function(t, e) {
                            this.__onOrientationChange && this.__onOrientationChange(t, e)
                        },
                        _onShake: function(t, e) {
                            this.__onShake && this.__onShake(t, e)
                        },
                        _onLongPress: function(t, e) {
                            this.__onLongPress && this.__onLongPress(t, e)
                        },
                        _onDragOver: function(t) {
                            t.preventDefault();
                            var e = this._simpleEventHandler("dragover", t);
                            this._fireEnterLeaveEvents(e, t)
                        },
                        _onContextMenu: function(t) {
                            return this.stopContextMenu && (t.stopPropagation(), t.preventDefault()), !1
                        },
                        _onDoubleClick: function(t) {
                            this._cacheTransformEventData(t), this._handleEvent(t, "dblclick"), this._resetTransformEventData(t)
                        },
                        getPointerId: function(t) {
                            var e = t.changedTouches;
                            return e ? e[0] && e[0].identifier : this.enablePointerEvents ? t.pointerId : -1
                        },
                        _isMainEvent: function(t) {
                            return !0 === t.isPrimary || !1 !== t.isPrimary && ("touchend" === t.type && 0 === t.touches.length || (!t.changedTouches || t.changedTouches[0].identifier === this.mainTouchId))
                        },
                        _onTouchStart: function(r) {
                            r.preventDefault(), null === this.mainTouchId && (this.mainTouchId = this.getPointerId(r)), this.__onMouseDown(r), this._resetTransformEventData();
                            var n = this.upperCanvasEl,
                                o = this._getEventPrefix();
                            t(T.document, "touchend", this._onTouchEnd, i), t(T.document, "touchmove", this._onMouseMove, i), e(n, o + "down", this._onMouseDown)
                        },
                        _onMouseDown: function(r) {
                            this.__onMouseDown(r), this._resetTransformEventData();
                            var n = this.upperCanvasEl,
                                o = this._getEventPrefix();
                            e(n, o + "move", this._onMouseMove, i), t(T.document, o + "up", this._onMouseUp), t(T.document, o + "move", this._onMouseMove, i)
                        },
                        _onTouchEnd: function(r) {
                            if (!(r.touches.length > 0)) {
                                this.__onMouseUp(r), this._resetTransformEventData(), this.mainTouchId = null;
                                var n = this._getEventPrefix();
                                e(T.document, "touchend", this._onTouchEnd, i), e(T.document, "touchmove", this._onMouseMove, i);
                                var o = this;
                                this._willAddMouseDown && clearTimeout(this._willAddMouseDown), this._willAddMouseDown = setTimeout((function() {
                                    t(o.upperCanvasEl, n + "down", o._onMouseDown), o._willAddMouseDown = 0
                                }), 400)
                            }
                        },
                        _onMouseUp: function(r) {
                            this.__onMouseUp(r), this._resetTransformEventData();
                            var n = this.upperCanvasEl,
                                o = this._getEventPrefix();
                            this._isMainEvent(r) && (e(T.document, o + "up", this._onMouseUp), e(T.document, o + "move", this._onMouseMove, i), t(n, o + "move", this._onMouseMove, i))
                        },
                        _onMouseMove: function(t) {
                            !this.allowTouchScrolling && t.preventDefault && t.preventDefault(), this.__onMouseMove(t)
                        },
                        _onResize: function() {
                            this.calcOffset()
                        },
                        _shouldRender: function(t) {
                            var e = this._activeObject;
                            return !!(!!e != !!t || e && t && e !== t) || (e && e.isEditing, !1)
                        },
                        __onMouseUp: function(t) {
                            var e, i = this._currentTransform,
                                n = this._groupSelector,
                                o = !1,
                                a = !n || 0 === n.left && 0 === n.top;
                            if (this._cacheTransformEventData(t), e = this._target, this._handleEvent(t, "up:before"), r(t, 3)) this.fireRightClick && this._handleEvent(t, "up", 3, a);
                            else {
                                if (r(t, 2)) return this.fireMiddleClick && this._handleEvent(t, "up", 2, a), void this._resetTransformEventData();
                                if (this.isDrawingMode && this._isCurrentlyDrawing) this._onMouseUpInDrawingMode(t);
                                else if (this._isMainEvent(t)) {
                                    if (i && (this._finalizeCurrentTransform(t), o = i.actionPerformed), !a) {
                                        var s = e === this._activeObject;
                                        this._maybeGroupObjects(t), o || (o = this._shouldRender(e) || !s && e === this._activeObject)
                                    }
                                    if (e) {
                                        if (e.selectable && e !== this._activeObject && "up" === e.activeOn) this.setActiveObject(e, t), o = !0;
                                        else {
                                            var l = e._findTargetCorner(this.getPointer(t, !0), T.util.isTouchEvent(t)),
                                                h = e.controls[l],
                                                c = h && h.getMouseUpHandler(t, e, h);
                                            if (c) {
                                                var u = this.getPointer(t);
                                                c(t, i, u.x, u.y)
                                            }
                                        }
                                        e.isMoving = !1
                                    }
                                    this._setCursorFromEvent(t, e), this._handleEvent(t, "up", 1, a), this._groupSelector = null, this._currentTransform = null, e && (e.__corner = 0), o ? this.requestRenderAll() : a || this.renderTop()
                                }
                            }
                        },
                        _simpleEventHandler: function(t, e) {
                            var i = this.findTarget(e),
                                r = this.targets,
                                n = {
                                    e,
                                    target: i,
                                    subTargets: r
                                };
                            if (this.fire(t, n), i && i.fire(t, n), !r) return i;
                            for (var o = 0; o < r.length; o++) r[o].fire(t, n);
                            return i
                        },
                        _handleEvent: function(t, e, i, r) {
                            var n = this._target,
                                o = this.targets || [],
                                a = {
                                    e: t,
                                    target: n,
                                    subTargets: o,
                                    button: i || 1,
                                    isClick: r || !1,
                                    pointer: this._pointer,
                                    absolutePointer: this._absolutePointer,
                                    transform: this._currentTransform
                                };
                            "up" === e && (a.currentTarget = this.findTarget(t), a.currentSubTargets = this.targets), this.fire("mouse:" + e, a), n && n.fire("mouse" + e, a);
                            for (var s = 0; s < o.length; s++) o[s].fire("mouse" + e, a)
                        },
                        _finalizeCurrentTransform: function(t) {
                            var e, i = this._currentTransform,
                                r = i.target,
                                n = {
                                    e: t,
                                    target: r,
                                    transform: i,
                                    action: i.action
                                };
                            r._scaling && (r._scaling = !1), r.setCoords(), (i.actionPerformed || this.stateful && r.hasStateChanged()) && (i.actionPerformed && (e = this._addEventOptions(n, i), this._fire(e, n)), this._fire("modified", n))
                        },
                        _addEventOptions: function(t, e) {
                            var i, r;
                            switch (e.action) {
                                case "scaleX":
                                    i = "scaled", r = "x";
                                    break;
                                case "scaleY":
                                    i = "scaled", r = "y";
                                    break;
                                case "skewX":
                                    i = "skewed", r = "x";
                                    break;
                                case "skewY":
                                    i = "skewed", r = "y";
                                    break;
                                case "scale":
                                    i = "scaled", r = "equally";
                                    break;
                                case "rotate":
                                    i = "rotated";
                                    break;
                                case "drag":
                                    i = "moved"
                            }
                            return t.by = r, i
                        },
                        _onMouseDownInDrawingMode: function(t) {
                            this._isCurrentlyDrawing = !0, this.getActiveObject() && this.discardActiveObject(t).requestRenderAll();
                            var e = this.getPointer(t);
                            this.freeDrawingBrush.onMouseDown(e, {
                                e: t,
                                pointer: e
                            }), this._handleEvent(t, "down")
                        },
                        _onMouseMoveInDrawingMode: function(t) {
                            if (this._isCurrentlyDrawing) {
                                var e = this.getPointer(t);
                                this.freeDrawingBrush.onMouseMove(e, {
                                    e: t,
                                    pointer: e
                                })
                            }
                            this.setCursor(this.freeDrawingCursor), this._handleEvent(t, "move")
                        },
                        _onMouseUpInDrawingMode: function(t) {
                            var e = this.getPointer(t);
                            this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({
                                e: t,
                                pointer: e
                            }), this._handleEvent(t, "up")
                        },
                        __onMouseDown: function(t) {
                            this._cacheTransformEventData(t), this._handleEvent(t, "down:before");
                            var e = this._target;
                            if (r(t, 3)) this.fireRightClick && this._handleEvent(t, "down", 3);
                            else if (r(t, 2)) this.fireMiddleClick && this._handleEvent(t, "down", 2);
                            else if (this.isDrawingMode) this._onMouseDownInDrawingMode(t);
                            else if (this._isMainEvent(t) && !this._currentTransform) {
                                var i = this._pointer;
                                this._previousPointer = i;
                                var n = this._shouldRender(e),
                                    o = this._shouldGroup(t, e);
                                if (this._shouldClearSelection(t, e) ? this.discardActiveObject(t) : o && (this._handleGrouping(t, e), e = this._activeObject), !this.selection || e && (e.selectable || e.isEditing || e === this._activeObject) || (this._groupSelector = {
                                        ex: this._absolutePointer.x,
                                        ey: this._absolutePointer.y,
                                        top: 0,
                                        left: 0
                                    }), e) {
                                    var a = e === this._activeObject;
                                    e.selectable && "down" === e.activeOn && this.setActiveObject(e, t);
                                    var s = e._findTargetCorner(this.getPointer(t, !0), T.util.isTouchEvent(t));
                                    if (e.__corner = s, e === this._activeObject && (s || !o)) {
                                        this._setupCurrentTransform(t, e, a);
                                        var l = e.controls[s],
                                            h = (i = this.getPointer(t), l && l.getMouseDownHandler(t, e, l));
                                        h && h(t, this._currentTransform, i.x, i.y)
                                    }
                                }
                                this._handleEvent(t, "down"), (n || o) && this.requestRenderAll()
                            }
                        },
                        _resetTransformEventData: function() {
                            this._target = null, this._pointer = null, this._absolutePointer = null
                        },
                        _cacheTransformEventData: function(t) {
                            this._resetTransformEventData(), this._pointer = this.getPointer(t, !0), this._absolutePointer = this.restorePointerVpt(this._pointer), this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(t) || null
                        },
                        _beforeTransform: function(t) {
                            var e = this._currentTransform;
                            this.stateful && e.target.saveState(), this.fire("before:transform", {
                                e: t,
                                transform: e
                            })
                        },
                        __onMouseMove: function(t) {
                            var e, i;
                            if (this._handleEvent(t, "move:before"), this._cacheTransformEventData(t), this.isDrawingMode) this._onMouseMoveInDrawingMode(t);
                            else if (this._isMainEvent(t)) {
                                var r = this._groupSelector;
                                r ? (i = this._absolutePointer, r.left = i.x - r.ex, r.top = i.y - r.ey, this.renderTop()) : this._currentTransform ? this._transformObject(t) : (e = this.findTarget(t) || null, this._setCursorFromEvent(t, e), this._fireOverOutEvents(e, t)), this._handleEvent(t, "move"), this._resetTransformEventData()
                            }
                        },
                        _fireOverOutEvents: function(t, e) {
                            var i = this._hoveredTarget,
                                r = this._hoveredTargets,
                                n = this.targets,
                                o = Math.max(r.length, n.length);
                            this.fireSyntheticInOutEvents(t, e, {
                                oldTarget: i,
                                evtOut: "mouseout",
                                canvasEvtOut: "mouse:out",
                                evtIn: "mouseover",
                                canvasEvtIn: "mouse:over"
                            });
                            for (var a = 0; a < o; a++) this.fireSyntheticInOutEvents(n[a], e, {
                                oldTarget: r[a],
                                evtOut: "mouseout",
                                evtIn: "mouseover"
                            });
                            this._hoveredTarget = t, this._hoveredTargets = this.targets.concat()
                        },
                        _fireEnterLeaveEvents: function(t, e) {
                            var i = this._draggedoverTarget,
                                r = this._hoveredTargets,
                                n = this.targets,
                                o = Math.max(r.length, n.length);
                            this.fireSyntheticInOutEvents(t, e, {
                                oldTarget: i,
                                evtOut: "dragleave",
                                evtIn: "dragenter"
                            });
                            for (var a = 0; a < o; a++) this.fireSyntheticInOutEvents(n[a], e, {
                                oldTarget: r[a],
                                evtOut: "dragleave",
                                evtIn: "dragenter"
                            });
                            this._draggedoverTarget = t
                        },
                        fireSyntheticInOutEvents: function(t, e, i) {
                            var r, n, o, a = i.oldTarget,
                                s = a !== t,
                                l = i.canvasEvtIn,
                                h = i.canvasEvtOut;
                            s && (r = {
                                e,
                                target: t,
                                previousTarget: a
                            }, n = {
                                e,
                                target: a,
                                nextTarget: t
                            }), o = t && s, a && s && (h && this.fire(h, n), a.fire(i.evtOut, n)), o && (l && this.fire(l, r), t.fire(i.evtIn, r))
                        },
                        __onMouseWheel: function(t) {
                            this._cacheTransformEventData(t), this._handleEvent(t, "wheel"), this._resetTransformEventData()
                        },
                        _transformObject: function(t) {
                            var e = this.getPointer(t),
                                i = this._currentTransform;
                            i.reset = !1, i.shiftKey = t.shiftKey, i.altKey = t[this.centeredKey], this._performTransformAction(t, i, e), i.actionPerformed && this.requestRenderAll()
                        },
                        _performTransformAction: function(t, e, i) {
                            var r = i.x,
                                n = i.y,
                                o = e.action,
                                a = !1,
                                s = e.actionHandler;
                            s && (a = s(t, e, r, n)), "drag" === o && a && (e.target.isMoving = !0, this.setCursor(e.target.moveCursor || this.moveCursor)), e.actionPerformed = e.actionPerformed || a
                        },
                        _fire: T.controlsUtils.fireEvent,
                        _setCursorFromEvent: function(t, e) {
                            if (!e) return this.setCursor(this.defaultCursor), !1;
                            var i = e.hoverCursor || this.hoverCursor,
                                r = this._activeObject && "activeSelection" === this._activeObject.type ? this._activeObject : null,
                                n = (!r || !r.contains(e)) && e._findTargetCorner(this.getPointer(t, !0));
                            n ? this.setCursor(this.getCornerCursor(n, e, t)) : (e.subTargetCheck && this.targets.concat().reverse().map((function(t) {
                                i = t.hoverCursor || i
                            })), this.setCursor(i))
                        },
                        getCornerCursor: function(t, e, i) {
                            var r = e.controls[t];
                            return r.cursorStyleHandler(i, r, e)
                        }
                    })
                }(), m = Math.min, y = Math.max, T.util.object.extend(T.Canvas.prototype, {
                    _shouldGroup: function(t, e) {
                        var i = this._activeObject;
                        return i && this._isSelectionKeyPressed(t) && e && e.selectable && this.selection && (i !== e || "activeSelection" === i.type) && !e.onSelect({
                            e: t
                        })
                    },
                    _handleGrouping: function(t, e) {
                        var i = this._activeObject;
                        i.__corner || (e !== i || (e = this.findTarget(t, !0)) && e.selectable) && (i && "activeSelection" === i.type ? this._updateActiveSelection(e, t) : this._createActiveSelection(e, t))
                    },
                    _updateActiveSelection: function(t, e) {
                        var i = this._activeObject,
                            r = i._objects.slice(0);
                        i.contains(t) ? (i.removeWithUpdate(t), this._hoveredTarget = t, this._hoveredTargets = this.targets.concat(), 1 === i.size() && this._setActiveObject(i.item(0), e)) : (i.addWithUpdate(t), this._hoveredTarget = i, this._hoveredTargets = this.targets.concat()), this._fireSelectionEvents(r, e)
                    },
                    _createActiveSelection: function(t, e) {
                        var i = this.getActiveObjects(),
                            r = this._createGroup(t);
                        this._hoveredTarget = r, this._setActiveObject(r, e), this._fireSelectionEvents(i, e)
                    },
                    _createGroup: function(t) {
                        var e = this._objects,
                            i = e.indexOf(this._activeObject) < e.indexOf(t) ? [this._activeObject, t] : [t, this._activeObject];
                        return this._activeObject.isEditing && this._activeObject.exitEditing(), new T.ActiveSelection(i, {
                            canvas: this
                        })
                    },
                    _groupSelectedObjects: function(t) {
                        var e, i = this._collectObjects(t);
                        1 === i.length ? this.setActiveObject(i[0], t) : i.length > 1 && (e = new T.ActiveSelection(i.reverse(), {
                            canvas: this
                        }), this.setActiveObject(e, t))
                    },
                    _collectObjects: function(t) {
                        for (var e, i = [], r = this._groupSelector.ex, n = this._groupSelector.ey, o = r + this._groupSelector.left, a = n + this._groupSelector.top, s = new T.Point(m(r, o), m(n, a)), l = new T.Point(y(r, o), y(n, a)), h = !this.selectionFullyContained, c = r === o && n === a, u = this._objects.length; u-- && !((e = this._objects[u]) && e.selectable && e.visible && (h && e.intersectsWithRect(s, l, !0) || e.isContainedWithinRect(s, l, !0) || h && e.containsPoint(s, null, !0) || h && e.containsPoint(l, null, !0)) && (i.push(e), c)););
                        return i.length > 1 && (i = i.filter((function(e) {
                            return !e.onSelect({
                                e: t
                            })
                        }))), i
                    },
                    _maybeGroupObjects: function(t) {
                        this.selection && this._groupSelector && this._groupSelectedObjects(t), this.setCursor(this.defaultCursor), this._groupSelector = null
                    }
                }), T.util.object.extend(T.StaticCanvas.prototype, {
                    toDataURL: function(t) {
                        t || (t = {});
                        var e = t.format || "png",
                            i = t.quality || 1,
                            r = (t.multiplier || 1) * (t.enableRetinaScaling ? this.getRetinaScaling() : 1),
                            n = this.toCanvasElement(r, t);
                        return T.util.toDataURL(n, e, i)
                    },
                    toCanvasElement: function(t, e) {
                        t = t || 1;
                        var i = ((e = e || {}).width || this.width) * t,
                            r = (e.height || this.height) * t,
                            n = this.getZoom(),
                            o = this.width,
                            a = this.height,
                            s = n * t,
                            l = this.viewportTransform,
                            h = (l[4] - (e.left || 0)) * t,
                            c = (l[5] - (e.top || 0)) * t,
                            u = this.interactive,
                            f = [s, 0, 0, s, h, c],
                            d = this.enableRetinaScaling,
                            p = T.util.createCanvasElement(),
                            g = this.contextTop;
                        return p.width = i, p.height = r, this.contextTop = null, this.enableRetinaScaling = !1, this.interactive = !1, this.viewportTransform = f, this.width = i, this.height = r, this.calcViewportBoundaries(), this.renderCanvas(p.getContext("2d"), this._objects), this.viewportTransform = l, this.width = o, this.height = a, this.calcViewportBoundaries(), this.interactive = u, this.enableRetinaScaling = d, this.contextTop = g, p
                    }
                }), T.util.object.extend(T.StaticCanvas.prototype, {
                    loadFromJSON: function(t, e, i) {
                        if (t) {
                            var r = "string" == typeof t ? JSON.parse(t) : T.util.object.clone(t),
                                n = this,
                                o = r.clipPath,
                                a = this.renderOnAddRemove;
                            return this.renderOnAddRemove = !1, delete r.clipPath, this._enlivenObjects(r.objects, (function(t) {
                                n.clear(), n._setBgOverlay(r, (function() {
                                    o ? n._enlivenObjects([o], (function(i) {
                                        n.clipPath = i[0], n.__setupCanvas.call(n, r, t, a, e)
                                    })) : n.__setupCanvas.call(n, r, t, a, e)
                                }))
                            }), i), this
                        }
                    },
                    __setupCanvas: function(t, e, i, r) {
                        var n = this;
                        e.forEach((function(t, e) {
                            n.insertAt(t, e)
                        })), this.renderOnAddRemove = i, delete t.objects, delete t.backgroundImage, delete t.overlayImage, delete t.background, delete t.overlay, this._setOptions(t), this.renderAll(), r && r()
                    },
                    _setBgOverlay: function(t, e) {
                        var i = {
                            backgroundColor: !1,
                            overlayColor: !1,
                            backgroundImage: !1,
                            overlayImage: !1
                        };
                        if (t.backgroundImage || t.overlayImage || t.background || t.overlay) {
                            var r = function() {
                                i.backgroundImage && i.overlayImage && i.backgroundColor && i.overlayColor && e && e()
                            };
                            this.__setBgOverlay("backgroundImage", t.backgroundImage, i, r), this.__setBgOverlay("overlayImage", t.overlayImage, i, r), this.__setBgOverlay("backgroundColor", t.background, i, r), this.__setBgOverlay("overlayColor", t.overlay, i, r)
                        } else e && e()
                    },
                    __setBgOverlay: function(t, e, i, r) {
                        var n = this;
                        if (!e) return i[t] = !0, void(r && r());
                        "backgroundImage" === t || "overlayImage" === t ? T.util.enlivenObjects([e], (function(e) {
                            n[t] = e[0], i[t] = !0, r && r()
                        })) : this["set" + T.util.string.capitalize(t, !0)](e, (function() {
                            i[t] = !0, r && r()
                        }))
                    },
                    _enlivenObjects: function(t, e, i) {
                        t && 0 !== t.length ? T.util.enlivenObjects(t, (function(t) {
                            e && e(t)
                        }), null, i) : e && e([])
                    },
                    _toDataURL: function(t, e) {
                        this.clone((function(i) {
                            e(i.toDataURL(t))
                        }))
                    },
                    _toDataURLWithMultiplier: function(t, e, i) {
                        this.clone((function(r) {
                            i(r.toDataURLWithMultiplier(t, e))
                        }))
                    },
                    clone: function(t, e) {
                        var i = JSON.stringify(this.toJSON(e));
                        this.cloneWithoutData((function(e) {
                            e.loadFromJSON(i, (function() {
                                t && t(e)
                            }))
                        }))
                    },
                    cloneWithoutData: function(t) {
                        var e = T.util.createCanvasElement();
                        e.width = this.width, e.height = this.height;
                        var i = new T.Canvas(e);
                        this.backgroundImage ? (i.setBackgroundImage(this.backgroundImage.src, (function() {
                            i.renderAll(), t && t(i)
                        })), i.backgroundImageOpacity = this.backgroundImageOpacity, i.backgroundImageStretch = this.backgroundImageStretch) : t && t(i)
                    }
                }),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.util.object.clone,
                        n = e.util.toFixed,
                        o = e.util.string.capitalize,
                        a = e.util.degreesToRadians,
                        s = !e.isLikelyNode;
                    e.Object || (e.Object = e.util.createClass(e.CommonMethods, {
                        type: "object",
                        originX: "left",
                        originY: "top",
                        top: 0,
                        left: 0,
                        width: 0,
                        height: 0,
                        scaleX: 1,
                        scaleY: 1,
                        flipX: !1,
                        flipY: !1,
                        opacity: 1,
                        angle: 0,
                        skewX: 0,
                        skewY: 0,
                        cornerSize: 13,
                        touchCornerSize: 24,
                        transparentCorners: !0,
                        hoverCursor: null,
                        moveCursor: null,
                        padding: 0,
                        borderColor: "rgb(178,204,255)",
                        borderDashArray: null,
                        cornerColor: "rgb(178,204,255)",
                        cornerStrokeColor: null,
                        cornerStyle: "rect",
                        cornerDashArray: null,
                        centeredScaling: !1,
                        centeredRotation: !0,
                        fill: "rgb(0,0,0)",
                        fillRule: "nonzero",
                        globalCompositeOperation: "source-over",
                        backgroundColor: "",
                        selectionBackgroundColor: "",
                        stroke: null,
                        strokeWidth: 1,
                        strokeDashArray: null,
                        strokeDashOffset: 0,
                        strokeLineCap: "butt",
                        strokeLineJoin: "miter",
                        strokeMiterLimit: 4,
                        shadow: null,
                        borderOpacityWhenMoving: .4,
                        borderScaleFactor: 1,
                        minScaleLimit: 0,
                        selectable: !0,
                        evented: !0,
                        visible: !0,
                        hasControls: !0,
                        hasBorders: !0,
                        perPixelTargetFind: !1,
                        includeDefaultValues: !0,
                        lockMovementX: !1,
                        lockMovementY: !1,
                        lockRotation: !1,
                        lockScalingX: !1,
                        lockScalingY: !1,
                        lockSkewingX: !1,
                        lockSkewingY: !1,
                        lockScalingFlip: !1,
                        excludeFromExport: !1,
                        objectCaching: s,
                        statefullCache: !1,
                        noScaleCache: !0,
                        strokeUniform: !1,
                        dirty: !0,
                        __corner: 0,
                        paintFirst: "fill",
                        activeOn: "down",
                        stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit angle opacity fill globalCompositeOperation shadow visible backgroundColor skewX skewY fillRule paintFirst clipPath strokeUniform".split(" "),
                        cacheProperties: "fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath".split(" "),
                        colorProperties: "fill stroke backgroundColor".split(" "),
                        clipPath: void 0,
                        inverted: !1,
                        absolutePositioned: !1,
                        initialize: function(t) {
                            t && this.setOptions(t)
                        },
                        _createCacheCanvas: function() {
                            this._cacheProperties = {}, this._cacheCanvas = e.util.createCanvasElement(), this._cacheContext = this._cacheCanvas.getContext("2d"), this._updateCacheCanvas(), this.dirty = !0
                        },
                        _limitCacheSize: function(t) {
                            var i = e.perfLimitSizeTotal,
                                r = t.width,
                                n = t.height,
                                o = e.maxCacheSideLimit,
                                a = e.minCacheSideLimit;
                            if (r <= o && n <= o && r * n <= i) return r < a && (t.width = a), n < a && (t.height = a), t;
                            var s = r / n,
                                l = e.util.limitDimsByArea(s, i),
                                h = e.util.capValue,
                                c = h(a, l.x, o),
                                u = h(a, l.y, o);
                            return r > c && (t.zoomX /= r / c, t.width = c, t.capped = !0), n > u && (t.zoomY /= n / u, t.height = u, t.capped = !0), t
                        },
                        _getCacheCanvasDimensions: function() {
                            var t = this.getTotalObjectScaling(),
                                e = this._getTransformedDimensions(0, 0),
                                i = e.x * t.scaleX / this.scaleX,
                                r = e.y * t.scaleY / this.scaleY;
                            return {
                                width: i + 2,
                                height: r + 2,
                                zoomX: t.scaleX,
                                zoomY: t.scaleY,
                                x: i,
                                y: r
                            }
                        },
                        _updateCacheCanvas: function() {
                            var t = this.canvas;
                            if (this.noScaleCache && t && t._currentTransform) {
                                var i = t._currentTransform.target,
                                    r = t._currentTransform.action;
                                if (this === i && r.slice && "scale" === r.slice(0, 5)) return !1
                            }
                            var n, o, a = this._cacheCanvas,
                                s = this._limitCacheSize(this._getCacheCanvasDimensions()),
                                l = e.minCacheSideLimit,
                                h = s.width,
                                c = s.height,
                                u = s.zoomX,
                                f = s.zoomY,
                                d = h !== this.cacheWidth || c !== this.cacheHeight,
                                p = this.zoomX !== u || this.zoomY !== f,
                                g = d || p,
                                v = 0,
                                m = 0,
                                y = !1;
                            if (d) {
                                var b = this._cacheCanvas.width,
                                    x = this._cacheCanvas.height,
                                    _ = h > b || c > x;
                                y = _ || (h < .9 * b || c < .9 * x) && b > l && x > l, _ && !s.capped && (h > l || c > l) && (v = .1 * h, m = .1 * c)
                            }
                            return this instanceof e.Text && this.path && (g = !0, y = !0, v += this.getHeightOfLine(0) * this.zoomX, m += this.getHeightOfLine(0) * this.zoomY), !!g && (y ? (a.width = Math.ceil(h + v), a.height = Math.ceil(c + m)) : (this._cacheContext.setTransform(1, 0, 0, 1, 0, 0), this._cacheContext.clearRect(0, 0, a.width, a.height)), n = s.x / 2, o = s.y / 2, this.cacheTranslationX = Math.round(a.width / 2 - n) + n, this.cacheTranslationY = Math.round(a.height / 2 - o) + o, this.cacheWidth = h, this.cacheHeight = c, this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY), this._cacheContext.scale(u, f), this.zoomX = u, this.zoomY = f, !0)
                        },
                        setOptions: function(t) {
                            this._setOptions(t), this._initGradient(t.fill, "fill"), this._initGradient(t.stroke, "stroke"), this._initPattern(t.fill, "fill"), this._initPattern(t.stroke, "stroke")
                        },
                        transform: function(t) {
                            var e = this.group && !this.group._transformDone || this.group && this.canvas && t === this.canvas.contextTop,
                                i = this.calcTransformMatrix(!e);
                            t.transform(i[0], i[1], i[2], i[3], i[4], i[5])
                        },
                        toObject: function(t) {
                            var i = e.Object.NUM_FRACTION_DIGITS,
                                r = {
                                    type: this.type,
                                    version: e.version,
                                    originX: this.originX,
                                    originY: this.originY,
                                    left: n(this.left, i),
                                    top: n(this.top, i),
                                    width: n(this.width, i),
                                    height: n(this.height, i),
                                    fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
                                    stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
                                    strokeWidth: n(this.strokeWidth, i),
                                    strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,
                                    strokeLineCap: this.strokeLineCap,
                                    strokeDashOffset: this.strokeDashOffset,
                                    strokeLineJoin: this.strokeLineJoin,
                                    strokeUniform: this.strokeUniform,
                                    strokeMiterLimit: n(this.strokeMiterLimit, i),
                                    scaleX: n(this.scaleX, i),
                                    scaleY: n(this.scaleY, i),
                                    angle: n(this.angle, i),
                                    flipX: this.flipX,
                                    flipY: this.flipY,
                                    opacity: n(this.opacity, i),
                                    shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
                                    visible: this.visible,
                                    backgroundColor: this.backgroundColor,
                                    fillRule: this.fillRule,
                                    paintFirst: this.paintFirst,
                                    globalCompositeOperation: this.globalCompositeOperation,
                                    skewX: n(this.skewX, i),
                                    skewY: n(this.skewY, i)
                                };
                            return this.clipPath && !this.clipPath.excludeFromExport && (r.clipPath = this.clipPath.toObject(t), r.clipPath.inverted = this.clipPath.inverted, r.clipPath.absolutePositioned = this.clipPath.absolutePositioned), e.util.populateWithProperties(this, r, t), this.includeDefaultValues || (r = this._removeDefaultValues(r)), r
                        },
                        toDatalessObject: function(t) {
                            return this.toObject(t)
                        },
                        _removeDefaultValues: function(t) {
                            var i = e.util.getKlass(t.type).prototype;
                            return i.stateProperties.forEach((function(e) {
                                "left" !== e && "top" !== e && (t[e] === i[e] && delete t[e], "[object Array]" === Object.prototype.toString.call(t[e]) && "[object Array]" === Object.prototype.toString.call(i[e]) && 0 === t[e].length && 0 === i[e].length && delete t[e])
                            })), t
                        },
                        toString: function() {
                            return "#<fabric." + o(this.type) + ">"
                        },
                        getObjectScaling: function() {
                            if (!this.group) return {
                                scaleX: this.scaleX,
                                scaleY: this.scaleY
                            };
                            var t = e.util.qrDecompose(this.calcTransformMatrix());
                            return {
                                scaleX: Math.abs(t.scaleX),
                                scaleY: Math.abs(t.scaleY)
                            }
                        },
                        getTotalObjectScaling: function() {
                            var t = this.getObjectScaling(),
                                e = t.scaleX,
                                i = t.scaleY;
                            if (this.canvas) {
                                var r = this.canvas.getZoom(),
                                    n = this.canvas.getRetinaScaling();
                                e *= r * n, i *= r * n
                            }
                            return {
                                scaleX: e,
                                scaleY: i
                            }
                        },
                        getObjectOpacity: function() {
                            var t = this.opacity;
                            return this.group && (t *= this.group.getObjectOpacity()), t
                        },
                        _set: function(t, i) {
                            var r = "scaleX" === t || "scaleY" === t,
                                n = this[t] !== i,
                                o = !1;
                            return r && (i = this._constrainScale(i)), "scaleX" === t && i < 0 ? (this.flipX = !this.flipX, i *= -1) : "scaleY" === t && i < 0 ? (this.flipY = !this.flipY, i *= -1) : "shadow" !== t || !i || i instanceof e.Shadow ? "dirty" === t && this.group && this.group.set("dirty", i) : i = new e.Shadow(i), this[t] = i, n && (o = this.group && this.group.isOnACache(), this.cacheProperties.indexOf(t) > -1 ? (this.dirty = !0, o && this.group.set("dirty", !0)) : o && this.stateProperties.indexOf(t) > -1 && this.group.set("dirty", !0)), this
                        },
                        setOnGroup: function() {},
                        getViewportTransform: function() {
                            return this.canvas && this.canvas.viewportTransform ? this.canvas.viewportTransform : e.iMatrix.concat()
                        },
                        isNotVisible: function() {
                            return 0 === this.opacity || !this.width && !this.height && 0 === this.strokeWidth || !this.visible
                        },
                        render: function(t) {
                            this.isNotVisible() || this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen() || (t.save(), this._setupCompositeOperation(t), this.drawSelectionBackground(t), this.transform(t), this._setOpacity(t), this._setShadow(t, this), this.shouldCache() ? (this.renderCache(), this.drawCacheOnCanvas(t)) : (this._removeCacheCanvas(), this.dirty = !1, this.drawObject(t), this.objectCaching && this.statefullCache && this.saveState({
                                propertySet: "cacheProperties"
                            })), t.restore())
                        },
                        renderCache: function(t) {
                            t = t || {}, this._cacheCanvas || this._createCacheCanvas(), this.isCacheDirty() && (this.statefullCache && this.saveState({
                                propertySet: "cacheProperties"
                            }), this.drawObject(this._cacheContext, t.forClipping), this.dirty = !1)
                        },
                        _removeCacheCanvas: function() {
                            this._cacheCanvas = null, this.cacheWidth = 0, this.cacheHeight = 0
                        },
                        hasStroke: function() {
                            return this.stroke && "transparent" !== this.stroke && 0 !== this.strokeWidth
                        },
                        hasFill: function() {
                            return this.fill && "transparent" !== this.fill
                        },
                        needsItsOwnCache: function() {
                            return !("stroke" !== this.paintFirst || !this.hasFill() || !this.hasStroke() || "object" != typeof this.shadow) || !!this.clipPath
                        },
                        shouldCache: function() {
                            return this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache()), this.ownCaching
                        },
                        willDrawShadow: function() {
                            return !!this.shadow && (0 !== this.shadow.offsetX || 0 !== this.shadow.offsetY)
                        },
                        drawClipPathOnCache: function(t) {
                            var i = this.clipPath;
                            if (t.save(), i.inverted ? t.globalCompositeOperation = "destination-out" : t.globalCompositeOperation = "destination-in", i.absolutePositioned) {
                                var r = e.util.invertTransform(this.calcTransformMatrix());
                                t.transform(r[0], r[1], r[2], r[3], r[4], r[5])
                            }
                            i.transform(t), t.scale(1 / i.zoomX, 1 / i.zoomY), t.drawImage(i._cacheCanvas, -i.cacheTranslationX, -i.cacheTranslationY), t.restore()
                        },
                        drawObject: function(t, e) {
                            var i = this.fill,
                                r = this.stroke;
                            e ? (this.fill = "black", this.stroke = "", this._setClippingProperties(t)) : this._renderBackground(t), this._render(t), this._drawClipPath(t), this.fill = i, this.stroke = r
                        },
                        _drawClipPath: function(t) {
                            var e = this.clipPath;
                            e && (e.canvas = this.canvas, e.shouldCache(), e._transformDone = !0, e.renderCache({
                                forClipping: !0
                            }), this.drawClipPathOnCache(t))
                        },
                        drawCacheOnCanvas: function(t) {
                            t.scale(1 / this.zoomX, 1 / this.zoomY), t.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY)
                        },
                        isCacheDirty: function(t) {
                            if (this.isNotVisible()) return !1;
                            if (this._cacheCanvas && !t && this._updateCacheCanvas()) return !0;
                            if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged("cacheProperties")) {
                                if (this._cacheCanvas && !t) {
                                    var e = this.cacheWidth / this.zoomX,
                                        i = this.cacheHeight / this.zoomY;
                                    this._cacheContext.clearRect(-e / 2, -i / 2, e, i)
                                }
                                return !0
                            }
                            return !1
                        },
                        _renderBackground: function(t) {
                            if (this.backgroundColor) {
                                var e = this._getNonTransformedDimensions();
                                t.fillStyle = this.backgroundColor, t.fillRect(-e.x / 2, -e.y / 2, e.x, e.y), this._removeShadow(t)
                            }
                        },
                        _setOpacity: function(t) {
                            this.group && !this.group._transformDone ? t.globalAlpha = this.getObjectOpacity() : t.globalAlpha *= this.opacity
                        },
                        _setStrokeStyles: function(t, e) {
                            var i = e.stroke;
                            i && (t.lineWidth = e.strokeWidth, t.lineCap = e.strokeLineCap, t.lineDashOffset = e.strokeDashOffset, t.lineJoin = e.strokeLineJoin, t.miterLimit = e.strokeMiterLimit, i.toLive ? "percentage" === i.gradientUnits || i.gradientTransform || i.patternTransform ? this._applyPatternForTransformedGradient(t, i) : (t.strokeStyle = i.toLive(t, this), this._applyPatternGradientTransform(t, i)) : t.strokeStyle = e.stroke)
                        },
                        _setFillStyles: function(t, e) {
                            var i = e.fill;
                            i && (i.toLive ? (t.fillStyle = i.toLive(t, this), this._applyPatternGradientTransform(t, e.fill)) : t.fillStyle = i)
                        },
                        _setClippingProperties: function(t) {
                            t.globalAlpha = 1, t.strokeStyle = "transparent", t.fillStyle = "#000000"
                        },
                        _setLineDash: function(t, e) {
                            e && 0 !== e.length && (1 & e.length && e.push.apply(e, e), t.setLineDash(e))
                        },
                        _renderControls: function(t, i) {
                            var r, n, o, s = this.getViewportTransform(),
                                l = this.calcTransformMatrix();
                            n = void 0 !== (i = i || {}).hasBorders ? i.hasBorders : this.hasBorders, o = void 0 !== i.hasControls ? i.hasControls : this.hasControls, l = e.util.multiplyTransformMatrices(s, l), r = e.util.qrDecompose(l), t.save(), t.translate(r.translateX, r.translateY), t.lineWidth = 1 * this.borderScaleFactor, this.group || (t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1), t.rotate(a(r.angle)), i.forActiveSelection || this.group ? n && this.drawBordersInGroup(t, r, i) : n && this.drawBorders(t, i), o && this.drawControls(t, i), t.restore()
                        },
                        _setShadow: function(t) {
                            if (this.shadow) {
                                var i, r = this.shadow,
                                    n = this.canvas,
                                    o = n && n.viewportTransform[0] || 1,
                                    a = n && n.viewportTransform[3] || 1;
                                i = r.nonScaling ? {
                                    scaleX: 1,
                                    scaleY: 1
                                } : this.getObjectScaling(), n && n._isRetinaScaling() && (o *= e.devicePixelRatio, a *= e.devicePixelRatio), t.shadowColor = r.color, t.shadowBlur = r.blur * e.browserShadowBlurConstant * (o + a) * (i.scaleX + i.scaleY) / 4, t.shadowOffsetX = r.offsetX * o * i.scaleX, t.shadowOffsetY = r.offsetY * a * i.scaleY
                            }
                        },
                        _removeShadow: function(t) {
                            this.shadow && (t.shadowColor = "", t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0)
                        },
                        _applyPatternGradientTransform: function(t, e) {
                            if (!e || !e.toLive) return {
                                offsetX: 0,
                                offsetY: 0
                            };
                            var i = e.gradientTransform || e.patternTransform,
                                r = -this.width / 2 + e.offsetX || 0,
                                n = -this.height / 2 + e.offsetY || 0;
                            return "percentage" === e.gradientUnits ? t.transform(this.width, 0, 0, this.height, r, n) : t.transform(1, 0, 0, 1, r, n), i && t.transform(i[0], i[1], i[2], i[3], i[4], i[5]), {
                                offsetX: r,
                                offsetY: n
                            }
                        },
                        _renderPaintInOrder: function(t) {
                            "stroke" === this.paintFirst ? (this._renderStroke(t), this._renderFill(t)) : (this._renderFill(t), this._renderStroke(t))
                        },
                        _render: function() {},
                        _renderFill: function(t) {
                            this.fill && (t.save(), this._setFillStyles(t, this), "evenodd" === this.fillRule ? t.fill("evenodd") : t.fill(), t.restore())
                        },
                        _renderStroke: function(t) {
                            if (this.stroke && 0 !== this.strokeWidth) {
                                if (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this.strokeUniform && this.group) {
                                    var e = this.getObjectScaling();
                                    t.scale(1 / e.scaleX, 1 / e.scaleY)
                                } else this.strokeUniform && t.scale(1 / this.scaleX, 1 / this.scaleY);
                                this._setLineDash(t, this.strokeDashArray), this._setStrokeStyles(t, this), t.stroke(), t.restore()
                            }
                        },
                        _applyPatternForTransformedGradient: function(t, i) {
                            var r, n = this._limitCacheSize(this._getCacheCanvasDimensions()),
                                o = e.util.createCanvasElement(),
                                a = this.canvas.getRetinaScaling(),
                                s = n.x / this.scaleX / a,
                                l = n.y / this.scaleY / a;
                            o.width = s, o.height = l, (r = o.getContext("2d")).beginPath(), r.moveTo(0, 0), r.lineTo(s, 0), r.lineTo(s, l), r.lineTo(0, l), r.closePath(), r.translate(s / 2, l / 2), r.scale(n.zoomX / this.scaleX / a, n.zoomY / this.scaleY / a), this._applyPatternGradientTransform(r, i), r.fillStyle = i.toLive(t), r.fill(), t.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2), t.scale(a * this.scaleX / n.zoomX, a * this.scaleY / n.zoomY), t.strokeStyle = r.createPattern(o, "no-repeat")
                        },
                        _findCenterFromElement: function() {
                            return {
                                x: this.left + this.width / 2,
                                y: this.top + this.height / 2
                            }
                        },
                        _assignTransformMatrixProps: function() {
                            if (this.transformMatrix) {
                                var t = e.util.qrDecompose(this.transformMatrix);
                                this.flipX = !1, this.flipY = !1, this.set("scaleX", t.scaleX), this.set("scaleY", t.scaleY), this.angle = t.angle, this.skewX = t.skewX, this.skewY = 0
                            }
                        },
                        _removeTransformMatrix: function(t) {
                            var i = this._findCenterFromElement();
                            this.transformMatrix && (this._assignTransformMatrixProps(), i = e.util.transformPoint(i, this.transformMatrix)), this.transformMatrix = null, t && (this.scaleX *= t.scaleX, this.scaleY *= t.scaleY, this.cropX = t.cropX, this.cropY = t.cropY, i.x += t.offsetLeft, i.y += t.offsetTop, this.width = t.width, this.height = t.height), this.setPositionByOrigin(i, "center", "center")
                        },
                        clone: function(t, i) {
                            var r = this.toObject(i);
                            this.constructor.fromObject ? this.constructor.fromObject(r, t) : e.Object._fromObject("Object", r, t)
                        },
                        cloneAsImage: function(t, i) {
                            var r = this.toCanvasElement(i);
                            return t && t(new e.Image(r)), this
                        },
                        toCanvasElement: function(t) {
                            t || (t = {});
                            var i = e.util,
                                r = i.saveObjectTransform(this),
                                n = this.group,
                                o = this.shadow,
                                a = Math.abs,
                                s = (t.multiplier || 1) * (t.enableRetinaScaling ? e.devicePixelRatio : 1);
                            delete this.group, t.withoutTransform && i.resetObjectTransform(this), t.withoutShadow && (this.shadow = null);
                            var l, h, c, u, f = e.util.createCanvasElement(),
                                d = this.getBoundingRect(!0, !0),
                                p = this.shadow,
                                g = {
                                    x: 0,
                                    y: 0
                                };
                            p && (h = p.blur, l = p.nonScaling ? {
                                scaleX: 1,
                                scaleY: 1
                            } : this.getObjectScaling(), g.x = 2 * Math.round(a(p.offsetX) + h) * a(l.scaleX), g.y = 2 * Math.round(a(p.offsetY) + h) * a(l.scaleY)), c = d.width + g.x, u = d.height + g.y, f.width = Math.ceil(c), f.height = Math.ceil(u);
                            var v = new e.StaticCanvas(f, {
                                enableRetinaScaling: !1,
                                renderOnAddRemove: !1,
                                skipOffscreen: !1
                            });
                            "jpeg" === t.format && (v.backgroundColor = "#fff"), this.setPositionByOrigin(new e.Point(v.width / 2, v.height / 2), "center", "center");
                            var m = this.canvas;
                            v.add(this);
                            var y = v.toCanvasElement(s || 1, t);
                            return this.shadow = o, this.set("canvas", m), n && (this.group = n), this.set(r).setCoords(), v._objects = [], v.dispose(), v = null, y
                        },
                        toDataURL: function(t) {
                            return t || (t = {}), e.util.toDataURL(this.toCanvasElement(t), t.format || "png", t.quality || 1)
                        },
                        isType: function(t) {
                            return this.type === t
                        },
                        complexity: function() {
                            return 1
                        },
                        toJSON: function(t) {
                            return this.toObject(t)
                        },
                        rotate: function(t) {
                            var e = ("center" !== this.originX || "center" !== this.originY) && this.centeredRotation;
                            return e && this._setOriginToCenter(), this.set("angle", t), e && this._resetOrigin(), this
                        },
                        centerH: function() {
                            return this.canvas && this.canvas.centerObjectH(this), this
                        },
                        viewportCenterH: function() {
                            return this.canvas && this.canvas.viewportCenterObjectH(this), this
                        },
                        centerV: function() {
                            return this.canvas && this.canvas.centerObjectV(this), this
                        },
                        viewportCenterV: function() {
                            return this.canvas && this.canvas.viewportCenterObjectV(this), this
                        },
                        center: function() {
                            return this.canvas && this.canvas.centerObject(this), this
                        },
                        viewportCenter: function() {
                            return this.canvas && this.canvas.viewportCenterObject(this), this
                        },
                        getLocalPointer: function(t, i) {
                            i = i || this.canvas.getPointer(t);
                            var r = new e.Point(i.x, i.y),
                                n = this._getLeftTopCoords();
                            return this.angle && (r = e.util.rotatePoint(r, n, a(-this.angle))), {
                                x: r.x - n.x,
                                y: r.y - n.y
                            }
                        },
                        _setupCompositeOperation: function(t) {
                            this.globalCompositeOperation && (t.globalCompositeOperation = this.globalCompositeOperation)
                        }
                    }), e.util.createAccessors && e.util.createAccessors(e.Object), i(e.Object.prototype, e.Observable), e.Object.NUM_FRACTION_DIGITS = 2, e.Object._fromObject = function(t, i, n, o) {
                        var a = e[t];
                        i = r(i, !0), e.util.enlivenPatterns([i.fill, i.stroke], (function(t) {
                            void 0 !== t[0] && (i.fill = t[0]), void 0 !== t[1] && (i.stroke = t[1]), e.util.enlivenObjects([i.clipPath], (function(t) {
                                i.clipPath = t[0];
                                var e = o ? new a(i[o], i) : new a(i);
                                n && n(e)
                            }))
                        }))
                    }, e.Object.__uid = 0)
                }(e), b = T.util.degreesToRadians, x = {
                    left: -.5,
                    center: 0,
                    right: .5
                }, _ = {
                    top: -.5,
                    center: 0,
                    bottom: .5
                }, T.util.object.extend(T.Object.prototype, {
                    translateToGivenOrigin: function(t, e, i, r, n) {
                        var o, a, s, l = t.x,
                            h = t.y;
                        return "string" == typeof e ? e = x[e] : e -= .5, "string" == typeof r ? r = x[r] : r -= .5, "string" == typeof i ? i = _[i] : i -= .5, "string" == typeof n ? n = _[n] : n -= .5, a = n - i, ((o = r - e) || a) && (s = this._getTransformedDimensions(), l = t.x + o * s.x, h = t.y + a * s.y), new T.Point(l, h)
                    },
                    translateToCenterPoint: function(t, e, i) {
                        var r = this.translateToGivenOrigin(t, e, i, "center", "center");
                        return this.angle ? T.util.rotatePoint(r, t, b(this.angle)) : r
                    },
                    translateToOriginPoint: function(t, e, i) {
                        var r = this.translateToGivenOrigin(t, "center", "center", e, i);
                        return this.angle ? T.util.rotatePoint(r, t, b(this.angle)) : r
                    },
                    getCenterPoint: function() {
                        var t = new T.Point(this.left, this.top);
                        return this.translateToCenterPoint(t, this.originX, this.originY)
                    },
                    getPointByOrigin: function(t, e) {
                        var i = this.getCenterPoint();
                        return this.translateToOriginPoint(i, t, e)
                    },
                    toLocalPoint: function(t, e, i) {
                        var r, n, o = this.getCenterPoint();
                        return r = void 0 !== e && void 0 !== i ? this.translateToGivenOrigin(o, "center", "center", e, i) : new T.Point(this.left, this.top), n = new T.Point(t.x, t.y), this.angle && (n = T.util.rotatePoint(n, o, -b(this.angle))), n.subtractEquals(r)
                    },
                    setPositionByOrigin: function(t, e, i) {
                        var r = this.translateToCenterPoint(t, e, i),
                            n = this.translateToOriginPoint(r, this.originX, this.originY);
                        this.set("left", n.x), this.set("top", n.y)
                    },
                    adjustPosition: function(t) {
                        var e, i, r = b(this.angle),
                            n = this.getScaledWidth(),
                            o = T.util.cos(r) * n,
                            a = T.util.sin(r) * n;
                        e = "string" == typeof this.originX ? x[this.originX] : this.originX - .5, i = "string" == typeof t ? x[t] : t - .5, this.left += o * (i - e), this.top += a * (i - e), this.setCoords(), this.originX = t
                    },
                    _setOriginToCenter: function() {
                        this._originalOriginX = this.originX, this._originalOriginY = this.originY;
                        var t = this.getCenterPoint();
                        this.originX = "center", this.originY = "center", this.left = t.x, this.top = t.y
                    },
                    _resetOrigin: function() {
                        var t = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);
                        this.originX = this._originalOriginX, this.originY = this._originalOriginY, this.left = t.x, this.top = t.y, this._originalOriginX = null, this._originalOriginY = null
                    },
                    _getLeftTopCoords: function() {
                        return this.translateToOriginPoint(this.getCenterPoint(), "left", "top")
                    }
                }),
                function() {
                    var t = T.util,
                        e = t.degreesToRadians,
                        i = t.multiplyTransformMatrices,
                        r = t.transformPoint;
                    t.object.extend(T.Object.prototype, {
                        oCoords: null,
                        aCoords: null,
                        lineCoords: null,
                        ownMatrixCache: null,
                        matrixCache: null,
                        controls: {},
                        _getCoords: function(t, e) {
                            return e ? t ? this.calcACoords() : this.calcLineCoords() : (this.aCoords && this.lineCoords || this.setCoords(!0), t ? this.aCoords : this.lineCoords)
                        },
                        getCoords: function(t, e) {
                            return i = this._getCoords(t, e), [new T.Point(i.tl.x, i.tl.y), new T.Point(i.tr.x, i.tr.y), new T.Point(i.br.x, i.br.y), new T.Point(i.bl.x, i.bl.y)];
                            var i
                        },
                        intersectsWithRect: function(t, e, i, r) {
                            var n = this.getCoords(i, r);
                            return "Intersection" === T.Intersection.intersectPolygonRectangle(n, t, e).status
                        },
                        intersectsWithObject: function(t, e, i) {
                            return "Intersection" === T.Intersection.intersectPolygonPolygon(this.getCoords(e, i), t.getCoords(e, i)).status || t.isContainedWithinObject(this, e, i) || this.isContainedWithinObject(t, e, i)
                        },
                        isContainedWithinObject: function(t, e, i) {
                            for (var r = this.getCoords(e, i), n = e ? t.aCoords : t.lineCoords, o = 0, a = t._getImageLines(n); o < 4; o++)
                                if (!t.containsPoint(r[o], a)) return !1;
                            return !0
                        },
                        isContainedWithinRect: function(t, e, i, r) {
                            var n = this.getBoundingRect(i, r);
                            return n.left >= t.x && n.left + n.width <= e.x && n.top >= t.y && n.top + n.height <= e.y
                        },
                        containsPoint: function(t, e, i, r) {
                            var n = this._getCoords(i, r),
                                o = (e = e || this._getImageLines(n), this._findCrossPoints(t, e));
                            return 0 !== o && o % 2 == 1
                        },
                        isOnScreen: function(t) {
                            if (!this.canvas) return !1;
                            var e = this.canvas.vptCoords.tl,
                                i = this.canvas.vptCoords.br;
                            return !!this.getCoords(!0, t).some((function(t) {
                                return t.x <= i.x && t.x >= e.x && t.y <= i.y && t.y >= e.y
                            })) || (!!this.intersectsWithRect(e, i, !0, t) || this._containsCenterOfCanvas(e, i, t))
                        },
                        _containsCenterOfCanvas: function(t, e, i) {
                            var r = {
                                x: (t.x + e.x) / 2,
                                y: (t.y + e.y) / 2
                            };
                            return !!this.containsPoint(r, null, !0, i)
                        },
                        isPartiallyOnScreen: function(t) {
                            if (!this.canvas) return !1;
                            var e = this.canvas.vptCoords.tl,
                                i = this.canvas.vptCoords.br;
                            return !!this.intersectsWithRect(e, i, !0, t) || this.getCoords(!0, t).every((function(t) {
                                return (t.x >= i.x || t.x <= e.x) && (t.y >= i.y || t.y <= e.y)
                            })) && this._containsCenterOfCanvas(e, i, t)
                        },
                        _getImageLines: function(t) {
                            return {
                                topline: {
                                    o: t.tl,
                                    d: t.tr
                                },
                                rightline: {
                                    o: t.tr,
                                    d: t.br
                                },
                                bottomline: {
                                    o: t.br,
                                    d: t.bl
                                },
                                leftline: {
                                    o: t.bl,
                                    d: t.tl
                                }
                            }
                        },
                        _findCrossPoints: function(t, e) {
                            var i, r, n, o = 0;
                            for (var a in e)
                                if (!((n = e[a]).o.y < t.y && n.d.y < t.y || n.o.y >= t.y && n.d.y >= t.y || (n.o.x === n.d.x && n.o.x >= t.x ? r = n.o.x : (0, i = (n.d.y - n.o.y) / (n.d.x - n.o.x), r = -(t.y - 0 * t.x - (n.o.y - i * n.o.x)) / (0 - i)), r >= t.x && (o += 1), 2 !== o))) break;
                            return o
                        },
                        getBoundingRect: function(e, i) {
                            var r = this.getCoords(e, i);
                            return t.makeBoundingBoxFromPoints(r)
                        },
                        getScaledWidth: function() {
                            return this._getTransformedDimensions().x
                        },
                        getScaledHeight: function() {
                            return this._getTransformedDimensions().y
                        },
                        _constrainScale: function(t) {
                            return Math.abs(t) < this.minScaleLimit ? t < 0 ? -this.minScaleLimit : this.minScaleLimit : 0 === t ? 1e-4 : t
                        },
                        scale: function(t) {
                            return this._set("scaleX", t), this._set("scaleY", t), this.setCoords()
                        },
                        scaleToWidth: function(t, e) {
                            var i = this.getBoundingRect(e).width / this.getScaledWidth();
                            return this.scale(t / this.width / i)
                        },
                        scaleToHeight: function(t, e) {
                            var i = this.getBoundingRect(e).height / this.getScaledHeight();
                            return this.scale(t / this.height / i)
                        },
                        calcCoords: function(t) {
                            return t ? this.calcACoords() : this.calcOCoords()
                        },
                        calcLineCoords: function() {
                            var i = this.getViewportTransform(),
                                n = this.padding,
                                o = e(this.angle),
                                a = t.cos(o) * n,
                                s = t.sin(o) * n,
                                l = a + s,
                                h = a - s,
                                c = this.calcACoords(),
                                u = {
                                    tl: r(c.tl, i),
                                    tr: r(c.tr, i),
                                    bl: r(c.bl, i),
                                    br: r(c.br, i)
                                };
                            return n && (u.tl.x -= h, u.tl.y -= l, u.tr.x += l, u.tr.y -= h, u.bl.x -= l, u.bl.y += h, u.br.x += h, u.br.y += l), u
                        },
                        calcOCoords: function() {
                            var t = this._calcRotateMatrix(),
                                e = this._calcTranslateMatrix(),
                                r = this.getViewportTransform(),
                                n = i(r, e),
                                o = i(n, t),
                                a = (o = i(o, [1 / r[0], 0, 0, 1 / r[3], 0, 0]), this._calculateCurrentDimensions()),
                                s = {};
                            return this.forEachControl((function(t, e, i) {
                                s[e] = t.positionHandler(a, o, i)
                            })), s
                        },
                        calcACoords: function() {
                            var t = this._calcRotateMatrix(),
                                e = this._calcTranslateMatrix(),
                                n = i(e, t),
                                o = this._getTransformedDimensions(),
                                a = o.x / 2,
                                s = o.y / 2;
                            return {
                                tl: r({
                                    x: -a,
                                    y: -s
                                }, n),
                                tr: r({
                                    x: a,
                                    y: -s
                                }, n),
                                bl: r({
                                    x: -a,
                                    y: s
                                }, n),
                                br: r({
                                    x: a,
                                    y: s
                                }, n)
                            }
                        },
                        setCoords: function(t) {
                            return this.aCoords = this.calcACoords(), this.lineCoords = this.group ? this.aCoords : this.calcLineCoords(), t || (this.oCoords = this.calcOCoords(), this._setCornerCoords && this._setCornerCoords()), this
                        },
                        _calcRotateMatrix: function() {
                            return t.calcRotateMatrix(this)
                        },
                        _calcTranslateMatrix: function() {
                            var t = this.getCenterPoint();
                            return [1, 0, 0, 1, t.x, t.y]
                        },
                        transformMatrixKey: function(t) {
                            var e = "_",
                                i = "";
                            return !t && this.group && (i = this.group.transformMatrixKey(t) + e), i + this.top + e + this.left + e + this.scaleX + e + this.scaleY + e + this.skewX + e + this.skewY + e + this.angle + e + this.originX + e + this.originY + e + this.width + e + this.height + e + this.strokeWidth + this.flipX + this.flipY
                        },
                        calcTransformMatrix: function(t) {
                            var e = this.calcOwnMatrix();
                            if (t || !this.group) return e;
                            var r = this.transformMatrixKey(t),
                                n = this.matrixCache || (this.matrixCache = {});
                            return n.key === r ? n.value : (this.group && (e = i(this.group.calcTransformMatrix(!1), e)), n.key = r, n.value = e, e)
                        },
                        calcOwnMatrix: function() {
                            var e = this.transformMatrixKey(!0),
                                i = this.ownMatrixCache || (this.ownMatrixCache = {});
                            if (i.key === e) return i.value;
                            var r = this._calcTranslateMatrix(),
                                n = {
                                    angle: this.angle,
                                    translateX: r[4],
                                    translateY: r[5],
                                    scaleX: this.scaleX,
                                    scaleY: this.scaleY,
                                    skewX: this.skewX,
                                    skewY: this.skewY,
                                    flipX: this.flipX,
                                    flipY: this.flipY
                                };
                            return i.key = e, i.value = t.composeMatrix(n), i.value
                        },
                        _calcDimensionsTransformMatrix: function(e, i, r) {
                            return t.calcDimensionsMatrix({
                                skewX: e,
                                skewY: i,
                                scaleX: this.scaleX * (r && this.flipX ? -1 : 1),
                                scaleY: this.scaleY * (r && this.flipY ? -1 : 1)
                            })
                        },
                        _getNonTransformedDimensions: function() {
                            var t = this.strokeWidth;
                            return {
                                x: this.width + t,
                                y: this.height + t
                            }
                        },
                        _getTransformedDimensions: function(e, i) {
                            void 0 === e && (e = this.skewX), void 0 === i && (i = this.skewY);
                            var r, n, o, a = 0 === e && 0 === i;
                            if (this.strokeUniform ? (n = this.width, o = this.height) : (n = (r = this._getNonTransformedDimensions()).x, o = r.y), a) return this._finalizeDimensions(n * this.scaleX, o * this.scaleY);
                            var s = t.sizeAfterTransform(n, o, {
                                scaleX: this.scaleX,
                                scaleY: this.scaleY,
                                skewX: e,
                                skewY: i
                            });
                            return this._finalizeDimensions(s.x, s.y)
                        },
                        _finalizeDimensions: function(t, e) {
                            return this.strokeUniform ? {
                                x: t + this.strokeWidth,
                                y: e + this.strokeWidth
                            } : {
                                x: t,
                                y: e
                            }
                        },
                        _calculateCurrentDimensions: function() {
                            var t = this.getViewportTransform(),
                                e = this._getTransformedDimensions();
                            return r(e, t, !0).scalarAdd(2 * this.padding)
                        }
                    })
                }(), T.util.object.extend(T.Object.prototype, {
                    sendToBack: function() {
                        return this.group ? T.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas && this.canvas.sendToBack(this), this
                    },
                    bringToFront: function() {
                        return this.group ? T.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas && this.canvas.bringToFront(this), this
                    },
                    sendBackwards: function(t) {
                        return this.group ? T.StaticCanvas.prototype.sendBackwards.call(this.group, this, t) : this.canvas && this.canvas.sendBackwards(this, t), this
                    },
                    bringForward: function(t) {
                        return this.group ? T.StaticCanvas.prototype.bringForward.call(this.group, this, t) : this.canvas && this.canvas.bringForward(this, t), this
                    },
                    moveTo: function(t) {
                        return this.group && "activeSelection" !== this.group.type ? T.StaticCanvas.prototype.moveTo.call(this.group, this, t) : this.canvas && this.canvas.moveTo(this, t), this
                    }
                }),
                function() {
                    function t(t, e) {
                        if (e) {
                            if (e.toLive) return t + ": url(#SVGID_" + e.id + "); ";
                            var i = new T.Color(e),
                                r = t + ": " + i.toRgb() + "; ",
                                n = i.getAlpha();
                            return 1 !== n && (r += t + "-opacity: " + n.toString() + "; "), r
                        }
                        return t + ": none; "
                    }
                    var e = T.util.toFixed;
                    T.util.object.extend(T.Object.prototype, {
                        getSvgStyles: function(e) {
                            var i = this.fillRule ? this.fillRule : "nonzero",
                                r = this.strokeWidth ? this.strokeWidth : "0",
                                n = this.strokeDashArray ? this.strokeDashArray.join(" ") : "none",
                                o = this.strokeDashOffset ? this.strokeDashOffset : "0",
                                a = this.strokeLineCap ? this.strokeLineCap : "butt",
                                s = this.strokeLineJoin ? this.strokeLineJoin : "miter",
                                l = this.strokeMiterLimit ? this.strokeMiterLimit : "4",
                                h = void 0 !== this.opacity ? this.opacity : "1",
                                c = this.visible ? "" : " visibility: hidden;",
                                u = e ? "" : this.getSvgFilter(),
                                f = t("fill", this.fill);
                            return [t("stroke", this.stroke), "stroke-width: ", r, "; ", "stroke-dasharray: ", n, "; ", "stroke-linecap: ", a, "; ", "stroke-dashoffset: ", o, "; ", "stroke-linejoin: ", s, "; ", "stroke-miterlimit: ", l, "; ", f, "fill-rule: ", i, "; ", "opacity: ", h, ";", u, c].join("")
                        },
                        getSvgSpanStyles: function(e, i) {
                            var r = "; ",
                                n = e.fontFamily ? "font-family: " + (-1 === e.fontFamily.indexOf("'") && -1 === e.fontFamily.indexOf('"') ? "'" + e.fontFamily + "'" : e.fontFamily) + r : "",
                                o = e.strokeWidth ? "stroke-width: " + e.strokeWidth + r : "",
                                a = (n = n, e.fontSize ? "font-size: " + e.fontSize + "px" + r : ""),
                                s = e.fontStyle ? "font-style: " + e.fontStyle + r : "",
                                l = e.fontWeight ? "font-weight: " + e.fontWeight + r : "",
                                h = e.fill ? t("fill", e.fill) : "",
                                c = e.stroke ? t("stroke", e.stroke) : "",
                                u = this.getSvgTextDecoration(e);
                            return u && (u = "text-decoration: " + u + r), [c, o, n, a, s, l, u, h, e.deltaY ? "baseline-shift: " + -e.deltaY + "; " : "", i ? "white-space: pre; " : ""].join("")
                        },
                        getSvgTextDecoration: function(t) {
                            return ["overline", "underline", "line-through"].filter((function(e) {
                                return t[e.replace("-", "")]
                            })).join(" ")
                        },
                        getSvgFilter: function() {
                            return this.shadow ? "filter: url(#SVGID_" + this.shadow.id + ");" : ""
                        },
                        getSvgCommons: function() {
                            return [this.id ? 'id="' + this.id + '" ' : "", this.clipPath ? 'clip-path="url(#' + this.clipPath.clipPathId + ')" ' : ""].join("")
                        },
                        getSvgTransform: function(t, e) {
                            var i = t ? this.calcTransformMatrix() : this.calcOwnMatrix();
                            return 'transform="' + T.util.matrixToSVG(i) + (e || "") + '" '
                        },
                        _setSVGBg: function(t) {
                            if (this.backgroundColor) {
                                var i = T.Object.NUM_FRACTION_DIGITS;
                                t.push("\t\t<rect ", this._getFillAttributes(this.backgroundColor), ' x="', e(-this.width / 2, i), '" y="', e(-this.height / 2, i), '" width="', e(this.width, i), '" height="', e(this.height, i), '"></rect>\n')
                            }
                        },
                        toSVG: function(t) {
                            return this._createBaseSVGMarkup(this._toSVG(t), {
                                reviver: t
                            })
                        },
                        toClipPathSVG: function(t) {
                            return "\t" + this._createBaseClipPathSVGMarkup(this._toSVG(t), {
                                reviver: t
                            })
                        },
                        _createBaseClipPathSVGMarkup: function(t, e) {
                            var i = (e = e || {}).reviver,
                                r = e.additionalTransform || "",
                                n = [this.getSvgTransform(!0, r), this.getSvgCommons()].join(""),
                                o = t.indexOf("COMMON_PARTS");
                            return t[o] = n, i ? i(t.join("")) : t.join("")
                        },
                        _createBaseSVGMarkup: function(t, e) {
                            var i, r, n = (e = e || {}).noStyle,
                                o = e.reviver,
                                a = n ? "" : 'style="' + this.getSvgStyles() + '" ',
                                s = e.withShadow ? 'style="' + this.getSvgFilter() + '" ' : "",
                                l = this.clipPath,
                                h = this.strokeUniform ? 'vector-effect="non-scaling-stroke" ' : "",
                                c = l && l.absolutePositioned,
                                u = this.stroke,
                                f = this.fill,
                                d = this.shadow,
                                p = [],
                                g = t.indexOf("COMMON_PARTS"),
                                v = e.additionalTransform;
                            return l && (l.clipPathId = "CLIPPATH_" + T.Object.__uid++, r = '<clipPath id="' + l.clipPathId + '" >\n' + l.toClipPathSVG(o) + "</clipPath>\n"), c && p.push("<g ", s, this.getSvgCommons(), " >\n"), p.push("<g ", this.getSvgTransform(!1), c ? "" : s + this.getSvgCommons(), " >\n"), i = [a, h, n ? "" : this.addPaintOrder(), " ", v ? 'transform="' + v + '" ' : ""].join(""), t[g] = i, f && f.toLive && p.push(f.toSVG(this)), u && u.toLive && p.push(u.toSVG(this)), d && p.push(d.toSVG(this)), l && p.push(r), p.push(t.join("")), p.push("</g>\n"), c && p.push("</g>\n"), o ? o(p.join("")) : p.join("")
                        },
                        addPaintOrder: function() {
                            return "fill" !== this.paintFirst ? ' paint-order="' + this.paintFirst + '" ' : ""
                        }
                    })
                }(),
                function() {
                    var t = T.util.object.extend,
                        e = "stateProperties";

                    function i(e, i, r) {
                        var n = {};
                        r.forEach((function(t) {
                            n[t] = e[t]
                        })), t(e[i], n, !0)
                    }

                    function r(t, e, i) {
                        if (t === e) return !0;
                        if (Array.isArray(t)) {
                            if (!Array.isArray(e) || t.length !== e.length) return !1;
                            for (var n = 0, o = t.length; n < o; n++)
                                if (!r(t[n], e[n])) return !1;
                            return !0
                        }
                        if (t && "object" == typeof t) {
                            var a, s = Object.keys(t);
                            if (!e || "object" != typeof e || !i && s.length !== Object.keys(e).length) return !1;
                            for (n = 0, o = s.length; n < o; n++)
                                if ("canvas" !== (a = s[n]) && "group" !== a && !r(t[a], e[a])) return !1;
                            return !0
                        }
                    }
                    T.util.object.extend(T.Object.prototype, {
                        hasStateChanged: function(t) {
                            var i = "_" + (t = t || e);
                            return Object.keys(this[i]).length < this[t].length || !r(this[i], this, !0)
                        },
                        saveState: function(t) {
                            var r = t && t.propertySet || e,
                                n = "_" + r;
                            return this[n] ? (i(this, n, this[r]), t && t.stateProperties && i(this, n, t.stateProperties), this) : this.setupState(t)
                        },
                        setupState: function(t) {
                            var i = (t = t || {}).propertySet || e;
                            return t.propertySet = i, this["_" + i] = {}, this.saveState(t), this
                        }
                    })
                }(),
                function() {
                    var t = T.util.degreesToRadians;
                    T.util.object.extend(T.Object.prototype, {
                        _findTargetCorner: function(t, e) {
                            if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) return !1;
                            var i, r, n, o = t.x,
                                a = t.y,
                                s = Object.keys(this.oCoords),
                                l = s.length - 1;
                            for (this.__corner = 0; l >= 0; l--)
                                if (n = s[l], this.isControlVisible(n) && (r = this._getImageLines(e ? this.oCoords[n].touchCorner : this.oCoords[n].corner), 0 !== (i = this._findCrossPoints({
                                        x: o,
                                        y: a
                                    }, r)) && i % 2 == 1)) return this.__corner = n, n;
                            return !1
                        },
                        forEachControl: function(t) {
                            for (var e in this.controls) t(this.controls[e], e, this)
                        },
                        _setCornerCoords: function() {
                            var t = this.oCoords;
                            for (var e in t) {
                                var i = this.controls[e];
                                t[e].corner = i.calcCornerCoords(this.angle, this.cornerSize, t[e].x, t[e].y, !1), t[e].touchCorner = i.calcCornerCoords(this.angle, this.touchCornerSize, t[e].x, t[e].y, !0)
                            }
                        },
                        drawSelectionBackground: function(e) {
                            if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) return this;
                            e.save();
                            var i = this.getCenterPoint(),
                                r = this._calculateCurrentDimensions(),
                                n = this.canvas.viewportTransform;
                            return e.translate(i.x, i.y), e.scale(1 / n[0], 1 / n[3]), e.rotate(t(this.angle)), e.fillStyle = this.selectionBackgroundColor, e.fillRect(-r.x / 2, -r.y / 2, r.x, r.y), e.restore(), this
                        },
                        drawBorders: function(t, e) {
                            e = e || {};
                            var i = this._calculateCurrentDimensions(),
                                r = this.borderScaleFactor,
                                n = i.x + r,
                                o = i.y + r,
                                a = void 0 !== e.hasControls ? e.hasControls : this.hasControls,
                                s = !1;
                            return t.save(), t.strokeStyle = e.borderColor || this.borderColor, this._setLineDash(t, e.borderDashArray || this.borderDashArray), t.strokeRect(-n / 2, -o / 2, n, o), a && (t.beginPath(), this.forEachControl((function(e, i, r) {
                                e.withConnection && e.getVisibility(r, i) && (s = !0, t.moveTo(e.x * n, e.y * o), t.lineTo(e.x * n + e.offsetX, e.y * o + e.offsetY))
                            })), s && t.stroke()), t.restore(), this
                        },
                        drawBordersInGroup: function(t, e, i) {
                            i = i || {};
                            var r = T.util.sizeAfterTransform(this.width, this.height, e),
                                n = this.strokeWidth,
                                o = this.strokeUniform,
                                a = this.borderScaleFactor,
                                s = r.x + n * (o ? this.canvas.getZoom() : e.scaleX) + a,
                                l = r.y + n * (o ? this.canvas.getZoom() : e.scaleY) + a;
                            return t.save(), this._setLineDash(t, i.borderDashArray || this.borderDashArray), t.strokeStyle = i.borderColor || this.borderColor, t.strokeRect(-s / 2, -l / 2, s, l), t.restore(), this
                        },
                        drawControls: function(t, e) {
                            e = e || {}, t.save();
                            var i, r, n = this.canvas.getRetinaScaling();
                            return t.setTransform(n, 0, 0, n, 0, 0), t.strokeStyle = t.fillStyle = e.cornerColor || this.cornerColor, this.transparentCorners || (t.strokeStyle = e.cornerStrokeColor || this.cornerStrokeColor), this._setLineDash(t, e.cornerDashArray || this.cornerDashArray), this.setCoords(), this.group && (i = this.group.calcTransformMatrix()), this.forEachControl((function(n, o, a) {
                                r = a.oCoords[o], n.getVisibility(a, o) && (i && (r = T.util.transformPoint(r, i)), n.render(t, r.x, r.y, e, a))
                            })), t.restore(), this
                        },
                        isControlVisible: function(t) {
                            return this.controls[t] && this.controls[t].getVisibility(this, t)
                        },
                        setControlVisible: function(t, e) {
                            return this._controlsVisibility || (this._controlsVisibility = {}), this._controlsVisibility[t] = e, this
                        },
                        setControlsVisibility: function(t) {
                            for (var e in t || (t = {}), t) this.setControlVisible(e, t[e]);
                            return this
                        },
                        onDeselect: function() {},
                        onSelect: function() {}
                    })
                }(), T.util.object.extend(T.StaticCanvas.prototype, {
                    FX_DURATION: 500,
                    fxCenterObjectH: function(t, e) {
                        var i = function() {},
                            r = (e = e || {}).onComplete || i,
                            n = e.onChange || i,
                            o = this;
                        return T.util.animate({
                            startValue: t.left,
                            endValue: this.getCenter().left,
                            duration: this.FX_DURATION,
                            onChange: function(e) {
                                t.set("left", e), o.requestRenderAll(), n()
                            },
                            onComplete: function() {
                                t.setCoords(), r()
                            }
                        }), this
                    },
                    fxCenterObjectV: function(t, e) {
                        var i = function() {},
                            r = (e = e || {}).onComplete || i,
                            n = e.onChange || i,
                            o = this;
                        return T.util.animate({
                            startValue: t.top,
                            endValue: this.getCenter().top,
                            duration: this.FX_DURATION,
                            onChange: function(e) {
                                t.set("top", e), o.requestRenderAll(), n()
                            },
                            onComplete: function() {
                                t.setCoords(), r()
                            }
                        }), this
                    },
                    fxRemove: function(t, e) {
                        var i = function() {},
                            r = (e = e || {}).onComplete || i,
                            n = e.onChange || i,
                            o = this;
                        return T.util.animate({
                            startValue: t.opacity,
                            endValue: 0,
                            duration: this.FX_DURATION,
                            onChange: function(e) {
                                t.set("opacity", e), o.requestRenderAll(), n()
                            },
                            onComplete: function() {
                                o.remove(t), r()
                            }
                        }), this
                    }
                }), T.util.object.extend(T.Object.prototype, {
                    animate: function() {
                        if (arguments[0] && "object" == typeof arguments[0]) {
                            var t, e, i = [];
                            for (t in arguments[0]) i.push(t);
                            for (var r = 0, n = i.length; r < n; r++) t = i[r], e = r !== n - 1, this._animate(t, arguments[0][t], arguments[1], e)
                        } else this._animate.apply(this, arguments);
                        return this
                    },
                    _animate: function(t, e, i, r) {
                        var n, o = this;
                        e = e.toString(), i = i ? T.util.object.clone(i) : {}, ~t.indexOf(".") && (n = t.split("."));
                        var a = o.colorProperties.indexOf(t) > -1 || n && o.colorProperties.indexOf(n[1]) > -1,
                            s = n ? this.get(n[0])[n[1]] : this.get(t);
                        "from" in i || (i.from = s), a || (e = ~e.indexOf("=") ? s + parseFloat(e.replace("=", "")) : parseFloat(e));
                        var l = {
                            startValue: i.from,
                            endValue: e,
                            byValue: i.by,
                            easing: i.easing,
                            duration: i.duration,
                            abort: i.abort && function(t, e, r) {
                                return i.abort.call(o, t, e, r)
                            },
                            onChange: function(e, a, s) {
                                n ? o[n[0]][n[1]] = e : o.set(t, e), r || i.onChange && i.onChange(e, a, s)
                            },
                            onComplete: function(t, e, n) {
                                r || (o.setCoords(), i.onComplete && i.onComplete(t, e, n))
                            }
                        };
                        return a ? T.util.animateColor(l.startValue, l.endValue, l.duration, l) : T.util.animate(l)
                    }
                }),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.util.object.clone,
                        n = {
                            x1: 1,
                            x2: 1,
                            y1: 1,
                            y2: 1
                        };

                    function o(t, e) {
                        var i = t.origin,
                            r = t.axis1,
                            n = t.axis2,
                            o = t.dimension,
                            a = e.nearest,
                            s = e.center,
                            l = e.farthest;
                        return function() {
                            switch (this.get(i)) {
                                case a:
                                    return Math.min(this.get(r), this.get(n));
                                case s:
                                    return Math.min(this.get(r), this.get(n)) + .5 * this.get(o);
                                case l:
                                    return Math.max(this.get(r), this.get(n))
                            }
                        }
                    }
                    e.Line ? e.warn("fabric.Line is already defined") : (e.Line = e.util.createClass(e.Object, {
                        type: "line",
                        x1: 0,
                        y1: 0,
                        x2: 0,
                        y2: 0,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("x1", "x2", "y1", "y2"),
                        initialize: function(t, e) {
                            t || (t = [0, 0, 0, 0]), this.callSuper("initialize", e), this.set("x1", t[0]), this.set("y1", t[1]), this.set("x2", t[2]), this.set("y2", t[3]), this._setWidthHeight(e)
                        },
                        _setWidthHeight: function(t) {
                            t || (t = {}), this.width = Math.abs(this.x2 - this.x1), this.height = Math.abs(this.y2 - this.y1), this.left = "left" in t ? t.left : this._getLeftToOriginX(), this.top = "top" in t ? t.top : this._getTopToOriginY()
                        },
                        _set: function(t, e) {
                            return this.callSuper("_set", t, e), void 0 !== n[t] && this._setWidthHeight(), this
                        },
                        _getLeftToOriginX: o({
                            origin: "originX",
                            axis1: "x1",
                            axis2: "x2",
                            dimension: "width"
                        }, {
                            nearest: "left",
                            center: "center",
                            farthest: "right"
                        }),
                        _getTopToOriginY: o({
                            origin: "originY",
                            axis1: "y1",
                            axis2: "y2",
                            dimension: "height"
                        }, {
                            nearest: "top",
                            center: "center",
                            farthest: "bottom"
                        }),
                        _render: function(t) {
                            t.beginPath();
                            var e = this.calcLinePoints();
                            t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.lineWidth = this.strokeWidth;
                            var i = t.strokeStyle;
                            t.strokeStyle = this.stroke || t.fillStyle, this.stroke && this._renderStroke(t), t.strokeStyle = i
                        },
                        _findCenterFromElement: function() {
                            return {
                                x: (this.x1 + this.x2) / 2,
                                y: (this.y1 + this.y2) / 2
                            }
                        },
                        toObject: function(t) {
                            return i(this.callSuper("toObject", t), this.calcLinePoints())
                        },
                        _getNonTransformedDimensions: function() {
                            var t = this.callSuper("_getNonTransformedDimensions");
                            return "butt" === this.strokeLineCap && (0 === this.width && (t.y -= this.strokeWidth), 0 === this.height && (t.x -= this.strokeWidth)), t
                        },
                        calcLinePoints: function() {
                            var t = this.x1 <= this.x2 ? -1 : 1,
                                e = this.y1 <= this.y2 ? -1 : 1,
                                i = t * this.width * .5,
                                r = e * this.height * .5;
                            return {
                                x1: i,
                                x2: t * this.width * -.5,
                                y1: r,
                                y2: e * this.height * -.5
                            }
                        },
                        _toSVG: function() {
                            var t = this.calcLinePoints();
                            return ["<line ", "COMMON_PARTS", 'x1="', t.x1, '" y1="', t.y1, '" x2="', t.x2, '" y2="', t.y2, '" />\n']
                        }
                    }), e.Line.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("x1 y1 x2 y2".split(" ")), e.Line.fromElement = function(t, r, n) {
                        n = n || {};
                        var o = e.parseAttributes(t, e.Line.ATTRIBUTE_NAMES),
                            a = [o.x1 || 0, o.y1 || 0, o.x2 || 0, o.y2 || 0];
                        r(new e.Line(a, i(o, n)))
                    }, e.Line.fromObject = function(t, i) {
                        var n = r(t, !0);
                        n.points = [t.x1, t.y1, t.x2, t.y2], e.Object._fromObject("Line", n, (function(t) {
                            delete t.points, i && i(t)
                        }), "points")
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = Math.PI;
                    e.Circle ? e.warn("fabric.Circle is already defined.") : (e.Circle = e.util.createClass(e.Object, {
                        type: "circle",
                        radius: 0,
                        startAngle: 0,
                        endAngle: 2 * i,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("radius", "startAngle", "endAngle"),
                        _set: function(t, e) {
                            return this.callSuper("_set", t, e), "radius" === t && this.setRadius(e), this
                        },
                        toObject: function(t) {
                            return this.callSuper("toObject", ["radius", "startAngle", "endAngle"].concat(t))
                        },
                        _toSVG: function() {
                            var t, r = (this.endAngle - this.startAngle) % (2 * i);
                            if (0 === r) t = ["<circle ", "COMMON_PARTS", 'cx="0" cy="0" ', 'r="', this.radius, '" />\n'];
                            else {
                                var n = e.util.cos(this.startAngle) * this.radius,
                                    o = e.util.sin(this.startAngle) * this.radius,
                                    a = e.util.cos(this.endAngle) * this.radius,
                                    s = e.util.sin(this.endAngle) * this.radius,
                                    l = r > i ? "1" : "0";
                                t = ['<path d="M ' + n + " " + o, " A " + this.radius + " " + this.radius, " 0 ", +l + " 1", " " + a + " " + s, '" ', "COMMON_PARTS", " />\n"]
                            }
                            return t
                        },
                        _render: function(t) {
                            t.beginPath(), t.arc(0, 0, this.radius, this.startAngle, this.endAngle, !1), this._renderPaintInOrder(t)
                        },
                        getRadiusX: function() {
                            return this.get("radius") * this.get("scaleX")
                        },
                        getRadiusY: function() {
                            return this.get("radius") * this.get("scaleY")
                        },
                        setRadius: function(t) {
                            return this.radius = t, this.set("width", 2 * t).set("height", 2 * t)
                        }
                    }), e.Circle.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("cx cy r".split(" ")), e.Circle.fromElement = function(t, i) {
                        var r, n = e.parseAttributes(t, e.Circle.ATTRIBUTE_NAMES);
                        if (!("radius" in (r = n) && r.radius >= 0)) throw new Error("value of `r` attribute is required and can not be negative");
                        n.left = (n.left || 0) - n.radius, n.top = (n.top || 0) - n.radius, i(new e.Circle(n))
                    }, e.Circle.fromObject = function(t, i) {
                        e.Object._fromObject("Circle", t, i)
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});
                    e.Triangle ? e.warn("fabric.Triangle is already defined") : (e.Triangle = e.util.createClass(e.Object, {
                        type: "triangle",
                        width: 100,
                        height: 100,
                        _render: function(t) {
                            var e = this.width / 2,
                                i = this.height / 2;
                            t.beginPath(), t.moveTo(-e, i), t.lineTo(0, -i), t.lineTo(e, i), t.closePath(), this._renderPaintInOrder(t)
                        },
                        _toSVG: function() {
                            var t = this.width / 2,
                                e = this.height / 2;
                            return ["<polygon ", "COMMON_PARTS", 'points="', [-t + " " + e, "0 " + -e, t + " " + e].join(","), '" />']
                        }
                    }), e.Triangle.fromObject = function(t, i) {
                        return e.Object._fromObject("Triangle", t, i)
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = 2 * Math.PI;
                    e.Ellipse ? e.warn("fabric.Ellipse is already defined.") : (e.Ellipse = e.util.createClass(e.Object, {
                        type: "ellipse",
                        rx: 0,
                        ry: 0,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("rx", "ry"),
                        initialize: function(t) {
                            this.callSuper("initialize", t), this.set("rx", t && t.rx || 0), this.set("ry", t && t.ry || 0)
                        },
                        _set: function(t, e) {
                            switch (this.callSuper("_set", t, e), t) {
                                case "rx":
                                    this.rx = e, this.set("width", 2 * e);
                                    break;
                                case "ry":
                                    this.ry = e, this.set("height", 2 * e)
                            }
                            return this
                        },
                        getRx: function() {
                            return this.get("rx") * this.get("scaleX")
                        },
                        getRy: function() {
                            return this.get("ry") * this.get("scaleY")
                        },
                        toObject: function(t) {
                            return this.callSuper("toObject", ["rx", "ry"].concat(t))
                        },
                        _toSVG: function() {
                            return ["<ellipse ", "COMMON_PARTS", 'cx="0" cy="0" ', 'rx="', this.rx, '" ry="', this.ry, '" />\n']
                        },
                        _render: function(t) {
                            t.beginPath(), t.save(), t.transform(1, 0, 0, this.ry / this.rx, 0, 0), t.arc(0, 0, this.rx, 0, i, !1), t.restore(), this._renderPaintInOrder(t)
                        }
                    }), e.Ellipse.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("cx cy rx ry".split(" ")), e.Ellipse.fromElement = function(t, i) {
                        var r = e.parseAttributes(t, e.Ellipse.ATTRIBUTE_NAMES);
                        r.left = (r.left || 0) - r.rx, r.top = (r.top || 0) - r.ry, i(new e.Ellipse(r))
                    }, e.Ellipse.fromObject = function(t, i) {
                        e.Object._fromObject("Ellipse", t, i)
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend;
                    e.Rect ? e.warn("fabric.Rect is already defined") : (e.Rect = e.util.createClass(e.Object, {
                        stateProperties: e.Object.prototype.stateProperties.concat("rx", "ry"),
                        type: "rect",
                        rx: 0,
                        ry: 0,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("rx", "ry"),
                        initialize: function(t) {
                            this.callSuper("initialize", t), this._initRxRy()
                        },
                        _initRxRy: function() {
                            this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry)
                        },
                        _render: function(t) {
                            var e = this.rx ? Math.min(this.rx, this.width / 2) : 0,
                                i = this.ry ? Math.min(this.ry, this.height / 2) : 0,
                                r = this.width,
                                n = this.height,
                                o = -this.width / 2,
                                a = -this.height / 2,
                                s = 0 !== e || 0 !== i,
                                l = .4477152502;
                            t.beginPath(), t.moveTo(o + e, a), t.lineTo(o + r - e, a), s && t.bezierCurveTo(o + r - l * e, a, o + r, a + l * i, o + r, a + i), t.lineTo(o + r, a + n - i), s && t.bezierCurveTo(o + r, a + n - l * i, o + r - l * e, a + n, o + r - e, a + n), t.lineTo(o + e, a + n), s && t.bezierCurveTo(o + l * e, a + n, o, a + n - l * i, o, a + n - i), t.lineTo(o, a + i), s && t.bezierCurveTo(o, a + l * i, o + l * e, a, o + e, a), t.closePath(), this._renderPaintInOrder(t)
                        },
                        toObject: function(t) {
                            return this.callSuper("toObject", ["rx", "ry"].concat(t))
                        },
                        _toSVG: function() {
                            return ["<rect ", "COMMON_PARTS", 'x="', -this.width / 2, '" y="', -this.height / 2, '" rx="', this.rx, '" ry="', this.ry, '" width="', this.width, '" height="', this.height, '" />\n']
                        }
                    }), e.Rect.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("x y rx ry width height".split(" ")), e.Rect.fromElement = function(t, r, n) {
                        if (!t) return r(null);
                        n = n || {};
                        var o = e.parseAttributes(t, e.Rect.ATTRIBUTE_NAMES);
                        o.left = o.left || 0, o.top = o.top || 0, o.height = o.height || 0, o.width = o.width || 0;
                        var a = new e.Rect(i(n ? e.util.object.clone(n) : {}, o));
                        a.visible = a.visible && a.width > 0 && a.height > 0, r(a)
                    }, e.Rect.fromObject = function(t, i) {
                        return e.Object._fromObject("Rect", t, i)
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.util.array.min,
                        n = e.util.array.max,
                        o = e.util.toFixed;
                    e.Polyline ? e.warn("fabric.Polyline is already defined") : (e.Polyline = e.util.createClass(e.Object, {
                        type: "polyline",
                        points: null,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("points"),
                        initialize: function(t, e) {
                            e = e || {}, this.points = t || [], this.callSuper("initialize", e), this._setPositionDimensions(e)
                        },
                        _setPositionDimensions: function(t) {
                            var e, i = this._calcDimensions(t);
                            this.width = i.width, this.height = i.height, t.fromSVG || (e = this.translateToGivenOrigin({
                                x: i.left - this.strokeWidth / 2,
                                y: i.top - this.strokeWidth / 2
                            }, "left", "top", this.originX, this.originY)), void 0 === t.left && (this.left = t.fromSVG ? i.left : e.x), void 0 === t.top && (this.top = t.fromSVG ? i.top : e.y), this.pathOffset = {
                                x: i.left + this.width / 2,
                                y: i.top + this.height / 2
                            }
                        },
                        _calcDimensions: function() {
                            var t = this.points,
                                e = r(t, "x") || 0,
                                i = r(t, "y") || 0;
                            return {
                                left: e,
                                top: i,
                                width: (n(t, "x") || 0) - e,
                                height: (n(t, "y") || 0) - i
                            }
                        },
                        toObject: function(t) {
                            return i(this.callSuper("toObject", t), {
                                points: this.points.concat()
                            })
                        },
                        _toSVG: function() {
                            for (var t = [], i = this.pathOffset.x, r = this.pathOffset.y, n = e.Object.NUM_FRACTION_DIGITS, a = 0, s = this.points.length; a < s; a++) t.push(o(this.points[a].x - i, n), ",", o(this.points[a].y - r, n), " ");
                            return ["<" + this.type + " ", "COMMON_PARTS", 'points="', t.join(""), '" />\n']
                        },
                        commonRender: function(t) {
                            var e, i = this.points.length,
                                r = this.pathOffset.x,
                                n = this.pathOffset.y;
                            if (!i || isNaN(this.points[i - 1].y)) return !1;
                            t.beginPath(), t.moveTo(this.points[0].x - r, this.points[0].y - n);
                            for (var o = 0; o < i; o++) e = this.points[o], t.lineTo(e.x - r, e.y - n);
                            return !0
                        },
                        _render: function(t) {
                            this.commonRender(t) && this._renderPaintInOrder(t)
                        },
                        complexity: function() {
                            return this.get("points").length
                        }
                    }), e.Polyline.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(), e.Polyline.fromElementGenerator = function(t) {
                        return function(r, n, o) {
                            if (!r) return n(null);
                            o || (o = {});
                            var a = e.parsePointsAttribute(r.getAttribute("points")),
                                s = e.parseAttributes(r, e[t].ATTRIBUTE_NAMES);
                            s.fromSVG = !0, n(new e[t](a, i(s, o)))
                        }
                    }, e.Polyline.fromElement = e.Polyline.fromElementGenerator("Polyline"), e.Polyline.fromObject = function(t, i) {
                        return e.Object._fromObject("Polyline", t, i, "points")
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});
                    e.Polygon ? e.warn("fabric.Polygon is already defined") : (e.Polygon = e.util.createClass(e.Polyline, {
                        type: "polygon",
                        _render: function(t) {
                            this.commonRender(t) && (t.closePath(), this._renderPaintInOrder(t))
                        }
                    }), e.Polygon.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(), e.Polygon.fromElement = e.Polyline.fromElementGenerator("Polygon"), e.Polygon.fromObject = function(t, i) {
                        e.Object._fromObject("Polygon", t, i, "points")
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.array.min,
                        r = e.util.array.max,
                        n = e.util.object.extend,
                        o = Object.prototype.toString,
                        a = e.util.toFixed;
                    e.Path ? e.warn("fabric.Path is already defined") : (e.Path = e.util.createClass(e.Object, {
                        type: "path",
                        path: null,
                        cacheProperties: e.Object.prototype.cacheProperties.concat("path", "fillRule"),
                        stateProperties: e.Object.prototype.stateProperties.concat("path"),
                        initialize: function(t, i) {
                            i = i || {}, this.callSuper("initialize", i), t || (t = []);
                            var r = "[object Array]" === o.call(t);
                            this.path = e.util.makePathSimpler(r ? t : e.util.parsePath(t)), this.path && e.Polyline.prototype._setPositionDimensions.call(this, i)
                        },
                        _renderPathCommands: function(t) {
                            var e, i = 0,
                                r = 0,
                                n = 0,
                                o = 0,
                                a = 0,
                                s = 0,
                                l = -this.pathOffset.x,
                                h = -this.pathOffset.y;
                            t.beginPath();
                            for (var c = 0, u = this.path.length; c < u; ++c) switch ((e = this.path[c])[0]) {
                                case "L":
                                    n = e[1], o = e[2], t.lineTo(n + l, o + h);
                                    break;
                                case "M":
                                    i = n = e[1], r = o = e[2], t.moveTo(n + l, o + h);
                                    break;
                                case "C":
                                    n = e[5], o = e[6], a = e[3], s = e[4], t.bezierCurveTo(e[1] + l, e[2] + h, a + l, s + h, n + l, o + h);
                                    break;
                                case "Q":
                                    t.quadraticCurveTo(e[1] + l, e[2] + h, e[3] + l, e[4] + h), n = e[3], o = e[4], a = e[1], s = e[2];
                                    break;
                                case "z":
                                case "Z":
                                    n = i, o = r, t.closePath()
                            }
                        },
                        _render: function(t) {
                            this._renderPathCommands(t), this._renderPaintInOrder(t)
                        },
                        toString: function() {
                            return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>"
                        },
                        toObject: function(t) {
                            return n(this.callSuper("toObject", t), {
                                path: this.path.map((function(t) {
                                    return t.slice()
                                }))
                            })
                        },
                        toDatalessObject: function(t) {
                            var e = this.toObject(["sourcePath"].concat(t));
                            return e.sourcePath && delete e.path, e
                        },
                        _toSVG: function() {
                            return ["<path ", "COMMON_PARTS", 'd="', e.util.joinPath(this.path), '" stroke-linecap="round" ', "/>\n"]
                        },
                        _getOffsetTransform: function() {
                            var t = e.Object.NUM_FRACTION_DIGITS;
                            return " translate(" + a(-this.pathOffset.x, t) + ", " + a(-this.pathOffset.y, t) + ")"
                        },
                        toClipPathSVG: function(t) {
                            var e = this._getOffsetTransform();
                            return "\t" + this._createBaseClipPathSVGMarkup(this._toSVG(), {
                                reviver: t,
                                additionalTransform: e
                            })
                        },
                        toSVG: function(t) {
                            var e = this._getOffsetTransform();
                            return this._createBaseSVGMarkup(this._toSVG(), {
                                reviver: t,
                                additionalTransform: e
                            })
                        },
                        complexity: function() {
                            return this.path.length
                        },
                        _calcDimensions: function() {
                            for (var t, n, o = [], a = [], s = 0, l = 0, h = 0, c = 0, u = 0, f = this.path.length; u < f; ++u) {
                                switch ((t = this.path[u])[0]) {
                                    case "L":
                                        h = t[1], c = t[2], n = [];
                                        break;
                                    case "M":
                                        s = h = t[1], l = c = t[2], n = [];
                                        break;
                                    case "C":
                                        n = e.util.getBoundsOfCurve(h, c, t[1], t[2], t[3], t[4], t[5], t[6]), h = t[5], c = t[6];
                                        break;
                                    case "Q":
                                        n = e.util.getBoundsOfCurve(h, c, t[1], t[2], t[1], t[2], t[3], t[4]), h = t[3], c = t[4];
                                        break;
                                    case "z":
                                    case "Z":
                                        h = s, c = l
                                }
                                n.forEach((function(t) {
                                    o.push(t.x), a.push(t.y)
                                })), o.push(h), a.push(c)
                            }
                            var d = i(o) || 0,
                                p = i(a) || 0;
                            return {
                                left: d,
                                top: p,
                                width: (r(o) || 0) - d,
                                height: (r(a) || 0) - p
                            }
                        }
                    }), e.Path.fromObject = function(t, i) {
                        if ("string" == typeof t.sourcePath) {
                            var r = t.sourcePath;
                            e.loadSVGFromURL(r, (function(e) {
                                var r = e[0];
                                r.setOptions(t), i && i(r)
                            }))
                        } else e.Object._fromObject("Path", t, i, "path")
                    }, e.Path.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(["d"]), e.Path.fromElement = function(t, i, r) {
                        var o = e.parseAttributes(t, e.Path.ATTRIBUTE_NAMES);
                        o.fromSVG = !0, i(new e.Path(o.d, n(o, r)))
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.array.min,
                        r = e.util.array.max;
                    e.Group || (e.Group = e.util.createClass(e.Object, e.Collection, {
                        type: "group",
                        strokeWidth: 0,
                        subTargetCheck: !1,
                        cacheProperties: [],
                        useSetOnGroup: !1,
                        initialize: function(t, e, i) {
                            e = e || {}, this._objects = [], i && this.callSuper("initialize", e), this._objects = t || [];
                            for (var r = this._objects.length; r--;) this._objects[r].group = this;
                            if (i) this._updateObjectsACoords();
                            else {
                                var n = e && e.centerPoint;
                                void 0 !== e.originX && (this.originX = e.originX), void 0 !== e.originY && (this.originY = e.originY), n || this._calcBounds(), this._updateObjectsCoords(n), delete e.centerPoint, this.callSuper("initialize", e)
                            }
                            this.setCoords()
                        },
                        _updateObjectsACoords: function() {
                            for (var t = this._objects.length; t--;) this._objects[t].setCoords(true)
                        },
                        _updateObjectsCoords: function(t) {
                            t = t || this.getCenterPoint();
                            for (var e = this._objects.length; e--;) this._updateObjectCoords(this._objects[e], t)
                        },
                        _updateObjectCoords: function(t, e) {
                            var i = t.left,
                                r = t.top;
                            t.set({
                                left: i - e.x,
                                top: r - e.y
                            }), t.group = this, t.setCoords(!0)
                        },
                        toString: function() {
                            return "#<fabric.Group: (" + this.complexity() + ")>"
                        },
                        addWithUpdate: function(t) {
                            var i = !!this.group;
                            return this._restoreObjectsState(), e.util.resetObjectTransform(this), t && (i && e.util.removeTransformFromObject(t, this.group.calcTransformMatrix()), this._objects.push(t), t.group = this, t._set("canvas", this.canvas)), this._calcBounds(), this._updateObjectsCoords(), this.dirty = !0, i ? this.group.addWithUpdate() : this.setCoords(), this
                        },
                        removeWithUpdate: function(t) {
                            return this._restoreObjectsState(), e.util.resetObjectTransform(this), this.remove(t), this._calcBounds(), this._updateObjectsCoords(), this.setCoords(), this.dirty = !0, this
                        },
                        _onObjectAdded: function(t) {
                            this.dirty = !0, t.group = this, t._set("canvas", this.canvas)
                        },
                        _onObjectRemoved: function(t) {
                            this.dirty = !0, delete t.group
                        },
                        _set: function(t, i) {
                            var r = this._objects.length;
                            if (this.useSetOnGroup)
                                for (; r--;) this._objects[r].setOnGroup(t, i);
                            if ("canvas" === t)
                                for (; r--;) this._objects[r]._set(t, i);
                            e.Object.prototype._set.call(this, t, i)
                        },
                        toObject: function(t) {
                            var i = this.includeDefaultValues,
                                r = this._objects.filter((function(t) {
                                    return !t.excludeFromExport
                                })).map((function(e) {
                                    var r = e.includeDefaultValues;
                                    e.includeDefaultValues = i;
                                    var n = e.toObject(t);
                                    return e.includeDefaultValues = r, n
                                })),
                                n = e.Object.prototype.toObject.call(this, t);
                            return n.objects = r, n
                        },
                        toDatalessObject: function(t) {
                            var i, r = this.sourcePath;
                            if (r) i = r;
                            else {
                                var n = this.includeDefaultValues;
                                i = this._objects.map((function(e) {
                                    var i = e.includeDefaultValues;
                                    e.includeDefaultValues = n;
                                    var r = e.toDatalessObject(t);
                                    return e.includeDefaultValues = i, r
                                }))
                            }
                            var o = e.Object.prototype.toDatalessObject.call(this, t);
                            return o.objects = i, o
                        },
                        render: function(t) {
                            this._transformDone = !0, this.callSuper("render", t), this._transformDone = !1
                        },
                        shouldCache: function() {
                            var t = e.Object.prototype.shouldCache.call(this);
                            if (t)
                                for (var i = 0, r = this._objects.length; i < r; i++)
                                    if (this._objects[i].willDrawShadow()) return this.ownCaching = !1, !1;
                            return t
                        },
                        willDrawShadow: function() {
                            if (e.Object.prototype.willDrawShadow.call(this)) return !0;
                            for (var t = 0, i = this._objects.length; t < i; t++)
                                if (this._objects[t].willDrawShadow()) return !0;
                            return !1
                        },
                        isOnACache: function() {
                            return this.ownCaching || this.group && this.group.isOnACache()
                        },
                        drawObject: function(t) {
                            for (var e = 0, i = this._objects.length; e < i; e++) this._objects[e].render(t);
                            this._drawClipPath(t)
                        },
                        isCacheDirty: function(t) {
                            if (this.callSuper("isCacheDirty", t)) return !0;
                            if (!this.statefullCache) return !1;
                            for (var e = 0, i = this._objects.length; e < i; e++)
                                if (this._objects[e].isCacheDirty(!0)) {
                                    if (this._cacheCanvas) {
                                        var r = this.cacheWidth / this.zoomX,
                                            n = this.cacheHeight / this.zoomY;
                                        this._cacheContext.clearRect(-r / 2, -n / 2, r, n)
                                    }
                                    return !0
                                } return !1
                        },
                        _restoreObjectsState: function() {
                            var t = this.calcOwnMatrix();
                            return this._objects.forEach((function(i) {
                                e.util.addTransformToObject(i, t), delete i.group, i.setCoords()
                            })), this
                        },
                        realizeTransform: function(t, i) {
                            return e.util.addTransformToObject(t, i), t
                        },
                        destroy: function() {
                            return this._objects.forEach((function(t) {
                                t.set("dirty", !0)
                            })), this._restoreObjectsState()
                        },
                        toActiveSelection: function() {
                            if (this.canvas) {
                                var t = this._objects,
                                    i = this.canvas;
                                this._objects = [];
                                var r = this.toObject();
                                delete r.objects;
                                var n = new e.ActiveSelection([]);
                                return n.set(r), n.type = "activeSelection", i.remove(this), t.forEach((function(t) {
                                    t.group = n, t.dirty = !0, i.add(t)
                                })), n.canvas = i, n._objects = t, i._activeObject = n, n.setCoords(), n
                            }
                        },
                        ungroupOnCanvas: function() {
                            return this._restoreObjectsState()
                        },
                        setObjectsCoords: function() {
                            return this.forEachObject((function(t) {
                                t.setCoords(true)
                            })), this
                        },
                        _calcBounds: function(t) {
                            for (var e, i, r, n, o = [], a = [], s = ["tr", "br", "bl", "tl"], l = 0, h = this._objects.length, c = s.length; l < h; ++l) {
                                for (r = (e = this._objects[l]).calcACoords(), n = 0; n < c; n++) i = s[n], o.push(r[i].x), a.push(r[i].y);
                                e.aCoords = r
                            }
                            this._getBounds(o, a, t)
                        },
                        _getBounds: function(t, n, o) {
                            var a = new e.Point(i(t), i(n)),
                                s = new e.Point(r(t), r(n)),
                                l = a.y || 0,
                                h = a.x || 0,
                                c = s.x - a.x || 0,
                                u = s.y - a.y || 0;
                            this.width = c, this.height = u, o || this.setPositionByOrigin({
                                x: h,
                                y: l
                            }, "left", "top")
                        },
                        _toSVG: function(t) {
                            for (var e = ["<g ", "COMMON_PARTS", " >\n"], i = 0, r = this._objects.length; i < r; i++) e.push("\t\t", this._objects[i].toSVG(t));
                            return e.push("</g>\n"), e
                        },
                        getSvgStyles: function() {
                            var t = void 0 !== this.opacity && 1 !== this.opacity ? "opacity: " + this.opacity + ";" : "",
                                e = this.visible ? "" : " visibility: hidden;";
                            return [t, this.getSvgFilter(), e].join("")
                        },
                        toClipPathSVG: function(t) {
                            for (var e = [], i = 0, r = this._objects.length; i < r; i++) e.push("\t", this._objects[i].toClipPathSVG(t));
                            return this._createBaseClipPathSVGMarkup(e, {
                                reviver: t
                            })
                        }
                    }), e.Group.fromObject = function(t, i) {
                        var r = t.objects,
                            n = e.util.object.clone(t, !0);
                        delete n.objects, "string" != typeof r ? e.util.enlivenObjects(r, (function(r) {
                            e.util.enlivenObjects([t.clipPath], (function(n) {
                                var o = e.util.object.clone(t, !0);
                                o.clipPath = n[0], delete o.objects, i && i(new e.Group(r, o, !0))
                            }))
                        })) : e.loadSVGFromURL(r, (function(o) {
                            var a = e.util.groupSVGElements(o, t, r);
                            a.set(n), i && i(a)
                        }))
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});
                    e.ActiveSelection || (e.ActiveSelection = e.util.createClass(e.Group, {
                        type: "activeSelection",
                        initialize: function(t, i) {
                            i = i || {}, this._objects = t || [];
                            for (var r = this._objects.length; r--;) this._objects[r].group = this;
                            i.originX && (this.originX = i.originX), i.originY && (this.originY = i.originY), this._calcBounds(), this._updateObjectsCoords(), e.Object.prototype.initialize.call(this, i), this.setCoords()
                        },
                        toGroup: function() {
                            var t = this._objects.concat();
                            this._objects = [];
                            var i = e.Object.prototype.toObject.call(this),
                                r = new e.Group([]);
                            if (delete i.type, r.set(i), t.forEach((function(t) {
                                    t.canvas.remove(t), t.group = r
                                })), r._objects = t, !this.canvas) return r;
                            var n = this.canvas;
                            return n.add(r), n._activeObject = r, r.setCoords(), r
                        },
                        onDeselect: function() {
                            return this.destroy(), !1
                        },
                        toString: function() {
                            return "#<fabric.ActiveSelection: (" + this.complexity() + ")>"
                        },
                        shouldCache: function() {
                            return !1
                        },
                        isOnACache: function() {
                            return !1
                        },
                        _renderControls: function(t, e, i) {
                            t.save(), t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, this.callSuper("_renderControls", t, e), void 0 === (i = i || {}).hasControls && (i.hasControls = !1), i.forActiveSelection = !0;
                            for (var r = 0, n = this._objects.length; r < n; r++) this._objects[r]._renderControls(t, i);
                            t.restore()
                        }
                    }), e.ActiveSelection.fromObject = function(t, i) {
                        e.util.enlivenObjects(t.objects, (function(r) {
                            delete t.objects, i && i(new e.ActiveSelection(r, t, !0))
                        }))
                    })
                }(e),
                function(t) {
                    "use strict";
                    var e = T.util.object.extend;
                    t.fabric || (t.fabric = {}), t.fabric.Image ? T.warn("fabric.Image is already defined.") : (T.Image = T.util.createClass(T.Object, {
                        type: "image",
                        strokeWidth: 0,
                        srcFromAttribute: !1,
                        _lastScaleX: 1,
                        _lastScaleY: 1,
                        _filterScalingX: 1,
                        _filterScalingY: 1,
                        minimumScaleTrigger: .5,
                        stateProperties: T.Object.prototype.stateProperties.concat("cropX", "cropY"),
                        cacheProperties: T.Object.prototype.cacheProperties.concat("cropX", "cropY"),
                        cacheKey: "",
                        cropX: 0,
                        cropY: 0,
                        imageSmoothing: !0,
                        initialize: function(t, e) {
                            e || (e = {}), this.filters = [], this.cacheKey = "texture" + T.Object.__uid++, this.callSuper("initialize", e), this._initElement(t, e)
                        },
                        getElement: function() {
                            return this._element || {}
                        },
                        setElement: function(t, e) {
                            return this.removeTexture(this.cacheKey), this.removeTexture(this.cacheKey + "_filtered"), this._element = t, this._originalElement = t, this._initConfig(e), 0 !== this.filters.length && this.applyFilters(), this.resizeFilter && this.applyResizeFilters(), this
                        },
                        removeTexture: function(t) {
                            var e = T.filterBackend;
                            e && e.evictCachesForKey && e.evictCachesForKey(t)
                        },
                        dispose: function() {
                            this.removeTexture(this.cacheKey), this.removeTexture(this.cacheKey + "_filtered"), this._cacheContext = void 0, ["_originalElement", "_element", "_filteredEl", "_cacheCanvas"].forEach(function(t) {
                                T.util.cleanUpJsdomNode(this[t]), this[t] = void 0
                            }.bind(this))
                        },
                        getCrossOrigin: function() {
                            return this._originalElement && (this._originalElement.crossOrigin || null)
                        },
                        getOriginalSize: function() {
                            var t = this.getElement();
                            return {
                                width: t.naturalWidth || t.width,
                                height: t.naturalHeight || t.height
                            }
                        },
                        _stroke: function(t) {
                            if (this.stroke && 0 !== this.strokeWidth) {
                                var e = this.width / 2,
                                    i = this.height / 2;
                                t.beginPath(), t.moveTo(-e, -i), t.lineTo(e, -i), t.lineTo(e, i), t.lineTo(-e, i), t.lineTo(-e, -i), t.closePath()
                            }
                        },
                        toObject: function(t) {
                            var i = [];
                            this.filters.forEach((function(t) {
                                t && i.push(t.toObject())
                            }));
                            var r = e(this.callSuper("toObject", ["cropX", "cropY"].concat(t)), {
                                src: this.getSrc(),
                                crossOrigin: this.getCrossOrigin(),
                                filters: i
                            });
                            return this.resizeFilter && (r.resizeFilter = this.resizeFilter.toObject()), r
                        },
                        hasCrop: function() {
                            return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height
                        },
                        _toSVG: function() {
                            var t, e = [],
                                i = [],
                                r = this._element,
                                n = -this.width / 2,
                                o = -this.height / 2,
                                a = "",
                                s = "";
                            if (!r) return [];
                            if (this.hasCrop()) {
                                var l = T.Object.__uid++;
                                e.push('<clipPath id="imageCrop_' + l + '">\n', '\t<rect x="' + n + '" y="' + o + '" width="' + this.width + '" height="' + this.height + '" />\n', "</clipPath>\n"), a = ' clip-path="url(#imageCrop_' + l + ')" '
                            }
                            if (this.imageSmoothing || (s = '" image-rendering="optimizeSpeed'), i.push("\t<image ", "COMMON_PARTS", 'xlink:href="', this.getSvgSrc(!0), '" x="', n - this.cropX, '" y="', o - this.cropY, '" width="', r.width || r.naturalWidth, '" height="', r.height || r.height, s, '"', a, "></image>\n"), this.stroke || this.strokeDashArray) {
                                var h = this.fill;
                                this.fill = null, t = ["\t<rect ", 'x="', n, '" y="', o, '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '"/>\n'], this.fill = h
                            }
                            return e = "fill" !== this.paintFirst ? e.concat(t, i) : e.concat(i, t)
                        },
                        getSrc: function(t) {
                            var e = t ? this._element : this._originalElement;
                            return e ? e.toDataURL ? e.toDataURL() : this.srcFromAttribute ? e.getAttribute("src") : e.src : this.src || ""
                        },
                        setSrc: function(t, e, i) {
                            return T.util.loadImage(t, (function(t, r) {
                                this.setElement(t, i), this._setWidthHeight(), e && e(this, r)
                            }), this, i && i.crossOrigin), this
                        },
                        toString: function() {
                            return '#<fabric.Image: { src: "' + this.getSrc() + '" }>'
                        },
                        applyResizeFilters: function() {
                            var t = this.resizeFilter,
                                e = this.minimumScaleTrigger,
                                i = this.getTotalObjectScaling(),
                                r = i.scaleX,
                                n = i.scaleY,
                                o = this._filteredEl || this._originalElement;
                            if (this.group && this.set("dirty", !0), !t || r > e && n > e) return this._element = o, this._filterScalingX = 1, this._filterScalingY = 1, this._lastScaleX = r, void(this._lastScaleY = n);
                            T.filterBackend || (T.filterBackend = T.initFilterBackend());
                            var a = T.util.createCanvasElement(),
                                s = this._filteredEl ? this.cacheKey + "_filtered" : this.cacheKey,
                                l = o.width,
                                h = o.height;
                            a.width = l, a.height = h, this._element = a, this._lastScaleX = t.scaleX = r, this._lastScaleY = t.scaleY = n, T.filterBackend.applyFilters([t], o, l, h, this._element, s), this._filterScalingX = a.width / this._originalElement.width, this._filterScalingY = a.height / this._originalElement.height
                        },
                        applyFilters: function(t) {
                            if (t = (t = t || this.filters || []).filter((function(t) {
                                    return t && !t.isNeutralState()
                                })), this.set("dirty", !0), this.removeTexture(this.cacheKey + "_filtered"), 0 === t.length) return this._element = this._originalElement, this._filteredEl = null, this._filterScalingX = 1, this._filterScalingY = 1, this;
                            var e = this._originalElement,
                                i = e.naturalWidth || e.width,
                                r = e.naturalHeight || e.height;
                            if (this._element === this._originalElement) {
                                var n = T.util.createCanvasElement();
                                n.width = i, n.height = r, this._element = n, this._filteredEl = n
                            } else this._element = this._filteredEl, this._filteredEl.getContext("2d").clearRect(0, 0, i, r), this._lastScaleX = 1, this._lastScaleY = 1;
                            return T.filterBackend || (T.filterBackend = T.initFilterBackend()), T.filterBackend.applyFilters(t, this._originalElement, i, r, this._element, this.cacheKey), this._originalElement.width === this._element.width && this._originalElement.height === this._element.height || (this._filterScalingX = this._element.width / this._originalElement.width, this._filterScalingY = this._element.height / this._originalElement.height), this
                        },
                        _render: function(t) {
                            T.util.setImageSmoothing(t, this.imageSmoothing), !0 !== this.isMoving && this.resizeFilter && this._needsResize() && this.applyResizeFilters(), this._stroke(t), this._renderPaintInOrder(t)
                        },
                        drawCacheOnCanvas: function(t) {
                            T.util.setImageSmoothing(t, this.imageSmoothing), T.Object.prototype.drawCacheOnCanvas.call(this, t)
                        },
                        shouldCache: function() {
                            return this.needsItsOwnCache()
                        },
                        _renderFill: function(t) {
                            var e = this._element;
                            if (e) {
                                var i = this._filterScalingX,
                                    r = this._filterScalingY,
                                    n = this.width,
                                    o = this.height,
                                    a = Math.min,
                                    s = Math.max,
                                    l = s(this.cropX, 0),
                                    h = s(this.cropY, 0),
                                    c = e.naturalWidth || e.width,
                                    u = e.naturalHeight || e.height,
                                    f = l * i,
                                    d = h * r,
                                    p = a(n * i, c - f),
                                    g = a(o * r, u - d),
                                    v = -n / 2,
                                    m = -o / 2,
                                    y = a(n, c / i - l),
                                    b = a(o, u / r - h);
                                e && t.drawImage(e, f, d, p, g, v, m, y, b)
                            }
                        },
                        _needsResize: function() {
                            var t = this.getTotalObjectScaling();
                            return t.scaleX !== this._lastScaleX || t.scaleY !== this._lastScaleY
                        },
                        _resetWidthHeight: function() {
                            this.set(this.getOriginalSize())
                        },
                        _initElement: function(t, e) {
                            this.setElement(T.util.getById(t), e), T.util.addClass(this.getElement(), T.Image.CSS_CANVAS)
                        },
                        _initConfig: function(t) {
                            t || (t = {}), this.setOptions(t), this._setWidthHeight(t)
                        },
                        _initFilters: function(t, e) {
                            t && t.length ? T.util.enlivenObjects(t, (function(t) {
                                e && e(t)
                            }), "fabric.Image.filters") : e && e()
                        },
                        _setWidthHeight: function(t) {
                            t || (t = {});
                            var e = this.getElement();
                            this.width = t.width || e.naturalWidth || e.width || 0, this.height = t.height || e.naturalHeight || e.height || 0
                        },
                        parsePreserveAspectRatioAttribute: function() {
                            var t, e = T.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ""),
                                i = this._element.width,
                                r = this._element.height,
                                n = 1,
                                o = 1,
                                a = 0,
                                s = 0,
                                l = 0,
                                h = 0,
                                c = this.width,
                                u = this.height,
                                f = {
                                    width: c,
                                    height: u
                                };
                            return !e || "none" === e.alignX && "none" === e.alignY ? (n = c / i, o = u / r) : ("meet" === e.meetOrSlice && (t = (c - i * (n = o = T.util.findScaleToFit(this._element, f))) / 2, "Min" === e.alignX && (a = -t), "Max" === e.alignX && (a = t), t = (u - r * o) / 2, "Min" === e.alignY && (s = -t), "Max" === e.alignY && (s = t)), "slice" === e.meetOrSlice && (t = i - c / (n = o = T.util.findScaleToCover(this._element, f)), "Mid" === e.alignX && (l = t / 2), "Max" === e.alignX && (l = t), t = r - u / o, "Mid" === e.alignY && (h = t / 2), "Max" === e.alignY && (h = t), i = c / n, r = u / o)), {
                                width: i,
                                height: r,
                                scaleX: n,
                                scaleY: o,
                                offsetLeft: a,
                                offsetTop: s,
                                cropX: l,
                                cropY: h
                            }
                        }
                    }), T.Image.CSS_CANVAS = "canvas-img", T.Image.prototype.getSvgSrc = T.Image.prototype.getSrc, T.Image.fromObject = function(t, e) {
                        var i = T.util.object.clone(t);
                        T.util.loadImage(i.src, (function(t, r) {
                            r ? e && e(null, !0) : T.Image.prototype._initFilters.call(i, i.filters, (function(r) {
                                i.filters = r || [], T.Image.prototype._initFilters.call(i, [i.resizeFilter], (function(r) {
                                    i.resizeFilter = r[0], T.util.enlivenObjects([i.clipPath], (function(r) {
                                        i.clipPath = r[0];
                                        var n = new T.Image(t, i);
                                        e(n, !1)
                                    }))
                                }))
                            }))
                        }), null, i.crossOrigin)
                    }, T.Image.fromURL = function(t, e, i) {
                        T.util.loadImage(t, (function(t, r) {
                            e && e(new T.Image(t, i), r)
                        }), null, i && i.crossOrigin)
                    }, T.Image.ATTRIBUTE_NAMES = T.SHARED_ATTRIBUTES.concat("x y width height preserveAspectRatio xlink:href crossOrigin image-rendering".split(" ")), T.Image.fromElement = function(t, i, r) {
                        var n = T.parseAttributes(t, T.Image.ATTRIBUTE_NAMES);
                        T.Image.fromURL(n["xlink:href"], i, e(r ? T.util.object.clone(r) : {}, n))
                    })
                }(e), T.util.object.extend(T.Object.prototype, {
                    _getAngleValueForStraighten: function() {
                        var t = this.angle % 360;
                        return t > 0 ? 90 * Math.round((t - 1) / 90) : 90 * Math.round(t / 90)
                    },
                    straighten: function() {
                        return this.rotate(this._getAngleValueForStraighten()), this
                    },
                    fxStraighten: function(t) {
                        var e = function() {},
                            i = (t = t || {}).onComplete || e,
                            r = t.onChange || e,
                            n = this;
                        return T.util.animate({
                            startValue: this.get("angle"),
                            endValue: this._getAngleValueForStraighten(),
                            duration: this.FX_DURATION,
                            onChange: function(t) {
                                n.rotate(t), r()
                            },
                            onComplete: function() {
                                n.setCoords(), i()
                            }
                        }), this
                    }
                }), T.util.object.extend(T.StaticCanvas.prototype, {
                    straightenObject: function(t) {
                        return t.straighten(), this.requestRenderAll(), this
                    },
                    fxStraightenObject: function(t) {
                        return t.fxStraighten({
                            onChange: this.requestRenderAllBound
                        }), this
                    }
                }),
                function() {
                    "use strict";

                    function t(t, e) {
                        var i = "precision " + e + " float;\nvoid main(){}",
                            r = t.createShader(t.FRAGMENT_SHADER);
                        return t.shaderSource(r, i), t.compileShader(r), !!t.getShaderParameter(r, t.COMPILE_STATUS)
                    }

                    function e(t) {
                        t && t.tileSize && (this.tileSize = t.tileSize), this.setupGLContext(this.tileSize, this.tileSize), this.captureGPUInfo()
                    }
                    T.isWebglSupported = function(e) {
                        if (T.isLikelyNode) return !1;
                        e = e || T.WebglFilterBackend.prototype.tileSize;
                        var i = document.createElement("canvas"),
                            r = i.getContext("webgl") || i.getContext("experimental-webgl"),
                            n = !1;
                        if (r) {
                            T.maxTextureSize = r.getParameter(r.MAX_TEXTURE_SIZE), n = T.maxTextureSize >= e;
                            for (var o = ["highp", "mediump", "lowp"], a = 0; a < 3; a++)
                                if (t(r, o[a])) {
                                    T.webGlPrecision = o[a];
                                    break
                                }
                        }
                        return this.isSupported = n, n
                    }, T.WebglFilterBackend = e, e.prototype = {
                        tileSize: 2048,
                        resources: {},
                        setupGLContext: function(t, e) {
                            this.dispose(), this.createWebGLCanvas(t, e), this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), this.chooseFastestCopyGLTo2DMethod(t, e)
                        },
                        chooseFastestCopyGLTo2DMethod: function(t, e) {
                            var i, r = void 0 !== window.performance;
                            try {
                                new ImageData(1, 1), i = !0
                            } catch (t) {
                                i = !1
                            }
                            var n = "undefined" != typeof ArrayBuffer,
                                o = "undefined" != typeof Uint8ClampedArray;
                            if (r && i && n && o) {
                                var a = T.util.createCanvasElement(),
                                    s = new ArrayBuffer(t * e * 4);
                                if (T.forceGLPutImageData) return this.imageBuffer = s, void(this.copyGLTo2D = O);
                                var l, h, c = {
                                    imageBuffer: s,
                                    destinationWidth: t,
                                    destinationHeight: e,
                                    targetCanvas: a
                                };
                                a.width = t, a.height = e, l = window.performance.now(), k.call(c, this.gl, c), h = window.performance.now() - l, l = window.performance.now(), O.call(c, this.gl, c), h > window.performance.now() - l ? (this.imageBuffer = s, this.copyGLTo2D = O) : this.copyGLTo2D = k
                            }
                        },
                        createWebGLCanvas: function(t, e) {
                            var i = T.util.createCanvasElement();
                            i.width = t, i.height = e;
                            var r = {
                                    alpha: !0,
                                    premultipliedAlpha: !1,
                                    depth: !1,
                                    stencil: !1,
                                    antialias: !1
                                },
                                n = i.getContext("webgl", r);
                            n || (n = i.getContext("experimental-webgl", r)), n && (n.clearColor(0, 0, 0, 0), this.canvas = i, this.gl = n)
                        },
                        applyFilters: function(t, e, i, r, n, o) {
                            var a, s = this.gl;
                            o && (a = this.getCachedTexture(o, e));
                            var l = {
                                    originalWidth: e.width || e.originalWidth,
                                    originalHeight: e.height || e.originalHeight,
                                    sourceWidth: i,
                                    sourceHeight: r,
                                    destinationWidth: i,
                                    destinationHeight: r,
                                    context: s,
                                    sourceTexture: this.createTexture(s, i, r, !a && e),
                                    targetTexture: this.createTexture(s, i, r),
                                    originalTexture: a || this.createTexture(s, i, r, !a && e),
                                    passes: t.length,
                                    webgl: !0,
                                    aPosition: this.aPosition,
                                    programCache: this.programCache,
                                    pass: 0,
                                    filterBackend: this,
                                    targetCanvas: n
                                },
                                h = s.createFramebuffer();
                            return s.bindFramebuffer(s.FRAMEBUFFER, h), t.forEach((function(t) {
                                    t && t.applyTo(l)
                                })),
                                function(t) {
                                    var e = t.targetCanvas,
                                        i = e.width,
                                        r = e.height,
                                        n = t.destinationWidth,
                                        o = t.destinationHeight;
                                    i === n && r === o || (e.width = n, e.height = o)
                                }(l), this.copyGLTo2D(s, l), s.bindTexture(s.TEXTURE_2D, null), s.deleteTexture(l.sourceTexture), s.deleteTexture(l.targetTexture), s.deleteFramebuffer(h), n.getContext("2d").setTransform(1, 0, 0, 1, 0, 0), l
                        },
                        dispose: function() {
                            this.canvas && (this.canvas = null, this.gl = null), this.clearWebGLCaches()
                        },
                        clearWebGLCaches: function() {
                            this.programCache = {}, this.textureCache = {}
                        },
                        createTexture: function(t, e, i, r) {
                            var n = t.createTexture();
                            return t.bindTexture(t.TEXTURE_2D, n), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), r ? t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, r) : t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, e, i, 0, t.RGBA, t.UNSIGNED_BYTE, null), n
                        },
                        getCachedTexture: function(t, e) {
                            if (this.textureCache[t]) return this.textureCache[t];
                            var i = this.createTexture(this.gl, e.width, e.height, e);
                            return this.textureCache[t] = i, i
                        },
                        evictCachesForKey: function(t) {
                            this.textureCache[t] && (this.gl.deleteTexture(this.textureCache[t]), delete this.textureCache[t])
                        },
                        copyGLTo2D: k,
                        captureGPUInfo: function() {
                            if (this.gpuInfo) return this.gpuInfo;
                            var t = this.gl,
                                e = {
                                    renderer: "",
                                    vendor: ""
                                };
                            if (!t) return e;
                            var i = t.getExtension("WEBGL_debug_renderer_info");
                            if (i) {
                                var r = t.getParameter(i.UNMASKED_RENDERER_WEBGL),
                                    n = t.getParameter(i.UNMASKED_VENDOR_WEBGL);
                                r && (e.renderer = r.toLowerCase()), n && (e.vendor = n.toLowerCase())
                            }
                            return this.gpuInfo = e, e
                        }
                    }
                }(),
                function() {
                    "use strict";
                    var t = function() {};

                    function e() {}
                    T.Canvas2dFilterBackend = e, e.prototype = {
                        evictCachesForKey: t,
                        dispose: t,
                        clearWebGLCaches: t,
                        resources: {},
                        applyFilters: function(t, e, i, r, n) {
                            var o = n.getContext("2d");
                            o.drawImage(e, 0, 0, i, r);
                            var a = {
                                sourceWidth: i,
                                sourceHeight: r,
                                imageData: o.getImageData(0, 0, i, r),
                                originalEl: e,
                                originalImageData: o.getImageData(0, 0, i, r),
                                canvasEl: n,
                                ctx: o,
                                filterBackend: this
                            };
                            return t.forEach((function(t) {
                                t.applyTo(a)
                            })), a.imageData.width === i && a.imageData.height === r || (n.width = a.imageData.width, n.height = a.imageData.height), o.putImageData(a.imageData, 0, 0), a
                        }
                    }
                }(), T.Image = T.Image || {}, T.Image.filters = T.Image.filters || {}, T.Image.filters.BaseFilter = T.util.createClass({
                    type: "BaseFilter",
                    vertexSource: "attribute vec2 aPosition;\nvarying vec2 vTexCoord;\nvoid main() {\nvTexCoord = aPosition;\ngl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n}",
                    fragmentSource: "precision highp float;\nvarying vec2 vTexCoord;\nuniform sampler2D uTexture;\nvoid main() {\ngl_FragColor = texture2D(uTexture, vTexCoord);\n}",
                    initialize: function(t) {
                        t && this.setOptions(t)
                    },
                    setOptions: function(t) {
                        for (var e in t) this[e] = t[e]
                    },
                    createProgram: function(t, e, i) {
                        e = e || this.fragmentSource, i = i || this.vertexSource, "highp" !== T.webGlPrecision && (e = e.replace(/precision highp float/g, "precision " + T.webGlPrecision + " float"));
                        var r = t.createShader(t.VERTEX_SHADER);
                        if (t.shaderSource(r, i), t.compileShader(r), !t.getShaderParameter(r, t.COMPILE_STATUS)) throw new Error("Vertex shader compile error for " + this.type + ": " + t.getShaderInfoLog(r));
                        var n = t.createShader(t.FRAGMENT_SHADER);
                        if (t.shaderSource(n, e), t.compileShader(n), !t.getShaderParameter(n, t.COMPILE_STATUS)) throw new Error("Fragment shader compile error for " + this.type + ": " + t.getShaderInfoLog(n));
                        var o = t.createProgram();
                        if (t.attachShader(o, r), t.attachShader(o, n), t.linkProgram(o), !t.getProgramParameter(o, t.LINK_STATUS)) throw new Error('Shader link error for "${this.type}" ' + t.getProgramInfoLog(o));
                        var a = this.getAttributeLocations(t, o),
                            s = this.getUniformLocations(t, o) || {};
                        return s.uStepW = t.getUniformLocation(o, "uStepW"), s.uStepH = t.getUniformLocation(o, "uStepH"), {
                            program: o,
                            attributeLocations: a,
                            uniformLocations: s
                        }
                    },
                    getAttributeLocations: function(t, e) {
                        return {
                            aPosition: t.getAttribLocation(e, "aPosition")
                        }
                    },
                    getUniformLocations: function() {
                        return {}
                    },
                    sendAttributeData: function(t, e, i) {
                        var r = e.aPosition,
                            n = t.createBuffer();
                        t.bindBuffer(t.ARRAY_BUFFER, n), t.enableVertexAttribArray(r), t.vertexAttribPointer(r, 2, t.FLOAT, !1, 0, 0), t.bufferData(t.ARRAY_BUFFER, i, t.STATIC_DRAW)
                    },
                    _setupFrameBuffer: function(t) {
                        var e, i, r = t.context;
                        t.passes > 1 ? (e = t.destinationWidth, i = t.destinationHeight, t.sourceWidth === e && t.sourceHeight === i || (r.deleteTexture(t.targetTexture), t.targetTexture = t.filterBackend.createTexture(r, e, i)), r.framebufferTexture2D(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0, r.TEXTURE_2D, t.targetTexture, 0)) : (r.bindFramebuffer(r.FRAMEBUFFER, null), r.finish())
                    },
                    _swapTextures: function(t) {
                        t.passes--, t.pass++;
                        var e = t.targetTexture;
                        t.targetTexture = t.sourceTexture, t.sourceTexture = e
                    },
                    isNeutralState: function() {
                        var t = this.mainParameter,
                            e = T.Image.filters[this.type].prototype;
                        if (t) {
                            if (Array.isArray(e[t])) {
                                for (var i = e[t].length; i--;)
                                    if (this[t][i] !== e[t][i]) return !1;
                                return !0
                            }
                            return e[t] === this[t]
                        }
                        return !1
                    },
                    applyTo: function(t) {
                        t.webgl ? (this._setupFrameBuffer(t), this.applyToWebGL(t), this._swapTextures(t)) : this.applyTo2d(t)
                    },
                    retrieveShader: function(t) {
                        return t.programCache.hasOwnProperty(this.type) || (t.programCache[this.type] = this.createProgram(t.context)), t.programCache[this.type]
                    },
                    applyToWebGL: function(t) {
                        var e = t.context,
                            i = this.retrieveShader(t);
                        0 === t.pass && t.originalTexture ? e.bindTexture(e.TEXTURE_2D, t.originalTexture) : e.bindTexture(e.TEXTURE_2D, t.sourceTexture), e.useProgram(i.program), this.sendAttributeData(e, i.attributeLocations, t.aPosition), e.uniform1f(i.uniformLocations.uStepW, 1 / t.sourceWidth), e.uniform1f(i.uniformLocations.uStepH, 1 / t.sourceHeight), this.sendUniformData(e, i.uniformLocations), e.viewport(0, 0, t.destinationWidth, t.destinationHeight), e.drawArrays(e.TRIANGLE_STRIP, 0, 4)
                    },
                    bindAdditionalTexture: function(t, e, i) {
                        t.activeTexture(i), t.bindTexture(t.TEXTURE_2D, e), t.activeTexture(t.TEXTURE0)
                    },
                    unbindAdditionalTexture: function(t, e) {
                        t.activeTexture(e), t.bindTexture(t.TEXTURE_2D, null), t.activeTexture(t.TEXTURE0)
                    },
                    getMainParameter: function() {
                        return this[this.mainParameter]
                    },
                    setMainParameter: function(t) {
                        this[this.mainParameter] = t
                    },
                    sendUniformData: function() {},
                    createHelpLayer: function(t) {
                        if (!t.helpLayer) {
                            var e = document.createElement("canvas");
                            e.width = t.sourceWidth, e.height = t.sourceHeight, t.helpLayer = e
                        }
                    },
                    toObject: function() {
                        var t = {
                                type: this.type
                            },
                            e = this.mainParameter;
                        return e && (t[e] = this[e]), t
                    },
                    toJSON: function() {
                        return this.toObject()
                    }
                }), T.Image.filters.BaseFilter.fromObject = function(t, e) {
                    var i = new T.Image.filters[t.type](t);
                    return e && e(i), i
                },
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.ColorMatrix = r(i.BaseFilter, {
                        type: "ColorMatrix",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nvarying vec2 vTexCoord;\nuniform mat4 uColorMatrix;\nuniform vec4 uConstants;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\ncolor *= uColorMatrix;\ncolor += uConstants;\ngl_FragColor = color;\n}",
                        matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
                        mainParameter: "matrix",
                        colorsOnly: !0,
                        initialize: function(t) {
                            this.callSuper("initialize", t), this.matrix = this.matrix.slice(0)
                        },
                        applyTo2d: function(t) {
                            var e, i, r, n, o, a = t.imageData.data,
                                s = a.length,
                                l = this.matrix,
                                h = this.colorsOnly;
                            for (o = 0; o < s; o += 4) e = a[o], i = a[o + 1], r = a[o + 2], h ? (a[o] = e * l[0] + i * l[1] + r * l[2] + 255 * l[4], a[o + 1] = e * l[5] + i * l[6] + r * l[7] + 255 * l[9], a[o + 2] = e * l[10] + i * l[11] + r * l[12] + 255 * l[14]) : (n = a[o + 3], a[o] = e * l[0] + i * l[1] + r * l[2] + n * l[3] + 255 * l[4], a[o + 1] = e * l[5] + i * l[6] + r * l[7] + n * l[8] + 255 * l[9], a[o + 2] = e * l[10] + i * l[11] + r * l[12] + n * l[13] + 255 * l[14], a[o + 3] = e * l[15] + i * l[16] + r * l[17] + n * l[18] + 255 * l[19])
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uColorMatrix: t.getUniformLocation(e, "uColorMatrix"),
                                uConstants: t.getUniformLocation(e, "uConstants")
                            }
                        },
                        sendUniformData: function(t, e) {
                            var i = this.matrix,
                                r = [i[0], i[1], i[2], i[3], i[5], i[6], i[7], i[8], i[10], i[11], i[12], i[13], i[15], i[16], i[17], i[18]],
                                n = [i[4], i[9], i[14], i[19]];
                            t.uniformMatrix4fv(e.uColorMatrix, !1, r), t.uniform4fv(e.uConstants, n)
                        }
                    }), e.Image.filters.ColorMatrix.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Brightness = r(i.BaseFilter, {
                        type: "Brightness",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uBrightness;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\ncolor.rgb += uBrightness;\ngl_FragColor = color;\n}",
                        brightness: 0,
                        mainParameter: "brightness",
                        applyTo2d: function(t) {
                            if (0 !== this.brightness) {
                                var e, i = t.imageData.data,
                                    r = i.length,
                                    n = Math.round(255 * this.brightness);
                                for (e = 0; e < r; e += 4) i[e] = i[e] + n, i[e + 1] = i[e + 1] + n, i[e + 2] = i[e + 2] + n
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uBrightness: t.getUniformLocation(e, "uBrightness")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uBrightness, this.brightness)
                        }
                    }), e.Image.filters.Brightness.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.Image.filters,
                        n = e.util.createClass;
                    r.Convolute = n(r.BaseFilter, {
                        type: "Convolute",
                        opaque: !1,
                        matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],
                        fragmentSource: {
                            Convolute_3_1: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[9];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 0);\nfor (float h = 0.0; h < 3.0; h+=1.0) {\nfor (float w = 0.0; w < 3.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\ncolor += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n}\n}\ngl_FragColor = color;\n}",
                            Convolute_3_0: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[9];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 1);\nfor (float h = 0.0; h < 3.0; h+=1.0) {\nfor (float w = 0.0; w < 3.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\ncolor.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n}\n}\nfloat alpha = texture2D(uTexture, vTexCoord).a;\ngl_FragColor = color;\ngl_FragColor.a = alpha;\n}",
                            Convolute_5_1: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[25];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 0);\nfor (float h = 0.0; h < 5.0; h+=1.0) {\nfor (float w = 0.0; w < 5.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\ncolor += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n}\n}\ngl_FragColor = color;\n}",
                            Convolute_5_0: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[25];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 1);\nfor (float h = 0.0; h < 5.0; h+=1.0) {\nfor (float w = 0.0; w < 5.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\ncolor.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n}\n}\nfloat alpha = texture2D(uTexture, vTexCoord).a;\ngl_FragColor = color;\ngl_FragColor.a = alpha;\n}",
                            Convolute_7_1: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[49];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 0);\nfor (float h = 0.0; h < 7.0; h+=1.0) {\nfor (float w = 0.0; w < 7.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\ncolor += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n}\n}\ngl_FragColor = color;\n}",
                            Convolute_7_0: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[49];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 1);\nfor (float h = 0.0; h < 7.0; h+=1.0) {\nfor (float w = 0.0; w < 7.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\ncolor.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n}\n}\nfloat alpha = texture2D(uTexture, vTexCoord).a;\ngl_FragColor = color;\ngl_FragColor.a = alpha;\n}",
                            Convolute_9_1: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[81];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 0);\nfor (float h = 0.0; h < 9.0; h+=1.0) {\nfor (float w = 0.0; w < 9.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\ncolor += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n}\n}\ngl_FragColor = color;\n}",
                            Convolute_9_0: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uMatrix[81];\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = vec4(0, 0, 0, 1);\nfor (float h = 0.0; h < 9.0; h+=1.0) {\nfor (float w = 0.0; w < 9.0; w+=1.0) {\nvec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\ncolor.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n}\n}\nfloat alpha = texture2D(uTexture, vTexCoord).a;\ngl_FragColor = color;\ngl_FragColor.a = alpha;\n}"
                        },
                        retrieveShader: function(t) {
                            var e = Math.sqrt(this.matrix.length),
                                i = this.type + "_" + e + "_" + (this.opaque ? 1 : 0),
                                r = this.fragmentSource[i];
                            return t.programCache.hasOwnProperty(i) || (t.programCache[i] = this.createProgram(t.context, r)), t.programCache[i]
                        },
                        applyTo2d: function(t) {
                            var e, i, r, n, o, a, s, l, h, c, u, f, d, p = t.imageData,
                                g = p.data,
                                v = this.matrix,
                                m = Math.round(Math.sqrt(v.length)),
                                y = Math.floor(m / 2),
                                b = p.width,
                                x = p.height,
                                _ = t.ctx.createImageData(b, x),
                                w = _.data,
                                S = this.opaque ? 1 : 0;
                            for (u = 0; u < x; u++)
                                for (c = 0; c < b; c++) {
                                    for (o = 4 * (u * b + c), e = 0, i = 0, r = 0, n = 0, d = 0; d < m; d++)
                                        for (f = 0; f < m; f++) a = c + f - y, (s = u + d - y) < 0 || s >= x || a < 0 || a >= b || (l = 4 * (s * b + a), h = v[d * m + f], e += g[l] * h, i += g[l + 1] * h, r += g[l + 2] * h, S || (n += g[l + 3] * h));
                                    w[o] = e, w[o + 1] = i, w[o + 2] = r, w[o + 3] = S ? g[o + 3] : n
                                }
                            t.imageData = _
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uMatrix: t.getUniformLocation(e, "uMatrix"),
                                uOpaque: t.getUniformLocation(e, "uOpaque"),
                                uHalfSize: t.getUniformLocation(e, "uHalfSize"),
                                uSize: t.getUniformLocation(e, "uSize")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1fv(e.uMatrix, this.matrix)
                        },
                        toObject: function() {
                            return i(this.callSuper("toObject"), {
                                opaque: this.opaque,
                                matrix: this.matrix
                            })
                        }
                    }), e.Image.filters.Convolute.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Grayscale = r(i.BaseFilter, {
                        type: "Grayscale",
                        fragmentSource: {
                            average: "precision highp float;\nuniform sampler2D uTexture;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nfloat average = (color.r + color.b + color.g) / 3.0;\ngl_FragColor = vec4(average, average, average, color.a);\n}",
                            lightness: "precision highp float;\nuniform sampler2D uTexture;\nuniform int uMode;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 col = texture2D(uTexture, vTexCoord);\nfloat average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\ngl_FragColor = vec4(average, average, average, col.a);\n}",
                            luminosity: "precision highp float;\nuniform sampler2D uTexture;\nuniform int uMode;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 col = texture2D(uTexture, vTexCoord);\nfloat average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\ngl_FragColor = vec4(average, average, average, col.a);\n}"
                        },
                        mode: "average",
                        mainParameter: "mode",
                        applyTo2d: function(t) {
                            var e, i, r = t.imageData.data,
                                n = r.length,
                                o = this.mode;
                            for (e = 0; e < n; e += 4) "average" === o ? i = (r[e] + r[e + 1] + r[e + 2]) / 3 : "lightness" === o ? i = (Math.min(r[e], r[e + 1], r[e + 2]) + Math.max(r[e], r[e + 1], r[e + 2])) / 2 : "luminosity" === o && (i = .21 * r[e] + .72 * r[e + 1] + .07 * r[e + 2]), r[e] = i, r[e + 1] = i, r[e + 2] = i
                        },
                        retrieveShader: function(t) {
                            var e = this.type + "_" + this.mode;
                            if (!t.programCache.hasOwnProperty(e)) {
                                var i = this.fragmentSource[this.mode];
                                t.programCache[e] = this.createProgram(t.context, i)
                            }
                            return t.programCache[e]
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uMode: t.getUniformLocation(e, "uMode")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1i(e.uMode, 1)
                        },
                        isNeutralState: function() {
                            return !1
                        }
                    }), e.Image.filters.Grayscale.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Invert = r(i.BaseFilter, {
                        type: "Invert",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform int uInvert;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nif (uInvert == 1) {\ngl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n} else {\ngl_FragColor = color;\n}\n}",
                        invert: !0,
                        mainParameter: "invert",
                        applyTo2d: function(t) {
                            var e, i = t.imageData.data,
                                r = i.length;
                            for (e = 0; e < r; e += 4) i[e] = 255 - i[e], i[e + 1] = 255 - i[e + 1], i[e + 2] = 255 - i[e + 2]
                        },
                        isNeutralState: function() {
                            return !this.invert
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uInvert: t.getUniformLocation(e, "uInvert")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1i(e.uInvert, this.invert)
                        }
                    }), e.Image.filters.Invert.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.Image.filters,
                        n = e.util.createClass;
                    r.Noise = n(r.BaseFilter, {
                        type: "Noise",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uStepH;\nuniform float uNoise;\nuniform float uSeed;\nvarying vec2 vTexCoord;\nfloat rand(vec2 co, float seed, float vScale) {\nreturn fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n}\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\ncolor.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\ngl_FragColor = color;\n}",
                        mainParameter: "noise",
                        noise: 0,
                        applyTo2d: function(t) {
                            if (0 !== this.noise) {
                                var e, i, r = t.imageData.data,
                                    n = r.length,
                                    o = this.noise;
                                for (e = 0, n = r.length; e < n; e += 4) i = (.5 - Math.random()) * o, r[e] += i, r[e + 1] += i, r[e + 2] += i
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uNoise: t.getUniformLocation(e, "uNoise"),
                                uSeed: t.getUniformLocation(e, "uSeed")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uNoise, this.noise / 255), t.uniform1f(e.uSeed, Math.random())
                        },
                        toObject: function() {
                            return i(this.callSuper("toObject"), {
                                noise: this.noise
                            })
                        }
                    }), e.Image.filters.Noise.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Pixelate = r(i.BaseFilter, {
                        type: "Pixelate",
                        blocksize: 4,
                        mainParameter: "blocksize",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uBlocksize;\nuniform float uStepW;\nuniform float uStepH;\nvarying vec2 vTexCoord;\nvoid main() {\nfloat blockW = uBlocksize * uStepW;\nfloat blockH = uBlocksize * uStepW;\nint posX = int(vTexCoord.x / blockW);\nint posY = int(vTexCoord.y / blockH);\nfloat fposX = float(posX);\nfloat fposY = float(posY);\nvec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\nvec4 color = texture2D(uTexture, squareCoords);\ngl_FragColor = color;\n}",
                        applyTo2d: function(t) {
                            var e, i, r, n, o, a, s, l, h, c, u, f = t.imageData,
                                d = f.data,
                                p = f.height,
                                g = f.width;
                            for (i = 0; i < p; i += this.blocksize)
                                for (r = 0; r < g; r += this.blocksize)
                                    for (n = d[e = 4 * i * g + 4 * r], o = d[e + 1], a = d[e + 2], s = d[e + 3], c = Math.min(i + this.blocksize, p), u = Math.min(r + this.blocksize, g), l = i; l < c; l++)
                                        for (h = r; h < u; h++) d[e = 4 * l * g + 4 * h] = n, d[e + 1] = o, d[e + 2] = a, d[e + 3] = s
                        },
                        isNeutralState: function() {
                            return 1 === this.blocksize
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uBlocksize: t.getUniformLocation(e, "uBlocksize"),
                                uStepW: t.getUniformLocation(e, "uStepW"),
                                uStepH: t.getUniformLocation(e, "uStepH")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uBlocksize, this.blocksize)
                        }
                    }), e.Image.filters.Pixelate.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.extend,
                        r = e.Image.filters,
                        n = e.util.createClass;
                    r.RemoveColor = n(r.BaseFilter, {
                        type: "RemoveColor",
                        color: "#FFFFFF",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\ngl_FragColor = texture2D(uTexture, vTexCoord);\nif(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\ngl_FragColor.a = 0.0;\n}\n}",
                        distance: .02,
                        useAlpha: !1,
                        applyTo2d: function(t) {
                            var i, r, n, o, a = t.imageData.data,
                                s = 255 * this.distance,
                                l = new e.Color(this.color).getSource(),
                                h = [l[0] - s, l[1] - s, l[2] - s],
                                c = [l[0] + s, l[1] + s, l[2] + s];
                            for (i = 0; i < a.length; i += 4) r = a[i], n = a[i + 1], o = a[i + 2], r > h[0] && n > h[1] && o > h[2] && r < c[0] && n < c[1] && o < c[2] && (a[i + 3] = 0)
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uLow: t.getUniformLocation(e, "uLow"),
                                uHigh: t.getUniformLocation(e, "uHigh")
                            }
                        },
                        sendUniformData: function(t, i) {
                            var r = new e.Color(this.color).getSource(),
                                n = parseFloat(this.distance),
                                o = [0 + r[0] / 255 - n, 0 + r[1] / 255 - n, 0 + r[2] / 255 - n, 1],
                                a = [r[0] / 255 + n, r[1] / 255 + n, r[2] / 255 + n, 1];
                            t.uniform4fv(i.uLow, o), t.uniform4fv(i.uHigh, a)
                        },
                        toObject: function() {
                            return i(this.callSuper("toObject"), {
                                color: this.color,
                                distance: this.distance
                            })
                        }
                    }), e.Image.filters.RemoveColor.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass,
                        n = {
                            Brownie: [.5997, .34553, -.27082, 0, .186, -.0377, .86095, .15059, 0, -.1449, .24113, -.07441, .44972, 0, -.02965, 0, 0, 0, 1, 0],
                            Vintage: [.62793, .32021, -.03965, 0, .03784, .02578, .64411, .03259, 0, .02926, .0466, -.08512, .52416, 0, .02023, 0, 0, 0, 1, 0],
                            Kodachrome: [1.12855, -.39673, -.03992, 0, .24991, -.16404, 1.08352, -.05498, 0, .09698, -.16786, -.56034, 1.60148, 0, .13972, 0, 0, 0, 1, 0],
                            Technicolor: [1.91252, -.85453, -.09155, 0, .04624, -.30878, 1.76589, -.10601, 0, -.27589, -.2311, -.75018, 1.84759, 0, .12137, 0, 0, 0, 1, 0],
                            Polaroid: [1.438, -.062, -.062, 0, 0, -.122, 1.378, -.122, 0, 0, -.016, -.016, 1.483, 0, 0, 0, 0, 0, 1, 0],
                            Sepia: [.393, .769, .189, 0, 0, .349, .686, .168, 0, 0, .272, .534, .131, 0, 0, 0, 0, 0, 1, 0],
                            BlackWhite: [1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0]
                        };
                    for (var o in n) i[o] = r(i.ColorMatrix, {
                        type: o,
                        matrix: n[o],
                        mainParameter: !1,
                        colorsOnly: !0
                    }), e.Image.filters[o].fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric,
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.BlendColor = r(i.BaseFilter, {
                        type: "BlendColor",
                        color: "#F95C63",
                        mode: "multiply",
                        alpha: 1,
                        fragmentSource: {
                            multiply: "gl_FragColor.rgb *= uColor.rgb;\n",
                            screen: "gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\n",
                            add: "gl_FragColor.rgb += uColor.rgb;\n",
                            diff: "gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\n",
                            subtract: "gl_FragColor.rgb -= uColor.rgb;\n",
                            lighten: "gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\n",
                            darken: "gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\n",
                            exclusion: "gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\n",
                            overlay: "if (uColor.r < 0.5) {\ngl_FragColor.r *= 2.0 * uColor.r;\n} else {\ngl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n}\nif (uColor.g < 0.5) {\ngl_FragColor.g *= 2.0 * uColor.g;\n} else {\ngl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n}\nif (uColor.b < 0.5) {\ngl_FragColor.b *= 2.0 * uColor.b;\n} else {\ngl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n}\n",
                            tint: "gl_FragColor.rgb *= (1.0 - uColor.a);\ngl_FragColor.rgb += uColor.rgb;\n"
                        },
                        buildSource: function(t) {
                            return "precision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uColor;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\ngl_FragColor = color;\nif (color.a > 0.0) {\n" + this.fragmentSource[t] + "}\n}"
                        },
                        retrieveShader: function(t) {
                            var e, i = this.type + "_" + this.mode;
                            return t.programCache.hasOwnProperty(i) || (e = this.buildSource(this.mode), t.programCache[i] = this.createProgram(t.context, e)), t.programCache[i]
                        },
                        applyTo2d: function(t) {
                            var i, r, n, o, a, s, l, h = t.imageData.data,
                                c = h.length,
                                u = 1 - this.alpha;
                            i = (l = new e.Color(this.color).getSource())[0] * this.alpha, r = l[1] * this.alpha, n = l[2] * this.alpha;
                            for (var f = 0; f < c; f += 4) switch (o = h[f], a = h[f + 1], s = h[f + 2], this.mode) {
                                case "multiply":
                                    h[f] = o * i / 255, h[f + 1] = a * r / 255, h[f + 2] = s * n / 255;
                                    break;
                                case "screen":
                                    h[f] = 255 - (255 - o) * (255 - i) / 255, h[f + 1] = 255 - (255 - a) * (255 - r) / 255, h[f + 2] = 255 - (255 - s) * (255 - n) / 255;
                                    break;
                                case "add":
                                    h[f] = o + i, h[f + 1] = a + r, h[f + 2] = s + n;
                                    break;
                                case "diff":
                                case "difference":
                                    h[f] = Math.abs(o - i), h[f + 1] = Math.abs(a - r), h[f + 2] = Math.abs(s - n);
                                    break;
                                case "subtract":
                                    h[f] = o - i, h[f + 1] = a - r, h[f + 2] = s - n;
                                    break;
                                case "darken":
                                    h[f] = Math.min(o, i), h[f + 1] = Math.min(a, r), h[f + 2] = Math.min(s, n);
                                    break;
                                case "lighten":
                                    h[f] = Math.max(o, i), h[f + 1] = Math.max(a, r), h[f + 2] = Math.max(s, n);
                                    break;
                                case "overlay":
                                    h[f] = i < 128 ? 2 * o * i / 255 : 255 - 2 * (255 - o) * (255 - i) / 255, h[f + 1] = r < 128 ? 2 * a * r / 255 : 255 - 2 * (255 - a) * (255 - r) / 255, h[f + 2] = n < 128 ? 2 * s * n / 255 : 255 - 2 * (255 - s) * (255 - n) / 255;
                                    break;
                                case "exclusion":
                                    h[f] = i + o - 2 * i * o / 255, h[f + 1] = r + a - 2 * r * a / 255, h[f + 2] = n + s - 2 * n * s / 255;
                                    break;
                                case "tint":
                                    h[f] = i + o * u, h[f + 1] = r + a * u, h[f + 2] = n + s * u
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uColor: t.getUniformLocation(e, "uColor")
                            }
                        },
                        sendUniformData: function(t, i) {
                            var r = new e.Color(this.color).getSource();
                            r[0] = this.alpha * r[0] / 255, r[1] = this.alpha * r[1] / 255, r[2] = this.alpha * r[2] / 255, r[3] = this.alpha, t.uniform4fv(i.uColor, r)
                        },
                        toObject: function() {
                            return {
                                type: this.type,
                                color: this.color,
                                mode: this.mode,
                                alpha: this.alpha
                            }
                        }
                    }), e.Image.filters.BlendColor.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric,
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.BlendImage = r(i.BaseFilter, {
                        type: "BlendImage",
                        image: null,
                        mode: "multiply",
                        alpha: 1,
                        vertexSource: "attribute vec2 aPosition;\nvarying vec2 vTexCoord;\nvarying vec2 vTexCoord2;\nuniform mat3 uTransformMatrix;\nvoid main() {\nvTexCoord = aPosition;\nvTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\ngl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n}",
                        fragmentSource: {
                            multiply: "precision highp float;\nuniform sampler2D uTexture;\nuniform sampler2D uImage;\nuniform vec4 uColor;\nvarying vec2 vTexCoord;\nvarying vec2 vTexCoord2;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nvec4 color2 = texture2D(uImage, vTexCoord2);\ncolor.rgba *= color2.rgba;\ngl_FragColor = color;\n}",
                            mask: "precision highp float;\nuniform sampler2D uTexture;\nuniform sampler2D uImage;\nuniform vec4 uColor;\nvarying vec2 vTexCoord;\nvarying vec2 vTexCoord2;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nvec4 color2 = texture2D(uImage, vTexCoord2);\ncolor.a = color2.a;\ngl_FragColor = color;\n}"
                        },
                        retrieveShader: function(t) {
                            var e = this.type + "_" + this.mode,
                                i = this.fragmentSource[this.mode];
                            return t.programCache.hasOwnProperty(e) || (t.programCache[e] = this.createProgram(t.context, i)), t.programCache[e]
                        },
                        applyToWebGL: function(t) {
                            var e = t.context,
                                i = this.createTexture(t.filterBackend, this.image);
                            this.bindAdditionalTexture(e, i, e.TEXTURE1), this.callSuper("applyToWebGL", t), this.unbindAdditionalTexture(e, e.TEXTURE1)
                        },
                        createTexture: function(t, e) {
                            return t.getCachedTexture(e.cacheKey, e._element)
                        },
                        calculateMatrix: function() {
                            var t = this.image,
                                e = t._element.width,
                                i = t._element.height;
                            return [1 / t.scaleX, 0, 0, 0, 1 / t.scaleY, 0, -t.left / e, -t.top / i, 1]
                        },
                        applyTo2d: function(t) {
                            var i, r, n, o, a, s, l, h, c, u, f, d = t.imageData,
                                p = t.filterBackend.resources,
                                g = d.data,
                                v = g.length,
                                m = d.width,
                                y = d.height,
                                b = this.image;
                            p.blendImage || (p.blendImage = e.util.createCanvasElement()), u = (c = p.blendImage).getContext("2d"), c.width !== m || c.height !== y ? (c.width = m, c.height = y) : u.clearRect(0, 0, m, y), u.setTransform(b.scaleX, 0, 0, b.scaleY, b.left, b.top), u.drawImage(b._element, 0, 0, m, y), f = u.getImageData(0, 0, m, y).data;
                            for (var x = 0; x < v; x += 4) switch (a = g[x], s = g[x + 1], l = g[x + 2], h = g[x + 3], i = f[x], r = f[x + 1], n = f[x + 2], o = f[x + 3], this.mode) {
                                case "multiply":
                                    g[x] = a * i / 255, g[x + 1] = s * r / 255, g[x + 2] = l * n / 255, g[x + 3] = h * o / 255;
                                    break;
                                case "mask":
                                    g[x + 3] = o
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uTransformMatrix: t.getUniformLocation(e, "uTransformMatrix"),
                                uImage: t.getUniformLocation(e, "uImage")
                            }
                        },
                        sendUniformData: function(t, e) {
                            var i = this.calculateMatrix();
                            t.uniform1i(e.uImage, 1), t.uniformMatrix3fv(e.uTransformMatrix, !1, i)
                        },
                        toObject: function() {
                            return {
                                type: this.type,
                                image: this.image && this.image.toObject(),
                                mode: this.mode,
                                alpha: this.alpha
                            }
                        }
                    }), e.Image.filters.BlendImage.fromObject = function(t, i) {
                        e.Image.fromObject(t.image, (function(r) {
                            var n = e.util.object.clone(t);
                            n.image = r, i(new e.Image.filters.BlendImage(n))
                        }))
                    }
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = Math.pow,
                        r = Math.floor,
                        n = Math.sqrt,
                        o = Math.abs,
                        a = Math.round,
                        s = Math.sin,
                        l = Math.ceil,
                        h = e.Image.filters,
                        c = e.util.createClass;
                    h.Resize = c(h.BaseFilter, {
                        type: "Resize",
                        resizeType: "hermite",
                        scaleX: 1,
                        scaleY: 1,
                        lanczosLobes: 3,
                        getUniformLocations: function(t, e) {
                            return {
                                uDelta: t.getUniformLocation(e, "uDelta"),
                                uTaps: t.getUniformLocation(e, "uTaps")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform2fv(e.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]), t.uniform1fv(e.uTaps, this.taps)
                        },
                        retrieveShader: function(t) {
                            var e = this.getFilterWindow(),
                                i = this.type + "_" + e;
                            if (!t.programCache.hasOwnProperty(i)) {
                                var r = this.generateShader(e);
                                t.programCache[i] = this.createProgram(t.context, r)
                            }
                            return t.programCache[i]
                        },
                        getFilterWindow: function() {
                            var t = this.tempScale;
                            return Math.ceil(this.lanczosLobes / t)
                        },
                        getTaps: function() {
                            for (var t = this.lanczosCreate(this.lanczosLobes), e = this.tempScale, i = this.getFilterWindow(), r = new Array(i), n = 1; n <= i; n++) r[n - 1] = t(n * e);
                            return r
                        },
                        generateShader: function(t) {
                            for (var e = new Array(t), i = this.fragmentSourceTOP, r = 1; r <= t; r++) e[r - 1] = r + ".0 * uDelta";
                            return i += "uniform float uTaps[" + t + "];\n", i += "void main() {\n", i += "  vec4 color = texture2D(uTexture, vTexCoord);\n", i += "  float sum = 1.0;\n", e.forEach((function(t, e) {
                                i += "  color += texture2D(uTexture, vTexCoord + " + t + ") * uTaps[" + e + "];\n", i += "  color += texture2D(uTexture, vTexCoord - " + t + ") * uTaps[" + e + "];\n", i += "  sum += 2.0 * uTaps[" + e + "];\n"
                            })), i += "  gl_FragColor = color / sum;\n", i += "}"
                        },
                        fragmentSourceTOP: "precision highp float;\nuniform sampler2D uTexture;\nuniform vec2 uDelta;\nvarying vec2 vTexCoord;\n",
                        applyTo: function(t) {
                            t.webgl ? (t.passes++, this.width = t.sourceWidth, this.horizontal = !0, this.dW = Math.round(this.width * this.scaleX), this.dH = t.sourceHeight, this.tempScale = this.dW / this.width, this.taps = this.getTaps(), t.destinationWidth = this.dW, this._setupFrameBuffer(t), this.applyToWebGL(t), this._swapTextures(t), t.sourceWidth = t.destinationWidth, this.height = t.sourceHeight, this.horizontal = !1, this.dH = Math.round(this.height * this.scaleY), this.tempScale = this.dH / this.height, this.taps = this.getTaps(), t.destinationHeight = this.dH, this._setupFrameBuffer(t), this.applyToWebGL(t), this._swapTextures(t), t.sourceHeight = t.destinationHeight) : this.applyTo2d(t)
                        },
                        isNeutralState: function() {
                            return 1 === this.scaleX && 1 === this.scaleY
                        },
                        lanczosCreate: function(t) {
                            return function(e) {
                                if (e >= t || e <= -t) return 0;
                                if (e < 1.1920929e-7 && e > -1.1920929e-7) return 1;
                                var i = (e *= Math.PI) / t;
                                return s(e) / e * s(i) / i
                            }
                        },
                        applyTo2d: function(t) {
                            var e = t.imageData,
                                i = this.scaleX,
                                r = this.scaleY;
                            this.rcpScaleX = 1 / i, this.rcpScaleY = 1 / r;
                            var n, o = e.width,
                                s = e.height,
                                l = a(o * i),
                                h = a(s * r);
                            "sliceHack" === this.resizeType ? n = this.sliceByTwo(t, o, s, l, h) : "hermite" === this.resizeType ? n = this.hermiteFastResize(t, o, s, l, h) : "bilinear" === this.resizeType ? n = this.bilinearFiltering(t, o, s, l, h) : "lanczos" === this.resizeType && (n = this.lanczosResize(t, o, s, l, h)), t.imageData = n
                        },
                        sliceByTwo: function(t, i, n, o, a) {
                            var s, l, h = t.imageData,
                                c = .5,
                                u = !1,
                                f = !1,
                                d = i * c,
                                p = n * c,
                                g = e.filterBackend.resources,
                                v = 0,
                                m = 0,
                                y = i,
                                b = 0;
                            for (g.sliceByTwo || (g.sliceByTwo = document.createElement("canvas")), ((s = g.sliceByTwo).width < 1.5 * i || s.height < n) && (s.width = 1.5 * i, s.height = n), (l = s.getContext("2d")).clearRect(0, 0, 1.5 * i, n), l.putImageData(h, 0, 0), o = r(o), a = r(a); !u || !f;) i = d, n = p, o < r(d * c) ? d = r(d * c) : (d = o, u = !0), a < r(p * c) ? p = r(p * c) : (p = a, f = !0), l.drawImage(s, v, m, i, n, y, b, d, p), v = y, m = b, b += p;
                            return l.getImageData(v, m, o, a)
                        },
                        lanczosResize: function(t, e, a, s, h) {
                            var c = t.imageData.data,
                                u = t.ctx.createImageData(s, h),
                                f = u.data,
                                d = this.lanczosCreate(this.lanczosLobes),
                                p = this.rcpScaleX,
                                g = this.rcpScaleY,
                                v = 2 / this.rcpScaleX,
                                m = 2 / this.rcpScaleY,
                                y = l(p * this.lanczosLobes / 2),
                                b = l(g * this.lanczosLobes / 2),
                                x = {},
                                _ = {},
                                w = {};
                            return function t(l) {
                                var S, C, T, E, k, O, I, P, L, M, A;
                                for (_.x = (l + .5) * p, w.x = r(_.x), S = 0; S < h; S++) {
                                    for (_.y = (S + .5) * g, w.y = r(_.y), k = 0, O = 0, I = 0, P = 0, L = 0, C = w.x - y; C <= w.x + y; C++)
                                        if (!(C < 0 || C >= e)) {
                                            M = r(1e3 * o(C - _.x)), x[M] || (x[M] = {});
                                            for (var D = w.y - b; D <= w.y + b; D++) D < 0 || D >= a || (A = r(1e3 * o(D - _.y)), x[M][A] || (x[M][A] = d(n(i(M * v, 2) + i(A * m, 2)) / 1e3)), (T = x[M][A]) > 0 && (k += T, O += T * c[E = 4 * (D * e + C)], I += T * c[E + 1], P += T * c[E + 2], L += T * c[E + 3]))
                                        } f[E = 4 * (S * s + l)] = O / k, f[E + 1] = I / k, f[E + 2] = P / k, f[E + 3] = L / k
                                }
                                return ++l < s ? t(l) : u
                            }(0)
                        },
                        bilinearFiltering: function(t, e, i, n, o) {
                            var a, s, l, h, c, u, f, d, p, g = 0,
                                v = this.rcpScaleX,
                                m = this.rcpScaleY,
                                y = 4 * (e - 1),
                                b = t.imageData.data,
                                x = t.ctx.createImageData(n, o),
                                _ = x.data;
                            for (l = 0; l < o; l++)
                                for (h = 0; h < n; h++)
                                    for (c = v * h - (a = r(v * h)), u = m * l - (s = r(m * l)), p = 4 * (s * e + a), f = 0; f < 4; f++) d = b[p + f] * (1 - c) * (1 - u) + b[p + 4 + f] * c * (1 - u) + b[p + y + f] * u * (1 - c) + b[p + y + 4 + f] * c * u, _[g++] = d;
                            return x
                        },
                        hermiteFastResize: function(t, e, i, a, s) {
                            for (var h = this.rcpScaleX, c = this.rcpScaleY, u = l(h / 2), f = l(c / 2), d = t.imageData.data, p = t.ctx.createImageData(a, s), g = p.data, v = 0; v < s; v++)
                                for (var m = 0; m < a; m++) {
                                    for (var y = 4 * (m + v * a), b = 0, x = 0, _ = 0, w = 0, S = 0, C = 0, T = 0, E = (v + .5) * c, k = r(v * c); k < (v + 1) * c; k++)
                                        for (var O = o(E - (k + .5)) / f, I = (m + .5) * h, P = O * O, L = r(m * h); L < (m + 1) * h; L++) {
                                            var M = o(I - (L + .5)) / u,
                                                A = n(P + M * M);
                                            A > 1 && A < -1 || (b = 2 * A * A * A - 3 * A * A + 1) > 0 && (T += b * d[(M = 4 * (L + k * e)) + 3], _ += b, d[M + 3] < 255 && (b = b * d[M + 3] / 250), w += b * d[M], S += b * d[M + 1], C += b * d[M + 2], x += b)
                                        }
                                    g[y] = w / x, g[y + 1] = S / x, g[y + 2] = C / x, g[y + 3] = T / _
                                }
                            return p
                        },
                        toObject: function() {
                            return {
                                type: this.type,
                                scaleX: this.scaleX,
                                scaleY: this.scaleY,
                                resizeType: this.resizeType,
                                lanczosLobes: this.lanczosLobes
                            }
                        }
                    }), e.Image.filters.Resize.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Contrast = r(i.BaseFilter, {
                        type: "Contrast",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uContrast;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nfloat contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\ncolor.rgb = contrastF * (color.rgb - 0.5) + 0.5;\ngl_FragColor = color;\n}",
                        contrast: 0,
                        mainParameter: "contrast",
                        applyTo2d: function(t) {
                            if (0 !== this.contrast) {
                                var e, i = t.imageData.data,
                                    r = i.length,
                                    n = Math.floor(255 * this.contrast),
                                    o = 259 * (n + 255) / (255 * (259 - n));
                                for (e = 0; e < r; e += 4) i[e] = o * (i[e] - 128) + 128, i[e + 1] = o * (i[e + 1] - 128) + 128, i[e + 2] = o * (i[e + 2] - 128) + 128
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uContrast: t.getUniformLocation(e, "uContrast")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uContrast, this.contrast)
                        }
                    }), e.Image.filters.Contrast.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Saturation = r(i.BaseFilter, {
                        type: "Saturation",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uSaturation;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nfloat rgMax = max(color.r, color.g);\nfloat rgbMax = max(rgMax, color.b);\ncolor.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\ncolor.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\ncolor.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\ngl_FragColor = color;\n}",
                        saturation: 0,
                        mainParameter: "saturation",
                        applyTo2d: function(t) {
                            if (0 !== this.saturation) {
                                var e, i, r = t.imageData.data,
                                    n = r.length,
                                    o = -this.saturation;
                                for (e = 0; e < n; e += 4) i = Math.max(r[e], r[e + 1], r[e + 2]), r[e] += i !== r[e] ? (i - r[e]) * o : 0, r[e + 1] += i !== r[e + 1] ? (i - r[e + 1]) * o : 0, r[e + 2] += i !== r[e + 2] ? (i - r[e + 2]) * o : 0
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uSaturation: t.getUniformLocation(e, "uSaturation")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uSaturation, -this.saturation)
                        }
                    }), e.Image.filters.Saturation.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Vibrance = r(i.BaseFilter, {
                        type: "Vibrance",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform float uVibrance;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nfloat max = max(color.r, max(color.g, color.b));\nfloat avg = (color.r + color.g + color.b) / 3.0;\nfloat amt = (abs(max - avg) * 2.0) * uVibrance;\ncolor.r += max != color.r ? (max - color.r) * amt : 0.00;\ncolor.g += max != color.g ? (max - color.g) * amt : 0.00;\ncolor.b += max != color.b ? (max - color.b) * amt : 0.00;\ngl_FragColor = color;\n}",
                        vibrance: 0,
                        mainParameter: "vibrance",
                        applyTo2d: function(t) {
                            if (0 !== this.vibrance) {
                                var e, i, r, n, o = t.imageData.data,
                                    a = o.length,
                                    s = -this.vibrance;
                                for (e = 0; e < a; e += 4) i = Math.max(o[e], o[e + 1], o[e + 2]), r = (o[e] + o[e + 1] + o[e + 2]) / 3, n = 2 * Math.abs(i - r) / 255 * s, o[e] += i !== o[e] ? (i - o[e]) * n : 0, o[e + 1] += i !== o[e + 1] ? (i - o[e + 1]) * n : 0, o[e + 2] += i !== o[e + 2] ? (i - o[e + 2]) * n : 0
                            }
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uVibrance: t.getUniformLocation(e, "uVibrance")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform1f(e.uVibrance, -this.vibrance)
                        }
                    }), e.Image.filters.Vibrance.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Blur = r(i.BaseFilter, {
                        type: "Blur",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform vec2 uDelta;\nvarying vec2 vTexCoord;\nconst float nSamples = 15.0;\nvec3 v3offset = vec3(12.9898, 78.233, 151.7182);\nfloat random(vec3 scale) {\nreturn fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n}\nvoid main() {\nvec4 color = vec4(0.0);\nfloat total = 0.0;\nfloat offset = random(v3offset);\nfor (float t = -nSamples; t <= nSamples; t++) {\nfloat percent = (t + offset - 0.5) / nSamples;\nfloat weight = 1.0 - abs(percent);\ncolor += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}",
                        blur: 0,
                        mainParameter: "blur",
                        applyTo: function(t) {
                            t.webgl ? (this.aspectRatio = t.sourceWidth / t.sourceHeight, t.passes++, this._setupFrameBuffer(t), this.horizontal = !0, this.applyToWebGL(t), this._swapTextures(t), this._setupFrameBuffer(t), this.horizontal = !1, this.applyToWebGL(t), this._swapTextures(t)) : this.applyTo2d(t)
                        },
                        applyTo2d: function(t) {
                            t.imageData = this.simpleBlur(t)
                        },
                        simpleBlur: function(t) {
                            var i, r, n = t.filterBackend.resources,
                                o = t.imageData.width,
                                a = t.imageData.height;
                            n.blurLayer1 || (n.blurLayer1 = e.util.createCanvasElement(), n.blurLayer2 = e.util.createCanvasElement()), i = n.blurLayer1, r = n.blurLayer2, i.width === o && i.height === a || (r.width = i.width = o, r.height = i.height = a);
                            var s, l, h, c, u = i.getContext("2d"),
                                f = r.getContext("2d"),
                                d = 15,
                                p = .06 * this.blur * .5;
                            for (u.putImageData(t.imageData, 0, 0), f.clearRect(0, 0, o, a), c = -15; c <= d; c++) h = p * (l = c / d) * o + (s = (Math.random() - .5) / 4), f.globalAlpha = 1 - Math.abs(l), f.drawImage(i, h, s), u.drawImage(r, 0, 0), f.globalAlpha = 1, f.clearRect(0, 0, r.width, r.height);
                            for (c = -15; c <= d; c++) h = p * (l = c / d) * a + (s = (Math.random() - .5) / 4), f.globalAlpha = 1 - Math.abs(l), f.drawImage(i, s, h), u.drawImage(r, 0, 0), f.globalAlpha = 1, f.clearRect(0, 0, r.width, r.height);
                            t.ctx.drawImage(i, 0, 0);
                            var g = t.ctx.getImageData(0, 0, i.width, i.height);
                            return u.globalAlpha = 1, u.clearRect(0, 0, i.width, i.height), g
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                delta: t.getUniformLocation(e, "uDelta")
                            }
                        },
                        sendUniformData: function(t, e) {
                            var i = this.chooseRightDelta();
                            t.uniform2fv(e.delta, i)
                        },
                        chooseRightDelta: function() {
                            var t, e = 1,
                                i = [0, 0];
                            return this.horizontal ? this.aspectRatio > 1 && (e = 1 / this.aspectRatio) : this.aspectRatio < 1 && (e = this.aspectRatio), t = e * this.blur * .12, this.horizontal ? i[0] = t : i[1] = t, i
                        }
                    }), i.Blur.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Gamma = r(i.BaseFilter, {
                        type: "Gamma",
                        fragmentSource: "precision highp float;\nuniform sampler2D uTexture;\nuniform vec3 uGamma;\nvarying vec2 vTexCoord;\nvoid main() {\nvec4 color = texture2D(uTexture, vTexCoord);\nvec3 correction = (1.0 / uGamma);\ncolor.r = pow(color.r, correction.r);\ncolor.g = pow(color.g, correction.g);\ncolor.b = pow(color.b, correction.b);\ngl_FragColor = color;\ngl_FragColor.rgb *= color.a;\n}",
                        gamma: [1, 1, 1],
                        mainParameter: "gamma",
                        initialize: function(t) {
                            this.gamma = [1, 1, 1], i.BaseFilter.prototype.initialize.call(this, t)
                        },
                        applyTo2d: function(t) {
                            var e, i = t.imageData.data,
                                r = this.gamma,
                                n = i.length,
                                o = 1 / r[0],
                                a = 1 / r[1],
                                s = 1 / r[2];
                            for (this.rVals || (this.rVals = new Uint8Array(256), this.gVals = new Uint8Array(256), this.bVals = new Uint8Array(256)), e = 0, n = 256; e < n; e++) this.rVals[e] = 255 * Math.pow(e / 255, o), this.gVals[e] = 255 * Math.pow(e / 255, a), this.bVals[e] = 255 * Math.pow(e / 255, s);
                            for (e = 0, n = i.length; e < n; e += 4) i[e] = this.rVals[i[e]], i[e + 1] = this.gVals[i[e + 1]], i[e + 2] = this.bVals[i[e + 2]]
                        },
                        getUniformLocations: function(t, e) {
                            return {
                                uGamma: t.getUniformLocation(e, "uGamma")
                            }
                        },
                        sendUniformData: function(t, e) {
                            t.uniform3fv(e.uGamma, this.gamma)
                        }
                    }), e.Image.filters.Gamma.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.Composed = r(i.BaseFilter, {
                        type: "Composed",
                        subFilters: [],
                        initialize: function(t) {
                            this.callSuper("initialize", t), this.subFilters = this.subFilters.slice(0)
                        },
                        applyTo: function(t) {
                            t.passes += this.subFilters.length - 1, this.subFilters.forEach((function(e) {
                                e.applyTo(t)
                            }))
                        },
                        toObject: function() {
                            return e.util.object.extend(this.callSuper("toObject"), {
                                subFilters: this.subFilters.map((function(t) {
                                    return t.toObject()
                                }))
                            })
                        },
                        isNeutralState: function() {
                            return !this.subFilters.some((function(t) {
                                return !t.isNeutralState()
                            }))
                        }
                    }), e.Image.filters.Composed.fromObject = function(t, i) {
                        var r = (t.subFilters || []).map((function(t) {
                                return new e.Image.filters[t.type](t)
                            })),
                            n = new e.Image.filters.Composed({
                                subFilters: r
                            });
                        return i && i(n), n
                    }
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.Image.filters,
                        r = e.util.createClass;
                    i.HueRotation = r(i.ColorMatrix, {
                        type: "HueRotation",
                        rotation: 0,
                        mainParameter: "rotation",
                        calculateMatrix: function() {
                            var t = this.rotation * Math.PI,
                                i = e.util.cos(t),
                                r = e.util.sin(t),
                                n = 1 / 3,
                                o = Math.sqrt(n) * r,
                                a = 1 - i;
                            this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], this.matrix[0] = i + a / 3, this.matrix[1] = n * a - o, this.matrix[2] = n * a + o, this.matrix[5] = n * a + o, this.matrix[6] = i + n * a, this.matrix[7] = n * a - o, this.matrix[10] = n * a - o, this.matrix[11] = n * a + o, this.matrix[12] = i + n * a
                        },
                        isNeutralState: function(t) {
                            return this.calculateMatrix(), i.BaseFilter.prototype.isNeutralState.call(this, t)
                        },
                        applyTo: function(t) {
                            this.calculateMatrix(), i.BaseFilter.prototype.applyTo.call(this, t)
                        }
                    }), e.Image.filters.HueRotation.fromObject = e.Image.filters.BaseFilter.fromObject
                }(e),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {}),
                        i = e.util.object.clone;
                    if (e.Text) e.warn("fabric.Text is already defined");
                    else {
                        var r = "fontFamily fontWeight fontSize text underline overline linethrough textAlign fontStyle lineHeight textBackgroundColor charSpacing styles direction path pathStartOffset pathSide".split(" ");
                        e.Text = e.util.createClass(e.Object, {
                            _dimensionAffectingProps: ["fontSize", "fontWeight", "fontFamily", "fontStyle", "lineHeight", "text", "charSpacing", "textAlign", "styles", "path", "pathStartOffset", "pathSide"],
                            _reNewline: /\r?\n/,
                            _reSpacesAndTabs: /[ \t\r]/g,
                            _reSpaceAndTab: /[ \t\r]/,
                            _reWords: /\S+/g,
                            type: "text",
                            fontSize: 40,
                            fontWeight: "normal",
                            fontFamily: "Times New Roman",
                            underline: !1,
                            overline: !1,
                            linethrough: !1,
                            textAlign: "left",
                            fontStyle: "normal",
                            lineHeight: 1.16,
                            superscript: {
                                size: .6,
                                baseline: -.35
                            },
                            subscript: {
                                size: .6,
                                baseline: .11
                            },
                            textBackgroundColor: "",
                            stateProperties: e.Object.prototype.stateProperties.concat(r),
                            cacheProperties: e.Object.prototype.cacheProperties.concat(r),
                            stroke: null,
                            shadow: null,
                            path: null,
                            pathStartOffset: 0,
                            pathSide: "left",
                            _fontSizeFraction: .222,
                            offsets: {
                                underline: .1,
                                linethrough: -.315,
                                overline: -.88
                            },
                            _fontSizeMult: 1.13,
                            charSpacing: 0,
                            styles: null,
                            _measuringContext: null,
                            deltaY: 0,
                            direction: "ltr",
                            _styleProperties: ["stroke", "strokeWidth", "fill", "fontFamily", "fontSize", "fontWeight", "fontStyle", "underline", "overline", "linethrough", "deltaY", "textBackgroundColor"],
                            __charBounds: [],
                            CACHE_FONT_SIZE: 400,
                            MIN_TEXT_WIDTH: 2,
                            initialize: function(t, e) {
                                this.styles = e && e.styles || {}, this.text = t, this.__skipDimension = !0, this.callSuper("initialize", e), this.path && this.setPathInfo(), this.__skipDimension = !1, this.initDimensions(), this.setCoords(), this.setupState({
                                    propertySet: "_dimensionAffectingProps"
                                })
                            },
                            setPathInfo: function() {
                                var t = this.path;
                                t && (t.segmentsInfo = e.util.getPathSegmentsInfo(t.path))
                            },
                            getMeasuringContext: function() {
                                return e._measuringContext || (e._measuringContext = this.canvas && this.canvas.contextCache || e.util.createCanvasElement().getContext("2d")), e._measuringContext
                            },
                            _splitText: function() {
                                var t = this._splitTextIntoLines(this.text);
                                return this.textLines = t.lines, this._textLines = t.graphemeLines, this._unwrappedTextLines = t._unwrappedLines, this._text = t.graphemeText, t
                            },
                            initDimensions: function() {
                                this.__skipDimension || (this._splitText(), this._clearCache(), this.path ? (this.width = this.path.width, this.height = this.path.height) : (this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH, this.height = this.calcTextHeight()), -1 !== this.textAlign.indexOf("justify") && this.enlargeSpaces(), this.saveState({
                                    propertySet: "_dimensionAffectingProps"
                                }))
                            },
                            enlargeSpaces: function() {
                                for (var t, e, i, r, n, o, a, s = 0, l = this._textLines.length; s < l; s++)
                                    if (("justify" === this.textAlign || s !== l - 1 && !this.isEndOfWrapping(s)) && (r = 0, n = this._textLines[s], (e = this.getLineWidth(s)) < this.width && (a = this.textLines[s].match(this._reSpacesAndTabs)))) {
                                        i = a.length, t = (this.width - e) / i;
                                        for (var h = 0, c = n.length; h <= c; h++) o = this.__charBounds[s][h], this._reSpaceAndTab.test(n[h]) ? (o.width += t, o.kernedWidth += t, o.left += r, r += t) : o.left += r
                                    }
                            },
                            isEndOfWrapping: function(t) {
                                return t === this._textLines.length - 1
                            },
                            missingNewlineOffset: function() {
                                return 1
                            },
                            toString: function() {
                                return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>'
                            },
                            _getCacheCanvasDimensions: function() {
                                var t = this.callSuper("_getCacheCanvasDimensions"),
                                    e = this.fontSize;
                                return t.width += e * t.zoomX, t.height += e * t.zoomY, t
                            },
                            _render: function(t) {
                                var e = this.path;
                                e && !e.isNotVisible() && e._render(t), this._setTextStyles(t), this._renderTextLinesBackground(t), this._renderTextDecoration(t, "underline"), this._renderText(t), this._renderTextDecoration(t, "overline"), this._renderTextDecoration(t, "linethrough")
                            },
                            _renderText: function(t) {
                                "stroke" === this.paintFirst ? (this._renderTextStroke(t), this._renderTextFill(t)) : (this._renderTextFill(t), this._renderTextStroke(t))
                            },
                            _setTextStyles: function(t, e, i) {
                                t.textBaseline = "alphabetic", t.font = this._getFontDeclaration(e, i)
                            },
                            calcTextWidth: function() {
                                for (var t = this.getLineWidth(0), e = 1, i = this._textLines.length; e < i; e++) {
                                    var r = this.getLineWidth(e);
                                    r > t && (t = r)
                                }
                                return t
                            },
                            _renderTextLine: function(t, e, i, r, n, o) {
                                this._renderChars(t, e, i, r, n, o)
                            },
                            _renderTextLinesBackground: function(t) {
                                if (this.textBackgroundColor || this.styleHas("textBackgroundColor")) {
                                    for (var e, i, r, n, o, a, s, l = t.fillStyle, h = this._getLeftOffset(), c = this._getTopOffset(), u = 0, f = 0, d = this.path, p = 0, g = this._textLines.length; p < g; p++)
                                        if (e = this.getHeightOfLine(p), this.textBackgroundColor || this.styleHas("textBackgroundColor", p)) {
                                            r = this._textLines[p], i = this._getLineLeftOffset(p), f = 0, u = 0, n = this.getValueOfPropertyAt(p, 0, "textBackgroundColor");
                                            for (var v = 0, m = r.length; v < m; v++) o = this.__charBounds[p][v], a = this.getValueOfPropertyAt(p, v, "textBackgroundColor"), d ? (t.save(), t.translate(o.renderLeft, o.renderTop), t.rotate(o.angle), t.fillStyle = a, a && t.fillRect(-o.width / 2, -e / this.lineHeight * (1 - this._fontSizeFraction), o.width, e / this.lineHeight), t.restore()) : a !== n ? (s = h + i + u, "rtl" === this.direction && (s = this.width - s - f), t.fillStyle = n, n && t.fillRect(s, c, f, e / this.lineHeight), u = o.left, f = o.width, n = a) : f += o.kernedWidth;
                                            a && !d && (s = h + i + u, "rtl" === this.direction && (s = this.width - s - f), t.fillStyle = a, t.fillRect(s, c, f, e / this.lineHeight)), c += e
                                        } else c += e;
                                    t.fillStyle = l, this._removeShadow(t)
                                }
                            },
                            getFontCache: function(t) {
                                var i = t.fontFamily.toLowerCase();
                                e.charWidthsCache[i] || (e.charWidthsCache[i] = {});
                                var r = e.charWidthsCache[i],
                                    n = t.fontStyle.toLowerCase() + "_" + (t.fontWeight + "").toLowerCase();
                                return r[n] || (r[n] = {}), r[n]
                            },
                            _measureChar: function(t, e, i, r) {
                                var n, o, a, s, l = this.getFontCache(e),
                                    h = i + t,
                                    c = this._getFontDeclaration(e) === this._getFontDeclaration(r),
                                    u = e.fontSize / this.CACHE_FONT_SIZE;
                                if (i && void 0 !== l[i] && (a = l[i]), void 0 !== l[t] && (s = n = l[t]), c && void 0 !== l[h] && (s = (o = l[h]) - a), void 0 === n || void 0 === a || void 0 === o) {
                                    var f = this.getMeasuringContext();
                                    this._setTextStyles(f, e, !0)
                                }
                                return void 0 === n && (s = n = f.measureText(t).width, l[t] = n), void 0 === a && c && i && (a = f.measureText(i).width, l[i] = a), c && void 0 === o && (o = f.measureText(h).width, l[h] = o, s = o - a), {
                                    width: n * u,
                                    kernedWidth: s * u
                                }
                            },
                            getHeightOfChar: function(t, e) {
                                return this.getValueOfPropertyAt(t, e, "fontSize")
                            },
                            measureLine: function(t) {
                                var e = this._measureLine(t);
                                return 0 !== this.charSpacing && (e.width -= this._getWidthOfCharSpacing()), e.width < 0 && (e.width = 0), e
                            },
                            _measureLine: function(t) {
                                var i, r, n, o, a, s, l = 0,
                                    h = this._textLines[t],
                                    c = new Array(h.length),
                                    u = 0,
                                    f = this.path,
                                    d = "right" === this.pathSide;
                                for (this.__charBounds[t] = c, i = 0; i < h.length; i++) r = h[i], o = this._getGraphemeBox(r, t, i, n), c[i] = o, l += o.kernedWidth, n = r;
                                if (c[i] = {
                                        left: o ? o.left + o.width : 0,
                                        width: 0,
                                        kernedWidth: 0,
                                        height: this.fontSize
                                    }, f) {
                                    switch (s = f.segmentsInfo[f.segmentsInfo.length - 1].length, (a = e.util.getPointOnPath(f.path, 0, f.segmentsInfo)).x += f.pathOffset.x, a.y += f.pathOffset.y, this.textAlign) {
                                        case "left":
                                            u = d ? s - l : 0;
                                            break;
                                        case "center":
                                            u = (s - l) / 2;
                                            break;
                                        case "right":
                                            u = d ? 0 : s - l
                                    }
                                    for (u += this.pathStartOffset * (d ? -1 : 1), i = d ? h.length - 1 : 0; d ? i >= 0 : i < h.length; d ? i-- : i++) o = c[i], u > s ? u %= s : u < 0 && (u += s), this._setGraphemeOnPath(u, o, a), u += o.kernedWidth
                                }
                                return {
                                    width: l,
                                    numOfSpaces: 0
                                }
                            },
                            _setGraphemeOnPath: function(t, i, r) {
                                var n = t + i.kernedWidth / 2,
                                    o = this.path,
                                    a = e.util.getPointOnPath(o.path, n, o.segmentsInfo);
                                i.renderLeft = a.x - r.x, i.renderTop = a.y - r.y, i.angle = a.angle + ("right" === this.pathSide ? Math.PI : 0)
                            },
                            _getGraphemeBox: function(t, e, i, r, n) {
                                var o, a = this.getCompleteStyleDeclaration(e, i),
                                    s = r ? this.getCompleteStyleDeclaration(e, i - 1) : {},
                                    l = this._measureChar(t, a, r, s),
                                    h = l.kernedWidth,
                                    c = l.width;
                                0 !== this.charSpacing && (c += o = this._getWidthOfCharSpacing(), h += o);
                                var u = {
                                    width: c,
                                    left: 0,
                                    height: a.fontSize,
                                    kernedWidth: h,
                                    deltaY: a.deltaY
                                };
                                if (i > 0 && !n) {
                                    var f = this.__charBounds[e][i - 1];
                                    u.left = f.left + f.width + l.kernedWidth - l.width
                                }
                                return u
                            },
                            getHeightOfLine: function(t) {
                                if (this.__lineHeights[t]) return this.__lineHeights[t];
                                for (var e = this._textLines[t], i = this.getHeightOfChar(t, 0), r = 1, n = e.length; r < n; r++) i = Math.max(this.getHeightOfChar(t, r), i);
                                return this.__lineHeights[t] = i * this.lineHeight * this._fontSizeMult
                            },
                            calcTextHeight: function() {
                                for (var t, e = 0, i = 0, r = this._textLines.length; i < r; i++) t = this.getHeightOfLine(i), e += i === r - 1 ? t / this.lineHeight : t;
                                return e
                            },
                            _getLeftOffset: function() {
                                return "ltr" === this.direction ? -this.width / 2 : this.width / 2
                            },
                            _getTopOffset: function() {
                                return -this.height / 2
                            },
                            _renderTextCommon: function(t, e) {
                                t.save();
                                for (var i = 0, r = this._getLeftOffset(), n = this._getTopOffset(), o = 0, a = this._textLines.length; o < a; o++) {
                                    var s = this.getHeightOfLine(o),
                                        l = s / this.lineHeight,
                                        h = this._getLineLeftOffset(o);
                                    this._renderTextLine(e, t, this._textLines[o], r + h, n + i + l, o), i += s
                                }
                                t.restore()
                            },
                            _renderTextFill: function(t) {
                                (this.fill || this.styleHas("fill")) && this._renderTextCommon(t, "fillText")
                            },
                            _renderTextStroke: function(t) {
                                (this.stroke && 0 !== this.strokeWidth || !this.isEmptyStyles()) && (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this._setLineDash(t, this.strokeDashArray), t.beginPath(), this._renderTextCommon(t, "strokeText"), t.closePath(), t.restore())
                            },
                            _renderChars: function(t, e, i, r, n, o) {
                                var a, s, l, h, c, u = this.getHeightOfLine(o),
                                    f = -1 !== this.textAlign.indexOf("justify"),
                                    d = "",
                                    p = 0,
                                    g = this.path,
                                    v = !f && 0 === this.charSpacing && this.isEmptyStyles(o) && !g,
                                    m = "ltr" === this.direction,
                                    y = "ltr" === this.direction ? 1 : -1;
                                if (e.save(), n -= u * this._fontSizeFraction / this.lineHeight, v) return e.canvas.setAttribute("dir", m ? "ltr" : "rtl"), e.direction = m ? "ltr" : "rtl", e.textAlign = m ? "left" : "right", this._renderChar(t, e, o, 0, i.join(""), r, n, u), void e.restore();
                                for (var b = 0, x = i.length - 1; b <= x; b++) h = b === x || this.charSpacing || g, d += i[b], l = this.__charBounds[o][b], 0 === p ? (r += y * (l.kernedWidth - l.width), p += l.width) : p += l.kernedWidth, f && !h && this._reSpaceAndTab.test(i[b]) && (h = !0), h || (a = a || this.getCompleteStyleDeclaration(o, b), s = this.getCompleteStyleDeclaration(o, b + 1), h = this._hasStyleChanged(a, s)), h && (g ? (e.save(), e.translate(l.renderLeft, l.renderTop), e.rotate(l.angle), this._renderChar(t, e, o, b, d, -p / 2, 0, u), e.restore()) : (c = r, e.canvas.setAttribute("dir", m ? "ltr" : "rtl"), e.direction = m ? "ltr" : "rtl", e.textAlign = m ? "left" : "right", this._renderChar(t, e, o, b, d, c, n, u)), d = "", a = s, r += y * p, p = 0);
                                e.restore()
                            },
                            _applyPatternGradientTransformText: function(t) {
                                var i, r = e.util.createCanvasElement(),
                                    n = this.width + this.strokeWidth,
                                    o = this.height + this.strokeWidth;
                                return r.width = n, r.height = o, (i = r.getContext("2d")).beginPath(), i.moveTo(0, 0), i.lineTo(n, 0), i.lineTo(n, o), i.lineTo(0, o), i.closePath(), i.translate(n / 2, o / 2), i.fillStyle = t.toLive(i), this._applyPatternGradientTransform(i, t), i.fill(), i.createPattern(r, "no-repeat")
                            },
                            handleFiller: function(t, e, i) {
                                var r, n;
                                return i.toLive ? "percentage" === i.gradientUnits || i.gradientTransform || i.patternTransform ? (r = -this.width / 2, n = -this.height / 2, t.translate(r, n), t[e] = this._applyPatternGradientTransformText(i), {
                                    offsetX: r,
                                    offsetY: n
                                }) : (t[e] = i.toLive(t, this), this._applyPatternGradientTransform(t, i)) : (t[e] = i, {
                                    offsetX: 0,
                                    offsetY: 0
                                })
                            },
                            _setStrokeStyles: function(t, e) {
                                return t.lineWidth = e.strokeWidth, t.lineCap = this.strokeLineCap, t.lineDashOffset = this.strokeDashOffset, t.lineJoin = this.strokeLineJoin, t.miterLimit = this.strokeMiterLimit, this.handleFiller(t, "strokeStyle", e.stroke)
                            },
                            _setFillStyles: function(t, e) {
                                return this.handleFiller(t, "fillStyle", e.fill)
                            },
                            _renderChar: function(t, e, i, r, n, o, a) {
                                var s, l, h = this._getStyleDeclaration(i, r),
                                    c = this.getCompleteStyleDeclaration(i, r),
                                    u = "fillText" === t && c.fill,
                                    f = "strokeText" === t && c.stroke && c.strokeWidth;
                                (f || u) && (e.save(), u && (s = this._setFillStyles(e, c)), f && (l = this._setStrokeStyles(e, c)), e.font = this._getFontDeclaration(c), h && h.textBackgroundColor && this._removeShadow(e), h && h.deltaY && (a += h.deltaY), u && e.fillText(n, o - s.offsetX, a - s.offsetY), f && e.strokeText(n, o - l.offsetX, a - l.offsetY), e.restore())
                            },
                            setSuperscript: function(t, e) {
                                return this._setScript(t, e, this.superscript)
                            },
                            setSubscript: function(t, e) {
                                return this._setScript(t, e, this.subscript)
                            },
                            _setScript: function(t, e, i) {
                                var r = this.get2DCursorLocation(t, !0),
                                    n = this.getValueOfPropertyAt(r.lineIndex, r.charIndex, "fontSize"),
                                    o = this.getValueOfPropertyAt(r.lineIndex, r.charIndex, "deltaY"),
                                    a = {
                                        fontSize: n * i.size,
                                        deltaY: o + n * i.baseline
                                    };
                                return this.setSelectionStyles(a, t, e), this
                            },
                            _hasStyleChanged: function(t, e) {
                                return t.fill !== e.fill || t.stroke !== e.stroke || t.strokeWidth !== e.strokeWidth || t.fontSize !== e.fontSize || t.fontFamily !== e.fontFamily || t.fontWeight !== e.fontWeight || t.fontStyle !== e.fontStyle || t.deltaY !== e.deltaY
                            },
                            _hasStyleChangedForSvg: function(t, e) {
                                return this._hasStyleChanged(t, e) || t.overline !== e.overline || t.underline !== e.underline || t.linethrough !== e.linethrough
                            },
                            _getLineLeftOffset: function(t) {
                                var e = this.getLineWidth(t),
                                    i = this.width - e,
                                    r = this.textAlign,
                                    n = this.direction,
                                    o = 0,
                                    a = this.isEndOfWrapping(t);
                                return "justify" === r || "justify-center" === r && !a || "justify-right" === r && !a || "justify-left" === r && !a ? 0 : ("center" === r && (o = i / 2), "right" === r && (o = i), "justify-center" === r && (o = i / 2), "justify-right" === r && (o = i), "rtl" === n && (o -= i), o)
                            },
                            _clearCache: function() {
                                this.__lineWidths = [], this.__lineHeights = [], this.__charBounds = []
                            },
                            _shouldClearDimensionCache: function() {
                                var t = this._forceClearCache;
                                return t || (t = this.hasStateChanged("_dimensionAffectingProps")), t && (this.dirty = !0, this._forceClearCache = !1), t
                            },
                            getLineWidth: function(t) {
                                return this.__lineWidths[t] ? this.__lineWidths[t] : (e = "" === this._textLines[t] ? 0 : this.measureLine(t).width, this.__lineWidths[t] = e, e);
                                var e
                            },
                            _getWidthOfCharSpacing: function() {
                                return 0 !== this.charSpacing ? this.fontSize * this.charSpacing / 1e3 : 0
                            },
                            getValueOfPropertyAt: function(t, e, i) {
                                var r = this._getStyleDeclaration(t, e);
                                return r && void 0 !== r[i] ? r[i] : this[i]
                            },
                            _renderTextDecoration: function(t, e) {
                                if (this[e] || this.styleHas(e)) {
                                    for (var i, r, n, o, a, s, l, h, c, u, f, d, p, g, v, m, y = this._getLeftOffset(), b = this._getTopOffset(), x = this.path, _ = this._getWidthOfCharSpacing(), w = this.offsets[e], S = 0, C = this._textLines.length; S < C; S++)
                                        if (i = this.getHeightOfLine(S), this[e] || this.styleHas(e, S)) {
                                            l = this._textLines[S], g = i / this.lineHeight, o = this._getLineLeftOffset(S), u = 0, f = 0, h = this.getValueOfPropertyAt(S, 0, e), m = this.getValueOfPropertyAt(S, 0, "fill"), c = b + g * (1 - this._fontSizeFraction), r = this.getHeightOfChar(S, 0), a = this.getValueOfPropertyAt(S, 0, "deltaY");
                                            for (var T = 0, E = l.length; T < E; T++)
                                                if (d = this.__charBounds[S][T], p = this.getValueOfPropertyAt(S, T, e), v = this.getValueOfPropertyAt(S, T, "fill"), n = this.getHeightOfChar(S, T), s = this.getValueOfPropertyAt(S, T, "deltaY"), x && p && v) t.save(), t.fillStyle = m, t.translate(d.renderLeft, d.renderTop), t.rotate(d.angle), t.fillRect(-d.kernedWidth / 2, w * n + s, d.kernedWidth, this.fontSize / 15), t.restore();
                                                else if ((p !== h || v !== m || n !== r || s !== a) && f > 0) {
                                                var k = y + o + u;
                                                "rtl" === this.direction && (k = this.width - k - f), h && m && (t.fillStyle = m, t.fillRect(k, c + w * r + a, f, this.fontSize / 15)), u = d.left, f = d.width, h = p, m = v, r = n, a = s
                                            } else f += d.kernedWidth;
                                            k = y + o + u;
                                            "rtl" === this.direction && (k = this.width - k - f), t.fillStyle = v, p && v && t.fillRect(k, c + w * r + a, f - _, this.fontSize / 15), b += i
                                        } else b += i;
                                    this._removeShadow(t)
                                }
                            },
                            _getFontDeclaration: function(t, i) {
                                var r = t || this,
                                    n = this.fontFamily,
                                    o = e.Text.genericFonts.indexOf(n.toLowerCase()) > -1,
                                    a = void 0 === n || n.indexOf("'") > -1 || n.indexOf(",") > -1 || n.indexOf('"') > -1 || o ? r.fontFamily : '"' + r.fontFamily + '"';
                                return [e.isLikelyNode ? r.fontWeight : r.fontStyle, e.isLikelyNode ? r.fontStyle : r.fontWeight, i ? this.CACHE_FONT_SIZE + "px" : r.fontSize + "px", a].join(" ")
                            },
                            render: function(t) {
                                this.visible && (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen() || (this._shouldClearDimensionCache() && this.initDimensions(), this.callSuper("render", t)))
                            },
                            _splitTextIntoLines: function(t) {
                                for (var i = t.split(this._reNewline), r = new Array(i.length), n = ["\n"], o = [], a = 0; a < i.length; a++) r[a] = e.util.string.graphemeSplit(i[a]), o = o.concat(r[a], n);
                                return o.pop(), {
                                    _unwrappedLines: r,
                                    lines: i,
                                    graphemeText: o,
                                    graphemeLines: r
                                }
                            },
                            toObject: function(t) {
                                var e = r.concat(t),
                                    n = this.callSuper("toObject", e);
                                return n.styles = i(this.styles, !0), n.path && (n.path = this.path.toObject()), n
                            },
                            set: function(t, e) {
                                this.callSuper("set", t, e);
                                var i = !1,
                                    r = !1;
                                if ("object" == typeof t)
                                    for (var n in t) "path" === n && this.setPathInfo(), i = i || -1 !== this._dimensionAffectingProps.indexOf(n), r = r || "path" === n;
                                else i = -1 !== this._dimensionAffectingProps.indexOf(t), r = "path" === t;
                                return r && this.setPathInfo(), i && (this.initDimensions(), this.setCoords()), this
                            },
                            complexity: function() {
                                return 1
                            }
                        }), e.Text.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor".split(" ")), e.Text.DEFAULT_SVG_FONT_SIZE = 16, e.Text.fromElement = function(t, r, n) {
                            if (!t) return r(null);
                            var o = e.parseAttributes(t, e.Text.ATTRIBUTE_NAMES),
                                a = o.textAnchor || "left";
                            if ((n = e.util.object.extend(n ? i(n) : {}, o)).top = n.top || 0, n.left = n.left || 0, o.textDecoration) {
                                var s = o.textDecoration; - 1 !== s.indexOf("underline") && (n.underline = !0), -1 !== s.indexOf("overline") && (n.overline = !0), -1 !== s.indexOf("line-through") && (n.linethrough = !0), delete n.textDecoration
                            }
                            "dx" in o && (n.left += o.dx), "dy" in o && (n.top += o.dy), "fontSize" in n || (n.fontSize = e.Text.DEFAULT_SVG_FONT_SIZE);
                            var l = "";
                            "textContent" in t ? l = t.textContent : "firstChild" in t && null !== t.firstChild && "data" in t.firstChild && null !== t.firstChild.data && (l = t.firstChild.data), l = l.replace(/^\s+|\s+$|\n+/g, "").replace(/\s+/g, " ");
                            var h = n.strokeWidth;
                            n.strokeWidth = 0;
                            var c = new e.Text(l, n),
                                u = c.getScaledHeight() / c.height,
                                f = ((c.height + c.strokeWidth) * c.lineHeight - c.height) * u,
                                d = c.getScaledHeight() + f,
                                p = 0;
                            "center" === a && (p = c.getScaledWidth() / 2), "right" === a && (p = c.getScaledWidth()), c.set({
                                left: c.left - p,
                                top: c.top - (d - c.fontSize * (.07 + c._fontSizeFraction)) / c.lineHeight,
                                strokeWidth: void 0 !== h ? h : 1
                            }), r(c)
                        }, e.Text.fromObject = function(t, r) {
                            var n = i(t),
                                o = t.path;
                            return delete n.path, e.Object._fromObject("Text", n, (function(t) {
                                o ? e.Object._fromObject("Path", o, (function(e) {
                                    t.set("path", e), r(t)
                                }), "path") : r(t)
                            }), "text")
                        }, e.Text.genericFonts = ["sans-serif", "serif", "cursive", "fantasy", "monospace"], e.util.createAccessors && e.util.createAccessors(e.Text)
                    }
                }(e), T.util.object.extend(T.Text.prototype, {
                    isEmptyStyles: function(t) {
                        if (!this.styles) return !0;
                        if (void 0 !== t && !this.styles[t]) return !0;
                        var e = void 0 === t ? this.styles : {
                            line: this.styles[t]
                        };
                        for (var i in e)
                            for (var r in e[i])
                                for (var n in e[i][r]) return !1;
                        return !0
                    },
                    styleHas: function(t, e) {
                        if (!this.styles || !t || "" === t) return !1;
                        if (void 0 !== e && !this.styles[e]) return !1;
                        var i = void 0 === e ? this.styles : {
                            0: this.styles[e]
                        };
                        for (var r in i)
                            for (var n in i[r])
                                if (void 0 !== i[r][n][t]) return !0;
                        return !1
                    },
                    cleanStyle: function(t) {
                        if (!this.styles || !t || "" === t) return !1;
                        var e, i, r = this.styles,
                            n = 0,
                            o = !0,
                            a = 0;
                        for (var s in r) {
                            for (var l in e = 0, r[s]) {
                                var h;
                                n++, (h = r[s][l]).hasOwnProperty(t) ? (i ? h[t] !== i && (o = !1) : i = h[t], h[t] === this[t] && delete h[t]) : o = !1, 0 !== Object.keys(h).length ? e++ : delete r[s][l]
                            }
                            0 === e && delete r[s]
                        }
                        for (var c = 0; c < this._textLines.length; c++) a += this._textLines[c].length;
                        o && n === a && (this[t] = i, this.removeStyle(t))
                    },
                    removeStyle: function(t) {
                        if (this.styles && t && "" !== t) {
                            var e, i, r, n = this.styles;
                            for (i in n) {
                                for (r in e = n[i]) delete e[r][t], 0 === Object.keys(e[r]).length && delete e[r];
                                0 === Object.keys(e).length && delete n[i]
                            }
                        }
                    },
                    _extendStyles: function(t, e) {
                        var i = this.get2DCursorLocation(t);
                        this._getLineStyle(i.lineIndex) || this._setLineStyle(i.lineIndex), this._getStyleDeclaration(i.lineIndex, i.charIndex) || this._setStyleDeclaration(i.lineIndex, i.charIndex, {}), T.util.object.extend(this._getStyleDeclaration(i.lineIndex, i.charIndex), e)
                    },
                    get2DCursorLocation: function(t, e) {
                        void 0 === t && (t = this.selectionStart);
                        for (var i = e ? this._unwrappedTextLines : this._textLines, r = i.length, n = 0; n < r; n++) {
                            if (t <= i[n].length) return {
                                lineIndex: n,
                                charIndex: t
                            };
                            t -= i[n].length + this.missingNewlineOffset(n)
                        }
                        return {
                            lineIndex: n - 1,
                            charIndex: i[n - 1].length < t ? i[n - 1].length : t
                        }
                    },
                    getSelectionStyles: function(t, e, i) {
                        void 0 === t && (t = this.selectionStart || 0), void 0 === e && (e = this.selectionEnd || t);
                        for (var r = [], n = t; n < e; n++) r.push(this.getStyleAtPosition(n, i));
                        return r
                    },
                    getStyleAtPosition: function(t, e) {
                        var i = this.get2DCursorLocation(t);
                        return (e ? this.getCompleteStyleDeclaration(i.lineIndex, i.charIndex) : this._getStyleDeclaration(i.lineIndex, i.charIndex)) || {}
                    },
                    setSelectionStyles: function(t, e, i) {
                        void 0 === e && (e = this.selectionStart || 0), void 0 === i && (i = this.selectionEnd || e);
                        for (var r = e; r < i; r++) this._extendStyles(r, t);
                        return this._forceClearCache = !0, this
                    },
                    _getStyleDeclaration: function(t, e) {
                        var i = this.styles && this.styles[t];
                        return i ? i[e] : null
                    },
                    getCompleteStyleDeclaration: function(t, e) {
                        for (var i, r = this._getStyleDeclaration(t, e) || {}, n = {}, o = 0; o < this._styleProperties.length; o++) n[i = this._styleProperties[o]] = void 0 === r[i] ? this[i] : r[i];
                        return n
                    },
                    _setStyleDeclaration: function(t, e, i) {
                        this.styles[t][e] = i
                    },
                    _deleteStyleDeclaration: function(t, e) {
                        delete this.styles[t][e]
                    },
                    _getLineStyle: function(t) {
                        return !!this.styles[t]
                    },
                    _setLineStyle: function(t) {
                        this.styles[t] = {}
                    },
                    _deleteLineStyle: function(t) {
                        delete this.styles[t]
                    }
                }),
                function() {
                    function t(t) {
                        t.textDecoration && (t.textDecoration.indexOf("underline") > -1 && (t.underline = !0), t.textDecoration.indexOf("line-through") > -1 && (t.linethrough = !0), t.textDecoration.indexOf("overline") > -1 && (t.overline = !0), delete t.textDecoration)
                    }
                    T.IText = T.util.createClass(T.Text, T.Observable, {
                        type: "i-text",
                        selectionStart: 0,
                        selectionEnd: 0,
                        selectionColor: "rgba(17,119,255,0.3)",
                        isEditing: !1,
                        editable: !0,
                        editingBorderColor: "rgba(102,153,255,0.25)",
                        cursorWidth: 2,
                        cursorColor: "",
                        cursorDelay: 1e3,
                        cursorDuration: 600,
                        caching: !0,
                        hiddenTextareaContainer: null,
                        _reSpace: /\s|\n/,
                        _currentCursorOpacity: 0,
                        _selectionDirection: null,
                        _abortCursorAnimation: !1,
                        __widthOfSpace: [],
                        inCompositionMode: !1,
                        initialize: function(t, e) {
                            this.callSuper("initialize", t, e), this.initBehavior()
                        },
                        setSelectionStart: function(t) {
                            t = Math.max(t, 0), this._updateAndFire("selectionStart", t)
                        },
                        setSelectionEnd: function(t) {
                            t = Math.min(t, this.text.length), this._updateAndFire("selectionEnd", t)
                        },
                        _updateAndFire: function(t, e) {
                            this[t] !== e && (this._fireSelectionChanged(), this[t] = e), this._updateTextarea()
                        },
                        _fireSelectionChanged: function() {
                            this.fire("selection:changed"), this.canvas && this.canvas.fire("text:selection:changed", {
                                target: this
                            })
                        },
                        initDimensions: function() {
                            this.isEditing && this.initDelayedCursor(), this.clearContextTop(), this.callSuper("initDimensions")
                        },
                        render: function(t) {
                            this.clearContextTop(), this.callSuper("render", t), this.cursorOffsetCache = {}, this.renderCursorOrSelection()
                        },
                        _render: function(t) {
                            this.callSuper("_render", t)
                        },
                        clearContextTop: function(t) {
                            if (this.isEditing && this.canvas && this.canvas.contextTop) {
                                var e = this.canvas.contextTop,
                                    i = this.canvas.viewportTransform;
                                e.save(), e.transform(i[0], i[1], i[2], i[3], i[4], i[5]), this.transform(e), this._clearTextArea(e), t || e.restore()
                            }
                        },
                        renderCursorOrSelection: function() {
                            if (this.isEditing && this.canvas && this.canvas.contextTop) {
                                var t = this._getCursorBoundaries(),
                                    e = this.canvas.contextTop;
                                this.clearContextTop(!0), this.selectionStart === this.selectionEnd ? this.renderCursor(t, e) : this.renderSelection(t, e), e.restore()
                            }
                        },
                        _clearTextArea: function(t) {
                            var e = this.width + 4,
                                i = this.height + 4;
                            t.clearRect(-e / 2, -i / 2, e, i)
                        },
                        _getCursorBoundaries: function(t) {
                            void 0 === t && (t = this.selectionStart);
                            var e = this._getLeftOffset(),
                                i = this._getTopOffset(),
                                r = this._getCursorBoundariesOffsets(t);
                            return {
                                left: e,
                                top: i,
                                leftOffset: r.left,
                                topOffset: r.top
                            }
                        },
                        _getCursorBoundariesOffsets: function(t) {
                            if (this.cursorOffsetCache && "top" in this.cursorOffsetCache) return this.cursorOffsetCache;
                            var e, i, r, n, o = 0,
                                a = 0,
                                s = this.get2DCursorLocation(t);
                            r = s.charIndex, i = s.lineIndex;
                            for (var l = 0; l < i; l++) o += this.getHeightOfLine(l);
                            e = this._getLineLeftOffset(i);
                            var h = this.__charBounds[i][r];
                            return h && (a = h.left), 0 !== this.charSpacing && r === this._textLines[i].length && (a -= this._getWidthOfCharSpacing()), n = {
                                top: o,
                                left: e + (a > 0 ? a : 0)
                            }, "rtl" === this.direction && (n.left *= -1), this.cursorOffsetCache = n, this.cursorOffsetCache
                        },
                        renderCursor: function(t, e) {
                            var i = this.get2DCursorLocation(),
                                r = i.lineIndex,
                                n = i.charIndex > 0 ? i.charIndex - 1 : 0,
                                o = this.getValueOfPropertyAt(r, n, "fontSize"),
                                a = this.scaleX * this.canvas.getZoom(),
                                s = this.cursorWidth / a,
                                l = t.topOffset,
                                h = this.getValueOfPropertyAt(r, n, "deltaY");
                            l += (1 - this._fontSizeFraction) * this.getHeightOfLine(r) / this.lineHeight - o * (1 - this._fontSizeFraction), this.inCompositionMode && this.renderSelection(t, e), e.fillStyle = this.cursorColor || this.getValueOfPropertyAt(r, n, "fill"), e.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity, e.fillRect(t.left + t.leftOffset - s / 2, l + t.top + h, s, o)
                        },
                        renderSelection: function(t, e) {
                            for (var i = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart, r = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd, n = -1 !== this.textAlign.indexOf("justify"), o = this.get2DCursorLocation(i), a = this.get2DCursorLocation(r), s = o.lineIndex, l = a.lineIndex, h = o.charIndex < 0 ? 0 : o.charIndex, c = a.charIndex < 0 ? 0 : a.charIndex, u = s; u <= l; u++) {
                                var f, d = this._getLineLeftOffset(u) || 0,
                                    p = this.getHeightOfLine(u),
                                    g = 0,
                                    v = 0;
                                if (u === s && (g = this.__charBounds[s][h].left), u >= s && u < l) v = n && !this.isEndOfWrapping(u) ? this.width : this.getLineWidth(u) || 5;
                                else if (u === l)
                                    if (0 === c) v = this.__charBounds[l][c].left;
                                    else {
                                        var m = this._getWidthOfCharSpacing();
                                        v = this.__charBounds[l][c - 1].left + this.__charBounds[l][c - 1].width - m
                                    } f = p, (this.lineHeight < 1 || u === l && this.lineHeight > 1) && (p /= this.lineHeight);
                                var y = t.left + d + g,
                                    b = v - g,
                                    x = p,
                                    _ = 0;
                                this.inCompositionMode ? (e.fillStyle = this.compositionColor || "black", x = 1, _ = p) : e.fillStyle = this.selectionColor, "rtl" === this.direction && (y = this.width - y - b), e.fillRect(y, t.top + t.topOffset + _, b, x), t.topOffset += f
                            }
                        },
                        getCurrentCharFontSize: function() {
                            var t = this._getCurrentCharIndex();
                            return this.getValueOfPropertyAt(t.l, t.c, "fontSize")
                        },
                        getCurrentCharColor: function() {
                            var t = this._getCurrentCharIndex();
                            return this.getValueOfPropertyAt(t.l, t.c, "fill")
                        },
                        _getCurrentCharIndex: function() {
                            var t = this.get2DCursorLocation(this.selectionStart, !0),
                                e = t.charIndex > 0 ? t.charIndex - 1 : 0;
                            return {
                                l: t.lineIndex,
                                c: e
                            }
                        }
                    }), T.IText.fromObject = function(e, i) {
                        if (t(e), e.styles)
                            for (var r in e.styles)
                                for (var n in e.styles[r]) t(e.styles[r][n]);
                        T.Object._fromObject("IText", e, i, "text")
                    }
                }(), w = T.util.object.clone, T.util.object.extend(T.IText.prototype, {
                    initBehavior: function() {
                        this.initAddedHandler(), this.initRemovedHandler(), this.initCursorSelectionHandlers(), this.initDoubleClickSimulation(), this.mouseMoveHandler = this.mouseMoveHandler.bind(this)
                    },
                    onDeselect: function() {
                        this.isEditing && this.exitEditing(), this.selected = !1
                    },
                    initAddedHandler: function() {
                        var t = this;
                        this.on("added", (function() {
                            var e = t.canvas;
                            e && (e._hasITextHandlers || (e._hasITextHandlers = !0, t._initCanvasHandlers(e)), e._iTextInstances = e._iTextInstances || [], e._iTextInstances.push(t))
                        }))
                    },
                    initRemovedHandler: function() {
                        var t = this;
                        this.on("removed", (function() {
                            var e = t.canvas;
                            e && (e._iTextInstances = e._iTextInstances || [], T.util.removeFromArray(e._iTextInstances, t), 0 === e._iTextInstances.length && (e._hasITextHandlers = !1, t._removeCanvasHandlers(e)))
                        }))
                    },
                    _initCanvasHandlers: function(t) {
                        t._mouseUpITextHandler = function() {
                            t._iTextInstances && t._iTextInstances.forEach((function(t) {
                                t.__isMousedown = !1
                            }))
                        }, t.on("mouse:up", t._mouseUpITextHandler)
                    },
                    _removeCanvasHandlers: function(t) {
                        t.off("mouse:up", t._mouseUpITextHandler)
                    },
                    _tick: function() {
                        this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, "_onTickComplete")
                    },
                    _animateCursor: function(t, e, i, r) {
                        var n;
                        return n = {
                            isAborted: !1,
                            abort: function() {
                                this.isAborted = !0
                            }
                        }, t.animate("_currentCursorOpacity", e, {
                            duration: i,
                            onComplete: function() {
                                n.isAborted || t[r]()
                            },
                            onChange: function() {
                                t.canvas && t.selectionStart === t.selectionEnd && t.renderCursorOrSelection()
                            },
                            abort: function() {
                                return n.isAborted
                            }
                        }), n
                    },
                    _onTickComplete: function() {
                        var t = this;
                        this._cursorTimeout1 && clearTimeout(this._cursorTimeout1), this._cursorTimeout1 = setTimeout((function() {
                            t._currentTickCompleteState = t._animateCursor(t, 0, this.cursorDuration / 2, "_tick")
                        }), 100)
                    },
                    initDelayedCursor: function(t) {
                        var e = this,
                            i = t ? 0 : this.cursorDelay;
                        this.abortCursorAnimation(), this._currentCursorOpacity = 1, this._cursorTimeout2 = setTimeout((function() {
                            e._tick()
                        }), i)
                    },
                    abortCursorAnimation: function() {
                        var t = this._currentTickState || this._currentTickCompleteState,
                            e = this.canvas;
                        this._currentTickState && this._currentTickState.abort(), this._currentTickCompleteState && this._currentTickCompleteState.abort(), clearTimeout(this._cursorTimeout1), clearTimeout(this._cursorTimeout2), this._currentCursorOpacity = 0, t && e && e.clearContext(e.contextTop || e.contextContainer)
                    },
                    selectAll: function() {
                        return this.selectionStart = 0, this.selectionEnd = this._text.length, this._fireSelectionChanged(), this._updateTextarea(), this
                    },
                    getSelectedText: function() {
                        return this._text.slice(this.selectionStart, this.selectionEnd).join("")
                    },
                    findWordBoundaryLeft: function(t) {
                        var e = 0,
                            i = t - 1;
                        if (this._reSpace.test(this._text[i]))
                            for (; this._reSpace.test(this._text[i]);) e++, i--;
                        for (;
                            /\S/.test(this._text[i]) && i > -1;) e++, i--;
                        return t - e
                    },
                    findWordBoundaryRight: function(t) {
                        var e = 0,
                            i = t;
                        if (this._reSpace.test(this._text[i]))
                            for (; this._reSpace.test(this._text[i]);) e++, i++;
                        for (;
                            /\S/.test(this._text[i]) && i < this._text.length;) e++, i++;
                        return t + e
                    },
                    findLineBoundaryLeft: function(t) {
                        for (var e = 0, i = t - 1; !/\n/.test(this._text[i]) && i > -1;) e++, i--;
                        return t - e
                    },
                    findLineBoundaryRight: function(t) {
                        for (var e = 0, i = t; !/\n/.test(this._text[i]) && i < this._text.length;) e++, i++;
                        return t + e
                    },
                    searchWordBoundary: function(t, e) {
                        for (var i = this._text, r = this._reSpace.test(i[t]) ? t - 1 : t, n = i[r], o = T.reNonWord; !o.test(n) && r > 0 && r < i.length;) n = i[r += e];
                        return o.test(n) && (r += 1 === e ? 0 : 1), r
                    },
                    selectWord: function(t) {
                        t = t || this.selectionStart;
                        var e = this.searchWordBoundary(t, -1),
                            i = this.searchWordBoundary(t, 1);
                        this.selectionStart = e, this.selectionEnd = i, this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection()
                    },
                    selectLine: function(t) {
                        t = t || this.selectionStart;
                        var e = this.findLineBoundaryLeft(t),
                            i = this.findLineBoundaryRight(t);
                        return this.selectionStart = e, this.selectionEnd = i, this._fireSelectionChanged(), this._updateTextarea(), this
                    },
                    enterEditing: function(t) {
                        if (!this.isEditing && this.editable) return this.canvas && (this.canvas.calcOffset(), this.exitEditingOnOthers(this.canvas)), this.isEditing = !0, this.initHiddenTextarea(t), this.hiddenTextarea.focus(), this.hiddenTextarea.value = this.text, this._updateTextarea(), this._saveEditingProps(), this._setEditingProps(), this._textBeforeEdit = this.text, this._tick(), this.fire("editing:entered"), this._fireSelectionChanged(), this.canvas ? (this.canvas.fire("text:editing:entered", {
                            target: this
                        }), this.initMouseMoveHandler(), this.canvas.requestRenderAll(), this) : this
                    },
                    exitEditingOnOthers: function(t) {
                        t._iTextInstances && t._iTextInstances.forEach((function(t) {
                            t.selected = !1, t.isEditing && t.exitEditing()
                        }))
                    },
                    initMouseMoveHandler: function() {
                        this.canvas.on("mouse:move", this.mouseMoveHandler)
                    },
                    mouseMoveHandler: function(t) {
                        if (this.__isMousedown && this.isEditing) {
                            var e = this.getSelectionStartFromPointer(t.e),
                                i = this.selectionStart,
                                r = this.selectionEnd;
                            (e === this.__selectionStartOnMouseDown && i !== r || i !== e && r !== e) && (e > this.__selectionStartOnMouseDown ? (this.selectionStart = this.__selectionStartOnMouseDown, this.selectionEnd = e) : (this.selectionStart = e, this.selectionEnd = this.__selectionStartOnMouseDown), this.selectionStart === i && this.selectionEnd === r || (this.restartCursorIfNeeded(), this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection()))
                        }
                    },
                    _setEditingProps: function() {
                        this.hoverCursor = "text", this.canvas && (this.canvas.defaultCursor = this.canvas.moveCursor = "text"), this.borderColor = this.editingBorderColor, this.hasControls = this.selectable = !1, this.lockMovementX = this.lockMovementY = !0
                    },
                    fromStringToGraphemeSelection: function(t, e, i) {
                        var r = i.slice(0, t),
                            n = T.util.string.graphemeSplit(r).length;
                        if (t === e) return {
                            selectionStart: n,
                            selectionEnd: n
                        };
                        var o = i.slice(t, e);
                        return {
                            selectionStart: n,
                            selectionEnd: n + T.util.string.graphemeSplit(o).length
                        }
                    },
                    fromGraphemeToStringSelection: function(t, e, i) {
                        var r = i.slice(0, t).join("").length;
                        return t === e ? {
                            selectionStart: r,
                            selectionEnd: r
                        } : {
                            selectionStart: r,
                            selectionEnd: r + i.slice(t, e).join("").length
                        }
                    },
                    _updateTextarea: function() {
                        if (this.cursorOffsetCache = {}, this.hiddenTextarea) {
                            if (!this.inCompositionMode) {
                                var t = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);
                                this.hiddenTextarea.selectionStart = t.selectionStart, this.hiddenTextarea.selectionEnd = t.selectionEnd
                            }
                            this.updateTextareaPosition()
                        }
                    },
                    updateFromTextArea: function() {
                        if (this.hiddenTextarea) {
                            this.cursorOffsetCache = {}, this.text = this.hiddenTextarea.value, this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords());
                            var t = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);
                            this.selectionEnd = this.selectionStart = t.selectionEnd, this.inCompositionMode || (this.selectionStart = t.selectionStart), this.updateTextareaPosition()
                        }
                    },
                    updateTextareaPosition: function() {
                        if (this.selectionStart === this.selectionEnd) {
                            var t = this._calcTextareaPosition();
                            this.hiddenTextarea.style.left = t.left, this.hiddenTextarea.style.top = t.top
                        }
                    },
                    _calcTextareaPosition: function() {
                        if (!this.canvas) return {
                            x: 1,
                            y: 1
                        };
                        var t = this.inCompositionMode ? this.compositionStart : this.selectionStart,
                            e = this._getCursorBoundaries(t),
                            i = this.get2DCursorLocation(t),
                            r = i.lineIndex,
                            n = i.charIndex,
                            o = this.getValueOfPropertyAt(r, n, "fontSize") * this.lineHeight,
                            a = e.leftOffset,
                            s = this.calcTransformMatrix(),
                            l = {
                                x: e.left + a,
                                y: e.top + e.topOffset + o
                            },
                            h = this.canvas.getRetinaScaling(),
                            c = this.canvas.upperCanvasEl,
                            u = c.width / h,
                            f = c.height / h,
                            d = u - o,
                            p = f - o,
                            g = c.clientWidth / u,
                            v = c.clientHeight / f;
                        return l = T.util.transformPoint(l, s), (l = T.util.transformPoint(l, this.canvas.viewportTransform)).x *= g, l.y *= v, l.x < 0 && (l.x = 0), l.x > d && (l.x = d), l.y < 0 && (l.y = 0), l.y > p && (l.y = p), l.x += this.canvas._offset.left, l.y += this.canvas._offset.top, {
                            left: l.x + "px",
                            top: l.y + "px",
                            fontSize: o + "px",
                            charHeight: o
                        }
                    },
                    _saveEditingProps: function() {
                        this._savedProps = {
                            hasControls: this.hasControls,
                            borderColor: this.borderColor,
                            lockMovementX: this.lockMovementX,
                            lockMovementY: this.lockMovementY,
                            hoverCursor: this.hoverCursor,
                            selectable: this.selectable,
                            defaultCursor: this.canvas && this.canvas.defaultCursor,
                            moveCursor: this.canvas && this.canvas.moveCursor
                        }
                    },
                    _restoreEditingProps: function() {
                        this._savedProps && (this.hoverCursor = this._savedProps.hoverCursor, this.hasControls = this._savedProps.hasControls, this.borderColor = this._savedProps.borderColor, this.selectable = this._savedProps.selectable, this.lockMovementX = this._savedProps.lockMovementX, this.lockMovementY = this._savedProps.lockMovementY, this.canvas && (this.canvas.defaultCursor = this._savedProps.defaultCursor, this.canvas.moveCursor = this._savedProps.moveCursor))
                    },
                    exitEditing: function() {
                        var t = this._textBeforeEdit !== this.text,
                            e = this.hiddenTextarea;
                        return this.selected = !1, this.isEditing = !1, this.selectionEnd = this.selectionStart, e && (e.blur && e.blur(), e.parentNode && e.parentNode.removeChild(e)), this.hiddenTextarea = null, this.abortCursorAnimation(), this._restoreEditingProps(), this._currentCursorOpacity = 0, this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this.fire("editing:exited"), t && this.fire("modified"), this.canvas && (this.canvas.off("mouse:move", this.mouseMoveHandler), this.canvas.fire("text:editing:exited", {
                            target: this
                        }), t && this.canvas.fire("object:modified", {
                            target: this
                        })), this
                    },
                    _removeExtraneousStyles: function() {
                        for (var t in this.styles) this._textLines[t] || delete this.styles[t]
                    },
                    removeStyleFromTo: function(t, e) {
                        var i, r, n = this.get2DCursorLocation(t, !0),
                            o = this.get2DCursorLocation(e, !0),
                            a = n.lineIndex,
                            s = n.charIndex,
                            l = o.lineIndex,
                            h = o.charIndex;
                        if (a !== l) {
                            if (this.styles[a])
                                for (i = s; i < this._unwrappedTextLines[a].length; i++) delete this.styles[a][i];
                            if (this.styles[l])
                                for (i = h; i < this._unwrappedTextLines[l].length; i++)(r = this.styles[l][i]) && (this.styles[a] || (this.styles[a] = {}), this.styles[a][s + i - h] = r);
                            for (i = a + 1; i <= l; i++) delete this.styles[i];
                            this.shiftLineStyles(l, a - l)
                        } else if (this.styles[a]) {
                            r = this.styles[a];
                            var c, u, f = h - s;
                            for (i = s; i < h; i++) delete r[i];
                            for (u in this.styles[a])(c = parseInt(u, 10)) >= h && (r[c - f] = r[u], delete r[u])
                        }
                    },
                    shiftLineStyles: function(t, e) {
                        var i = w(this.styles);
                        for (var r in this.styles) {
                            var n = parseInt(r, 10);
                            n > t && (this.styles[n + e] = i[n], i[n - e] || delete this.styles[n])
                        }
                    },
                    restartCursorIfNeeded: function() {
                        this._currentTickState && !this._currentTickState.isAborted && this._currentTickCompleteState && !this._currentTickCompleteState.isAborted || this.initDelayedCursor()
                    },
                    insertNewlineStyleObject: function(t, e, i, r) {
                        var n, o = {},
                            a = !1,
                            s = this._unwrappedTextLines[t].length === e;
                        for (var l in i || (i = 1), this.shiftLineStyles(t, i), this.styles[t] && (n = this.styles[t][0 === e ? e : e - 1]), this.styles[t]) {
                            var h = parseInt(l, 10);
                            h >= e && (a = !0, o[h - e] = this.styles[t][l], s && 0 === e || delete this.styles[t][l])
                        }
                        var c = !1;
                        for (a && !s && (this.styles[t + i] = o, c = !0), c && i--; i > 0;) r && r[i - 1] ? this.styles[t + i] = {
                            0: w(r[i - 1])
                        } : n ? this.styles[t + i] = {
                            0: w(n)
                        } : delete this.styles[t + i], i--;
                        this._forceClearCache = !0
                    },
                    insertCharStyleObject: function(t, e, i, r) {
                        this.styles || (this.styles = {});
                        var n = this.styles[t],
                            o = n ? w(n) : {};
                        for (var a in i || (i = 1), o) {
                            var s = parseInt(a, 10);
                            s >= e && (n[s + i] = o[s], o[s - i] || delete n[s])
                        }
                        if (this._forceClearCache = !0, r)
                            for (; i--;) Object.keys(r[i]).length && (this.styles[t] || (this.styles[t] = {}), this.styles[t][e + i] = w(r[i]));
                        else if (n)
                            for (var l = n[e ? e - 1 : 1]; l && i--;) this.styles[t][e + i] = w(l)
                    },
                    insertNewStyleBlock: function(t, e, i) {
                        for (var r = this.get2DCursorLocation(e, !0), n = [0], o = 0, a = 0; a < t.length; a++) "\n" === t[a] ? n[++o] = 0 : n[o]++;
                        for (n[0] > 0 && (this.insertCharStyleObject(r.lineIndex, r.charIndex, n[0], i), i = i && i.slice(n[0] + 1)), o && this.insertNewlineStyleObject(r.lineIndex, r.charIndex + n[0], o), a = 1; a < o; a++) n[a] > 0 ? this.insertCharStyleObject(r.lineIndex + a, 0, n[a], i) : i && (this.styles[r.lineIndex + a][0] = i[0]), i = i && i.slice(n[a] + 1);
                        n[a] > 0 && this.insertCharStyleObject(r.lineIndex + a, 0, n[a], i)
                    },
                    setSelectionStartEndWithShift: function(t, e, i) {
                        i <= t ? (e === t ? this._selectionDirection = "left" : "right" === this._selectionDirection && (this._selectionDirection = "left", this.selectionEnd = t), this.selectionStart = i) : i > t && i < e ? "right" === this._selectionDirection ? this.selectionEnd = i : this.selectionStart = i : (e === t ? this._selectionDirection = "right" : "left" === this._selectionDirection && (this._selectionDirection = "right", this.selectionStart = e), this.selectionEnd = i)
                    },
                    setSelectionInBoundaries: function() {
                        var t = this.text.length;
                        this.selectionStart > t ? this.selectionStart = t : this.selectionStart < 0 && (this.selectionStart = 0), this.selectionEnd > t ? this.selectionEnd = t : this.selectionEnd < 0 && (this.selectionEnd = 0)
                    }
                }), T.util.object.extend(T.IText.prototype, {
                    initDoubleClickSimulation: function() {
                        this.__lastClickTime = +new Date, this.__lastLastClickTime = +new Date, this.__lastPointer = {}, this.on("mousedown", this.onMouseDown)
                    },
                    onMouseDown: function(t) {
                        if (this.canvas) {
                            this.__newClickTime = +new Date;
                            var e = t.pointer;
                            this.isTripleClick(e) && (this.fire("tripleclick", t), this._stopEvent(t.e)), this.__lastLastClickTime = this.__lastClickTime, this.__lastClickTime = this.__newClickTime, this.__lastPointer = e, this.__lastIsEditing = this.isEditing, this.__lastSelected = this.selected
                        }
                    },
                    isTripleClick: function(t) {
                        return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === t.x && this.__lastPointer.y === t.y
                    },
                    _stopEvent: function(t) {
                        t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation()
                    },
                    initCursorSelectionHandlers: function() {
                        this.initMousedownHandler(), this.initMouseupHandler(), this.initClicks()
                    },
                    doubleClickHandler: function(t) {
                        this.isEditing && this.selectWord(this.getSelectionStartFromPointer(t.e))
                    },
                    tripleClickHandler: function(t) {
                        this.isEditing && this.selectLine(this.getSelectionStartFromPointer(t.e))
                    },
                    initClicks: function() {
                        this.on("mousedblclick", this.doubleClickHandler), this.on("tripleclick", this.tripleClickHandler)
                    },
                    _mouseDownHandler: function(t) {
                        !this.canvas || !this.editable || t.e.button && 1 !== t.e.button || (this.__isMousedown = !0, this.selected && (this.inCompositionMode = !1, this.setCursorByClick(t.e)), this.isEditing && (this.__selectionStartOnMouseDown = this.selectionStart, this.selectionStart === this.selectionEnd && this.abortCursorAnimation(), this.renderCursorOrSelection()))
                    },
                    _mouseDownHandlerBefore: function(t) {
                        !this.canvas || !this.editable || t.e.button && 1 !== t.e.button || (this.selected = this === this.canvas._activeObject)
                    },
                    initMousedownHandler: function() {
                        this.on("mousedown", this._mouseDownHandler), this.on("mousedown:before", this._mouseDownHandlerBefore)
                    },
                    initMouseupHandler: function() {
                        this.on("mouseup", this.mouseUpHandler)
                    },
                    mouseUpHandler: function(t) {
                        if (this.__isMousedown = !1, !(!this.editable || this.group || t.transform && t.transform.actionPerformed || t.e.button && 1 !== t.e.button)) {
                            if (this.canvas) {
                                var e = this.canvas._activeObject;
                                if (e && e !== this) return
                            }
                            this.__lastSelected && !this.__corner ? (this.selected = !1, this.__lastSelected = !1, this.enterEditing(t.e), this.selectionStart === this.selectionEnd ? this.initDelayedCursor(!0) : this.renderCursorOrSelection()) : this.selected = !0
                        }
                    },
                    setCursorByClick: function(t) {
                        var e = this.getSelectionStartFromPointer(t),
                            i = this.selectionStart,
                            r = this.selectionEnd;
                        t.shiftKey ? this.setSelectionStartEndWithShift(i, r, e) : (this.selectionStart = e, this.selectionEnd = e), this.isEditing && (this._fireSelectionChanged(), this._updateTextarea())
                    },
                    getSelectionStartFromPointer: function(t) {
                        for (var e, i = this.getLocalPointer(t), r = 0, n = 0, o = 0, a = 0, s = 0, l = 0, h = this._textLines.length; l < h && o <= i.y; l++) o += this.getHeightOfLine(l) * this.scaleY, s = l, l > 0 && (a += this._textLines[l - 1].length + this.missingNewlineOffset(l - 1));
                        n = this._getLineLeftOffset(s) * this.scaleX, e = this._textLines[s], "rtl" === this.direction && (i.x = this.width * this.scaleX - i.x + n);
                        for (var c = 0, u = e.length; c < u && (r = n, (n += this.__charBounds[s][c].kernedWidth * this.scaleX) <= i.x); c++) a++;
                        return this._getNewSelectionStartFromOffset(i, r, n, a, u)
                    },
                    _getNewSelectionStartFromOffset: function(t, e, i, r, n) {
                        var o = t.x - e,
                            a = i - t.x,
                            s = r + (a > o || a < 0 ? 0 : 1);
                        return this.flipX && (s = n - s), s > this._text.length && (s = this._text.length), s
                    }
                }), T.util.object.extend(T.IText.prototype, {
                    initHiddenTextarea: function() {
                        this.hiddenTextarea = T.document.createElement("textarea"), this.hiddenTextarea.setAttribute("autocapitalize", "off"), this.hiddenTextarea.setAttribute("autocorrect", "off"), this.hiddenTextarea.setAttribute("autocomplete", "off"), this.hiddenTextarea.setAttribute("spellcheck", "false"), this.hiddenTextarea.setAttribute("data-fabric-hiddentextarea", ""), this.hiddenTextarea.setAttribute("wrap", "off");
                        var t = this._calcTextareaPosition();
                        this.hiddenTextarea.style.cssText = "position: absolute; top: " + t.top + "; left: " + t.left + "; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; paddingï½°top: " + t.fontSize + ";", this.hiddenTextareaContainer ? this.hiddenTextareaContainer.appendChild(this.hiddenTextarea) : T.document.body.appendChild(this.hiddenTextarea), T.util.addListener(this.hiddenTextarea, "keydown", this.onKeyDown.bind(this)), T.util.addListener(this.hiddenTextarea, "keyup", this.onKeyUp.bind(this)), T.util.addListener(this.hiddenTextarea, "input", this.onInput.bind(this)), T.util.addListener(this.hiddenTextarea, "copy", this.copy.bind(this)), T.util.addListener(this.hiddenTextarea, "cut", this.copy.bind(this)), T.util.addListener(this.hiddenTextarea, "paste", this.paste.bind(this)), T.util.addListener(this.hiddenTextarea, "compositionstart", this.onCompositionStart.bind(this)), T.util.addListener(this.hiddenTextarea, "compositionupdate", this.onCompositionUpdate.bind(this)), T.util.addListener(this.hiddenTextarea, "compositionend", this.onCompositionEnd.bind(this)), !this._clickHandlerInitialized && this.canvas && (T.util.addListener(this.canvas.upperCanvasEl, "click", this.onClick.bind(this)), this._clickHandlerInitialized = !0)
                    },
                    keysMap: {
                        9: "exitEditing",
                        27: "exitEditing",
                        33: "moveCursorUp",
                        34: "moveCursorDown",
                        35: "moveCursorRight",
                        36: "moveCursorLeft",
                        37: "moveCursorLeft",
                        38: "moveCursorUp",
                        39: "moveCursorRight",
                        40: "moveCursorDown"
                    },
                    keysMapRtl: {
                        9: "exitEditing",
                        27: "exitEditing",
                        33: "moveCursorUp",
                        34: "moveCursorDown",
                        35: "moveCursorLeft",
                        36: "moveCursorRight",
                        37: "moveCursorRight",
                        38: "moveCursorUp",
                        39: "moveCursorLeft",
                        40: "moveCursorDown"
                    },
                    ctrlKeysMapUp: {
                        67: "copy",
                        88: "cut"
                    },
                    ctrlKeysMapDown: {
                        65: "selectAll"
                    },
                    onClick: function() {
                        this.hiddenTextarea && this.hiddenTextarea.focus()
                    },
                    onKeyDown: function(t) {
                        if (this.isEditing) {
                            var e = "rtl" === this.direction ? this.keysMapRtl : this.keysMap;
                            if (t.keyCode in e) this[e[t.keyCode]](t);
                            else {
                                if (!(t.keyCode in this.ctrlKeysMapDown) || !t.ctrlKey && !t.metaKey) return;
                                this[this.ctrlKeysMapDown[t.keyCode]](t)
                            }
                            t.stopImmediatePropagation(), t.preventDefault(), t.keyCode >= 33 && t.keyCode <= 40 ? (this.inCompositionMode = !1, this.clearContextTop(), this.renderCursorOrSelection()) : this.canvas && this.canvas.requestRenderAll()
                        }
                    },
                    onKeyUp: function(t) {
                        !this.isEditing || this._copyDone || this.inCompositionMode ? this._copyDone = !1 : t.keyCode in this.ctrlKeysMapUp && (t.ctrlKey || t.metaKey) && (this[this.ctrlKeysMapUp[t.keyCode]](t), t.stopImmediatePropagation(), t.preventDefault(), this.canvas && this.canvas.requestRenderAll())
                    },
                    onInput: function(t) {
                        var e = this.fromPaste;
                        if (this.fromPaste = !1, t && t.stopPropagation(), this.isEditing) {
                            var i, r, n, o, a, s = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,
                                l = this._text.length,
                                h = s.length,
                                c = h - l,
                                u = this.selectionStart,
                                f = this.selectionEnd,
                                d = u !== f;
                            if ("" === this.hiddenTextarea.value) return this.styles = {}, this.updateFromTextArea(), this.fire("changed"), void(this.canvas && (this.canvas.fire("text:changed", {
                                target: this
                            }), this.canvas.requestRenderAll()));
                            var p = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value),
                                g = u > p.selectionStart;
                            d ? (i = this._text.slice(u, f), c += f - u) : h < l && (i = g ? this._text.slice(f + c, f) : this._text.slice(u, u - c)), r = s.slice(p.selectionEnd - c, p.selectionEnd), i && i.length && (r.length && (n = this.getSelectionStyles(u, u + 1, !1), n = r.map((function() {
                                return n[0]
                            }))), d ? (o = u, a = f) : g ? (o = f - i.length, a = f) : (o = f, a = f + i.length), this.removeStyleFromTo(o, a)), r.length && (e && r.join("") === T.copiedText && !T.disableStyleCopyPaste && (n = T.copiedTextStyle), this.insertNewStyleBlock(r, u, n)), this.updateFromTextArea(), this.fire("changed"), this.canvas && (this.canvas.fire("text:changed", {
                                target: this
                            }), this.canvas.requestRenderAll())
                        }
                    },
                    onCompositionStart: function() {
                        this.inCompositionMode = !0
                    },
                    onCompositionEnd: function() {
                        this.inCompositionMode = !1
                    },
                    onCompositionUpdate: function(t) {
                        this.compositionStart = t.target.selectionStart, this.compositionEnd = t.target.selectionEnd, this.updateTextareaPosition()
                    },
                    copy: function() {
                        this.selectionStart !== this.selectionEnd && (T.copiedText = this.getSelectedText(), T.disableStyleCopyPaste ? T.copiedTextStyle = null : T.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, !0), this._copyDone = !0)
                    },
                    paste: function() {
                        this.fromPaste = !0
                    },
                    _getClipboardData: function(t) {
                        return t && t.clipboardData || T.window.clipboardData
                    },
                    _getWidthBeforeCursor: function(t, e) {
                        var i, r = this._getLineLeftOffset(t);
                        return e > 0 && (r += (i = this.__charBounds[t][e - 1]).left + i.width), r
                    },
                    getDownCursorOffset: function(t, e) {
                        var i = this._getSelectionForOffset(t, e),
                            r = this.get2DCursorLocation(i),
                            n = r.lineIndex;
                        if (n === this._textLines.length - 1 || t.metaKey || 34 === t.keyCode) return this._text.length - i;
                        var o = r.charIndex,
                            a = this._getWidthBeforeCursor(n, o),
                            s = this._getIndexOnLine(n + 1, a);
                        return this._textLines[n].slice(o).length + s + 1 + this.missingNewlineOffset(n)
                    },
                    _getSelectionForOffset: function(t, e) {
                        return t.shiftKey && this.selectionStart !== this.selectionEnd && e ? this.selectionEnd : this.selectionStart
                    },
                    getUpCursorOffset: function(t, e) {
                        var i = this._getSelectionForOffset(t, e),
                            r = this.get2DCursorLocation(i),
                            n = r.lineIndex;
                        if (0 === n || t.metaKey || 33 === t.keyCode) return -i;
                        var o = r.charIndex,
                            a = this._getWidthBeforeCursor(n, o),
                            s = this._getIndexOnLine(n - 1, a),
                            l = this._textLines[n].slice(0, o),
                            h = this.missingNewlineOffset(n - 1);
                        return -this._textLines[n - 1].length + s - l.length + (1 - h)
                    },
                    _getIndexOnLine: function(t, e) {
                        for (var i, r, n = this._textLines[t], o = this._getLineLeftOffset(t), a = 0, s = 0, l = n.length; s < l; s++)
                            if ((o += i = this.__charBounds[t][s].width) > e) {
                                r = !0;
                                var h = o - i,
                                    c = o,
                                    u = Math.abs(h - e);
                                a = Math.abs(c - e) < u ? s : s - 1;
                                break
                            } return r || (a = n.length - 1), a
                    },
                    moveCursorDown: function(t) {
                        this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length || this._moveCursorUpOrDown("Down", t)
                    },
                    moveCursorUp: function(t) {
                        0 === this.selectionStart && 0 === this.selectionEnd || this._moveCursorUpOrDown("Up", t)
                    },
                    _moveCursorUpOrDown: function(t, e) {
                        var i = this["get" + t + "CursorOffset"](e, "right" === this._selectionDirection);
                        e.shiftKey ? this.moveCursorWithShift(i) : this.moveCursorWithoutShift(i), 0 !== i && (this.setSelectionInBoundaries(), this.abortCursorAnimation(), this._currentCursorOpacity = 1, this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea())
                    },
                    moveCursorWithShift: function(t) {
                        var e = "left" === this._selectionDirection ? this.selectionStart + t : this.selectionEnd + t;
                        return this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, e), 0 !== t
                    },
                    moveCursorWithoutShift: function(t) {
                        return t < 0 ? (this.selectionStart += t, this.selectionEnd = this.selectionStart) : (this.selectionEnd += t, this.selectionStart = this.selectionEnd), 0 !== t
                    },
                    moveCursorLeft: function(t) {
                        0 === this.selectionStart && 0 === this.selectionEnd || this._moveCursorLeftOrRight("Left", t)
                    },
                    _move: function(t, e, i) {
                        var r;
                        if (t.altKey) r = this["findWordBoundary" + i](this[e]);
                        else {
                            if (!t.metaKey && 35 !== t.keyCode && 36 !== t.keyCode) return this[e] += "Left" === i ? -1 : 1, !0;
                            r = this["findLineBoundary" + i](this[e])
                        }
                        if (void 0 !== typeof r && this[e] !== r) return this[e] = r, !0
                    },
                    _moveLeft: function(t, e) {
                        return this._move(t, e, "Left")
                    },
                    _moveRight: function(t, e) {
                        return this._move(t, e, "Right")
                    },
                    moveCursorLeftWithoutShift: function(t) {
                        var e = !0;
                        return this._selectionDirection = "left", this.selectionEnd === this.selectionStart && 0 !== this.selectionStart && (e = this._moveLeft(t, "selectionStart")), this.selectionEnd = this.selectionStart, e
                    },
                    moveCursorLeftWithShift: function(t) {
                        return "right" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveLeft(t, "selectionEnd") : 0 !== this.selectionStart ? (this._selectionDirection = "left", this._moveLeft(t, "selectionStart")) : void 0
                    },
                    moveCursorRight: function(t) {
                        this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length || this._moveCursorLeftOrRight("Right", t)
                    },
                    _moveCursorLeftOrRight: function(t, e) {
                        var i = "moveCursor" + t + "With";
                        this._currentCursorOpacity = 1, e.shiftKey ? i += "Shift" : i += "outShift", this[i](e) && (this.abortCursorAnimation(), this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea())
                    },
                    moveCursorRightWithShift: function(t) {
                        return "left" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveRight(t, "selectionStart") : this.selectionEnd !== this._text.length ? (this._selectionDirection = "right", this._moveRight(t, "selectionEnd")) : void 0
                    },
                    moveCursorRightWithoutShift: function(t) {
                        var e = !0;
                        return this._selectionDirection = "right", this.selectionStart === this.selectionEnd ? (e = this._moveRight(t, "selectionStart"), this.selectionEnd = this.selectionStart) : this.selectionStart = this.selectionEnd, e
                    },
                    removeChars: function(t, e) {
                        void 0 === e && (e = t + 1), this.removeStyleFromTo(t, e), this._text.splice(t, e - t), this.text = this._text.join(""), this.set("dirty", !0), this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this._removeExtraneousStyles()
                    },
                    insertChars: function(t, e, i, r) {
                        void 0 === r && (r = i), r > i && this.removeStyleFromTo(i, r);
                        var n = T.util.string.graphemeSplit(t);
                        this.insertNewStyleBlock(n, i, e), this._text = [].concat(this._text.slice(0, i), n, this._text.slice(r)), this.text = this._text.join(""), this.set("dirty", !0), this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this._removeExtraneousStyles()
                    }
                }), S = T.util.toFixed, C = /  +/g, T.util.object.extend(T.Text.prototype, {
                    _toSVG: function() {
                        var t = this._getSVGLeftTopOffsets(),
                            e = this._getSVGTextAndBg(t.textTop, t.textLeft);
                        return this._wrapSVGTextAndBg(e)
                    },
                    toSVG: function(t) {
                        return this._createBaseSVGMarkup(this._toSVG(), {
                            reviver: t,
                            noStyle: !0,
                            withShadow: !0
                        })
                    },
                    _getSVGLeftTopOffsets: function() {
                        return {
                            textLeft: -this.width / 2,
                            textTop: -this.height / 2,
                            lineTop: this.getHeightOfLine(0)
                        }
                    },
                    _wrapSVGTextAndBg: function(t) {
                        var e = this.getSvgTextDecoration(this);
                        return [t.textBgRects.join(""), '\t\t<text xml:space="preserve" ', this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "", this.fontSize ? 'font-size="' + this.fontSize + '" ' : "", this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "", this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "", e ? 'text-decoration="' + e + '" ' : "", 'style="', this.getSvgStyles(!0), '"', this.addPaintOrder(), " >", t.textSpans.join(""), "</text>\n"]
                    },
                    _getSVGTextAndBg: function(t, e) {
                        var i, r = [],
                            n = [],
                            o = t;
                        this._setSVGBg(n);
                        for (var a = 0, s = this._textLines.length; a < s; a++) i = this._getLineLeftOffset(a), (this.textBackgroundColor || this.styleHas("textBackgroundColor", a)) && this._setSVGTextLineBg(n, a, e + i, o), this._setSVGTextLineText(r, a, e + i, o), o += this.getHeightOfLine(a);
                        return {
                            textSpans: r,
                            textBgRects: n
                        }
                    },
                    _createTextCharSpan: function(t, e, i, r) {
                        var n = t !== t.trim() || t.match(C),
                            o = this.getSvgSpanStyles(e, n),
                            a = o ? 'style="' + o + '"' : "",
                            s = e.deltaY,
                            l = "",
                            h = T.Object.NUM_FRACTION_DIGITS;
                        return s && (l = ' dy="' + S(s, h) + '" '), ['<tspan x="', S(i, h), '" y="', S(r, h), '" ', l, a, ">", T.util.string.escapeXml(t), "</tspan>"].join("")
                    },
                    _setSVGTextLineText: function(t, e, i, r) {
                        var n, o, a, s, l, h = this.getHeightOfLine(e),
                            c = -1 !== this.textAlign.indexOf("justify"),
                            u = "",
                            f = 0,
                            d = this._textLines[e];
                        r += h * (1 - this._fontSizeFraction) / this.lineHeight;
                        for (var p = 0, g = d.length - 1; p <= g; p++) l = p === g || this.charSpacing, u += d[p], a = this.__charBounds[e][p], 0 === f ? (i += a.kernedWidth - a.width, f += a.width) : f += a.kernedWidth, c && !l && this._reSpaceAndTab.test(d[p]) && (l = !0), l || (n = n || this.getCompleteStyleDeclaration(e, p), o = this.getCompleteStyleDeclaration(e, p + 1), l = this._hasStyleChangedForSvg(n, o)), l && (s = this._getStyleDeclaration(e, p) || {}, t.push(this._createTextCharSpan(u, s, i, r)), u = "", n = o, i += f, f = 0)
                    },
                    _pushTextBgRect: function(t, e, i, r, n, o) {
                        var a = T.Object.NUM_FRACTION_DIGITS;
                        t.push("\t\t<rect ", this._getFillAttributes(e), ' x="', S(i, a), '" y="', S(r, a), '" width="', S(n, a), '" height="', S(o, a), '"></rect>\n')
                    },
                    _setSVGTextLineBg: function(t, e, i, r) {
                        for (var n, o, a = this._textLines[e], s = this.getHeightOfLine(e) / this.lineHeight, l = 0, h = 0, c = this.getValueOfPropertyAt(e, 0, "textBackgroundColor"), u = 0, f = a.length; u < f; u++) n = this.__charBounds[e][u], (o = this.getValueOfPropertyAt(e, u, "textBackgroundColor")) !== c ? (c && this._pushTextBgRect(t, c, i + h, r, l, s), h = n.left, l = n.width, c = o) : l += n.kernedWidth;
                        o && this._pushTextBgRect(t, o, i + h, r, l, s)
                    },
                    _getFillAttributes: function(t) {
                        var e = t && "string" == typeof t ? new T.Color(t) : "";
                        return e && e.getSource() && 1 !== e.getAlpha() ? 'opacity="' + e.getAlpha() + '" fill="' + e.setAlpha(1).toRgb() + '"' : 'fill="' + t + '"'
                    },
                    _getSVGLineTopOffset: function(t) {
                        for (var e, i = 0, r = 0; r < t; r++) i += this.getHeightOfLine(r);
                        return e = this.getHeightOfLine(r), {
                            lineTop: i,
                            offset: (this._fontSizeMult - this._fontSizeFraction) * e / (this.lineHeight * this._fontSizeMult)
                        }
                    },
                    getSvgStyles: function(t) {
                        return T.Object.prototype.getSvgStyles.call(this, t) + " white-space: pre;"
                    }
                }),
                function(t) {
                    "use strict";
                    var e = t.fabric || (t.fabric = {});
                    e.Textbox = e.util.createClass(e.IText, e.Observable, {
                        type: "textbox",
                        minWidth: 20,
                        dynamicMinWidth: 2,
                        __cachedLines: null,
                        lockScalingFlip: !0,
                        noScaleCache: !1,
                        _dimensionAffectingProps: e.Text.prototype._dimensionAffectingProps.concat("width"),
                        _wordJoiners: /[ \t\r]/,
                        splitByGrapheme: !1,
                        initDimensions: function() {
                            this.__skipDimension || (this.isEditing && this.initDelayedCursor(), this.clearContextTop(), this._clearCache(), this.dynamicMinWidth = 0, this._styleMap = this._generateStyleMap(this._splitText()), this.dynamicMinWidth > this.width && this._set("width", this.dynamicMinWidth), -1 !== this.textAlign.indexOf("justify") && this.enlargeSpaces(), this.height = this.calcTextHeight(), this.saveState({
                                propertySet: "_dimensionAffectingProps"
                            }))
                        },
                        _generateStyleMap: function(t) {
                            for (var e = 0, i = 0, r = 0, n = {}, o = 0; o < t.graphemeLines.length; o++) "\n" === t.graphemeText[r] && o > 0 ? (i = 0, r++, e++) : !this.splitByGrapheme && this._reSpaceAndTab.test(t.graphemeText[r]) && o > 0 && (i++, r++), n[o] = {
                                line: e,
                                offset: i
                            }, r += t.graphemeLines[o].length, i += t.graphemeLines[o].length;
                            return n
                        },
                        styleHas: function(t, i) {
                            if (this._styleMap && !this.isWrapping) {
                                var r = this._styleMap[i];
                                r && (i = r.line)
                            }
                            return e.Text.prototype.styleHas.call(this, t, i)
                        },
                        isEmptyStyles: function(t) {
                            if (!this.styles) return !0;
                            var e, i, r = 0,
                                n = !1,
                                o = this._styleMap[t],
                                a = this._styleMap[t + 1];
                            for (var s in o && (t = o.line, r = o.offset), a && (n = a.line === t, e = a.offset), i = void 0 === t ? this.styles : {
                                    line: this.styles[t]
                                })
                                for (var l in i[s])
                                    if (l >= r && (!n || l < e))
                                        for (var h in i[s][l]) return !1;
                            return !0
                        },
                        _getStyleDeclaration: function(t, e) {
                            if (this._styleMap && !this.isWrapping) {
                                var i = this._styleMap[t];
                                if (!i) return null;
                                t = i.line, e = i.offset + e
                            }
                            return this.callSuper("_getStyleDeclaration", t, e)
                        },
                        _setStyleDeclaration: function(t, e, i) {
                            var r = this._styleMap[t];
                            t = r.line, e = r.offset + e, this.styles[t][e] = i
                        },
                        _deleteStyleDeclaration: function(t, e) {
                            var i = this._styleMap[t];
                            t = i.line, e = i.offset + e, delete this.styles[t][e]
                        },
                        _getLineStyle: function(t) {
                            var e = this._styleMap[t];
                            return !!this.styles[e.line]
                        },
                        _setLineStyle: function(t) {
                            var e = this._styleMap[t];
                            this.styles[e.line] = {}
                        },
                        _wrapText: function(t, e) {
                            var i, r = [];
                            for (this.isWrapping = !0, i = 0; i < t.length; i++) r = r.concat(this._wrapLine(t[i], i, e));
                            return this.isWrapping = !1, r
                        },
                        _measureWord: function(t, e, i) {
                            var r, n = 0;
                            i = i || 0;
                            for (var o = 0, a = t.length; o < a; o++) {
                                n += this._getGraphemeBox(t[o], e, o + i, r, true).kernedWidth, r = t[o]
                            }
                            return n
                        },
                        _wrapLine: function(t, i, r, n) {
                            var o = 0,
                                a = this.splitByGrapheme,
                                s = [],
                                l = [],
                                h = a ? e.util.string.graphemeSplit(t) : t.split(this._wordJoiners),
                                c = "",
                                u = 0,
                                f = a ? "" : " ",
                                d = 0,
                                p = 0,
                                g = 0,
                                v = !0,
                                m = this._getWidthOfCharSpacing();
                            n = n || 0;
                            0 === h.length && h.push([]), r -= n;
                            for (var y = 0; y < h.length; y++) c = a ? h[y] : e.util.string.graphemeSplit(h[y]), d = this._measureWord(c, i, u), u += c.length, (o += p + d - m) > r && !v ? (s.push(l), l = [], o = d, v = !0) : o += m, v || a || l.push(f), l = l.concat(c), p = a ? 0 : this._measureWord([f], i, u), u++, v = !1, d > g && (g = d);
                            return y && s.push(l), g + n > this.dynamicMinWidth && (this.dynamicMinWidth = g - m + n), s
                        },
                        isEndOfWrapping: function(t) {
                            return !this._styleMap[t + 1] || this._styleMap[t + 1].line !== this._styleMap[t].line
                        },
                        missingNewlineOffset: function(t) {
                            return this.splitByGrapheme ? this.isEndOfWrapping(t) ? 1 : 0 : 1
                        },
                        _splitTextIntoLines: function(t) {
                            for (var i = e.Text.prototype._splitTextIntoLines.call(this, t), r = this._wrapText(i.lines, this.width), n = new Array(r.length), o = 0; o < r.length; o++) n[o] = r[o].join("");
                            return i.lines = n, i.graphemeLines = r, i
                        },
                        getMinWidth: function() {
                            return Math.max(this.minWidth, this.dynamicMinWidth)
                        },
                        _removeExtraneousStyles: function() {
                            var t = {};
                            for (var e in this._styleMap) this._textLines[e] && (t[this._styleMap[e].line] = 1);
                            for (var e in this.styles) t[e] || delete this.styles[e]
                        },
                        toObject: function(t) {
                            return this.callSuper("toObject", ["minWidth", "splitByGrapheme"].concat(t))
                        }
                    }), e.Textbox.fromObject = function(t, i) {
                        return e.Object._fromObject("Textbox", t, i, "text")
                    }
                }(e),
                function() {
                    var t = T.controlsUtils,
                        e = t.scaleSkewCursorStyleHandler,
                        i = t.scaleCursorStyleHandler,
                        r = t.scalingEqually,
                        n = t.scalingYOrSkewingX,
                        o = t.scalingXOrSkewingY,
                        a = t.scaleOrSkewActionName,
                        s = T.Object.prototype.controls;
                    if (s.ml = new T.Control({
                            x: -.5,
                            y: 0,
                            cursorStyleHandler: e,
                            actionHandler: o,
                            getActionName: a
                        }), s.mr = new T.Control({
                            x: .5,
                            y: 0,
                            cursorStyleHandler: e,
                            actionHandler: o,
                            getActionName: a
                        }), s.mb = new T.Control({
                            x: 0,
                            y: .5,
                            cursorStyleHandler: e,
                            actionHandler: n,
                            getActionName: a
                        }), s.mt = new T.Control({
                            x: 0,
                            y: -.5,
                            cursorStyleHandler: e,
                            actionHandler: n,
                            getActionName: a
                        }), s.tl = new T.Control({
                            x: -.5,
                            y: -.5,
                            cursorStyleHandler: i,
                            actionHandler: r
                        }), s.tr = new T.Control({
                            x: .5,
                            y: -.5,
                            cursorStyleHandler: i,
                            actionHandler: r
                        }), s.bl = new T.Control({
                            x: -.5,
                            y: .5,
                            cursorStyleHandler: i,
                            actionHandler: r
                        }), s.br = new T.Control({
                            x: .5,
                            y: .5,
                            cursorStyleHandler: i,
                            actionHandler: r
                        }), s.mtr = new T.Control({
                            x: 0,
                            y: -.5,
                            actionHandler: t.rotationWithSnapping,
                            cursorStyleHandler: t.rotationStyleHandler,
                            offsetY: -40,
                            withConnection: !0,
                            actionName: "rotate"
                        }), T.Textbox) {
                        var l = T.Textbox.prototype.controls = {};
                        l.mtr = s.mtr, l.tr = s.tr, l.br = s.br, l.tl = s.tl, l.bl = s.bl, l.mt = s.mt, l.mb = s.mb, l.mr = new T.Control({
                            x: .5,
                            y: 0,
                            actionHandler: t.changeWidth,
                            cursorStyleHandler: e,
                            actionName: "resizing"
                        }), l.ml = new T.Control({
                            x: -.5,
                            y: 0,
                            actionHandler: t.changeWidth,
                            cursorStyleHandler: e,
                            actionName: "resizing"
                        })
                    }
                }()
        },
        95281: (t, e, i) => {
            "use strict";
            var r, n;
            i.r(e), i.d(e, {
                BoundingBox: () => k,
                Font: () => fr,
                Glyph: () => xt,
                Path: () => O,
                _parse: () => st,
                load: () => Rr,
                loadSync: () => Fr,
                parse: () => Dr
            }), String.prototype.codePointAt || (r = function() {
                try {
                    var t = {},
                        e = Object.defineProperty,
                        i = e(t, t, t) && e
                } catch (t) {}
                return i
            }(), n = function(t) {
                if (null == this) throw TypeError();
                var e = String(this),
                    i = e.length,
                    r = t ? Number(t) : 0;
                if (r != r && (r = 0), !(r < 0 || r >= i)) {
                    var n, o = e.charCodeAt(r);
                    return o >= 55296 && o <= 56319 && i > r + 1 && (n = e.charCodeAt(r + 1)) >= 56320 && n <= 57343 ? 1024 * (o - 55296) + n - 56320 + 65536 : o
                }
            }, r ? r(String.prototype, "codePointAt", {
                value: n,
                configurable: !0,
                writable: !0
            }) : String.prototype.codePointAt = n);

            function o() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288)
            }

            function a(t, e) {
                this.source = t, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = e, this.destLen = 0, this.ltree = new o, this.dtree = new o
            }
            var s = new o,
                l = new o,
                h = new Uint8Array(30),
                c = new Uint16Array(30),
                u = new Uint8Array(30),
                f = new Uint16Array(30),
                d = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
                p = new o,
                g = new Uint8Array(320);

            function v(t, e, i, r) {
                var n, o;
                for (n = 0; n < i; ++n) t[n] = 0;
                for (n = 0; n < 30 - i; ++n) t[n + i] = n / i | 0;
                for (o = r, n = 0; n < 30; ++n) e[n] = o, o += 1 << t[n]
            }
            var m = new Uint16Array(16);

            function y(t, e, i, r) {
                var n, o;
                for (n = 0; n < 16; ++n) t.table[n] = 0;
                for (n = 0; n < r; ++n) t.table[e[i + n]]++;
                for (t.table[0] = 0, o = 0, n = 0; n < 16; ++n) m[n] = o, o += t.table[n];
                for (n = 0; n < r; ++n) e[i + n] && (t.trans[m[e[i + n]]++] = n)
            }

            function b(t) {
                t.bitcount-- || (t.tag = t.source[t.sourceIndex++], t.bitcount = 7);
                var e = 1 & t.tag;
                return t.tag >>>= 1, e
            }

            function x(t, e, i) {
                if (!e) return i;
                for (; t.bitcount < 24;) t.tag |= t.source[t.sourceIndex++] << t.bitcount, t.bitcount += 8;
                var r = t.tag & 65535 >>> 16 - e;
                return t.tag >>>= e, t.bitcount -= e, r + i
            }

            function _(t, e) {
                for (; t.bitcount < 24;) t.tag |= t.source[t.sourceIndex++] << t.bitcount, t.bitcount += 8;
                var i = 0,
                    r = 0,
                    n = 0,
                    o = t.tag;
                do {
                    r = 2 * r + (1 & o), o >>>= 1, ++n, i += e.table[n], r -= e.table[n]
                } while (r >= 0);
                return t.tag = o, t.bitcount -= n, e.trans[i + r]
            }

            function w(t, e, i) {
                var r, n, o, a, s, l;
                for (r = x(t, 5, 257), n = x(t, 5, 1), o = x(t, 4, 4), a = 0; a < 19; ++a) g[a] = 0;
                for (a = 0; a < o; ++a) {
                    var h = x(t, 3, 0);
                    g[d[a]] = h
                }
                for (y(p, g, 0, 19), s = 0; s < r + n;) {
                    var c = _(t, p);
                    switch (c) {
                        case 16:
                            var u = g[s - 1];
                            for (l = x(t, 2, 3); l; --l) g[s++] = u;
                            break;
                        case 17:
                            for (l = x(t, 3, 3); l; --l) g[s++] = 0;
                            break;
                        case 18:
                            for (l = x(t, 7, 11); l; --l) g[s++] = 0;
                            break;
                        default:
                            g[s++] = c
                    }
                }
                y(e, g, 0, r), y(i, g, r, n)
            }

            function S(t, e, i) {
                for (;;) {
                    var r, n, o, a, s = _(t, e);
                    if (256 === s) return 0;
                    if (s < 256) t.dest[t.destLen++] = s;
                    else
                        for (r = x(t, h[s -= 257], c[s]), n = _(t, i), a = o = t.destLen - x(t, u[n], f[n]); a < o + r; ++a) t.dest[t.destLen++] = t.dest[a]
                }
            }

            function C(t) {
                for (var e, i; t.bitcount > 8;) t.sourceIndex--, t.bitcount -= 8;
                if ((e = 256 * (e = t.source[t.sourceIndex + 1]) + t.source[t.sourceIndex]) !== (65535 & ~(256 * t.source[t.sourceIndex + 3] + t.source[t.sourceIndex + 2]))) return -3;
                for (t.sourceIndex += 4, i = e; i; --i) t.dest[t.destLen++] = t.source[t.sourceIndex++];
                return t.bitcount = 0, 0
            }! function(t, e) {
                var i;
                for (i = 0; i < 7; ++i) t.table[i] = 0;
                for (t.table[7] = 24, t.table[8] = 152, t.table[9] = 112, i = 0; i < 24; ++i) t.trans[i] = 256 + i;
                for (i = 0; i < 144; ++i) t.trans[24 + i] = i;
                for (i = 0; i < 8; ++i) t.trans[168 + i] = 280 + i;
                for (i = 0; i < 112; ++i) t.trans[176 + i] = 144 + i;
                for (i = 0; i < 5; ++i) e.table[i] = 0;
                for (e.table[5] = 32, i = 0; i < 32; ++i) e.trans[i] = i
            }(s, l), v(h, c, 4, 3), v(u, f, 2, 1), h[28] = 0, c[28] = 258;
            var T = function(t, e) {
                var i, r, n = new a(t, e);
                do {
                    switch (i = b(n), x(n, 2, 0)) {
                        case 0:
                            r = C(n);
                            break;
                        case 1:
                            r = S(n, s, l);
                            break;
                        case 2:
                            w(n, n.ltree, n.dtree), r = S(n, n.ltree, n.dtree);
                            break;
                        default:
                            r = -3
                    }
                    if (0 !== r) throw new Error("Data error")
                } while (!i);
                return n.destLen < n.dest.length ? "function" == typeof n.dest.slice ? n.dest.slice(0, n.destLen) : n.dest.subarray(0, n.destLen) : n.dest
            };

            function E(t, e, i, r, n) {
                return Math.pow(1 - n, 3) * t + 3 * Math.pow(1 - n, 2) * n * e + 3 * (1 - n) * Math.pow(n, 2) * i + Math.pow(n, 3) * r
            }

            function k() {
                this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN
            }

            function O() {
                this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1
            }

            function I(t) {
                throw new Error(t)
            }

            function P(t, e) {
                t || I(e)
            }
            k.prototype.isEmpty = function() {
                return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2)
            }, k.prototype.addPoint = function(t, e) {
                "number" == typeof t && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = t, this.x2 = t), t < this.x1 && (this.x1 = t), t > this.x2 && (this.x2 = t)), "number" == typeof e && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = e, this.y2 = e), e < this.y1 && (this.y1 = e), e > this.y2 && (this.y2 = e))
            }, k.prototype.addX = function(t) {
                this.addPoint(t, null)
            }, k.prototype.addY = function(t) {
                this.addPoint(null, t)
            }, k.prototype.addBezier = function(t, e, i, r, n, o, a, s) {
                var l = [t, e],
                    h = [i, r],
                    c = [n, o],
                    u = [a, s];
                this.addPoint(t, e), this.addPoint(a, s);
                for (var f = 0; f <= 1; f++) {
                    var d = 6 * l[f] - 12 * h[f] + 6 * c[f],
                        p = -3 * l[f] + 9 * h[f] - 9 * c[f] + 3 * u[f],
                        g = 3 * h[f] - 3 * l[f];
                    if (0 !== p) {
                        var v = Math.pow(d, 2) - 4 * g * p;
                        if (!(v < 0)) {
                            var m = (-d + Math.sqrt(v)) / (2 * p);
                            0 < m && m < 1 && (0 === f && this.addX(E(l[f], h[f], c[f], u[f], m)), 1 === f && this.addY(E(l[f], h[f], c[f], u[f], m)));
                            var y = (-d - Math.sqrt(v)) / (2 * p);
                            0 < y && y < 1 && (0 === f && this.addX(E(l[f], h[f], c[f], u[f], y)), 1 === f && this.addY(E(l[f], h[f], c[f], u[f], y)))
                        }
                    } else {
                        if (0 === d) continue;
                        var b = -g / d;
                        0 < b && b < 1 && (0 === f && this.addX(E(l[f], h[f], c[f], u[f], b)), 1 === f && this.addY(E(l[f], h[f], c[f], u[f], b)))
                    }
                }
            }, k.prototype.addQuad = function(t, e, i, r, n, o) {
                var a = t + 2 / 3 * (i - t),
                    s = e + 2 / 3 * (r - e),
                    l = a + 1 / 3 * (n - t),
                    h = s + 1 / 3 * (o - e);
                this.addBezier(t, e, a, s, l, h, n, o)
            }, O.prototype.moveTo = function(t, e) {
                this.commands.push({
                    type: "M",
                    x: t,
                    y: e
                })
            }, O.prototype.lineTo = function(t, e) {
                this.commands.push({
                    type: "L",
                    x: t,
                    y: e
                })
            }, O.prototype.curveTo = O.prototype.bezierCurveTo = function(t, e, i, r, n, o) {
                this.commands.push({
                    type: "C",
                    x1: t,
                    y1: e,
                    x2: i,
                    y2: r,
                    x: n,
                    y: o
                })
            }, O.prototype.quadTo = O.prototype.quadraticCurveTo = function(t, e, i, r) {
                this.commands.push({
                    type: "Q",
                    x1: t,
                    y1: e,
                    x: i,
                    y: r
                })
            }, O.prototype.close = O.prototype.closePath = function() {
                this.commands.push({
                    type: "Z"
                })
            }, O.prototype.extend = function(t) {
                if (t.commands) t = t.commands;
                else if (t instanceof k) {
                    var e = t;
                    return this.moveTo(e.x1, e.y1), this.lineTo(e.x2, e.y1), this.lineTo(e.x2, e.y2), this.lineTo(e.x1, e.y2), void this.close()
                }
                Array.prototype.push.apply(this.commands, t)
            }, O.prototype.getBoundingBox = function() {
                for (var t = new k, e = 0, i = 0, r = 0, n = 0, o = 0; o < this.commands.length; o++) {
                    var a = this.commands[o];
                    switch (a.type) {
                        case "M":
                            t.addPoint(a.x, a.y), e = r = a.x, i = n = a.y;
                            break;
                        case "L":
                            t.addPoint(a.x, a.y), r = a.x, n = a.y;
                            break;
                        case "Q":
                            t.addQuad(r, n, a.x1, a.y1, a.x, a.y), r = a.x, n = a.y;
                            break;
                        case "C":
                            t.addBezier(r, n, a.x1, a.y1, a.x2, a.y2, a.x, a.y), r = a.x, n = a.y;
                            break;
                        case "Z":
                            r = e, n = i;
                            break;
                        default:
                            throw new Error("Unexpected path command " + a.type)
                    }
                }
                return t.isEmpty() && t.addPoint(0, 0), t
            }, O.prototype.draw = function(t) {
                t.beginPath();
                for (var e = 0; e < this.commands.length; e += 1) {
                    var i = this.commands[e];
                    "M" === i.type ? t.moveTo(i.x, i.y) : "L" === i.type ? t.lineTo(i.x, i.y) : "C" === i.type ? t.bezierCurveTo(i.x1, i.y1, i.x2, i.y2, i.x, i.y) : "Q" === i.type ? t.quadraticCurveTo(i.x1, i.y1, i.x, i.y) : "Z" === i.type && t.closePath()
                }
                this.fill && (t.fillStyle = this.fill, t.fill()), this.stroke && (t.strokeStyle = this.stroke, t.lineWidth = this.strokeWidth, t.stroke())
            }, O.prototype.toPathData = function(t) {
                function e(e) {
                    return Math.round(e) === e ? "" + Math.round(e) : e.toFixed(t)
                }

                function i() {
                    for (var t = arguments, i = "", r = 0; r < arguments.length; r += 1) {
                        var n = t[r];
                        n >= 0 && r > 0 && (i += " "), i += e(n)
                    }
                    return i
                }
                t = void 0 !== t ? t : 2;
                for (var r = "", n = 0; n < this.commands.length; n += 1) {
                    var o = this.commands[n];
                    "M" === o.type ? r += "M" + i(o.x, o.y) : "L" === o.type ? r += "L" + i(o.x, o.y) : "C" === o.type ? r += "C" + i(o.x1, o.y1, o.x2, o.y2, o.x, o.y) : "Q" === o.type ? r += "Q" + i(o.x1, o.y1, o.x, o.y) : "Z" === o.type && (r += "Z")
                }
                return r
            }, O.prototype.toSVG = function(t) {
                var e = '<path d="';
                return e += this.toPathData(t), e += '"', this.fill && "black" !== this.fill && (null === this.fill ? e += ' fill="none"' : e += ' fill="' + this.fill + '"'), this.stroke && (e += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), e += "/>"
            }, O.prototype.toDOMElement = function(t) {
                var e = this.toPathData(t),
                    i = document.createElementNS("http://www.w3.org/2000/svg", "path");
                return i.setAttribute("d", e), i
            };
            var L = {
                    fail: I,
                    argument: P,
                    assert: P
                },
                M = 2147483648,
                A = {},
                D = {},
                R = {};

            function F(t) {
                return function() {
                    return t
                }
            }
            D.BYTE = function(t) {
                return L.argument(t >= 0 && t <= 255, "Byte value should be between 0 and 255."), [t]
            }, R.BYTE = F(1), D.CHAR = function(t) {
                return [t.charCodeAt(0)]
            }, R.CHAR = F(1), D.CHARARRAY = function(t) {
                void 0 === t && (t = "", console.warn("Undefined CHARARRAY encountered and treated as an empty string. This is probably caused by a missing glyph name."));
                for (var e = [], i = 0; i < t.length; i += 1) e[i] = t.charCodeAt(i);
                return e
            }, R.CHARARRAY = function(t) {
                return void 0 === t ? 0 : t.length
            }, D.USHORT = function(t) {
                return [t >> 8 & 255, 255 & t]
            }, R.USHORT = F(2), D.SHORT = function(t) {
                return t >= 32768 && (t = -(65536 - t)), [t >> 8 & 255, 255 & t]
            }, R.SHORT = F(2), D.UINT24 = function(t) {
                return [t >> 16 & 255, t >> 8 & 255, 255 & t]
            }, R.UINT24 = F(3), D.ULONG = function(t) {
                return [t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t]
            }, R.ULONG = F(4), D.LONG = function(t) {
                return t >= M && (t = -(2 * M - t)), [t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t]
            }, R.LONG = F(4), D.FIXED = D.ULONG, R.FIXED = R.ULONG, D.FWORD = D.SHORT, R.FWORD = R.SHORT, D.UFWORD = D.USHORT, R.UFWORD = R.USHORT, D.LONGDATETIME = function(t) {
                return [0, 0, 0, 0, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t]
            }, R.LONGDATETIME = F(8), D.TAG = function(t) {
                return L.argument(4 === t.length, "Tag should be exactly 4 ASCII characters."), [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]
            }, R.TAG = F(4), D.Card8 = D.BYTE, R.Card8 = R.BYTE, D.Card16 = D.USHORT, R.Card16 = R.USHORT, D.OffSize = D.BYTE, R.OffSize = R.BYTE, D.SID = D.USHORT, R.SID = R.USHORT, D.NUMBER = function(t) {
                return t >= -107 && t <= 107 ? [t + 139] : t >= 108 && t <= 1131 ? [247 + ((t -= 108) >> 8), 255 & t] : t >= -1131 && t <= -108 ? [251 + ((t = -t - 108) >> 8), 255 & t] : t >= -32768 && t <= 32767 ? D.NUMBER16(t) : D.NUMBER32(t)
            }, R.NUMBER = function(t) {
                return D.NUMBER(t).length
            }, D.NUMBER16 = function(t) {
                return [28, t >> 8 & 255, 255 & t]
            }, R.NUMBER16 = F(3), D.NUMBER32 = function(t) {
                return [29, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t]
            }, R.NUMBER32 = F(5), D.REAL = function(t) {
                var e = t.toString(),
                    i = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(e);
                if (i) {
                    var r = parseFloat("1e" + ((i[2] ? +i[2] : 0) + i[1].length));
                    e = (Math.round(t * r) / r).toString()
                }
                for (var n = "", o = 0, a = e.length; o < a; o += 1) {
                    var s = e[o];
                    n += "e" === s ? "-" === e[++o] ? "c" : "b" : "." === s ? "a" : "-" === s ? "e" : s
                }
                for (var l = [30], h = 0, c = (n += 1 & n.length ? "f" : "ff").length; h < c; h += 2) l.push(parseInt(n.substr(h, 2), 16));
                return l
            }, R.REAL = function(t) {
                return D.REAL(t).length
            }, D.NAME = D.CHARARRAY, R.NAME = R.CHARARRAY, D.STRING = D.CHARARRAY, R.STRING = R.CHARARRAY, A.UTF8 = function(t, e, i) {
                for (var r = [], n = i, o = 0; o < n; o++, e += 1) r[o] = t.getUint8(e);
                return String.fromCharCode.apply(null, r)
            }, A.UTF16 = function(t, e, i) {
                for (var r = [], n = i / 2, o = 0; o < n; o++, e += 2) r[o] = t.getUint16(e);
                return String.fromCharCode.apply(null, r)
            }, D.UTF16 = function(t) {
                for (var e = [], i = 0; i < t.length; i += 1) {
                    var r = t.charCodeAt(i);
                    e[e.length] = r >> 8 & 255, e[e.length] = 255 & r
                }
                return e
            }, R.UTF16 = function(t) {
                return 2 * t.length
            };
            var j = {
                "x-mac-croatian": "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â€ Â°Â¢Â£Â§â€¢Â¶ÃŸÂ®Å â„¢Â´Â¨â‰ Å½Ã˜âˆžÂ±â‰¤â‰¥âˆ†Âµâˆ‚âˆ‘âˆÅ¡âˆ«ÂªÂºÎ©Å¾Ã¸Â¿Â¡Â¬âˆšÆ’â‰ˆÄ†Â«ÄŒâ€¦Â Ã€ÃƒÃ•Å’Å“Äâ€”â€œâ€â€˜â€™Ã·â—Šï£¿Â©â„â‚¬â€¹â€ºÃ†Â»â€“Â·â€šâ€žâ€°Ã‚Ä‡ÃÄÃˆÃÃŽÃÃŒÃ“Ã”Ä‘Ã’ÃšÃ›Ã™Ä±Ë†ËœÂ¯Ï€Ã‹ËšÂ¸ÃŠÃ¦Ë‡",
                "x-mac-cyrillic": "ÐÐ‘Ð’Ð“Ð”Ð•Ð–Ð—Ð˜Ð™ÐšÐ›ÐœÐÐžÐŸÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â€ Â°ÒÂ£Â§â€¢Â¶Ð†Â®Â©â„¢Ð‚Ñ’â‰ ÐƒÑ“âˆžÂ±â‰¤â‰¥Ñ–ÂµÒ‘ÐˆÐ„Ñ”Ð‡Ñ—Ð‰Ñ™ÐŠÑšÑ˜Ð…Â¬âˆšÆ’â‰ˆâˆ†Â«Â»â€¦Â Ð‹Ñ›ÐŒÑœÑ•â€“â€”â€œâ€â€˜â€™Ã·â€žÐŽÑžÐÑŸâ„–ÐÑ‘ÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿Ñ€ÑÑ‚ÑƒÑ„Ñ…Ñ†Ñ‡ÑˆÑ‰ÑŠÑ‹ÑŒÑÑŽ",
                "x-mac-gaelic": "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â€ Â°Â¢Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Â´Â¨â‰ Ã†Ã˜á¸‚Â±â‰¤â‰¥á¸ƒÄŠÄ‹á¸Šá¸‹á¸žá¸ŸÄ Ä¡á¹€Ã¦Ã¸á¹á¹–á¹—É¼Æ’Å¿á¹ Â«Â»â€¦Â Ã€ÃƒÃ•Å’Å“â€“â€”â€œâ€â€˜â€™á¹¡áº›Ã¿Å¸á¹ªâ‚¬â€¹â€ºÅ¶Å·á¹«Â·á»²á»³âŠÃ‚ÃŠÃÃ‹ÃˆÃÃŽÃÃŒÃ“Ã”â™£Ã’ÃšÃ›Ã™Ä±ÃÃ½Å´Åµáº„áº…áº€áºáº‚áºƒ",
                "x-mac-greek": "Ã„Â¹Â²Ã‰Â³Ã–ÃœÎ…Ã Ã¢Ã¤Î„Â¨Ã§Ã©Ã¨ÃªÃ«Â£â„¢Ã®Ã¯â€¢Â½â€°Ã´Ã¶Â¦â‚¬Ã¹Ã»Ã¼â€ Î“Î”Î˜Î›ÎžÎ ÃŸÂ®Â©Î£ÎªÂ§â‰ Â°Â·Î‘Â±â‰¤â‰¥Â¥Î’Î•Î–Î—Î™ÎšÎœÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎŸÎ¡â‰ˆÎ¤Â«Â»â€¦Â Î¥Î§Î†ÎˆÅ“â€“â€•â€œâ€â€˜â€™Ã·Î‰ÎŠÎŒÎŽÎ­Î®Î¯ÏŒÎÏÎ±Î²ÏˆÎ´ÎµÏ†Î³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿Ï€ÏŽÏÏƒÏ„Î¸Ï‰Ï‚Ï‡Ï…Î¶ÏŠÏ‹ÎÎ°Â­",
                "x-mac-icelandic": "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Â´Â¨â‰ Ã†Ã˜âˆžÂ±â‰¤â‰¥Â¥Âµâˆ‚âˆ‘âˆÏ€âˆ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âˆšÆ’â‰ˆâˆ†Â«Â»â€¦Â Ã€ÃƒÃ•Å’Å“â€“â€”â€œâ€â€˜â€™Ã·â—ŠÃ¿Å¸â„â‚¬ÃÃ°ÃžÃ¾Ã½Â·â€šâ€žâ€°Ã‚ÃŠÃÃ‹ÃˆÃÃŽÃÃŒÃ“Ã”ï£¿Ã’ÃšÃ›Ã™Ä±Ë†ËœÂ¯Ë˜Ë™ËšÂ¸ËË›Ë‡",
                "x-mac-inuit": "áƒá„á…á†áŠá‹á±á²á³á´á¸á¹á‘‰á‘Žá‘á‘á‘‘á‘•á‘–á‘¦á‘­á‘®á‘¯á‘°á‘²á‘³á’ƒá’‹á’Œá’á’Žá’á’‘Â°á’¡á’¥á’¦â€¢Â¶á’§Â®Â©â„¢á’¨á’ªá’«á’»á“‚á“ƒá“„á“…á“‡á“ˆá“á“¯á“°á“±á“²á“´á“µá”…á“•á“–á“—á“˜á“šá“›á“ªá”¨á”©á”ªá”«á”­â€¦Â á”®á”¾á••á•–á•—â€“â€”â€œâ€â€˜â€™á•˜á•™á•šá•á•†á•‡á•ˆá•‰á•‹á•Œá•á•¿á–€á–á–‚á–ƒá–„á–…á–á–á–‘á–’á–“á–”á–•á™±á™²á™³á™´á™µá™¶á––á– á–¡á–¢á–£á–¤á–¥á–¦á•¼ÅÅ‚",
                "x-mac-ce": "Ã„Ä€ÄÃ‰Ä„Ã–ÃœÃ¡Ä…ÄŒÃ¤ÄÄ†Ä‡Ã©Å¹ÅºÄŽÃ­ÄÄ’Ä“Ä–Ã³Ä—Ã´Ã¶ÃµÃºÄšÄ›Ã¼â€ Â°Ä˜Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Ä™Â¨â‰ Ä£Ä®Ä¯Äªâ‰¤â‰¥Ä«Ä¶âˆ‚âˆ‘Å‚Ä»Ä¼Ä½Ä¾Ä¹ÄºÅ…Å†ÅƒÂ¬âˆšÅ„Å‡âˆ†Â«Â»â€¦Â ÅˆÅÃ•Å‘ÅŒâ€“â€”â€œâ€â€˜â€™Ã·â—ŠÅÅ”Å•Å˜â€¹â€ºÅ™Å–Å—Å â€šâ€žÅ¡ÅšÅ›ÃÅ¤Å¥ÃÅ½Å¾ÅªÃ“Ã”Å«Å®ÃšÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë‡",
                macintosh: "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â€ Â°Â¢Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Â´Â¨â‰ Ã†Ã˜âˆžÂ±â‰¤â‰¥Â¥Âµâˆ‚âˆ‘âˆÏ€âˆ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âˆšÆ’â‰ˆâˆ†Â«Â»â€¦Â Ã€ÃƒÃ•Å’Å“â€“â€”â€œâ€â€˜â€™Ã·â—ŠÃ¿Å¸â„â‚¬â€¹â€ºï¬ï¬‚â€¡Â·â€šâ€žâ€°Ã‚ÃŠÃÃ‹ÃˆÃÃŽÃÃŒÃ“Ã”ï£¿Ã’ÃšÃ›Ã™Ä±Ë†ËœÂ¯Ë˜Ë™ËšÂ¸ËË›Ë‡",
                "x-mac-romanian": "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â€ Â°Â¢Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Â´Â¨â‰ Ä‚È˜âˆžÂ±â‰¤â‰¥Â¥Âµâˆ‚âˆ‘âˆÏ€âˆ«ÂªÂºÎ©ÄƒÈ™Â¿Â¡Â¬âˆšÆ’â‰ˆâˆ†Â«Â»â€¦Â Ã€ÃƒÃ•Å’Å“â€“â€”â€œâ€â€˜â€™Ã·â—ŠÃ¿Å¸â„â‚¬â€¹â€ºÈšÈ›â€¡Â·â€šâ€žâ€°Ã‚ÃŠÃÃ‹ÃˆÃÃŽÃÃŒÃ“Ã”ï£¿Ã’ÃšÃ›Ã™Ä±Ë†ËœÂ¯Ë˜Ë™ËšÂ¸ËË›Ë‡",
                "x-mac-turkish": "Ã„Ã…Ã‡Ã‰Ã‘Ã–ÃœÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â€ Â°Â¢Â£Â§â€¢Â¶ÃŸÂ®Â©â„¢Â´Â¨â‰ Ã†Ã˜âˆžÂ±â‰¤â‰¥Â¥Âµâˆ‚âˆ‘âˆÏ€âˆ«ÂªÂºÎ©Ã¦Ã¸Â¿Â¡Â¬âˆšÆ’â‰ˆâˆ†Â«Â»â€¦Â Ã€ÃƒÃ•Å’Å“â€“â€”â€œâ€â€˜â€™Ã·â—ŠÃ¿Å¸ÄžÄŸÄ°Ä±ÅžÅŸâ€¡Â·â€šâ€žâ€°Ã‚ÃŠÃÃ‹ÃˆÃÃŽÃÃŒÃ“Ã”ï£¿Ã’ÃšÃ›Ã™ï¢ Ë†ËœÂ¯Ë˜Ë™ËšÂ¸ËË›Ë‡"
            };
            A.MACSTRING = function(t, e, i, r) {
                var n = j[r];
                if (void 0 !== n) {
                    for (var o = "", a = 0; a < i; a++) {
                        var s = t.getUint8(e + a);
                        o += s <= 127 ? String.fromCharCode(s) : n[127 & s]
                    }
                    return o
                }
            };
            var B, U = "function" == typeof WeakMap && new WeakMap;

            function N(t) {
                return t >= -128 && t <= 127
            }

            function G(t, e, i) {
                for (var r = 0, n = t.length; e < n && r < 64 && 0 === t[e];) ++e, ++r;
                return i.push(128 | r - 1), e
            }

            function X(t, e, i) {
                for (var r = 0, n = t.length, o = e; o < n && r < 64;) {
                    var a = t[o];
                    if (!N(a)) break;
                    if (0 === a && o + 1 < n && 0 === t[o + 1]) break;
                    ++o, ++r
                }
                i.push(r - 1);
                for (var s = e; s < o; ++s) i.push(t[s] + 256 & 255);
                return o
            }

            function z(t, e, i) {
                for (var r = 0, n = t.length, o = e; o < n && r < 64;) {
                    var a = t[o];
                    if (0 === a) break;
                    if (N(a) && o + 1 < n && N(t[o + 1])) break;
                    ++o, ++r
                }
                i.push(64 | r - 1);
                for (var s = e; s < o; ++s) {
                    var l = t[s];
                    i.push(l + 65536 >> 8 & 255, l + 256 & 255)
                }
                return o
            }
            D.MACSTRING = function(t, e) {
                var i = function(t) {
                    if (!B)
                        for (var e in B = {}, j) B[e] = new String(e);
                    var i = B[t];
                    if (void 0 !== i) {
                        if (U) {
                            var r = U.get(i);
                            if (void 0 !== r) return r
                        }
                        var n = j[t];
                        if (void 0 !== n) {
                            for (var o = {}, a = 0; a < n.length; a++) o[n.charCodeAt(a)] = a + 128;
                            return U && U.set(i, o), o
                        }
                    }
                }(e);
                if (void 0 !== i) {
                    for (var r = [], n = 0; n < t.length; n++) {
                        var o = t.charCodeAt(n);
                        if (o >= 128 && void 0 === (o = i[o])) return;
                        r[n] = o
                    }
                    return r
                }
            }, R.MACSTRING = function(t, e) {
                var i = D.MACSTRING(t, e);
                return void 0 !== i ? i.length : 0
            }, D.VARDELTAS = function(t) {
                for (var e = 0, i = []; e < t.length;) {
                    var r = t[e];
                    e = 0 === r ? G(t, e, i) : r >= -128 && r <= 127 ? X(t, e, i) : z(t, e, i)
                }
                return i
            }, D.INDEX = function(t) {
                for (var e = 1, i = [e], r = [], n = 0; n < t.length; n += 1) {
                    var o = D.OBJECT(t[n]);
                    Array.prototype.push.apply(r, o), e += o.length, i.push(e)
                }
                if (0 === r.length) return [0, 0];
                for (var a = [], s = 1 + Math.floor(Math.log(e) / Math.log(2)) / 8 | 0, l = [void 0, D.BYTE, D.USHORT, D.UINT24, D.ULONG][s], h = 0; h < i.length; h += 1) {
                    var c = l(i[h]);
                    Array.prototype.push.apply(a, c)
                }
                return Array.prototype.concat(D.Card16(t.length), D.OffSize(s), a, r)
            }, R.INDEX = function(t) {
                return D.INDEX(t).length
            }, D.DICT = function(t) {
                for (var e = [], i = Object.keys(t), r = i.length, n = 0; n < r; n += 1) {
                    var o = parseInt(i[n], 0),
                        a = t[o];
                    e = (e = e.concat(D.OPERAND(a.value, a.type))).concat(D.OPERATOR(o))
                }
                return e
            }, R.DICT = function(t) {
                return D.DICT(t).length
            }, D.OPERATOR = function(t) {
                return t < 1200 ? [t] : [12, t - 1200]
            }, D.OPERAND = function(t, e) {
                var i = [];
                if (Array.isArray(e))
                    for (var r = 0; r < e.length; r += 1) L.argument(t.length === e.length, "Not enough arguments given for type" + e), i = i.concat(D.OPERAND(t[r], e[r]));
                else if ("SID" === e) i = i.concat(D.NUMBER(t));
                else if ("offset" === e) i = i.concat(D.NUMBER32(t));
                else if ("number" === e) i = i.concat(D.NUMBER(t));
                else {
                    if ("real" !== e) throw new Error("Unknown operand type " + e);
                    i = i.concat(D.REAL(t))
                }
                return i
            }, D.OP = D.BYTE, R.OP = R.BYTE;
            var W = "function" == typeof WeakMap && new WeakMap;

            function H(t, e, i) {
                if (e.length && ("coverageFormat" !== e[0].name || 1 === e[0].value))
                    for (var r = 0; r < e.length; r += 1) {
                        var n = e[r];
                        this[n.name] = n.value
                    }
                if (this.tableName = t, this.fields = e, i)
                    for (var o = Object.keys(i), a = 0; a < o.length; a += 1) {
                        var s = o[a],
                            l = i[s];
                        void 0 !== this[s] && (this[s] = l)
                    }
            }

            function Y(t, e, i) {
                void 0 === i && (i = e.length);
                var r = new Array(e.length + 1);
                r[0] = {
                    name: t + "Count",
                    type: "USHORT",
                    value: i
                };
                for (var n = 0; n < e.length; n++) r[n + 1] = {
                    name: t + n,
                    type: "USHORT",
                    value: e[n]
                };
                return r
            }

            function V(t, e, i) {
                var r = e.length,
                    n = new Array(r + 1);
                n[0] = {
                    name: t + "Count",
                    type: "USHORT",
                    value: r
                };
                for (var o = 0; o < r; o++) n[o + 1] = {
                    name: t + o,
                    type: "TABLE",
                    value: i(e[o], o)
                };
                return n
            }

            function q(t, e, i) {
                var r = e.length,
                    n = [];
                n[0] = {
                    name: t + "Count",
                    type: "USHORT",
                    value: r
                };
                for (var o = 0; o < r; o++) n = n.concat(i(e[o], o));
                return n
            }

            function Z(t) {
                1 === t.format ? H.call(this, "coverageTable", [{
                    name: "coverageFormat",
                    type: "USHORT",
                    value: 1
                }].concat(Y("glyph", t.glyphs))) : 2 === t.format ? H.call(this, "coverageTable", [{
                    name: "coverageFormat",
                    type: "USHORT",
                    value: 2
                }].concat(q("rangeRecord", t.ranges, (function(t) {
                    return [{
                        name: "startGlyphID",
                        type: "USHORT",
                        value: t.start
                    }, {
                        name: "endGlyphID",
                        type: "USHORT",
                        value: t.end
                    }, {
                        name: "startCoverageIndex",
                        type: "USHORT",
                        value: t.index
                    }]
                })))) : L.assert(!1, "Coverage format must be 1 or 2.")
            }

            function K(t) {
                H.call(this, "scriptListTable", q("scriptRecord", t, (function(t, e) {
                    var i = t.script,
                        r = i.defaultLangSys;
                    return L.assert(!!r, "Unable to write GSUB: script " + t.tag + " has no default language system."), [{
                        name: "scriptTag" + e,
                        type: "TAG",
                        value: t.tag
                    }, {
                        name: "script" + e,
                        type: "TABLE",
                        value: new H("scriptTable", [{
                            name: "defaultLangSys",
                            type: "TABLE",
                            value: new H("defaultLangSys", [{
                                name: "lookupOrder",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "reqFeatureIndex",
                                type: "USHORT",
                                value: r.reqFeatureIndex
                            }].concat(Y("featureIndex", r.featureIndexes)))
                        }].concat(q("langSys", i.langSysRecords, (function(t, e) {
                            var i = t.langSys;
                            return [{
                                name: "langSysTag" + e,
                                type: "TAG",
                                value: t.tag
                            }, {
                                name: "langSys" + e,
                                type: "TABLE",
                                value: new H("langSys", [{
                                    name: "lookupOrder",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "reqFeatureIndex",
                                    type: "USHORT",
                                    value: i.reqFeatureIndex
                                }].concat(Y("featureIndex", i.featureIndexes)))
                            }]
                        }))))
                    }]
                })))
            }

            function J(t) {
                H.call(this, "featureListTable", q("featureRecord", t, (function(t, e) {
                    var i = t.feature;
                    return [{
                        name: "featureTag" + e,
                        type: "TAG",
                        value: t.tag
                    }, {
                        name: "feature" + e,
                        type: "TABLE",
                        value: new H("featureTable", [{
                            name: "featureParams",
                            type: "USHORT",
                            value: i.featureParams
                        }].concat(Y("lookupListIndex", i.lookupListIndexes)))
                    }]
                })))
            }

            function Q(t, e) {
                H.call(this, "lookupListTable", V("lookup", t, (function(t) {
                    var i = e[t.lookupType];
                    return L.assert(!!i, "Unable to write GSUB lookup type " + t.lookupType + " tables."), new H("lookupTable", [{
                        name: "lookupType",
                        type: "USHORT",
                        value: t.lookupType
                    }, {
                        name: "lookupFlag",
                        type: "USHORT",
                        value: t.lookupFlag
                    }].concat(V("subtable", t.subtables, i)))
                })))
            }
            D.CHARSTRING = function(t) {
                if (W) {
                    var e = W.get(t);
                    if (void 0 !== e) return e
                }
                for (var i = [], r = t.length, n = 0; n < r; n += 1) {
                    var o = t[n];
                    i = i.concat(D[o.type](o.value))
                }
                return W && W.set(t, i), i
            }, R.CHARSTRING = function(t) {
                return D.CHARSTRING(t).length
            }, D.OBJECT = function(t) {
                var e = D[t.type];
                return L.argument(void 0 !== e, "No encoding function for type " + t.type), e(t.value)
            }, R.OBJECT = function(t) {
                var e = R[t.type];
                return L.argument(void 0 !== e, "No sizeOf function for type " + t.type), e(t.value)
            }, D.TABLE = function(t) {
                for (var e = [], i = t.fields.length, r = [], n = [], o = 0; o < i; o += 1) {
                    var a = t.fields[o],
                        s = D[a.type];
                    L.argument(void 0 !== s, "No encoding function for field type " + a.type + " (" + a.name + ")");
                    var l = t[a.name];
                    void 0 === l && (l = a.value);
                    var h = s(l);
                    "TABLE" === a.type ? (n.push(e.length), e = e.concat([0, 0]), r.push(h)) : e = e.concat(h)
                }
                for (var c = 0; c < r.length; c += 1) {
                    var u = n[c],
                        f = e.length;
                    L.argument(f < 65536, "Table " + t.tableName + " too big."), e[u] = f >> 8, e[u + 1] = 255 & f, e = e.concat(r[c])
                }
                return e
            }, R.TABLE = function(t) {
                for (var e = 0, i = t.fields.length, r = 0; r < i; r += 1) {
                    var n = t.fields[r],
                        o = R[n.type];
                    L.argument(void 0 !== o, "No sizeOf function for field type " + n.type + " (" + n.name + ")");
                    var a = t[n.name];
                    void 0 === a && (a = n.value), e += o(a), "TABLE" === n.type && (e += 2)
                }
                return e
            }, D.RECORD = D.TABLE, R.RECORD = R.TABLE, D.LITERAL = function(t) {
                return t
            }, R.LITERAL = function(t) {
                return t.length
            }, H.prototype.encode = function() {
                return D.TABLE(this)
            }, H.prototype.sizeOf = function() {
                return R.TABLE(this)
            }, Z.prototype = Object.create(H.prototype), Z.prototype.constructor = Z, K.prototype = Object.create(H.prototype), K.prototype.constructor = K, J.prototype = Object.create(H.prototype), J.prototype.constructor = J, Q.prototype = Object.create(H.prototype), Q.prototype.constructor = Q;
            var $ = {
                Table: H,
                Record: H,
                Coverage: Z,
                ScriptList: K,
                FeatureList: J,
                LookupList: Q,
                ushortList: Y,
                tableList: V,
                recordList: q
            };

            function tt(t, e) {
                return t.getUint8(e)
            }

            function et(t, e) {
                return t.getUint16(e, !1)
            }

            function it(t, e) {
                return t.getUint32(e, !1)
            }

            function rt(t, e) {
                return t.getInt16(e, !1) + t.getUint16(e + 2, !1) / 65535
            }
            var nt = {
                byte: 1,
                uShort: 2,
                short: 2,
                uLong: 4,
                fixed: 4,
                longDateTime: 8,
                tag: 4
            };

            function ot(t, e) {
                this.data = t, this.offset = e, this.relativeOffset = 0
            }
            ot.prototype.parseByte = function() {
                var t = this.data.getUint8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, t
            }, ot.prototype.parseChar = function() {
                var t = this.data.getInt8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, t
            }, ot.prototype.parseCard8 = ot.prototype.parseByte, ot.prototype.parseUShort = function() {
                var t = this.data.getUint16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, t
            }, ot.prototype.parseCard16 = ot.prototype.parseUShort, ot.prototype.parseSID = ot.prototype.parseUShort, ot.prototype.parseOffset16 = ot.prototype.parseUShort, ot.prototype.parseShort = function() {
                var t = this.data.getInt16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, t
            }, ot.prototype.parseF2Dot14 = function() {
                var t = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                return this.relativeOffset += 2, t
            }, ot.prototype.parseULong = function() {
                var t = it(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, t
            }, ot.prototype.parseOffset32 = ot.prototype.parseULong, ot.prototype.parseFixed = function() {
                var t = rt(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, t
            }, ot.prototype.parseString = function(t) {
                var e = this.data,
                    i = this.offset + this.relativeOffset,
                    r = "";
                this.relativeOffset += t;
                for (var n = 0; n < t; n++) r += String.fromCharCode(e.getUint8(i + n));
                return r
            }, ot.prototype.parseTag = function() {
                return this.parseString(4)
            }, ot.prototype.parseLongDateTime = function() {
                var t = it(this.data, this.offset + this.relativeOffset + 4);
                return t -= 2082844800, this.relativeOffset += 8, t
            }, ot.prototype.parseVersion = function(t) {
                var e = et(this.data, this.offset + this.relativeOffset),
                    i = et(this.data, this.offset + this.relativeOffset + 2);
                return this.relativeOffset += 4, void 0 === t && (t = 4096), e + i / t / 10
            }, ot.prototype.skip = function(t, e) {
                void 0 === e && (e = 1), this.relativeOffset += nt[t] * e
            }, ot.prototype.parseULongList = function(t) {
                void 0 === t && (t = this.parseULong());
                for (var e = new Array(t), i = this.data, r = this.offset + this.relativeOffset, n = 0; n < t; n++) e[n] = i.getUint32(r), r += 4;
                return this.relativeOffset += 4 * t, e
            }, ot.prototype.parseOffset16List = ot.prototype.parseUShortList = function(t) {
                void 0 === t && (t = this.parseUShort());
                for (var e = new Array(t), i = this.data, r = this.offset + this.relativeOffset, n = 0; n < t; n++) e[n] = i.getUint16(r), r += 2;
                return this.relativeOffset += 2 * t, e
            }, ot.prototype.parseShortList = function(t) {
                for (var e = new Array(t), i = this.data, r = this.offset + this.relativeOffset, n = 0; n < t; n++) e[n] = i.getInt16(r), r += 2;
                return this.relativeOffset += 2 * t, e
            }, ot.prototype.parseByteList = function(t) {
                for (var e = new Array(t), i = this.data, r = this.offset + this.relativeOffset, n = 0; n < t; n++) e[n] = i.getUint8(r++);
                return this.relativeOffset += t, e
            }, ot.prototype.parseList = function(t, e) {
                e || (e = t, t = this.parseUShort());
                for (var i = new Array(t), r = 0; r < t; r++) i[r] = e.call(this);
                return i
            }, ot.prototype.parseList32 = function(t, e) {
                e || (e = t, t = this.parseULong());
                for (var i = new Array(t), r = 0; r < t; r++) i[r] = e.call(this);
                return i
            }, ot.prototype.parseRecordList = function(t, e) {
                e || (e = t, t = this.parseUShort());
                for (var i = new Array(t), r = Object.keys(e), n = 0; n < t; n++) {
                    for (var o = {}, a = 0; a < r.length; a++) {
                        var s = r[a],
                            l = e[s];
                        o[s] = l.call(this)
                    }
                    i[n] = o
                }
                return i
            }, ot.prototype.parseRecordList32 = function(t, e) {
                e || (e = t, t = this.parseULong());
                for (var i = new Array(t), r = Object.keys(e), n = 0; n < t; n++) {
                    for (var o = {}, a = 0; a < r.length; a++) {
                        var s = r[a],
                            l = e[s];
                        o[s] = l.call(this)
                    }
                    i[n] = o
                }
                return i
            }, ot.prototype.parseStruct = function(t) {
                if ("function" == typeof t) return t.call(this);
                for (var e = Object.keys(t), i = {}, r = 0; r < e.length; r++) {
                    var n = e[r],
                        o = t[n];
                    i[n] = o.call(this)
                }
                return i
            }, ot.prototype.parseValueRecord = function(t) {
                if (void 0 === t && (t = this.parseUShort()), 0 !== t) {
                    var e = {};
                    return 1 & t && (e.xPlacement = this.parseShort()), 2 & t && (e.yPlacement = this.parseShort()), 4 & t && (e.xAdvance = this.parseShort()), 8 & t && (e.yAdvance = this.parseShort()), 16 & t && (e.xPlaDevice = void 0, this.parseShort()), 32 & t && (e.yPlaDevice = void 0, this.parseShort()), 64 & t && (e.xAdvDevice = void 0, this.parseShort()), 128 & t && (e.yAdvDevice = void 0, this.parseShort()), e
                }
            }, ot.prototype.parseValueRecordList = function() {
                for (var t = this.parseUShort(), e = this.parseUShort(), i = new Array(e), r = 0; r < e; r++) i[r] = this.parseValueRecord(t);
                return i
            }, ot.prototype.parsePointer = function(t) {
                var e = this.parseOffset16();
                if (e > 0) return new ot(this.data, this.offset + e).parseStruct(t)
            }, ot.prototype.parsePointer32 = function(t) {
                var e = this.parseOffset32();
                if (e > 0) return new ot(this.data, this.offset + e).parseStruct(t)
            }, ot.prototype.parseListOfLists = function(t) {
                for (var e = this.parseOffset16List(), i = e.length, r = this.relativeOffset, n = new Array(i), o = 0; o < i; o++) {
                    var a = e[o];
                    if (0 !== a)
                        if (this.relativeOffset = a, t) {
                            for (var s = this.parseOffset16List(), l = new Array(s.length), h = 0; h < s.length; h++) this.relativeOffset = a + s[h], l[h] = t.call(this);
                            n[o] = l
                        } else n[o] = this.parseUShortList();
                    else n[o] = void 0
                }
                return this.relativeOffset = r, n
            }, ot.prototype.parseCoverage = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort(),
                    i = this.parseUShort();
                if (1 === e) return {
                    format: 1,
                    glyphs: this.parseUShortList(i)
                };
                if (2 === e) {
                    for (var r = new Array(i), n = 0; n < i; n++) r[n] = {
                        start: this.parseUShort(),
                        end: this.parseUShort(),
                        index: this.parseUShort()
                    };
                    return {
                        format: 2,
                        ranges: r
                    }
                }
                throw new Error("0x" + t.toString(16) + ": Coverage format must be 1 or 2.")
            }, ot.prototype.parseClassDef = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                if (1 === e) return {
                    format: 1,
                    startGlyph: this.parseUShort(),
                    classes: this.parseUShortList()
                };
                if (2 === e) return {
                    format: 2,
                    ranges: this.parseRecordList({
                        start: ot.uShort,
                        end: ot.uShort,
                        classId: ot.uShort
                    })
                };
                throw new Error("0x" + t.toString(16) + ": ClassDef format must be 1 or 2.")
            }, ot.list = function(t, e) {
                return function() {
                    return this.parseList(t, e)
                }
            }, ot.list32 = function(t, e) {
                return function() {
                    return this.parseList32(t, e)
                }
            }, ot.recordList = function(t, e) {
                return function() {
                    return this.parseRecordList(t, e)
                }
            }, ot.recordList32 = function(t, e) {
                return function() {
                    return this.parseRecordList32(t, e)
                }
            }, ot.pointer = function(t) {
                return function() {
                    return this.parsePointer(t)
                }
            }, ot.pointer32 = function(t) {
                return function() {
                    return this.parsePointer32(t)
                }
            }, ot.tag = ot.prototype.parseTag, ot.byte = ot.prototype.parseByte, ot.uShort = ot.offset16 = ot.prototype.parseUShort, ot.uShortList = ot.prototype.parseUShortList, ot.uLong = ot.offset32 = ot.prototype.parseULong, ot.uLongList = ot.prototype.parseULongList, ot.struct = ot.prototype.parseStruct, ot.coverage = ot.prototype.parseCoverage, ot.classDef = ot.prototype.parseClassDef;
            var at = {
                reserved: ot.uShort,
                reqFeatureIndex: ot.uShort,
                featureIndexes: ot.uShortList
            };
            ot.prototype.parseScriptList = function() {
                return this.parsePointer(ot.recordList({
                    tag: ot.tag,
                    script: ot.pointer({
                        defaultLangSys: ot.pointer(at),
                        langSysRecords: ot.recordList({
                            tag: ot.tag,
                            langSys: ot.pointer(at)
                        })
                    })
                })) || []
            }, ot.prototype.parseFeatureList = function() {
                return this.parsePointer(ot.recordList({
                    tag: ot.tag,
                    feature: ot.pointer({
                        featureParams: ot.offset16,
                        lookupListIndexes: ot.uShortList
                    })
                })) || []
            }, ot.prototype.parseLookupList = function(t) {
                return this.parsePointer(ot.list(ot.pointer((function() {
                    var e = this.parseUShort();
                    L.argument(1 <= e && e <= 9, "GPOS/GSUB lookup type " + e + " unknown.");
                    var i = this.parseUShort(),
                        r = 16 & i;
                    return {
                        lookupType: e,
                        lookupFlag: i,
                        subtables: this.parseList(ot.pointer(t[e])),
                        markFilteringSet: r ? this.parseUShort() : void 0
                    }
                })))) || []
            }, ot.prototype.parseFeatureVariationsList = function() {
                return this.parsePointer32((function() {
                    var t = this.parseUShort(),
                        e = this.parseUShort();
                    return L.argument(1 === t && e < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({
                        conditionSetOffset: ot.offset32,
                        featureTableSubstitutionOffset: ot.offset32
                    })
                })) || []
            };
            var st = {
                getByte: tt,
                getCard8: tt,
                getUShort: et,
                getCard16: et,
                getShort: function(t, e) {
                    return t.getInt16(e, !1)
                },
                getULong: it,
                getFixed: rt,
                getTag: function(t, e) {
                    for (var i = "", r = e; r < e + 4; r += 1) i += String.fromCharCode(t.getInt8(r));
                    return i
                },
                getOffset: function(t, e, i) {
                    for (var r = 0, n = 0; n < i; n += 1) r <<= 8, r += t.getUint8(e + n);
                    return r
                },
                getBytes: function(t, e, i) {
                    for (var r = [], n = e; n < i; n += 1) r.push(t.getUint8(n));
                    return r
                },
                bytesToString: function(t) {
                    for (var e = "", i = 0; i < t.length; i += 1) e += String.fromCharCode(t[i]);
                    return e
                },
                Parser: ot
            };

            function lt(t, e, i) {
                t.segments.push({
                    end: e,
                    start: e,
                    delta: -(e - i),
                    offset: 0,
                    glyphIndex: i
                })
            }
            var ht = {
                    parse: function(t, e) {
                        var i = {};
                        i.version = st.getUShort(t, e), L.argument(0 === i.version, "cmap table version should be 0."), i.numTables = st.getUShort(t, e + 2);
                        for (var r = -1, n = i.numTables - 1; n >= 0; n -= 1) {
                            var o = st.getUShort(t, e + 4 + 8 * n),
                                a = st.getUShort(t, e + 4 + 8 * n + 2);
                            if (3 === o && (0 === a || 1 === a || 10 === a) || 0 === o && (0 === a || 1 === a || 2 === a || 3 === a || 4 === a)) {
                                r = st.getULong(t, e + 4 + 8 * n + 4);
                                break
                            }
                        }
                        if (-1 === r) throw new Error("No valid cmap sub-tables found.");
                        var s = new st.Parser(t, e + r);
                        if (i.format = s.parseUShort(), 12 === i.format) ! function(t, e) {
                            var i;
                            e.parseUShort(), t.length = e.parseULong(), t.language = e.parseULong(), t.groupCount = i = e.parseULong(), t.glyphIndexMap = {};
                            for (var r = 0; r < i; r += 1)
                                for (var n = e.parseULong(), o = e.parseULong(), a = e.parseULong(), s = n; s <= o; s += 1) t.glyphIndexMap[s] = a, a++
                        }(i, s);
                        else {
                            if (4 !== i.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + i.format + ").");
                            ! function(t, e, i, r, n) {
                                var o;
                                t.length = e.parseUShort(), t.language = e.parseUShort(), t.segCount = o = e.parseUShort() >> 1, e.skip("uShort", 3), t.glyphIndexMap = {};
                                for (var a = new st.Parser(i, r + n + 14), s = new st.Parser(i, r + n + 16 + 2 * o), l = new st.Parser(i, r + n + 16 + 4 * o), h = new st.Parser(i, r + n + 16 + 6 * o), c = r + n + 16 + 8 * o, u = 0; u < o - 1; u += 1)
                                    for (var f = void 0, d = a.parseUShort(), p = s.parseUShort(), g = l.parseShort(), v = h.parseUShort(), m = p; m <= d; m += 1) 0 !== v ? (c = h.offset + h.relativeOffset - 2, c += v, c += 2 * (m - p), 0 !== (f = st.getUShort(i, c)) && (f = f + g & 65535)) : f = m + g & 65535, t.glyphIndexMap[m] = f
                            }(i, s, t, e, r)
                        }
                        return i
                    },
                    make: function(t) {
                        var e, i = !0;
                        for (e = t.length - 1; e > 0; e -= 1) {
                            if (t.get(e).unicode > 65535) {
                                console.log("Adding CMAP format 12 (needed!)"), i = !1;
                                break
                            }
                        }
                        var r = [{
                            name: "version",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "numTables",
                            type: "USHORT",
                            value: i ? 1 : 2
                        }, {
                            name: "platformID",
                            type: "USHORT",
                            value: 3
                        }, {
                            name: "encodingID",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "offset",
                            type: "ULONG",
                            value: i ? 12 : 20
                        }];
                        i || (r = r.concat([{
                            name: "cmap12PlatformID",
                            type: "USHORT",
                            value: 3
                        }, {
                            name: "cmap12EncodingID",
                            type: "USHORT",
                            value: 10
                        }, {
                            name: "cmap12Offset",
                            type: "ULONG",
                            value: 0
                        }])), r = r.concat([{
                            name: "format",
                            type: "USHORT",
                            value: 4
                        }, {
                            name: "cmap4Length",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "language",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "segCountX2",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "searchRange",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "entrySelector",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "rangeShift",
                            type: "USHORT",
                            value: 0
                        }]);
                        var n = new $.Table("cmap", r);
                        for (n.segments = [], e = 0; e < t.length; e += 1) {
                            for (var o = t.get(e), a = 0; a < o.unicodes.length; a += 1) lt(n, o.unicodes[a], e);
                            n.segments = n.segments.sort((function(t, e) {
                                return t.start - e.start
                            }))
                        }! function(t) {
                            t.segments.push({
                                end: 65535,
                                start: 65535,
                                delta: 1,
                                offset: 0
                            })
                        }(n);
                        var s = n.segments.length,
                            l = 0,
                            h = [],
                            c = [],
                            u = [],
                            f = [],
                            d = [],
                            p = [];
                        for (e = 0; e < s; e += 1) {
                            var g = n.segments[e];
                            g.end <= 65535 && g.start <= 65535 ? (h = h.concat({
                                name: "end_" + e,
                                type: "USHORT",
                                value: g.end
                            }), c = c.concat({
                                name: "start_" + e,
                                type: "USHORT",
                                value: g.start
                            }), u = u.concat({
                                name: "idDelta_" + e,
                                type: "SHORT",
                                value: g.delta
                            }), f = f.concat({
                                name: "idRangeOffset_" + e,
                                type: "USHORT",
                                value: g.offset
                            }), void 0 !== g.glyphId && (d = d.concat({
                                name: "glyph_" + e,
                                type: "USHORT",
                                value: g.glyphId
                            }))) : l += 1, i || void 0 === g.glyphIndex || (p = (p = (p = p.concat({
                                name: "cmap12Start_" + e,
                                type: "ULONG",
                                value: g.start
                            })).concat({
                                name: "cmap12End_" + e,
                                type: "ULONG",
                                value: g.end
                            })).concat({
                                name: "cmap12Glyph_" + e,
                                type: "ULONG",
                                value: g.glyphIndex
                            }))
                        }
                        if (n.segCountX2 = 2 * (s - l), n.searchRange = 2 * Math.pow(2, Math.floor(Math.log(s - l) / Math.log(2))), n.entrySelector = Math.log(n.searchRange / 2) / Math.log(2), n.rangeShift = n.segCountX2 - n.searchRange, n.fields = n.fields.concat(h), n.fields.push({
                                name: "reservedPad",
                                type: "USHORT",
                                value: 0
                            }), n.fields = n.fields.concat(c), n.fields = n.fields.concat(u), n.fields = n.fields.concat(f), n.fields = n.fields.concat(d), n.cmap4Length = 14 + 2 * h.length + 2 + 2 * c.length + 2 * u.length + 2 * f.length + 2 * d.length, !i) {
                            var v = 16 + 4 * p.length;
                            n.cmap12Offset = 20 + n.cmap4Length, n.fields = n.fields.concat([{
                                name: "cmap12Format",
                                type: "USHORT",
                                value: 12
                            }, {
                                name: "cmap12Reserved",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "cmap12Length",
                                type: "ULONG",
                                value: v
                            }, {
                                name: "cmap12Language",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "cmap12nGroups",
                                type: "ULONG",
                                value: p.length / 3
                            }]), n.fields = n.fields.concat(p)
                        }
                        return n
                    }
                },
                ct = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"],
                ut = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"],
                ft = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"],
                dt = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];

            function pt(t) {
                this.font = t
            }

            function gt(t) {
                this.cmap = t
            }

            function vt(t, e) {
                this.encoding = t, this.charset = e
            }

            function mt(t) {
                switch (t.version) {
                    case 1:
                        this.names = dt.slice();
                        break;
                    case 2:
                        this.names = new Array(t.numberOfGlyphs);
                        for (var e = 0; e < t.numberOfGlyphs; e++) t.glyphNameIndex[e] < dt.length ? this.names[e] = dt[t.glyphNameIndex[e]] : this.names[e] = t.names[t.glyphNameIndex[e] - dt.length];
                        break;
                    case 2.5:
                        this.names = new Array(t.numberOfGlyphs);
                        for (var i = 0; i < t.numberOfGlyphs; i++) this.names[i] = dt[i + t.glyphNameIndex[i]];
                        break;
                    default:
                        this.names = []
                }
            }

            function yt(t, e) {
                e.lowMemory ? function(t) {
                    t._IndexToUnicodeMap = {};
                    for (var e = t.tables.cmap.glyphIndexMap, i = Object.keys(e), r = 0; r < i.length; r += 1) {
                        var n = i[r],
                            o = e[n];
                        void 0 === t._IndexToUnicodeMap[o] ? t._IndexToUnicodeMap[o] = {
                            unicodes: [parseInt(n)]
                        } : t._IndexToUnicodeMap[o].unicodes.push(parseInt(n))
                    }
                }(t) : function(t) {
                    for (var e, i = t.tables.cmap.glyphIndexMap, r = Object.keys(i), n = 0; n < r.length; n += 1) {
                        var o = r[n],
                            a = i[o];
                        (e = t.glyphs.get(a)).addUnicode(parseInt(o))
                    }
                    for (var s = 0; s < t.glyphs.length; s += 1) e = t.glyphs.get(s), t.cffEncoding ? t.isCIDFont ? e.name = "gid" + s : e.name = t.cffEncoding.charset[s] : t.glyphNames.names && (e.name = t.glyphNames.glyphIndexToName(s))
                }(t)
            }
            pt.prototype.charToGlyphIndex = function(t) {
                var e = t.codePointAt(0),
                    i = this.font.glyphs;
                if (i)
                    for (var r = 0; r < i.length; r += 1)
                        for (var n = i.get(r), o = 0; o < n.unicodes.length; o += 1)
                            if (n.unicodes[o] === e) return r;
                return null
            }, gt.prototype.charToGlyphIndex = function(t) {
                return this.cmap.glyphIndexMap[t.codePointAt(0)] || 0
            }, vt.prototype.charToGlyphIndex = function(t) {
                var e = t.codePointAt(0),
                    i = this.encoding[e];
                return this.charset.indexOf(i)
            }, mt.prototype.nameToGlyphIndex = function(t) {
                return this.names.indexOf(t)
            }, mt.prototype.glyphIndexToName = function(t) {
                return this.names[t]
            };
            var bt = {
                line: function(t, e, i, r, n) {
                    t.beginPath(), t.moveTo(e, i), t.lineTo(r, n), t.stroke()
                }
            };

            function xt(t) {
                this.bindConstructorValues(t)
            }

            function _t(t, e, i) {
                Object.defineProperty(t, e, {
                    get: function() {
                        return t.path, t[i]
                    },
                    set: function(e) {
                        t[i] = e
                    },
                    enumerable: !0,
                    configurable: !0
                })
            }

            function wt(t, e) {
                if (this.font = t, this.glyphs = {}, Array.isArray(e))
                    for (var i = 0; i < e.length; i++) {
                        var r = e[i];
                        r.path.unitsPerEm = t.unitsPerEm, this.glyphs[i] = r
                    }
                this.length = e && e.length || 0
            }
            xt.prototype.bindConstructorValues = function(t) {
                this.index = t.index || 0, this.name = t.name || null, this.unicode = t.unicode || void 0, this.unicodes = t.unicodes || void 0 !== t.unicode ? [t.unicode] : [], "xMin" in t && (this.xMin = t.xMin), "yMin" in t && (this.yMin = t.yMin), "xMax" in t && (this.xMax = t.xMax), "yMax" in t && (this.yMax = t.yMax), "advanceWidth" in t && (this.advanceWidth = t.advanceWidth), Object.defineProperty(this, "path", function(t, e) {
                    var i = e || new O;
                    return {
                        configurable: !0,
                        get: function() {
                            return "function" == typeof i && (i = i()), i
                        },
                        set: function(t) {
                            i = t
                        }
                    }
                }(0, t.path))
            }, xt.prototype.addUnicode = function(t) {
                0 === this.unicodes.length && (this.unicode = t), this.unicodes.push(t)
            }, xt.prototype.getBoundingBox = function() {
                return this.path.getBoundingBox()
            }, xt.prototype.getPath = function(t, e, i, r, n) {
                var o, a;
                t = void 0 !== t ? t : 0, e = void 0 !== e ? e : 0, i = void 0 !== i ? i : 72, r || (r = {});
                var s = r.xScale,
                    l = r.yScale;
                if (r.hinting && n && n.hinting && (a = this.path && n.hinting.exec(this, i)), a) o = n.hinting.getCommands(a), t = Math.round(t), e = Math.round(e), s = l = 1;
                else {
                    o = this.path.commands;
                    var h = 1 / (this.path.unitsPerEm || 1e3) * i;
                    void 0 === s && (s = h), void 0 === l && (l = h)
                }
                for (var c = new O, u = 0; u < o.length; u += 1) {
                    var f = o[u];
                    "M" === f.type ? c.moveTo(t + f.x * s, e + -f.y * l) : "L" === f.type ? c.lineTo(t + f.x * s, e + -f.y * l) : "Q" === f.type ? c.quadraticCurveTo(t + f.x1 * s, e + -f.y1 * l, t + f.x * s, e + -f.y * l) : "C" === f.type ? c.curveTo(t + f.x1 * s, e + -f.y1 * l, t + f.x2 * s, e + -f.y2 * l, t + f.x * s, e + -f.y * l) : "Z" === f.type && c.closePath()
                }
                return c
            }, xt.prototype.getContours = function() {
                if (void 0 === this.points) return [];
                for (var t = [], e = [], i = 0; i < this.points.length; i += 1) {
                    var r = this.points[i];
                    e.push(r), r.lastPointOfContour && (t.push(e), e = [])
                }
                return L.argument(0 === e.length, "There are still points left in the current contour."), t
            }, xt.prototype.getMetrics = function() {
                for (var t = this.path.commands, e = [], i = [], r = 0; r < t.length; r += 1) {
                    var n = t[r];
                    "Z" !== n.type && (e.push(n.x), i.push(n.y)), "Q" !== n.type && "C" !== n.type || (e.push(n.x1), i.push(n.y1)), "C" === n.type && (e.push(n.x2), i.push(n.y2))
                }
                var o = {
                    xMin: Math.min.apply(null, e),
                    yMin: Math.min.apply(null, i),
                    xMax: Math.max.apply(null, e),
                    yMax: Math.max.apply(null, i),
                    leftSideBearing: this.leftSideBearing
                };
                return isFinite(o.xMin) || (o.xMin = 0), isFinite(o.xMax) || (o.xMax = this.advanceWidth), isFinite(o.yMin) || (o.yMin = 0), isFinite(o.yMax) || (o.yMax = 0), o.rightSideBearing = this.advanceWidth - o.leftSideBearing - (o.xMax - o.xMin), o
            }, xt.prototype.draw = function(t, e, i, r, n) {
                this.getPath(e, i, r, n).draw(t)
            }, xt.prototype.drawPoints = function(t, e, i, r) {
                function n(e, i, r, n) {
                    t.beginPath();
                    for (var o = 0; o < e.length; o += 1) t.moveTo(i + e[o].x * n, r + e[o].y * n), t.arc(i + e[o].x * n, r + e[o].y * n, 2, 0, 2 * Math.PI, !1);
                    t.closePath(), t.fill()
                }
                e = void 0 !== e ? e : 0, i = void 0 !== i ? i : 0, r = void 0 !== r ? r : 24;
                for (var o = 1 / this.path.unitsPerEm * r, a = [], s = [], l = this.path, h = 0; h < l.commands.length; h += 1) {
                    var c = l.commands[h];
                    void 0 !== c.x && a.push({
                        x: c.x,
                        y: -c.y
                    }), void 0 !== c.x1 && s.push({
                        x: c.x1,
                        y: -c.y1
                    }), void 0 !== c.x2 && s.push({
                        x: c.x2,
                        y: -c.y2
                    })
                }
                t.fillStyle = "blue", n(a, e, i, o), t.fillStyle = "red", n(s, e, i, o)
            }, xt.prototype.drawMetrics = function(t, e, i, r) {
                var n;
                e = void 0 !== e ? e : 0, i = void 0 !== i ? i : 0, r = void 0 !== r ? r : 24, n = 1 / this.path.unitsPerEm * r, t.lineWidth = 1, t.strokeStyle = "black", bt.line(t, e, -1e4, e, 1e4), bt.line(t, -1e4, i, 1e4, i);
                var o = this.xMin || 0,
                    a = this.yMin || 0,
                    s = this.xMax || 0,
                    l = this.yMax || 0,
                    h = this.advanceWidth || 0;
                t.strokeStyle = "blue", bt.line(t, e + o * n, -1e4, e + o * n, 1e4), bt.line(t, e + s * n, -1e4, e + s * n, 1e4), bt.line(t, -1e4, i + -a * n, 1e4, i + -a * n), bt.line(t, -1e4, i + -l * n, 1e4, i + -l * n), t.strokeStyle = "green", bt.line(t, e + h * n, -1e4, e + h * n, 1e4)
            }, wt.prototype.get = function(t) {
                if (void 0 === this.glyphs[t]) {
                    this.font._push(t), "function" == typeof this.glyphs[t] && (this.glyphs[t] = this.glyphs[t]());
                    var e = this.glyphs[t],
                        i = this.font._IndexToUnicodeMap[t];
                    if (i)
                        for (var r = 0; r < i.unicodes.length; r++) e.addUnicode(i.unicodes[r]);
                    this.font.cffEncoding ? this.font.isCIDFont ? e.name = "gid" + t : e.name = this.font.cffEncoding.charset[t] : this.font.glyphNames.names && (e.name = this.font.glyphNames.glyphIndexToName(t)), this.glyphs[t].advanceWidth = this.font._hmtxTableData[t].advanceWidth, this.glyphs[t].leftSideBearing = this.font._hmtxTableData[t].leftSideBearing
                } else "function" == typeof this.glyphs[t] && (this.glyphs[t] = this.glyphs[t]());
                return this.glyphs[t]
            }, wt.prototype.push = function(t, e) {
                this.glyphs[t] = e, this.length++
            };
            var St = {
                GlyphSet: wt,
                glyphLoader: function(t, e) {
                    return new xt({
                        index: e,
                        font: t
                    })
                },
                ttfGlyphLoader: function(t, e, i, r, n, o) {
                    return function() {
                        var a = new xt({
                            index: e,
                            font: t
                        });
                        return a.path = function() {
                            i(a, r, n);
                            var e = o(t.glyphs, a);
                            return e.unitsPerEm = t.unitsPerEm, e
                        }, _t(a, "xMin", "_xMin"), _t(a, "xMax", "_xMax"), _t(a, "yMin", "_yMin"), _t(a, "yMax", "_yMax"), a
                    }
                },
                cffGlyphLoader: function(t, e, i, r) {
                    return function() {
                        var n = new xt({
                            index: e,
                            font: t
                        });
                        return n.path = function() {
                            var e = i(t, n, r);
                            return e.unitsPerEm = t.unitsPerEm, e
                        }, n
                    }
                }
            };

            function Ct(t, e) {
                if (t === e) return !0;
                if (Array.isArray(t) && Array.isArray(e)) {
                    if (t.length !== e.length) return !1;
                    for (var i = 0; i < t.length; i += 1)
                        if (!Ct(t[i], e[i])) return !1;
                    return !0
                }
                return !1
            }

            function Tt(t) {
                return t.length < 1240 ? 107 : t.length < 33900 ? 1131 : 32768
            }

            function Et(t, e, i) {
                var r, n, o = [],
                    a = [],
                    s = st.getCard16(t, e);
                if (0 !== s) {
                    var l = st.getByte(t, e + 2);
                    r = e + (s + 1) * l + 2;
                    for (var h = e + 3, c = 0; c < s + 1; c += 1) o.push(st.getOffset(t, h, l)), h += l;
                    n = r + o[s]
                } else n = e + 2;
                for (var u = 0; u < o.length - 1; u += 1) {
                    var f = st.getBytes(t, r + o[u], r + o[u + 1]);
                    i && (f = i(f)), a.push(f)
                }
                return {
                    objects: a,
                    startOffset: e,
                    endOffset: n
                }
            }

            function kt(t, e) {
                if (28 === e) return t.parseByte() << 8 | t.parseByte();
                if (29 === e) return t.parseByte() << 24 | t.parseByte() << 16 | t.parseByte() << 8 | t.parseByte();
                if (30 === e) return function(t) {
                    for (var e = "", i = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];;) {
                        var r = t.parseByte(),
                            n = r >> 4,
                            o = 15 & r;
                        if (15 === n) break;
                        if (e += i[n], 15 === o) break;
                        e += i[o]
                    }
                    return parseFloat(e)
                }(t);
                if (e >= 32 && e <= 246) return e - 139;
                if (e >= 247 && e <= 250) return 256 * (e - 247) + t.parseByte() + 108;
                if (e >= 251 && e <= 254) return 256 * -(e - 251) - t.parseByte() - 108;
                throw new Error("Invalid b0 " + e)
            }

            function Ot(t, e, i) {
                e = void 0 !== e ? e : 0;
                var r = new st.Parser(t, e),
                    n = [],
                    o = [];
                for (i = void 0 !== i ? i : t.length; r.relativeOffset < i;) {
                    var a = r.parseByte();
                    a <= 21 ? (12 === a && (a = 1200 + r.parseByte()), n.push([a, o]), o = []) : o.push(kt(r, a))
                }
                return function(t) {
                    for (var e = {}, i = 0; i < t.length; i += 1) {
                        var r = t[i][0],
                            n = t[i][1],
                            o = void 0;
                        if (o = 1 === n.length ? n[0] : n, e.hasOwnProperty(r) && !isNaN(e[r])) throw new Error("Object " + e + " already has key " + r);
                        e[r] = o
                    }
                    return e
                }(n)
            }

            function It(t, e) {
                return e = e <= 390 ? ct[e] : t[e - 391]
            }

            function Pt(t, e, i) {
                for (var r, n = {}, o = 0; o < e.length; o += 1) {
                    var a = e[o];
                    if (Array.isArray(a.type)) {
                        var s = [];
                        s.length = a.type.length;
                        for (var l = 0; l < a.type.length; l++) void 0 === (r = void 0 !== t[a.op] ? t[a.op][l] : void 0) && (r = void 0 !== a.value && void 0 !== a.value[l] ? a.value[l] : null), "SID" === a.type[l] && (r = It(i, r)), s[l] = r;
                        n[a.name] = s
                    } else void 0 === (r = t[a.op]) && (r = void 0 !== a.value ? a.value : null), "SID" === a.type && (r = It(i, r)), n[a.name] = r
                }
                return n
            }
            var Lt = [{
                    name: "version",
                    op: 0,
                    type: "SID"
                }, {
                    name: "notice",
                    op: 1,
                    type: "SID"
                }, {
                    name: "copyright",
                    op: 1200,
                    type: "SID"
                }, {
                    name: "fullName",
                    op: 2,
                    type: "SID"
                }, {
                    name: "familyName",
                    op: 3,
                    type: "SID"
                }, {
                    name: "weight",
                    op: 4,
                    type: "SID"
                }, {
                    name: "isFixedPitch",
                    op: 1201,
                    type: "number",
                    value: 0
                }, {
                    name: "italicAngle",
                    op: 1202,
                    type: "number",
                    value: 0
                }, {
                    name: "underlinePosition",
                    op: 1203,
                    type: "number",
                    value: -100
                }, {
                    name: "underlineThickness",
                    op: 1204,
                    type: "number",
                    value: 50
                }, {
                    name: "paintType",
                    op: 1205,
                    type: "number",
                    value: 0
                }, {
                    name: "charstringType",
                    op: 1206,
                    type: "number",
                    value: 2
                }, {
                    name: "fontMatrix",
                    op: 1207,
                    type: ["real", "real", "real", "real", "real", "real"],
                    value: [.001, 0, 0, .001, 0, 0]
                }, {
                    name: "uniqueId",
                    op: 13,
                    type: "number"
                }, {
                    name: "fontBBox",
                    op: 5,
                    type: ["number", "number", "number", "number"],
                    value: [0, 0, 0, 0]
                }, {
                    name: "strokeWidth",
                    op: 1208,
                    type: "number",
                    value: 0
                }, {
                    name: "xuid",
                    op: 14,
                    type: [],
                    value: null
                }, {
                    name: "charset",
                    op: 15,
                    type: "offset",
                    value: 0
                }, {
                    name: "encoding",
                    op: 16,
                    type: "offset",
                    value: 0
                }, {
                    name: "charStrings",
                    op: 17,
                    type: "offset",
                    value: 0
                }, {
                    name: "private",
                    op: 18,
                    type: ["number", "offset"],
                    value: [0, 0]
                }, {
                    name: "ros",
                    op: 1230,
                    type: ["SID", "SID", "number"]
                }, {
                    name: "cidFontVersion",
                    op: 1231,
                    type: "number",
                    value: 0
                }, {
                    name: "cidFontRevision",
                    op: 1232,
                    type: "number",
                    value: 0
                }, {
                    name: "cidFontType",
                    op: 1233,
                    type: "number",
                    value: 0
                }, {
                    name: "cidCount",
                    op: 1234,
                    type: "number",
                    value: 8720
                }, {
                    name: "uidBase",
                    op: 1235,
                    type: "number"
                }, {
                    name: "fdArray",
                    op: 1236,
                    type: "offset"
                }, {
                    name: "fdSelect",
                    op: 1237,
                    type: "offset"
                }, {
                    name: "fontName",
                    op: 1238,
                    type: "SID"
                }],
                Mt = [{
                    name: "subrs",
                    op: 19,
                    type: "offset",
                    value: 0
                }, {
                    name: "defaultWidthX",
                    op: 20,
                    type: "number",
                    value: 0
                }, {
                    name: "nominalWidthX",
                    op: 21,
                    type: "number",
                    value: 0
                }];

            function At(t, e) {
                return Pt(Ot(t, 0, t.byteLength), Lt, e)
            }

            function Dt(t, e, i, r) {
                return Pt(Ot(t, e, i), Mt, r)
            }

            function Rt(t, e, i, r) {
                for (var n = [], o = 0; o < i.length; o += 1) {
                    var a = At(new DataView(new Uint8Array(i[o]).buffer), r);
                    a._subrs = [], a._subrsBias = 0, a._defaultWidthX = 0, a._nominalWidthX = 0;
                    var s = a.private[0],
                        l = a.private[1];
                    if (0 !== s && 0 !== l) {
                        var h = Dt(t, l + e, s, r);
                        if (a._defaultWidthX = h.defaultWidthX, a._nominalWidthX = h.nominalWidthX, 0 !== h.subrs) {
                            var c = Et(t, l + h.subrs + e);
                            a._subrs = c.objects, a._subrsBias = Tt(a._subrs)
                        }
                        a._privateDict = h
                    }
                    n.push(a)
                }
                return n
            }

            function Ft(t, e, i) {
                var r, n, o, a, s, l, h, c, u = new O,
                    f = [],
                    d = 0,
                    p = !1,
                    g = !1,
                    v = 0,
                    m = 0;
                if (t.isCIDFont) {
                    var y = t.tables.cff.topDict._fdSelect[e.index],
                        b = t.tables.cff.topDict._fdArray[y];
                    s = b._subrs, l = b._subrsBias, h = b._defaultWidthX, c = b._nominalWidthX
                } else s = t.tables.cff.topDict._subrs, l = t.tables.cff.topDict._subrsBias, h = t.tables.cff.topDict._defaultWidthX, c = t.tables.cff.topDict._nominalWidthX;
                var x = h;

                function _(t, e) {
                    g && u.closePath(), u.moveTo(t, e), g = !0
                }

                function w() {
                    f.length % 2 != 0 && !p && (x = f.shift() + c), d += f.length >> 1, f.length = 0, p = !0
                }
                return function i(h) {
                    for (var y, b, S, C, T, E, k, O, I, P, L, M, A = 0; A < h.length;) {
                        var D = h[A];
                        switch (A += 1, D) {
                            case 1:
                            case 3:
                            case 18:
                            case 23:
                                w();
                                break;
                            case 4:
                                f.length > 1 && !p && (x = f.shift() + c, p = !0), m += f.pop(), _(v, m);
                                break;
                            case 5:
                                for (; f.length > 0;) v += f.shift(), m += f.shift(), u.lineTo(v, m);
                                break;
                            case 6:
                                for (; f.length > 0 && (v += f.shift(), u.lineTo(v, m), 0 !== f.length);) m += f.shift(), u.lineTo(v, m);
                                break;
                            case 7:
                                for (; f.length > 0 && (m += f.shift(), u.lineTo(v, m), 0 !== f.length);) v += f.shift(), u.lineTo(v, m);
                                break;
                            case 8:
                                for (; f.length > 0;) r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a + f.shift(), u.curveTo(r, n, o, a, v, m);
                                break;
                            case 10:
                                T = f.pop() + l, (E = s[T]) && i(E);
                                break;
                            case 11:
                                return;
                            case 12:
                                switch (D = h[A], A += 1, D) {
                                    case 35:
                                        r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), k = o + f.shift(), O = a + f.shift(), I = k + f.shift(), P = O + f.shift(), L = I + f.shift(), M = P + f.shift(), v = L + f.shift(), m = M + f.shift(), f.shift(), u.curveTo(r, n, o, a, k, O), u.curveTo(I, P, L, M, v, m);
                                        break;
                                    case 34:
                                        r = v + f.shift(), n = m, o = r + f.shift(), a = n + f.shift(), k = o + f.shift(), O = a, I = k + f.shift(), P = a, L = I + f.shift(), M = m, v = L + f.shift(), u.curveTo(r, n, o, a, k, O), u.curveTo(I, P, L, M, v, m);
                                        break;
                                    case 36:
                                        r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), k = o + f.shift(), O = a, I = k + f.shift(), P = a, L = I + f.shift(), M = P + f.shift(), v = L + f.shift(), u.curveTo(r, n, o, a, k, O), u.curveTo(I, P, L, M, v, m);
                                        break;
                                    case 37:
                                        r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), k = o + f.shift(), O = a + f.shift(), I = k + f.shift(), P = O + f.shift(), L = I + f.shift(), M = P + f.shift(), Math.abs(L - v) > Math.abs(M - m) ? v = L + f.shift() : m = M + f.shift(), u.curveTo(r, n, o, a, k, O), u.curveTo(I, P, L, M, v, m);
                                        break;
                                    default:
                                        console.log("Glyph " + e.index + ": unknown operator 1200" + D), f.length = 0
                                }
                                break;
                            case 14:
                                f.length > 0 && !p && (x = f.shift() + c, p = !0), g && (u.closePath(), g = !1);
                                break;
                            case 19:
                            case 20:
                                w(), A += d + 7 >> 3;
                                break;
                            case 21:
                                f.length > 2 && !p && (x = f.shift() + c, p = !0), m += f.pop(), _(v += f.pop(), m);
                                break;
                            case 22:
                                f.length > 1 && !p && (x = f.shift() + c, p = !0), _(v += f.pop(), m);
                                break;
                            case 24:
                                for (; f.length > 2;) r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a + f.shift(), u.curveTo(r, n, o, a, v, m);
                                v += f.shift(), m += f.shift(), u.lineTo(v, m);
                                break;
                            case 25:
                                for (; f.length > 6;) v += f.shift(), m += f.shift(), u.lineTo(v, m);
                                r = v + f.shift(), n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a + f.shift(), u.curveTo(r, n, o, a, v, m);
                                break;
                            case 26:
                                for (f.length % 2 && (v += f.shift()); f.length > 0;) r = v, n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o, m = a + f.shift(), u.curveTo(r, n, o, a, v, m);
                                break;
                            case 27:
                                for (f.length % 2 && (m += f.shift()); f.length > 0;) r = v + f.shift(), n = m, o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a, u.curveTo(r, n, o, a, v, m);
                                break;
                            case 28:
                                y = h[A], b = h[A + 1], f.push((y << 24 | b << 16) >> 16), A += 2;
                                break;
                            case 29:
                                T = f.pop() + t.gsubrsBias, (E = t.gsubrs[T]) && i(E);
                                break;
                            case 30:
                                for (; f.length > 0 && (r = v, n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a + (1 === f.length ? f.shift() : 0), u.curveTo(r, n, o, a, v, m), 0 !== f.length);) r = v + f.shift(), n = m, o = r + f.shift(), a = n + f.shift(), m = a + f.shift(), v = o + (1 === f.length ? f.shift() : 0), u.curveTo(r, n, o, a, v, m);
                                break;
                            case 31:
                                for (; f.length > 0 && (r = v + f.shift(), n = m, o = r + f.shift(), a = n + f.shift(), m = a + f.shift(), v = o + (1 === f.length ? f.shift() : 0), u.curveTo(r, n, o, a, v, m), 0 !== f.length);) r = v, n = m + f.shift(), o = r + f.shift(), a = n + f.shift(), v = o + f.shift(), m = a + (1 === f.length ? f.shift() : 0), u.curveTo(r, n, o, a, v, m);
                                break;
                            default:
                                D < 32 ? console.log("Glyph " + e.index + ": unknown operator " + D) : D < 247 ? f.push(D - 139) : D < 251 ? (y = h[A], A += 1, f.push(256 * (D - 247) + y + 108)) : D < 255 ? (y = h[A], A += 1, f.push(256 * -(D - 251) - y - 108)) : (y = h[A], b = h[A + 1], S = h[A + 2], C = h[A + 3], A += 4, f.push((y << 24 | b << 16 | S << 8 | C) / 65536))
                        }
                    }
                }(i), e.advanceWidth = x, u
            }

            function jt(t, e) {
                var i, r = ct.indexOf(t);
                return r >= 0 && (i = r), (r = e.indexOf(t)) >= 0 ? i = r + ct.length : (i = ct.length + e.length, e.push(t)), i
            }

            function Bt(t, e, i) {
                for (var r = {}, n = 0; n < t.length; n += 1) {
                    var o = t[n],
                        a = e[o.name];
                    void 0 === a || Ct(a, o.value) || ("SID" === o.type && (a = jt(a, i)), r[o.op] = {
                        name: o.name,
                        type: o.type,
                        value: a
                    })
                }
                return r
            }

            function Ut(t, e) {
                var i = new $.Record("Top DICT", [{
                    name: "dict",
                    type: "DICT",
                    value: {}
                }]);
                return i.dict = Bt(Lt, t, e), i
            }

            function Nt(t) {
                var e = new $.Record("Top DICT INDEX", [{
                    name: "topDicts",
                    type: "INDEX",
                    value: []
                }]);
                return e.topDicts = [{
                    name: "topDict_0",
                    type: "TABLE",
                    value: t
                }], e
            }

            function Gt(t) {
                var e = [],
                    i = t.path;
                e.push({
                    name: "width",
                    type: "NUMBER",
                    value: t.advanceWidth
                });
                for (var r = 0, n = 0, o = 0; o < i.commands.length; o += 1) {
                    var a = void 0,
                        s = void 0,
                        l = i.commands[o];
                    if ("Q" === l.type) {
                        var h = 1 / 3,
                            c = 2 / 3;
                        l = {
                            type: "C",
                            x: l.x,
                            y: l.y,
                            x1: Math.round(h * r + c * l.x1),
                            y1: Math.round(h * n + c * l.y1),
                            x2: Math.round(h * l.x + c * l.x1),
                            y2: Math.round(h * l.y + c * l.y1)
                        }
                    }
                    if ("M" === l.type) a = Math.round(l.x - r), s = Math.round(l.y - n), e.push({
                        name: "dx",
                        type: "NUMBER",
                        value: a
                    }), e.push({
                        name: "dy",
                        type: "NUMBER",
                        value: s
                    }), e.push({
                        name: "rmoveto",
                        type: "OP",
                        value: 21
                    }), r = Math.round(l.x), n = Math.round(l.y);
                    else if ("L" === l.type) a = Math.round(l.x - r), s = Math.round(l.y - n), e.push({
                        name: "dx",
                        type: "NUMBER",
                        value: a
                    }), e.push({
                        name: "dy",
                        type: "NUMBER",
                        value: s
                    }), e.push({
                        name: "rlineto",
                        type: "OP",
                        value: 5
                    }), r = Math.round(l.x), n = Math.round(l.y);
                    else if ("C" === l.type) {
                        var u = Math.round(l.x1 - r),
                            f = Math.round(l.y1 - n),
                            d = Math.round(l.x2 - l.x1),
                            p = Math.round(l.y2 - l.y1);
                        a = Math.round(l.x - l.x2), s = Math.round(l.y - l.y2), e.push({
                            name: "dx1",
                            type: "NUMBER",
                            value: u
                        }), e.push({
                            name: "dy1",
                            type: "NUMBER",
                            value: f
                        }), e.push({
                            name: "dx2",
                            type: "NUMBER",
                            value: d
                        }), e.push({
                            name: "dy2",
                            type: "NUMBER",
                            value: p
                        }), e.push({
                            name: "dx",
                            type: "NUMBER",
                            value: a
                        }), e.push({
                            name: "dy",
                            type: "NUMBER",
                            value: s
                        }), e.push({
                            name: "rrcurveto",
                            type: "OP",
                            value: 8
                        }), r = Math.round(l.x), n = Math.round(l.y)
                    }
                }
                return e.push({
                    name: "endchar",
                    type: "OP",
                    value: 14
                }), e
            }
            var Xt = {
                parse: function(t, e, i, r) {
                    i.tables.cff = {};
                    var n = function(t, e) {
                            var i = {};
                            return i.formatMajor = st.getCard8(t, e), i.formatMinor = st.getCard8(t, e + 1), i.size = st.getCard8(t, e + 2), i.offsetSize = st.getCard8(t, e + 3), i.startOffset = e, i.endOffset = e + 4, i
                        }(t, e),
                        o = Et(t, n.endOffset, st.bytesToString),
                        a = Et(t, o.endOffset),
                        s = Et(t, a.endOffset, st.bytesToString),
                        l = Et(t, s.endOffset);
                    i.gsubrs = l.objects, i.gsubrsBias = Tt(i.gsubrs);
                    var h = Rt(t, e, a.objects, s.objects);
                    if (1 !== h.length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + h.length);
                    var c = h[0];
                    if (i.tables.cff.topDict = c, c._privateDict && (i.defaultWidthX = c._privateDict.defaultWidthX, i.nominalWidthX = c._privateDict.nominalWidthX), void 0 !== c.ros[0] && void 0 !== c.ros[1] && (i.isCIDFont = !0), i.isCIDFont) {
                        var u = c.fdArray,
                            f = c.fdSelect;
                        if (0 === u || 0 === f) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                        var d = Et(t, u += e),
                            p = Rt(t, e, d.objects, s.objects);
                        c._fdArray = p, f += e, c._fdSelect = function(t, e, i, r) {
                            var n, o = [],
                                a = new st.Parser(t, e),
                                s = a.parseCard8();
                            if (0 === s)
                                for (var l = 0; l < i; l++) {
                                    if ((n = a.parseCard8()) >= r) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + r + ")");
                                    o.push(n)
                                } else {
                                    if (3 !== s) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + s);
                                    var h, c = a.parseCard16(),
                                        u = a.parseCard16();
                                    if (0 !== u) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + u);
                                    for (var f = 0; f < c; f++) {
                                        if (n = a.parseCard8(), h = a.parseCard16(), n >= r) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + r + ")");
                                        if (h > i) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + h);
                                        for (; u < h; u++) o.push(n);
                                        u = h
                                    }
                                    if (h !== i) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + h)
                                }
                            return o
                        }(t, f, i.numGlyphs, p.length)
                    }
                    var g, v = e + c.private[1],
                        m = Dt(t, v, c.private[0], s.objects);
                    if (i.defaultWidthX = m.defaultWidthX, i.nominalWidthX = m.nominalWidthX, 0 !== m.subrs) {
                        var y = v + m.subrs,
                            b = Et(t, y);
                        i.subrs = b.objects, i.subrsBias = Tt(i.subrs)
                    } else i.subrs = [], i.subrsBias = 0;
                    r.lowMemory ? (g = function(t, e) {
                        var i, r, n = [],
                            o = st.getCard16(t, e);
                        if (0 !== o) {
                            var a = st.getByte(t, e + 2);
                            i = e + (o + 1) * a + 2;
                            for (var s = e + 3, l = 0; l < o + 1; l += 1) n.push(st.getOffset(t, s, a)), s += a;
                            r = i + n[o]
                        } else r = e + 2;
                        return {
                            offsets: n,
                            startOffset: e,
                            endOffset: r
                        }
                    }(t, e + c.charStrings), i.nGlyphs = g.offsets.length) : (g = Et(t, e + c.charStrings), i.nGlyphs = g.objects.length);
                    var x = function(t, e, i, r) {
                        var n, o, a = new st.Parser(t, e);
                        i -= 1;
                        var s = [".notdef"],
                            l = a.parseCard8();
                        if (0 === l)
                            for (var h = 0; h < i; h += 1) n = a.parseSID(), s.push(It(r, n));
                        else if (1 === l)
                            for (; s.length <= i;) {
                                n = a.parseSID(), o = a.parseCard8();
                                for (var c = 0; c <= o; c += 1) s.push(It(r, n)), n += 1
                            } else {
                                if (2 !== l) throw new Error("Unknown charset format " + l);
                                for (; s.length <= i;) {
                                    n = a.parseSID(), o = a.parseCard16();
                                    for (var u = 0; u <= o; u += 1) s.push(It(r, n)), n += 1
                                }
                            }
                        return s
                    }(t, e + c.charset, i.nGlyphs, s.objects);
                    if (0 === c.encoding ? i.cffEncoding = new vt(ut, x) : 1 === c.encoding ? i.cffEncoding = new vt(ft, x) : i.cffEncoding = function(t, e, i) {
                            var r, n = {},
                                o = new st.Parser(t, e),
                                a = o.parseCard8();
                            if (0 === a)
                                for (var s = o.parseCard8(), l = 0; l < s; l += 1) n[r = o.parseCard8()] = l;
                            else {
                                if (1 !== a) throw new Error("Unknown encoding format " + a);
                                var h = o.parseCard8();
                                r = 1;
                                for (var c = 0; c < h; c += 1)
                                    for (var u = o.parseCard8(), f = o.parseCard8(), d = u; d <= u + f; d += 1) n[d] = r, r += 1
                            }
                            return new vt(n, i)
                        }(t, e + c.encoding, x), i.encoding = i.encoding || i.cffEncoding, i.glyphs = new St.GlyphSet(i), r.lowMemory) i._push = function(r) {
                        var n = function(t, e, i, r, n) {
                            var o = st.getCard16(i, r),
                                a = 0;
                            0 !== o && (a = r + (o + 1) * st.getByte(i, r + 2) + 2);
                            var s = st.getBytes(i, a + e[t], a + e[t + 1]);
                            return n && (s = n(s)), s
                        }(r, g.offsets, t, e + c.charStrings);
                        i.glyphs.push(r, St.cffGlyphLoader(i, r, Ft, n))
                    };
                    else
                        for (var _ = 0; _ < i.nGlyphs; _ += 1) {
                            var w = g.objects[_];
                            i.glyphs.push(_, St.cffGlyphLoader(i, _, Ft, w))
                        }
                },
                make: function(t, e) {
                    for (var i, r = new $.Table("CFF ", [{
                            name: "header",
                            type: "RECORD"
                        }, {
                            name: "nameIndex",
                            type: "RECORD"
                        }, {
                            name: "topDictIndex",
                            type: "RECORD"
                        }, {
                            name: "stringIndex",
                            type: "RECORD"
                        }, {
                            name: "globalSubrIndex",
                            type: "RECORD"
                        }, {
                            name: "charsets",
                            type: "RECORD"
                        }, {
                            name: "charStringsIndex",
                            type: "RECORD"
                        }, {
                            name: "privateDict",
                            type: "RECORD"
                        }]), n = 1 / e.unitsPerEm, o = {
                            version: e.version,
                            fullName: e.fullName,
                            familyName: e.familyName,
                            weight: e.weightName,
                            fontBBox: e.fontBBox || [0, 0, 0, 0],
                            fontMatrix: [n, 0, 0, n, 0, 0],
                            charset: 999,
                            encoding: 0,
                            charStrings: 999,
                            private: [0, 999]
                        }, a = [], s = 1; s < t.length; s += 1) i = t.get(s), a.push(i.name);
                    var l = [];
                    r.header = new $.Record("Header", [{
                        name: "major",
                        type: "Card8",
                        value: 1
                    }, {
                        name: "minor",
                        type: "Card8",
                        value: 0
                    }, {
                        name: "hdrSize",
                        type: "Card8",
                        value: 4
                    }, {
                        name: "major",
                        type: "Card8",
                        value: 1
                    }]), r.nameIndex = function(t) {
                        var e = new $.Record("Name INDEX", [{
                            name: "names",
                            type: "INDEX",
                            value: []
                        }]);
                        e.names = [];
                        for (var i = 0; i < t.length; i += 1) e.names.push({
                            name: "name_" + i,
                            type: "NAME",
                            value: t[i]
                        });
                        return e
                    }([e.postScriptName]);
                    var h = Ut(o, l);
                    r.topDictIndex = Nt(h), r.globalSubrIndex = new $.Record("Global Subr INDEX", [{
                        name: "subrs",
                        type: "INDEX",
                        value: []
                    }]), r.charsets = function(t, e) {
                        for (var i = new $.Record("Charsets", [{
                                name: "format",
                                type: "Card8",
                                value: 0
                            }]), r = 0; r < t.length; r += 1) {
                            var n = jt(t[r], e);
                            i.fields.push({
                                name: "glyph_" + r,
                                type: "SID",
                                value: n
                            })
                        }
                        return i
                    }(a, l), r.charStringsIndex = function(t) {
                        for (var e = new $.Record("CharStrings INDEX", [{
                                name: "charStrings",
                                type: "INDEX",
                                value: []
                            }]), i = 0; i < t.length; i += 1) {
                            var r = t.get(i),
                                n = Gt(r);
                            e.charStrings.push({
                                name: r.name,
                                type: "CHARSTRING",
                                value: n
                            })
                        }
                        return e
                    }(t), r.privateDict = function(t, e) {
                        var i = new $.Record("Private DICT", [{
                            name: "dict",
                            type: "DICT",
                            value: {}
                        }]);
                        return i.dict = Bt(Mt, t, e), i
                    }({}, l), r.stringIndex = function(t) {
                        var e = new $.Record("String INDEX", [{
                            name: "strings",
                            type: "INDEX",
                            value: []
                        }]);
                        e.strings = [];
                        for (var i = 0; i < t.length; i += 1) e.strings.push({
                            name: "string_" + i,
                            type: "STRING",
                            value: t[i]
                        });
                        return e
                    }(l);
                    var c = r.header.sizeOf() + r.nameIndex.sizeOf() + r.topDictIndex.sizeOf() + r.stringIndex.sizeOf() + r.globalSubrIndex.sizeOf();
                    return o.charset = c, o.encoding = 0, o.charStrings = o.charset + r.charsets.sizeOf(), o.private[1] = o.charStrings + r.charStringsIndex.sizeOf(), h = Ut(o, l), r.topDictIndex = Nt(h), r
                }
            };
            var zt = {
                parse: function(t, e) {
                    var i = {},
                        r = new st.Parser(t, e);
                    return i.version = r.parseVersion(), i.fontRevision = Math.round(1e3 * r.parseFixed()) / 1e3, i.checkSumAdjustment = r.parseULong(), i.magicNumber = r.parseULong(), L.argument(1594834165 === i.magicNumber, "Font header has wrong magic number."), i.flags = r.parseUShort(), i.unitsPerEm = r.parseUShort(), i.created = r.parseLongDateTime(), i.modified = r.parseLongDateTime(), i.xMin = r.parseShort(), i.yMin = r.parseShort(), i.xMax = r.parseShort(), i.yMax = r.parseShort(), i.macStyle = r.parseUShort(), i.lowestRecPPEM = r.parseUShort(), i.fontDirectionHint = r.parseShort(), i.indexToLocFormat = r.parseShort(), i.glyphDataFormat = r.parseShort(), i
                },
                make: function(t) {
                    var e = Math.round((new Date).getTime() / 1e3) + 2082844800,
                        i = e;
                    return t.createdTimestamp && (i = t.createdTimestamp + 2082844800), new $.Table("head", [{
                        name: "version",
                        type: "FIXED",
                        value: 65536
                    }, {
                        name: "fontRevision",
                        type: "FIXED",
                        value: 65536
                    }, {
                        name: "checkSumAdjustment",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "magicNumber",
                        type: "ULONG",
                        value: 1594834165
                    }, {
                        name: "flags",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "unitsPerEm",
                        type: "USHORT",
                        value: 1e3
                    }, {
                        name: "created",
                        type: "LONGDATETIME",
                        value: i
                    }, {
                        name: "modified",
                        type: "LONGDATETIME",
                        value: e
                    }, {
                        name: "xMin",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "yMin",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "xMax",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "yMax",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "macStyle",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "lowestRecPPEM",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "fontDirectionHint",
                        type: "SHORT",
                        value: 2
                    }, {
                        name: "indexToLocFormat",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "glyphDataFormat",
                        type: "SHORT",
                        value: 0
                    }], t)
                }
            };
            var Wt = {
                parse: function(t, e) {
                    var i = {},
                        r = new st.Parser(t, e);
                    return i.version = r.parseVersion(), i.ascender = r.parseShort(), i.descender = r.parseShort(), i.lineGap = r.parseShort(), i.advanceWidthMax = r.parseUShort(), i.minLeftSideBearing = r.parseShort(), i.minRightSideBearing = r.parseShort(), i.xMaxExtent = r.parseShort(), i.caretSlopeRise = r.parseShort(), i.caretSlopeRun = r.parseShort(), i.caretOffset = r.parseShort(), r.relativeOffset += 8, i.metricDataFormat = r.parseShort(), i.numberOfHMetrics = r.parseUShort(), i
                },
                make: function(t) {
                    return new $.Table("hhea", [{
                        name: "version",
                        type: "FIXED",
                        value: 65536
                    }, {
                        name: "ascender",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "descender",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "lineGap",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "advanceWidthMax",
                        type: "UFWORD",
                        value: 0
                    }, {
                        name: "minLeftSideBearing",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "minRightSideBearing",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "xMaxExtent",
                        type: "FWORD",
                        value: 0
                    }, {
                        name: "caretSlopeRise",
                        type: "SHORT",
                        value: 1
                    }, {
                        name: "caretSlopeRun",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "caretOffset",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "reserved1",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "reserved2",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "reserved3",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "reserved4",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "metricDataFormat",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "numberOfHMetrics",
                        type: "USHORT",
                        value: 0
                    }], t)
                }
            };
            var Ht = {
                parse: function(t, e, i, r, n, o, a) {
                    a.lowMemory ? function(t, e, i, r, n) {
                        var o, a;
                        t._hmtxTableData = {};
                        for (var s = new st.Parser(e, i), l = 0; l < n; l += 1) l < r && (o = s.parseUShort(), a = s.parseShort()), t._hmtxTableData[l] = {
                            advanceWidth: o,
                            leftSideBearing: a
                        }
                    }(t, e, i, r, n) : function(t, e, i, r, n) {
                        for (var o, a, s = new st.Parser(t, e), l = 0; l < r; l += 1) {
                            l < i && (o = s.parseUShort(), a = s.parseShort());
                            var h = n.get(l);
                            h.advanceWidth = o, h.leftSideBearing = a
                        }
                    }(e, i, r, n, o)
                },
                make: function(t) {
                    for (var e = new $.Table("hmtx", []), i = 0; i < t.length; i += 1) {
                        var r = t.get(i),
                            n = r.advanceWidth || 0,
                            o = r.leftSideBearing || 0;
                        e.fields.push({
                            name: "advanceWidth_" + i,
                            type: "USHORT",
                            value: n
                        }), e.fields.push({
                            name: "leftSideBearing_" + i,
                            type: "SHORT",
                            value: o
                        })
                    }
                    return e
                }
            };
            var Yt = {
                make: function(t) {
                    for (var e = new $.Table("ltag", [{
                            name: "version",
                            type: "ULONG",
                            value: 1
                        }, {
                            name: "flags",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "numTags",
                            type: "ULONG",
                            value: t.length
                        }]), i = "", r = 12 + 4 * t.length, n = 0; n < t.length; ++n) {
                        var o = i.indexOf(t[n]);
                        o < 0 && (o = i.length, i += t[n]), e.fields.push({
                            name: "offset " + n,
                            type: "USHORT",
                            value: r + o
                        }), e.fields.push({
                            name: "length " + n,
                            type: "USHORT",
                            value: t[n].length
                        })
                    }
                    return e.fields.push({
                        name: "stringPool",
                        type: "CHARARRAY",
                        value: i
                    }), e
                },
                parse: function(t, e) {
                    var i = new st.Parser(t, e),
                        r = i.parseULong();
                    L.argument(1 === r, "Unsupported ltag table version."), i.skip("uLong", 1);
                    for (var n = i.parseULong(), o = [], a = 0; a < n; a++) {
                        for (var s = "", l = e + i.parseUShort(), h = i.parseUShort(), c = l; c < l + h; ++c) s += String.fromCharCode(t.getInt8(c));
                        o.push(s)
                    }
                    return o
                }
            };
            var Vt = {
                    parse: function(t, e) {
                        var i = {},
                            r = new st.Parser(t, e);
                        return i.version = r.parseVersion(), i.numGlyphs = r.parseUShort(), 1 === i.version && (i.maxPoints = r.parseUShort(), i.maxContours = r.parseUShort(), i.maxCompositePoints = r.parseUShort(), i.maxCompositeContours = r.parseUShort(), i.maxZones = r.parseUShort(), i.maxTwilightPoints = r.parseUShort(), i.maxStorage = r.parseUShort(), i.maxFunctionDefs = r.parseUShort(), i.maxInstructionDefs = r.parseUShort(), i.maxStackElements = r.parseUShort(), i.maxSizeOfInstructions = r.parseUShort(), i.maxComponentElements = r.parseUShort(), i.maxComponentDepth = r.parseUShort()), i
                    },
                    make: function(t) {
                        return new $.Table("maxp", [{
                            name: "version",
                            type: "FIXED",
                            value: 20480
                        }, {
                            name: "numGlyphs",
                            type: "USHORT",
                            value: t
                        }])
                    }
                },
                qt = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"],
                Zt = {
                    0: "en",
                    1: "fr",
                    2: "de",
                    3: "it",
                    4: "nl",
                    5: "sv",
                    6: "es",
                    7: "da",
                    8: "pt",
                    9: "no",
                    10: "he",
                    11: "ja",
                    12: "ar",
                    13: "fi",
                    14: "el",
                    15: "is",
                    16: "mt",
                    17: "tr",
                    18: "hr",
                    19: "zh-Hant",
                    20: "ur",
                    21: "hi",
                    22: "th",
                    23: "ko",
                    24: "lt",
                    25: "pl",
                    26: "hu",
                    27: "es",
                    28: "lv",
                    29: "se",
                    30: "fo",
                    31: "fa",
                    32: "ru",
                    33: "zh",
                    34: "nl-BE",
                    35: "ga",
                    36: "sq",
                    37: "ro",
                    38: "cz",
                    39: "sk",
                    40: "si",
                    41: "yi",
                    42: "sr",
                    43: "mk",
                    44: "bg",
                    45: "uk",
                    46: "be",
                    47: "uz",
                    48: "kk",
                    49: "az-Cyrl",
                    50: "az-Arab",
                    51: "hy",
                    52: "ka",
                    53: "mo",
                    54: "ky",
                    55: "tg",
                    56: "tk",
                    57: "mn-CN",
                    58: "mn",
                    59: "ps",
                    60: "ks",
                    61: "ku",
                    62: "sd",
                    63: "bo",
                    64: "ne",
                    65: "sa",
                    66: "mr",
                    67: "bn",
                    68: "as",
                    69: "gu",
                    70: "pa",
                    71: "or",
                    72: "ml",
                    73: "kn",
                    74: "ta",
                    75: "te",
                    76: "si",
                    77: "my",
                    78: "km",
                    79: "lo",
                    80: "vi",
                    81: "id",
                    82: "tl",
                    83: "ms",
                    84: "ms-Arab",
                    85: "am",
                    86: "ti",
                    87: "om",
                    88: "so",
                    89: "sw",
                    90: "rw",
                    91: "rn",
                    92: "ny",
                    93: "mg",
                    94: "eo",
                    128: "cy",
                    129: "eu",
                    130: "ca",
                    131: "la",
                    132: "qu",
                    133: "gn",
                    134: "ay",
                    135: "tt",
                    136: "ug",
                    137: "dz",
                    138: "jv",
                    139: "su",
                    140: "gl",
                    141: "af",
                    142: "br",
                    143: "iu",
                    144: "gd",
                    145: "gv",
                    146: "ga",
                    147: "to",
                    148: "el-polyton",
                    149: "kl",
                    150: "az",
                    151: "nn"
                },
                Kt = {
                    0: 0,
                    1: 0,
                    2: 0,
                    3: 0,
                    4: 0,
                    5: 0,
                    6: 0,
                    7: 0,
                    8: 0,
                    9: 0,
                    10: 5,
                    11: 1,
                    12: 4,
                    13: 0,
                    14: 6,
                    15: 0,
                    16: 0,
                    17: 0,
                    18: 0,
                    19: 2,
                    20: 4,
                    21: 9,
                    22: 21,
                    23: 3,
                    24: 29,
                    25: 29,
                    26: 29,
                    27: 29,
                    28: 29,
                    29: 0,
                    30: 0,
                    31: 4,
                    32: 7,
                    33: 25,
                    34: 0,
                    35: 0,
                    36: 0,
                    37: 0,
                    38: 29,
                    39: 29,
                    40: 0,
                    41: 5,
                    42: 7,
                    43: 7,
                    44: 7,
                    45: 7,
                    46: 7,
                    47: 7,
                    48: 7,
                    49: 7,
                    50: 4,
                    51: 24,
                    52: 23,
                    53: 7,
                    54: 7,
                    55: 7,
                    56: 7,
                    57: 27,
                    58: 7,
                    59: 4,
                    60: 4,
                    61: 4,
                    62: 4,
                    63: 26,
                    64: 9,
                    65: 9,
                    66: 9,
                    67: 13,
                    68: 13,
                    69: 11,
                    70: 10,
                    71: 12,
                    72: 17,
                    73: 16,
                    74: 14,
                    75: 15,
                    76: 18,
                    77: 19,
                    78: 20,
                    79: 22,
                    80: 30,
                    81: 0,
                    82: 0,
                    83: 0,
                    84: 4,
                    85: 28,
                    86: 28,
                    87: 28,
                    88: 0,
                    89: 0,
                    90: 0,
                    91: 0,
                    92: 0,
                    93: 0,
                    94: 0,
                    128: 0,
                    129: 0,
                    130: 0,
                    131: 0,
                    132: 0,
                    133: 0,
                    134: 0,
                    135: 7,
                    136: 4,
                    137: 26,
                    138: 0,
                    139: 0,
                    140: 0,
                    141: 0,
                    142: 0,
                    143: 28,
                    144: 0,
                    145: 0,
                    146: 0,
                    147: 0,
                    148: 6,
                    149: 0,
                    150: 0,
                    151: 0
                },
                Jt = {
                    1078: "af",
                    1052: "sq",
                    1156: "gsw",
                    1118: "am",
                    5121: "ar-DZ",
                    15361: "ar-BH",
                    3073: "ar",
                    2049: "ar-IQ",
                    11265: "ar-JO",
                    13313: "ar-KW",
                    12289: "ar-LB",
                    4097: "ar-LY",
                    6145: "ary",
                    8193: "ar-OM",
                    16385: "ar-QA",
                    1025: "ar-SA",
                    10241: "ar-SY",
                    7169: "aeb",
                    14337: "ar-AE",
                    9217: "ar-YE",
                    1067: "hy",
                    1101: "as",
                    2092: "az-Cyrl",
                    1068: "az",
                    1133: "ba",
                    1069: "eu",
                    1059: "be",
                    2117: "bn",
                    1093: "bn-IN",
                    8218: "bs-Cyrl",
                    5146: "bs",
                    1150: "br",
                    1026: "bg",
                    1027: "ca",
                    3076: "zh-HK",
                    5124: "zh-MO",
                    2052: "zh",
                    4100: "zh-SG",
                    1028: "zh-TW",
                    1155: "co",
                    1050: "hr",
                    4122: "hr-BA",
                    1029: "cs",
                    1030: "da",
                    1164: "prs",
                    1125: "dv",
                    2067: "nl-BE",
                    1043: "nl",
                    3081: "en-AU",
                    10249: "en-BZ",
                    4105: "en-CA",
                    9225: "en-029",
                    16393: "en-IN",
                    6153: "en-IE",
                    8201: "en-JM",
                    17417: "en-MY",
                    5129: "en-NZ",
                    13321: "en-PH",
                    18441: "en-SG",
                    7177: "en-ZA",
                    11273: "en-TT",
                    2057: "en-GB",
                    1033: "en",
                    12297: "en-ZW",
                    1061: "et",
                    1080: "fo",
                    1124: "fil",
                    1035: "fi",
                    2060: "fr-BE",
                    3084: "fr-CA",
                    1036: "fr",
                    5132: "fr-LU",
                    6156: "fr-MC",
                    4108: "fr-CH",
                    1122: "fy",
                    1110: "gl",
                    1079: "ka",
                    3079: "de-AT",
                    1031: "de",
                    5127: "de-LI",
                    4103: "de-LU",
                    2055: "de-CH",
                    1032: "el",
                    1135: "kl",
                    1095: "gu",
                    1128: "ha",
                    1037: "he",
                    1081: "hi",
                    1038: "hu",
                    1039: "is",
                    1136: "ig",
                    1057: "id",
                    1117: "iu",
                    2141: "iu-Latn",
                    2108: "ga",
                    1076: "xh",
                    1077: "zu",
                    1040: "it",
                    2064: "it-CH",
                    1041: "ja",
                    1099: "kn",
                    1087: "kk",
                    1107: "km",
                    1158: "quc",
                    1159: "rw",
                    1089: "sw",
                    1111: "kok",
                    1042: "ko",
                    1088: "ky",
                    1108: "lo",
                    1062: "lv",
                    1063: "lt",
                    2094: "dsb",
                    1134: "lb",
                    1071: "mk",
                    2110: "ms-BN",
                    1086: "ms",
                    1100: "ml",
                    1082: "mt",
                    1153: "mi",
                    1146: "arn",
                    1102: "mr",
                    1148: "moh",
                    1104: "mn",
                    2128: "mn-CN",
                    1121: "ne",
                    1044: "nb",
                    2068: "nn",
                    1154: "oc",
                    1096: "or",
                    1123: "ps",
                    1045: "pl",
                    1046: "pt",
                    2070: "pt-PT",
                    1094: "pa",
                    1131: "qu-BO",
                    2155: "qu-EC",
                    3179: "qu",
                    1048: "ro",
                    1047: "rm",
                    1049: "ru",
                    9275: "smn",
                    4155: "smj-NO",
                    5179: "smj",
                    3131: "se-FI",
                    1083: "se",
                    2107: "se-SE",
                    8251: "sms",
                    6203: "sma-NO",
                    7227: "sms",
                    1103: "sa",
                    7194: "sr-Cyrl-BA",
                    3098: "sr",
                    6170: "sr-Latn-BA",
                    2074: "sr-Latn",
                    1132: "nso",
                    1074: "tn",
                    1115: "si",
                    1051: "sk",
                    1060: "sl",
                    11274: "es-AR",
                    16394: "es-BO",
                    13322: "es-CL",
                    9226: "es-CO",
                    5130: "es-CR",
                    7178: "es-DO",
                    12298: "es-EC",
                    17418: "es-SV",
                    4106: "es-GT",
                    18442: "es-HN",
                    2058: "es-MX",
                    19466: "es-NI",
                    6154: "es-PA",
                    15370: "es-PY",
                    10250: "es-PE",
                    20490: "es-PR",
                    3082: "es",
                    1034: "es",
                    21514: "es-US",
                    14346: "es-UY",
                    8202: "es-VE",
                    2077: "sv-FI",
                    1053: "sv",
                    1114: "syr",
                    1064: "tg",
                    2143: "tzm",
                    1097: "ta",
                    1092: "tt",
                    1098: "te",
                    1054: "th",
                    1105: "bo",
                    1055: "tr",
                    1090: "tk",
                    1152: "ug",
                    1058: "uk",
                    1070: "hsb",
                    1056: "ur",
                    2115: "uz-Cyrl",
                    1091: "uz",
                    1066: "vi",
                    1106: "cy",
                    1160: "wo",
                    1157: "sah",
                    1144: "ii",
                    1130: "yo"
                };

            function Qt(t, e, i) {
                switch (t) {
                    case 0:
                        if (65535 === e) return "und";
                        if (i) return i[e];
                        break;
                    case 1:
                        return Zt[e];
                    case 3:
                        return Jt[e]
                }
            }
            var $t = "utf-16",
                te = {
                    0: "macintosh",
                    1: "x-mac-japanese",
                    2: "x-mac-chinesetrad",
                    3: "x-mac-korean",
                    6: "x-mac-greek",
                    7: "x-mac-cyrillic",
                    9: "x-mac-devanagai",
                    10: "x-mac-gurmukhi",
                    11: "x-mac-gujarati",
                    12: "x-mac-oriya",
                    13: "x-mac-bengali",
                    14: "x-mac-tamil",
                    15: "x-mac-telugu",
                    16: "x-mac-kannada",
                    17: "x-mac-malayalam",
                    18: "x-mac-sinhalese",
                    19: "x-mac-burmese",
                    20: "x-mac-khmer",
                    21: "x-mac-thai",
                    22: "x-mac-lao",
                    23: "x-mac-georgian",
                    24: "x-mac-armenian",
                    25: "x-mac-chinesesimp",
                    26: "x-mac-tibetan",
                    27: "x-mac-mongolian",
                    28: "x-mac-ethiopic",
                    29: "x-mac-ce",
                    30: "x-mac-vietnamese",
                    31: "x-mac-extarabic"
                },
                ee = {
                    15: "x-mac-icelandic",
                    17: "x-mac-turkish",
                    18: "x-mac-croatian",
                    24: "x-mac-ce",
                    25: "x-mac-ce",
                    26: "x-mac-ce",
                    27: "x-mac-ce",
                    28: "x-mac-ce",
                    30: "x-mac-icelandic",
                    37: "x-mac-romanian",
                    38: "x-mac-ce",
                    39: "x-mac-ce",
                    40: "x-mac-ce",
                    143: "x-mac-inuit",
                    146: "x-mac-gaelic"
                };

            function ie(t, e, i) {
                switch (t) {
                    case 0:
                        return $t;
                    case 1:
                        return ee[i] || te[e];
                    case 3:
                        if (1 === e || 10 === e) return $t
                }
            }

            function re(t) {
                var e = {};
                for (var i in t) e[t[i]] = parseInt(i);
                return e
            }

            function ne(t, e, i, r, n, o) {
                return new $.Record("NameRecord", [{
                    name: "platformID",
                    type: "USHORT",
                    value: t
                }, {
                    name: "encodingID",
                    type: "USHORT",
                    value: e
                }, {
                    name: "languageID",
                    type: "USHORT",
                    value: i
                }, {
                    name: "nameID",
                    type: "USHORT",
                    value: r
                }, {
                    name: "length",
                    type: "USHORT",
                    value: n
                }, {
                    name: "offset",
                    type: "USHORT",
                    value: o
                }])
            }

            function oe(t, e) {
                var i = function(t, e) {
                    var i = t.length,
                        r = e.length - i + 1;
                    t: for (var n = 0; n < r; n++)
                        for (; n < r; n++) {
                            for (var o = 0; o < i; o++)
                                if (e[n + o] !== t[o]) continue t;
                            return n
                        }
                    return -1
                }(t, e);
                if (i < 0) {
                    i = e.length;
                    for (var r = 0, n = t.length; r < n; ++r) e.push(t[r])
                }
                return i
            }
            var ae = {
                    parse: function(t, e, i) {
                        for (var r = {}, n = new st.Parser(t, e), o = n.parseUShort(), a = n.parseUShort(), s = n.offset + n.parseUShort(), l = 0; l < a; l++) {
                            var h = n.parseUShort(),
                                c = n.parseUShort(),
                                u = n.parseUShort(),
                                f = n.parseUShort(),
                                d = qt[f] || f,
                                p = n.parseUShort(),
                                g = n.parseUShort(),
                                v = Qt(h, u, i),
                                m = ie(h, c, u);
                            if (void 0 !== m && void 0 !== v) {
                                var y = void 0;
                                if (y = m === $t ? A.UTF16(t, s + g, p) : A.MACSTRING(t, s + g, p, m)) {
                                    var b = r[d];
                                    void 0 === b && (b = r[d] = {}), b[v] = y
                                }
                            }
                        }
                        return 1 === o && n.parseUShort(), r
                    },
                    make: function(t, e) {
                        var i, r = [],
                            n = {},
                            o = re(qt);
                        for (var a in t) {
                            var s = o[a];
                            if (void 0 === s && (s = a), i = parseInt(s), isNaN(i)) throw new Error('Name table entry "' + a + '" does not exist, see nameTableNames for complete list.');
                            n[i] = t[a], r.push(i)
                        }
                        for (var l = re(Zt), h = re(Jt), c = [], u = [], f = 0; f < r.length; f++) {
                            var d = n[i = r[f]];
                            for (var p in d) {
                                var g = d[p],
                                    v = 1,
                                    m = l[p],
                                    y = Kt[m],
                                    b = ie(v, y, m),
                                    x = D.MACSTRING(g, b);
                                void 0 === x && (v = 0, (m = e.indexOf(p)) < 0 && (m = e.length, e.push(p)), y = 4, x = D.UTF16(g));
                                var _ = oe(x, u);
                                c.push(ne(v, y, m, i, x.length, _));
                                var w = h[p];
                                if (void 0 !== w) {
                                    var S = D.UTF16(g),
                                        C = oe(S, u);
                                    c.push(ne(3, 1, w, i, S.length, C))
                                }
                            }
                        }
                        c.sort((function(t, e) {
                            return t.platformID - e.platformID || t.encodingID - e.encodingID || t.languageID - e.languageID || t.nameID - e.nameID
                        }));
                        for (var T = new $.Table("name", [{
                                name: "format",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "count",
                                type: "USHORT",
                                value: c.length
                            }, {
                                name: "stringOffset",
                                type: "USHORT",
                                value: 6 + 12 * c.length
                            }]), E = 0; E < c.length; E++) T.fields.push({
                            name: "record_" + E,
                            type: "RECORD",
                            value: c[E]
                        });
                        return T.fields.push({
                            name: "strings",
                            type: "LITERAL",
                            value: u
                        }), T
                    }
                },
                se = [{
                    begin: 0,
                    end: 127
                }, {
                    begin: 128,
                    end: 255
                }, {
                    begin: 256,
                    end: 383
                }, {
                    begin: 384,
                    end: 591
                }, {
                    begin: 592,
                    end: 687
                }, {
                    begin: 688,
                    end: 767
                }, {
                    begin: 768,
                    end: 879
                }, {
                    begin: 880,
                    end: 1023
                }, {
                    begin: 11392,
                    end: 11519
                }, {
                    begin: 1024,
                    end: 1279
                }, {
                    begin: 1328,
                    end: 1423
                }, {
                    begin: 1424,
                    end: 1535
                }, {
                    begin: 42240,
                    end: 42559
                }, {
                    begin: 1536,
                    end: 1791
                }, {
                    begin: 1984,
                    end: 2047
                }, {
                    begin: 2304,
                    end: 2431
                }, {
                    begin: 2432,
                    end: 2559
                }, {
                    begin: 2560,
                    end: 2687
                }, {
                    begin: 2688,
                    end: 2815
                }, {
                    begin: 2816,
                    end: 2943
                }, {
                    begin: 2944,
                    end: 3071
                }, {
                    begin: 3072,
                    end: 3199
                }, {
                    begin: 3200,
                    end: 3327
                }, {
                    begin: 3328,
                    end: 3455
                }, {
                    begin: 3584,
                    end: 3711
                }, {
                    begin: 3712,
                    end: 3839
                }, {
                    begin: 4256,
                    end: 4351
                }, {
                    begin: 6912,
                    end: 7039
                }, {
                    begin: 4352,
                    end: 4607
                }, {
                    begin: 7680,
                    end: 7935
                }, {
                    begin: 7936,
                    end: 8191
                }, {
                    begin: 8192,
                    end: 8303
                }, {
                    begin: 8304,
                    end: 8351
                }, {
                    begin: 8352,
                    end: 8399
                }, {
                    begin: 8400,
                    end: 8447
                }, {
                    begin: 8448,
                    end: 8527
                }, {
                    begin: 8528,
                    end: 8591
                }, {
                    begin: 8592,
                    end: 8703
                }, {
                    begin: 8704,
                    end: 8959
                }, {
                    begin: 8960,
                    end: 9215
                }, {
                    begin: 9216,
                    end: 9279
                }, {
                    begin: 9280,
                    end: 9311
                }, {
                    begin: 9312,
                    end: 9471
                }, {
                    begin: 9472,
                    end: 9599
                }, {
                    begin: 9600,
                    end: 9631
                }, {
                    begin: 9632,
                    end: 9727
                }, {
                    begin: 9728,
                    end: 9983
                }, {
                    begin: 9984,
                    end: 10175
                }, {
                    begin: 12288,
                    end: 12351
                }, {
                    begin: 12352,
                    end: 12447
                }, {
                    begin: 12448,
                    end: 12543
                }, {
                    begin: 12544,
                    end: 12591
                }, {
                    begin: 12592,
                    end: 12687
                }, {
                    begin: 43072,
                    end: 43135
                }, {
                    begin: 12800,
                    end: 13055
                }, {
                    begin: 13056,
                    end: 13311
                }, {
                    begin: 44032,
                    end: 55215
                }, {
                    begin: 55296,
                    end: 57343
                }, {
                    begin: 67840,
                    end: 67871
                }, {
                    begin: 19968,
                    end: 40959
                }, {
                    begin: 57344,
                    end: 63743
                }, {
                    begin: 12736,
                    end: 12783
                }, {
                    begin: 64256,
                    end: 64335
                }, {
                    begin: 64336,
                    end: 65023
                }, {
                    begin: 65056,
                    end: 65071
                }, {
                    begin: 65040,
                    end: 65055
                }, {
                    begin: 65104,
                    end: 65135
                }, {
                    begin: 65136,
                    end: 65279
                }, {
                    begin: 65280,
                    end: 65519
                }, {
                    begin: 65520,
                    end: 65535
                }, {
                    begin: 3840,
                    end: 4095
                }, {
                    begin: 1792,
                    end: 1871
                }, {
                    begin: 1920,
                    end: 1983
                }, {
                    begin: 3456,
                    end: 3583
                }, {
                    begin: 4096,
                    end: 4255
                }, {
                    begin: 4608,
                    end: 4991
                }, {
                    begin: 5024,
                    end: 5119
                }, {
                    begin: 5120,
                    end: 5759
                }, {
                    begin: 5760,
                    end: 5791
                }, {
                    begin: 5792,
                    end: 5887
                }, {
                    begin: 6016,
                    end: 6143
                }, {
                    begin: 6144,
                    end: 6319
                }, {
                    begin: 10240,
                    end: 10495
                }, {
                    begin: 40960,
                    end: 42127
                }, {
                    begin: 5888,
                    end: 5919
                }, {
                    begin: 66304,
                    end: 66351
                }, {
                    begin: 66352,
                    end: 66383
                }, {
                    begin: 66560,
                    end: 66639
                }, {
                    begin: 118784,
                    end: 119039
                }, {
                    begin: 119808,
                    end: 120831
                }, {
                    begin: 1044480,
                    end: 1048573
                }, {
                    begin: 65024,
                    end: 65039
                }, {
                    begin: 917504,
                    end: 917631
                }, {
                    begin: 6400,
                    end: 6479
                }, {
                    begin: 6480,
                    end: 6527
                }, {
                    begin: 6528,
                    end: 6623
                }, {
                    begin: 6656,
                    end: 6687
                }, {
                    begin: 11264,
                    end: 11359
                }, {
                    begin: 11568,
                    end: 11647
                }, {
                    begin: 19904,
                    end: 19967
                }, {
                    begin: 43008,
                    end: 43055
                }, {
                    begin: 65536,
                    end: 65663
                }, {
                    begin: 65856,
                    end: 65935
                }, {
                    begin: 66432,
                    end: 66463
                }, {
                    begin: 66464,
                    end: 66527
                }, {
                    begin: 66640,
                    end: 66687
                }, {
                    begin: 66688,
                    end: 66735
                }, {
                    begin: 67584,
                    end: 67647
                }, {
                    begin: 68096,
                    end: 68191
                }, {
                    begin: 119552,
                    end: 119647
                }, {
                    begin: 73728,
                    end: 74751
                }, {
                    begin: 119648,
                    end: 119679
                }, {
                    begin: 7040,
                    end: 7103
                }, {
                    begin: 7168,
                    end: 7247
                }, {
                    begin: 7248,
                    end: 7295
                }, {
                    begin: 43136,
                    end: 43231
                }, {
                    begin: 43264,
                    end: 43311
                }, {
                    begin: 43312,
                    end: 43359
                }, {
                    begin: 43520,
                    end: 43615
                }, {
                    begin: 65936,
                    end: 65999
                }, {
                    begin: 66e3,
                    end: 66047
                }, {
                    begin: 66208,
                    end: 66271
                }, {
                    begin: 127024,
                    end: 127135
                }];
            var le = {
                parse: function(t, e) {
                    var i = {},
                        r = new st.Parser(t, e);
                    i.version = r.parseUShort(), i.xAvgCharWidth = r.parseShort(), i.usWeightClass = r.parseUShort(), i.usWidthClass = r.parseUShort(), i.fsType = r.parseUShort(), i.ySubscriptXSize = r.parseShort(), i.ySubscriptYSize = r.parseShort(), i.ySubscriptXOffset = r.parseShort(), i.ySubscriptYOffset = r.parseShort(), i.ySuperscriptXSize = r.parseShort(), i.ySuperscriptYSize = r.parseShort(), i.ySuperscriptXOffset = r.parseShort(), i.ySuperscriptYOffset = r.parseShort(), i.yStrikeoutSize = r.parseShort(), i.yStrikeoutPosition = r.parseShort(), i.sFamilyClass = r.parseShort(), i.panose = [];
                    for (var n = 0; n < 10; n++) i.panose[n] = r.parseByte();
                    return i.ulUnicodeRange1 = r.parseULong(), i.ulUnicodeRange2 = r.parseULong(), i.ulUnicodeRange3 = r.parseULong(), i.ulUnicodeRange4 = r.parseULong(), i.achVendID = String.fromCharCode(r.parseByte(), r.parseByte(), r.parseByte(), r.parseByte()), i.fsSelection = r.parseUShort(), i.usFirstCharIndex = r.parseUShort(), i.usLastCharIndex = r.parseUShort(), i.sTypoAscender = r.parseShort(), i.sTypoDescender = r.parseShort(), i.sTypoLineGap = r.parseShort(), i.usWinAscent = r.parseUShort(), i.usWinDescent = r.parseUShort(), i.version >= 1 && (i.ulCodePageRange1 = r.parseULong(), i.ulCodePageRange2 = r.parseULong()), i.version >= 2 && (i.sxHeight = r.parseShort(), i.sCapHeight = r.parseShort(), i.usDefaultChar = r.parseUShort(), i.usBreakChar = r.parseUShort(), i.usMaxContent = r.parseUShort()), i
                },
                make: function(t) {
                    return new $.Table("OS/2", [{
                        name: "version",
                        type: "USHORT",
                        value: 3
                    }, {
                        name: "xAvgCharWidth",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "usWeightClass",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usWidthClass",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "fsType",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "ySubscriptXSize",
                        type: "SHORT",
                        value: 650
                    }, {
                        name: "ySubscriptYSize",
                        type: "SHORT",
                        value: 699
                    }, {
                        name: "ySubscriptXOffset",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "ySubscriptYOffset",
                        type: "SHORT",
                        value: 140
                    }, {
                        name: "ySuperscriptXSize",
                        type: "SHORT",
                        value: 650
                    }, {
                        name: "ySuperscriptYSize",
                        type: "SHORT",
                        value: 699
                    }, {
                        name: "ySuperscriptXOffset",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "ySuperscriptYOffset",
                        type: "SHORT",
                        value: 479
                    }, {
                        name: "yStrikeoutSize",
                        type: "SHORT",
                        value: 49
                    }, {
                        name: "yStrikeoutPosition",
                        type: "SHORT",
                        value: 258
                    }, {
                        name: "sFamilyClass",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "bFamilyType",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bSerifStyle",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bWeight",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bProportion",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bContrast",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bStrokeVariation",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bArmStyle",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bLetterform",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bMidline",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "bXHeight",
                        type: "BYTE",
                        value: 0
                    }, {
                        name: "ulUnicodeRange1",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "ulUnicodeRange2",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "ulUnicodeRange3",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "ulUnicodeRange4",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "achVendID",
                        type: "CHARARRAY",
                        value: "XXXX"
                    }, {
                        name: "fsSelection",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usFirstCharIndex",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usLastCharIndex",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "sTypoAscender",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "sTypoDescender",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "sTypoLineGap",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "usWinAscent",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usWinDescent",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "ulCodePageRange1",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "ulCodePageRange2",
                        type: "ULONG",
                        value: 0
                    }, {
                        name: "sxHeight",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "sCapHeight",
                        type: "SHORT",
                        value: 0
                    }, {
                        name: "usDefaultChar",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usBreakChar",
                        type: "USHORT",
                        value: 0
                    }, {
                        name: "usMaxContext",
                        type: "USHORT",
                        value: 0
                    }], t)
                },
                unicodeRanges: se,
                getUnicodeRange: function(t) {
                    for (var e = 0; e < se.length; e += 1) {
                        var i = se[e];
                        if (t >= i.begin && t < i.end) return e
                    }
                    return -1
                }
            };
            var he = {
                    parse: function(t, e) {
                        var i = {},
                            r = new st.Parser(t, e);
                        switch (i.version = r.parseVersion(), i.italicAngle = r.parseFixed(), i.underlinePosition = r.parseShort(), i.underlineThickness = r.parseShort(), i.isFixedPitch = r.parseULong(), i.minMemType42 = r.parseULong(), i.maxMemType42 = r.parseULong(), i.minMemType1 = r.parseULong(), i.maxMemType1 = r.parseULong(), i.version) {
                            case 1:
                                i.names = dt.slice();
                                break;
                            case 2:
                                i.numberOfGlyphs = r.parseUShort(), i.glyphNameIndex = new Array(i.numberOfGlyphs);
                                for (var n = 0; n < i.numberOfGlyphs; n++) i.glyphNameIndex[n] = r.parseUShort();
                                i.names = [];
                                for (var o = 0; o < i.numberOfGlyphs; o++)
                                    if (i.glyphNameIndex[o] >= dt.length) {
                                        var a = r.parseChar();
                                        i.names.push(r.parseString(a))
                                    } break;
                            case 2.5:
                                i.numberOfGlyphs = r.parseUShort(), i.offset = new Array(i.numberOfGlyphs);
                                for (var s = 0; s < i.numberOfGlyphs; s++) i.offset[s] = r.parseChar()
                        }
                        return i
                    },
                    make: function() {
                        return new $.Table("post", [{
                            name: "version",
                            type: "FIXED",
                            value: 196608
                        }, {
                            name: "italicAngle",
                            type: "FIXED",
                            value: 0
                        }, {
                            name: "underlinePosition",
                            type: "FWORD",
                            value: 0
                        }, {
                            name: "underlineThickness",
                            type: "FWORD",
                            value: 0
                        }, {
                            name: "isFixedPitch",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "minMemType42",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "maxMemType42",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "minMemType1",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "maxMemType1",
                            type: "ULONG",
                            value: 0
                        }])
                    }
                },
                ce = new Array(9);
            ce[1] = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                return 1 === e ? {
                    substFormat: 1,
                    coverage: this.parsePointer(ot.coverage),
                    deltaGlyphId: this.parseUShort()
                } : 2 === e ? {
                    substFormat: 2,
                    coverage: this.parsePointer(ot.coverage),
                    substitute: this.parseOffset16List()
                } : void L.assert(!1, "0x" + t.toString(16) + ": lookup type 1 format must be 1 or 2.")
            }, ce[2] = function() {
                var t = this.parseUShort();
                return L.argument(1 === t, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {
                    substFormat: t,
                    coverage: this.parsePointer(ot.coverage),
                    sequences: this.parseListOfLists()
                }
            }, ce[3] = function() {
                var t = this.parseUShort();
                return L.argument(1 === t, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {
                    substFormat: t,
                    coverage: this.parsePointer(ot.coverage),
                    alternateSets: this.parseListOfLists()
                }
            }, ce[4] = function() {
                var t = this.parseUShort();
                return L.argument(1 === t, "GSUB ligature table identifier-format must be 1"), {
                    substFormat: t,
                    coverage: this.parsePointer(ot.coverage),
                    ligatureSets: this.parseListOfLists((function() {
                        return {
                            ligGlyph: this.parseUShort(),
                            components: this.parseUShortList(this.parseUShort() - 1)
                        }
                    }))
                }
            };
            var ue = {
                sequenceIndex: ot.uShort,
                lookupListIndex: ot.uShort
            };
            ce[5] = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                if (1 === e) return {
                    substFormat: e,
                    coverage: this.parsePointer(ot.coverage),
                    ruleSets: this.parseListOfLists((function() {
                        var t = this.parseUShort(),
                            e = this.parseUShort();
                        return {
                            input: this.parseUShortList(t - 1),
                            lookupRecords: this.parseRecordList(e, ue)
                        }
                    }))
                };
                if (2 === e) return {
                    substFormat: e,
                    coverage: this.parsePointer(ot.coverage),
                    classDef: this.parsePointer(ot.classDef),
                    classSets: this.parseListOfLists((function() {
                        var t = this.parseUShort(),
                            e = this.parseUShort();
                        return {
                            classes: this.parseUShortList(t - 1),
                            lookupRecords: this.parseRecordList(e, ue)
                        }
                    }))
                };
                if (3 === e) {
                    var i = this.parseUShort(),
                        r = this.parseUShort();
                    return {
                        substFormat: e,
                        coverages: this.parseList(i, ot.pointer(ot.coverage)),
                        lookupRecords: this.parseRecordList(r, ue)
                    }
                }
                L.assert(!1, "0x" + t.toString(16) + ": lookup type 5 format must be 1, 2 or 3.")
            }, ce[6] = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                return 1 === e ? {
                    substFormat: 1,
                    coverage: this.parsePointer(ot.coverage),
                    chainRuleSets: this.parseListOfLists((function() {
                        return {
                            backtrack: this.parseUShortList(),
                            input: this.parseUShortList(this.parseShort() - 1),
                            lookahead: this.parseUShortList(),
                            lookupRecords: this.parseRecordList(ue)
                        }
                    }))
                } : 2 === e ? {
                    substFormat: 2,
                    coverage: this.parsePointer(ot.coverage),
                    backtrackClassDef: this.parsePointer(ot.classDef),
                    inputClassDef: this.parsePointer(ot.classDef),
                    lookaheadClassDef: this.parsePointer(ot.classDef),
                    chainClassSet: this.parseListOfLists((function() {
                        return {
                            backtrack: this.parseUShortList(),
                            input: this.parseUShortList(this.parseShort() - 1),
                            lookahead: this.parseUShortList(),
                            lookupRecords: this.parseRecordList(ue)
                        }
                    }))
                } : 3 === e ? {
                    substFormat: 3,
                    backtrackCoverage: this.parseList(ot.pointer(ot.coverage)),
                    inputCoverage: this.parseList(ot.pointer(ot.coverage)),
                    lookaheadCoverage: this.parseList(ot.pointer(ot.coverage)),
                    lookupRecords: this.parseRecordList(ue)
                } : void L.assert(!1, "0x" + t.toString(16) + ": lookup type 6 format must be 1, 2 or 3.")
            }, ce[7] = function() {
                var t = this.parseUShort();
                L.argument(1 === t, "GSUB Extension Substitution subtable identifier-format must be 1");
                var e = this.parseUShort(),
                    i = new ot(this.data, this.offset + this.parseULong());
                return {
                    substFormat: 1,
                    lookupType: e,
                    extension: ce[e].call(i)
                }
            }, ce[8] = function() {
                var t = this.parseUShort();
                return L.argument(1 === t, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {
                    substFormat: t,
                    coverage: this.parsePointer(ot.coverage),
                    backtrackCoverage: this.parseList(ot.pointer(ot.coverage)),
                    lookaheadCoverage: this.parseList(ot.pointer(ot.coverage)),
                    substitutes: this.parseUShortList()
                }
            };
            var fe = new Array(9);
            fe[1] = function(t) {
                return 1 === t.substFormat ? new $.Table("substitutionTable", [{
                    name: "substFormat",
                    type: "USHORT",
                    value: 1
                }, {
                    name: "coverage",
                    type: "TABLE",
                    value: new $.Coverage(t.coverage)
                }, {
                    name: "deltaGlyphID",
                    type: "USHORT",
                    value: t.deltaGlyphId
                }]) : new $.Table("substitutionTable", [{
                    name: "substFormat",
                    type: "USHORT",
                    value: 2
                }, {
                    name: "coverage",
                    type: "TABLE",
                    value: new $.Coverage(t.coverage)
                }].concat($.ushortList("substitute", t.substitute)))
            }, fe[2] = function(t) {
                return L.assert(1 === t.substFormat, "Lookup type 2 substFormat must be 1."), new $.Table("substitutionTable", [{
                    name: "substFormat",
                    type: "USHORT",
                    value: 1
                }, {
                    name: "coverage",
                    type: "TABLE",
                    value: new $.Coverage(t.coverage)
                }].concat($.tableList("seqSet", t.sequences, (function(t) {
                    return new $.Table("sequenceSetTable", $.ushortList("sequence", t))
                }))))
            }, fe[3] = function(t) {
                return L.assert(1 === t.substFormat, "Lookup type 3 substFormat must be 1."), new $.Table("substitutionTable", [{
                    name: "substFormat",
                    type: "USHORT",
                    value: 1
                }, {
                    name: "coverage",
                    type: "TABLE",
                    value: new $.Coverage(t.coverage)
                }].concat($.tableList("altSet", t.alternateSets, (function(t) {
                    return new $.Table("alternateSetTable", $.ushortList("alternate", t))
                }))))
            }, fe[4] = function(t) {
                return L.assert(1 === t.substFormat, "Lookup type 4 substFormat must be 1."), new $.Table("substitutionTable", [{
                    name: "substFormat",
                    type: "USHORT",
                    value: 1
                }, {
                    name: "coverage",
                    type: "TABLE",
                    value: new $.Coverage(t.coverage)
                }].concat($.tableList("ligSet", t.ligatureSets, (function(t) {
                    return new $.Table("ligatureSetTable", $.tableList("ligature", t, (function(t) {
                        return new $.Table("ligatureTable", [{
                            name: "ligGlyph",
                            type: "USHORT",
                            value: t.ligGlyph
                        }].concat($.ushortList("component", t.components, t.components.length + 1)))
                    })))
                }))))
            }, fe[6] = function(t) {
                if (1 === t.substFormat) {
                    var e = new $.Table("chainContextTable", [{
                        name: "substFormat",
                        type: "USHORT",
                        value: t.substFormat
                    }, {
                        name: "coverage",
                        type: "TABLE",
                        value: new $.Coverage(t.coverage)
                    }].concat($.tableList("chainRuleSet", t.chainRuleSets, (function(t) {
                        return new $.Table("chainRuleSetTable", $.tableList("chainRule", t, (function(t) {
                            var e = $.ushortList("backtrackGlyph", t.backtrack, t.backtrack.length).concat($.ushortList("inputGlyph", t.input, t.input.length + 1)).concat($.ushortList("lookaheadGlyph", t.lookahead, t.lookahead.length)).concat($.ushortList("substitution", [], t.lookupRecords.length));
                            return t.lookupRecords.forEach((function(t, i) {
                                e = e.concat({
                                    name: "sequenceIndex" + i,
                                    type: "USHORT",
                                    value: t.sequenceIndex
                                }).concat({
                                    name: "lookupListIndex" + i,
                                    type: "USHORT",
                                    value: t.lookupListIndex
                                })
                            })), new $.Table("chainRuleTable", e)
                        })))
                    }))));
                    return e
                }
                if (2 === t.substFormat) L.assert(!1, "lookup type 6 format 2 is not yet supported.");
                else if (3 === t.substFormat) {
                    var i = [{
                        name: "substFormat",
                        type: "USHORT",
                        value: t.substFormat
                    }];
                    return i.push({
                        name: "backtrackGlyphCount",
                        type: "USHORT",
                        value: t.backtrackCoverage.length
                    }), t.backtrackCoverage.forEach((function(t, e) {
                        i.push({
                            name: "backtrackCoverage" + e,
                            type: "TABLE",
                            value: new $.Coverage(t)
                        })
                    })), i.push({
                        name: "inputGlyphCount",
                        type: "USHORT",
                        value: t.inputCoverage.length
                    }), t.inputCoverage.forEach((function(t, e) {
                        i.push({
                            name: "inputCoverage" + e,
                            type: "TABLE",
                            value: new $.Coverage(t)
                        })
                    })), i.push({
                        name: "lookaheadGlyphCount",
                        type: "USHORT",
                        value: t.lookaheadCoverage.length
                    }), t.lookaheadCoverage.forEach((function(t, e) {
                        i.push({
                            name: "lookaheadCoverage" + e,
                            type: "TABLE",
                            value: new $.Coverage(t)
                        })
                    })), i.push({
                        name: "substitutionCount",
                        type: "USHORT",
                        value: t.lookupRecords.length
                    }), t.lookupRecords.forEach((function(t, e) {
                        i = i.concat({
                            name: "sequenceIndex" + e,
                            type: "USHORT",
                            value: t.sequenceIndex
                        }).concat({
                            name: "lookupListIndex" + e,
                            type: "USHORT",
                            value: t.lookupListIndex
                        })
                    })), new $.Table("chainContextTable", i)
                }
                L.assert(!1, "lookup type 6 format must be 1, 2 or 3.")
            };
            var de = {
                parse: function(t, e) {
                    var i = new ot(t, e = e || 0),
                        r = i.parseVersion(1);
                    return L.argument(1 === r || 1.1 === r, "Unsupported GSUB table version."), 1 === r ? {
                        version: r,
                        scripts: i.parseScriptList(),
                        features: i.parseFeatureList(),
                        lookups: i.parseLookupList(ce)
                    } : {
                        version: r,
                        scripts: i.parseScriptList(),
                        features: i.parseFeatureList(),
                        lookups: i.parseLookupList(ce),
                        variations: i.parseFeatureVariationsList()
                    }
                },
                make: function(t) {
                    return new $.Table("GSUB", [{
                        name: "version",
                        type: "ULONG",
                        value: 65536
                    }, {
                        name: "scripts",
                        type: "TABLE",
                        value: new $.ScriptList(t.scripts)
                    }, {
                        name: "features",
                        type: "TABLE",
                        value: new $.FeatureList(t.features)
                    }, {
                        name: "lookups",
                        type: "TABLE",
                        value: new $.LookupList(t.lookups, fe)
                    }])
                }
            };
            var pe = {
                parse: function(t, e) {
                    var i = new st.Parser(t, e),
                        r = i.parseULong();
                    L.argument(1 === r, "Unsupported META table version."), i.parseULong(), i.parseULong();
                    for (var n = i.parseULong(), o = {}, a = 0; a < n; a++) {
                        var s = i.parseTag(),
                            l = i.parseULong(),
                            h = i.parseULong(),
                            c = A.UTF8(t, e + l, h);
                        o[s] = c
                    }
                    return o
                },
                make: function(t) {
                    var e = Object.keys(t).length,
                        i = "",
                        r = 16 + 12 * e,
                        n = new $.Table("meta", [{
                            name: "version",
                            type: "ULONG",
                            value: 1
                        }, {
                            name: "flags",
                            type: "ULONG",
                            value: 0
                        }, {
                            name: "offset",
                            type: "ULONG",
                            value: r
                        }, {
                            name: "numTags",
                            type: "ULONG",
                            value: e
                        }]);
                    for (var o in t) {
                        var a = i.length;
                        i += t[o], n.fields.push({
                            name: "tag " + o,
                            type: "TAG",
                            value: o
                        }), n.fields.push({
                            name: "offset " + o,
                            type: "ULONG",
                            value: r + a
                        }), n.fields.push({
                            name: "length " + o,
                            type: "ULONG",
                            value: t[o].length
                        })
                    }
                    return n.fields.push({
                        name: "stringPool",
                        type: "CHARARRAY",
                        value: i
                    }), n
                }
            };

            function ge(t) {
                return Math.log(t) / Math.log(2) | 0
            }

            function ve(t) {
                for (; t.length % 4 != 0;) t.push(0);
                for (var e = 0, i = 0; i < t.length; i += 4) e += (t[i] << 24) + (t[i + 1] << 16) + (t[i + 2] << 8) + t[i + 3];
                return e %= Math.pow(2, 32)
            }

            function me(t, e, i, r) {
                return new $.Record("Table Record", [{
                    name: "tag",
                    type: "TAG",
                    value: void 0 !== t ? t : ""
                }, {
                    name: "checkSum",
                    type: "ULONG",
                    value: void 0 !== e ? e : 0
                }, {
                    name: "offset",
                    type: "ULONG",
                    value: void 0 !== i ? i : 0
                }, {
                    name: "length",
                    type: "ULONG",
                    value: void 0 !== r ? r : 0
                }])
            }

            function ye(t) {
                var e = new $.Table("sfnt", [{
                    name: "version",
                    type: "TAG",
                    value: "OTTO"
                }, {
                    name: "numTables",
                    type: "USHORT",
                    value: 0
                }, {
                    name: "searchRange",
                    type: "USHORT",
                    value: 0
                }, {
                    name: "entrySelector",
                    type: "USHORT",
                    value: 0
                }, {
                    name: "rangeShift",
                    type: "USHORT",
                    value: 0
                }]);
                e.tables = t, e.numTables = t.length;
                var i = Math.pow(2, ge(e.numTables));
                e.searchRange = 16 * i, e.entrySelector = ge(i), e.rangeShift = 16 * e.numTables - e.searchRange;
                for (var r = [], n = [], o = e.sizeOf() + me().sizeOf() * e.numTables; o % 4 != 0;) o += 1, n.push({
                    name: "padding",
                    type: "BYTE",
                    value: 0
                });
                for (var a = 0; a < t.length; a += 1) {
                    var s = t[a];
                    L.argument(4 === s.tableName.length, "Table name" + s.tableName + " is invalid.");
                    var l = s.sizeOf(),
                        h = me(s.tableName, ve(s.encode()), o, l);
                    for (r.push({
                            name: h.tag + " Table Record",
                            type: "RECORD",
                            value: h
                        }), n.push({
                            name: s.tableName + " table",
                            type: "RECORD",
                            value: s
                        }), o += l, L.argument(!isNaN(o), "Something went wrong calculating the offset."); o % 4 != 0;) o += 1, n.push({
                        name: "padding",
                        type: "BYTE",
                        value: 0
                    })
                }
                return r.sort((function(t, e) {
                    return t.value.tag > e.value.tag ? 1 : -1
                })), e.fields = e.fields.concat(r), e.fields = e.fields.concat(n), e
            }

            function be(t, e, i) {
                for (var r = 0; r < e.length; r += 1) {
                    var n = t.charToGlyphIndex(e[r]);
                    if (n > 0) return t.glyphs.get(n).getMetrics()
                }
                return i
            }

            function xe(t) {
                for (var e = 0, i = 0; i < t.length; i += 1) e += t[i];
                return e / t.length
            }
            var _e = {
                make: ye,
                fontToTable: function(t) {
                    for (var e, i = [], r = [], n = [], o = [], a = [], s = [], l = [], h = 0, c = 0, u = 0, f = 0, d = 0, p = 0; p < t.glyphs.length; p += 1) {
                        var g = t.glyphs.get(p),
                            v = 0 | g.unicode;
                        if (isNaN(g.advanceWidth)) throw new Error("Glyph " + g.name + " (" + p + "): advanceWidth is not a number.");
                        (e > v || void 0 === e) && v > 0 && (e = v), h < v && (h = v);
                        var m = le.getUnicodeRange(v);
                        if (m < 32) c |= 1 << m;
                        else if (m < 64) u |= 1 << m - 32;
                        else if (m < 96) f |= 1 << m - 64;
                        else {
                            if (!(m < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                            d |= 1 << m - 96
                        }
                        if (".notdef" !== g.name) {
                            var y = g.getMetrics();
                            i.push(y.xMin), r.push(y.yMin), n.push(y.xMax), o.push(y.yMax), s.push(y.leftSideBearing), l.push(y.rightSideBearing), a.push(g.advanceWidth)
                        }
                    }
                    var b = {
                        xMin: Math.min.apply(null, i),
                        yMin: Math.min.apply(null, r),
                        xMax: Math.max.apply(null, n),
                        yMax: Math.max.apply(null, o),
                        advanceWidthMax: Math.max.apply(null, a),
                        advanceWidthAvg: xe(a),
                        minLeftSideBearing: Math.min.apply(null, s),
                        maxLeftSideBearing: Math.max.apply(null, s),
                        minRightSideBearing: Math.min.apply(null, l)
                    };
                    b.ascender = t.ascender, b.descender = t.descender;
                    var x = zt.make({
                            flags: 3,
                            unitsPerEm: t.unitsPerEm,
                            xMin: b.xMin,
                            yMin: b.yMin,
                            xMax: b.xMax,
                            yMax: b.yMax,
                            lowestRecPPEM: 3,
                            createdTimestamp: t.createdTimestamp
                        }),
                        _ = Wt.make({
                            ascender: b.ascender,
                            descender: b.descender,
                            advanceWidthMax: b.advanceWidthMax,
                            minLeftSideBearing: b.minLeftSideBearing,
                            minRightSideBearing: b.minRightSideBearing,
                            xMaxExtent: b.maxLeftSideBearing + (b.xMax - b.xMin),
                            numberOfHMetrics: t.glyphs.length
                        }),
                        w = Vt.make(t.glyphs.length),
                        S = le.make(Object.assign({
                            xAvgCharWidth: Math.round(b.advanceWidthAvg),
                            usFirstCharIndex: e,
                            usLastCharIndex: h,
                            ulUnicodeRange1: c,
                            ulUnicodeRange2: u,
                            ulUnicodeRange3: f,
                            ulUnicodeRange4: d,
                            sTypoAscender: b.ascender,
                            sTypoDescender: b.descender,
                            sTypoLineGap: 0,
                            usWinAscent: b.yMax,
                            usWinDescent: Math.abs(b.yMin),
                            ulCodePageRange1: 1,
                            sxHeight: be(t, "xyvw", {
                                yMax: Math.round(b.ascender / 2)
                            }).yMax,
                            sCapHeight: be(t, "HIKLEFJMNTZBDPRAGOQSUVWXY", b).yMax,
                            usDefaultChar: t.hasChar(" ") ? 32 : 0,
                            usBreakChar: t.hasChar(" ") ? 32 : 0
                        }, t.tables.os2)),
                        C = Ht.make(t.glyphs),
                        T = ht.make(t.glyphs),
                        E = t.getEnglishName("fontFamily"),
                        k = t.getEnglishName("fontSubfamily"),
                        O = E + " " + k,
                        I = t.getEnglishName("postScriptName");
                    I || (I = E.replace(/\s/g, "") + "-" + k);
                    var P = {};
                    for (var L in t.names) P[L] = t.names[L];
                    P.uniqueID || (P.uniqueID = {
                        en: t.getEnglishName("manufacturer") + ":" + O
                    }), P.postScriptName || (P.postScriptName = {
                        en: I
                    }), P.preferredFamily || (P.preferredFamily = t.names.fontFamily), P.preferredSubfamily || (P.preferredSubfamily = t.names.fontSubfamily);
                    var M = [],
                        A = ae.make(P, M),
                        D = M.length > 0 ? Yt.make(M) : void 0,
                        R = he.make(),
                        F = Xt.make(t.glyphs, {
                            version: t.getEnglishName("version"),
                            fullName: O,
                            familyName: E,
                            weightName: k,
                            postScriptName: I,
                            unitsPerEm: t.unitsPerEm,
                            fontBBox: [0, b.yMin, b.ascender, b.advanceWidthMax]
                        }),
                        j = t.metas && Object.keys(t.metas).length > 0 ? pe.make(t.metas) : void 0,
                        B = [x, _, w, S, A, T, R, F, C];
                    D && B.push(D), t.tables.gsub && B.push(de.make(t.tables.gsub)), j && B.push(j);
                    for (var U = ye(B), N = ve(U.encode()), G = U.fields, X = !1, z = 0; z < G.length; z += 1)
                        if ("head table" === G[z].name) {
                            G[z].value.checkSumAdjustment = 2981146554 - N, X = !0;
                            break
                        } if (!X) throw new Error("Could not find head table with checkSum to adjust.");
                    return U
                },
                computeCheckSum: ve
            };

            function we(t, e) {
                for (var i = 0, r = t.length - 1; i <= r;) {
                    var n = i + r >>> 1,
                        o = t[n].tag;
                    if (o === e) return n;
                    o < e ? i = n + 1 : r = n - 1
                }
                return -i - 1
            }

            function Se(t, e) {
                for (var i = 0, r = t.length - 1; i <= r;) {
                    var n = i + r >>> 1,
                        o = t[n];
                    if (o === e) return n;
                    o < e ? i = n + 1 : r = n - 1
                }
                return -i - 1
            }

            function Ce(t, e) {
                for (var i, r = 0, n = t.length - 1; r <= n;) {
                    var o = r + n >>> 1,
                        a = (i = t[o]).start;
                    if (a === e) return i;
                    a < e ? r = o + 1 : n = o - 1
                }
                if (r > 0) return e > (i = t[r - 1]).end ? 0 : i
            }

            function Te(t, e) {
                this.font = t, this.tableName = e
            }

            function Ee(t) {
                Te.call(this, t, "gpos")
            }

            function ke(t) {
                Te.call(this, t, "gsub")
            }

            function Oe(t, e) {
                var i = t.length;
                if (i !== e.length) return !1;
                for (var r = 0; r < i; r++)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function Ie(t, e, i) {
                for (var r = t.subtables, n = 0; n < r.length; n++) {
                    var o = r[n];
                    if (o.substFormat === e) return o
                }
                if (i) return r.push(i), i
            }

            function Pe(t) {
                for (var e = new ArrayBuffer(t.length), i = new Uint8Array(e), r = 0; r < t.length; ++r) i[r] = t[r];
                return e
            }

            function Le(t, e) {
                if (!t) throw e
            }

            function Me(t, e, i, r, n) {
                var o;
                return (e & r) > 0 ? (o = t.parseByte(), 0 == (e & n) && (o = -o), o = i + o) : o = (e & n) > 0 ? i : i + t.parseShort(), o
            }

            function Ae(t, e, i) {
                var r, n, o = new st.Parser(e, i);
                if (t.numberOfContours = o.parseShort(), t._xMin = o.parseShort(), t._yMin = o.parseShort(), t._xMax = o.parseShort(), t._yMax = o.parseShort(), t.numberOfContours > 0) {
                    for (var a = t.endPointIndices = [], s = 0; s < t.numberOfContours; s += 1) a.push(o.parseUShort());
                    t.instructionLength = o.parseUShort(), t.instructions = [];
                    for (var l = 0; l < t.instructionLength; l += 1) t.instructions.push(o.parseByte());
                    var h = a[a.length - 1] + 1;
                    r = [];
                    for (var c = 0; c < h; c += 1)
                        if (n = o.parseByte(), r.push(n), (8 & n) > 0)
                            for (var u = o.parseByte(), f = 0; f < u; f += 1) r.push(n), c += 1;
                    if (L.argument(r.length === h, "Bad flags."), a.length > 0) {
                        var d, p = [];
                        if (h > 0) {
                            for (var g = 0; g < h; g += 1) n = r[g], (d = {}).onCurve = !!(1 & n), d.lastPointOfContour = a.indexOf(g) >= 0, p.push(d);
                            for (var v = 0, m = 0; m < h; m += 1) n = r[m], (d = p[m]).x = Me(o, n, v, 2, 16), v = d.x;
                            for (var y = 0, b = 0; b < h; b += 1) n = r[b], (d = p[b]).y = Me(o, n, y, 4, 32), y = d.y
                        }
                        t.points = p
                    } else t.points = []
                } else if (0 === t.numberOfContours) t.points = [];
                else {
                    t.isComposite = !0, t.points = [], t.components = [];
                    for (var x = !0; x;) {
                        r = o.parseUShort();
                        var _ = {
                            glyphIndex: o.parseUShort(),
                            xScale: 1,
                            scale01: 0,
                            scale10: 0,
                            yScale: 1,
                            dx: 0,
                            dy: 0
                        };
                        (1 & r) > 0 ? (2 & r) > 0 ? (_.dx = o.parseShort(), _.dy = o.parseShort()) : _.matchedPoints = [o.parseUShort(), o.parseUShort()] : (2 & r) > 0 ? (_.dx = o.parseChar(), _.dy = o.parseChar()) : _.matchedPoints = [o.parseByte(), o.parseByte()], (8 & r) > 0 ? _.xScale = _.yScale = o.parseF2Dot14() : (64 & r) > 0 ? (_.xScale = o.parseF2Dot14(), _.yScale = o.parseF2Dot14()) : (128 & r) > 0 && (_.xScale = o.parseF2Dot14(), _.scale01 = o.parseF2Dot14(), _.scale10 = o.parseF2Dot14(), _.yScale = o.parseF2Dot14()), t.components.push(_), x = !!(32 & r)
                    }
                    if (256 & r) {
                        t.instructionLength = o.parseUShort(), t.instructions = [];
                        for (var w = 0; w < t.instructionLength; w += 1) t.instructions.push(o.parseByte())
                    }
                }
            }

            function De(t, e) {
                for (var i = [], r = 0; r < t.length; r += 1) {
                    var n = t[r],
                        o = {
                            x: e.xScale * n.x + e.scale01 * n.y + e.dx,
                            y: e.scale10 * n.x + e.yScale * n.y + e.dy,
                            onCurve: n.onCurve,
                            lastPointOfContour: n.lastPointOfContour
                        };
                    i.push(o)
                }
                return i
            }

            function Re(t) {
                var e = new O;
                if (!t) return e;
                for (var i = function(t) {
                        for (var e = [], i = [], r = 0; r < t.length; r += 1) {
                            var n = t[r];
                            i.push(n), n.lastPointOfContour && (e.push(i), i = [])
                        }
                        return L.argument(0 === i.length, "There are still points left in the current contour."), e
                    }(t), r = 0; r < i.length; ++r) {
                    var n = i[r],
                        o = null,
                        a = n[n.length - 1],
                        s = n[0];
                    if (a.onCurve) e.moveTo(a.x, a.y);
                    else if (s.onCurve) e.moveTo(s.x, s.y);
                    else {
                        var l = {
                            x: .5 * (a.x + s.x),
                            y: .5 * (a.y + s.y)
                        };
                        e.moveTo(l.x, l.y)
                    }
                    for (var h = 0; h < n.length; ++h)
                        if (o = a, a = s, s = n[(h + 1) % n.length], a.onCurve) e.lineTo(a.x, a.y);
                        else {
                            var c = s;
                            o.onCurve || {
                                x: .5 * (a.x + o.x),
                                y: .5 * (a.y + o.y)
                            }, s.onCurve || (c = {
                                x: .5 * (a.x + s.x),
                                y: .5 * (a.y + s.y)
                            }), e.quadraticCurveTo(a.x, a.y, c.x, c.y)
                        } e.closePath()
                }
                return e
            }

            function Fe(t, e) {
                if (e.isComposite)
                    for (var i = 0; i < e.components.length; i += 1) {
                        var r = e.components[i],
                            n = t.get(r.glyphIndex);
                        if (n.getPath(), n.points) {
                            var o = void 0;
                            if (void 0 === r.matchedPoints) o = De(n.points, r);
                            else {
                                if (r.matchedPoints[0] > e.points.length - 1 || r.matchedPoints[1] > n.points.length - 1) throw Error("Matched points out of range in " + e.name);
                                var a = e.points[r.matchedPoints[0]],
                                    s = n.points[r.matchedPoints[1]],
                                    l = {
                                        xScale: r.xScale,
                                        scale01: r.scale01,
                                        scale10: r.scale10,
                                        yScale: r.yScale,
                                        dx: 0,
                                        dy: 0
                                    };
                                s = De([s], l)[0], l.dx = a.x - s.x, l.dy = a.y - s.y, o = De(n.points, l)
                            }
                            e.points = e.points.concat(o)
                        }
                    }
                return Re(e.points)
            }
            Te.prototype = {
                searchTag: we,
                binSearch: Se,
                getTable: function(t) {
                    var e = this.font.tables[this.tableName];
                    return !e && t && (e = this.font.tables[this.tableName] = this.createDefaultTable()), e
                },
                getScriptNames: function() {
                    var t = this.getTable();
                    return t ? t.scripts.map((function(t) {
                        return t.tag
                    })) : []
                },
                getDefaultScriptName: function() {
                    var t = this.getTable();
                    if (t) {
                        for (var e = !1, i = 0; i < t.scripts.length; i++) {
                            var r = t.scripts[i].tag;
                            if ("DFLT" === r) return r;
                            "latn" === r && (e = !0)
                        }
                        return e ? "latn" : void 0
                    }
                },
                getScriptTable: function(t, e) {
                    var i = this.getTable(e);
                    if (i) {
                        t = t || "DFLT";
                        var r = i.scripts,
                            n = we(i.scripts, t);
                        if (n >= 0) return r[n].script;
                        if (e) {
                            var o = {
                                tag: t,
                                script: {
                                    defaultLangSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: []
                                    },
                                    langSysRecords: []
                                }
                            };
                            return r.splice(-1 - n, 0, o), o.script
                        }
                    }
                },
                getLangSysTable: function(t, e, i) {
                    var r = this.getScriptTable(t, i);
                    if (r) {
                        if (!e || "dflt" === e || "DFLT" === e) return r.defaultLangSys;
                        var n = we(r.langSysRecords, e);
                        if (n >= 0) return r.langSysRecords[n].langSys;
                        if (i) {
                            var o = {
                                tag: e,
                                langSys: {
                                    reserved: 0,
                                    reqFeatureIndex: 65535,
                                    featureIndexes: []
                                }
                            };
                            return r.langSysRecords.splice(-1 - n, 0, o), o.langSys
                        }
                    }
                },
                getFeatureTable: function(t, e, i, r) {
                    var n = this.getLangSysTable(t, e, r);
                    if (n) {
                        for (var o, a = n.featureIndexes, s = this.font.tables[this.tableName].features, l = 0; l < a.length; l++)
                            if ((o = s[a[l]]).tag === i) return o.feature;
                        if (r) {
                            var h = s.length;
                            return L.assert(0 === h || i >= s[h - 1].tag, "Features must be added in alphabetical order."), o = {
                                tag: i,
                                feature: {
                                    params: 0,
                                    lookupListIndexes: []
                                }
                            }, s.push(o), a.push(h), o.feature
                        }
                    }
                },
                getLookupTables: function(t, e, i, r, n) {
                    var o = this.getFeatureTable(t, e, i, n),
                        a = [];
                    if (o) {
                        for (var s, l = o.lookupListIndexes, h = this.font.tables[this.tableName].lookups, c = 0; c < l.length; c++)(s = h[l[c]]).lookupType === r && a.push(s);
                        if (0 === a.length && n) {
                            s = {
                                lookupType: r,
                                lookupFlag: 0,
                                subtables: [],
                                markFilteringSet: void 0
                            };
                            var u = h.length;
                            return h.push(s), l.push(u), [s]
                        }
                    }
                    return a
                },
                getGlyphClass: function(t, e) {
                    switch (t.format) {
                        case 1:
                            return t.startGlyph <= e && e < t.startGlyph + t.classes.length ? t.classes[e - t.startGlyph] : 0;
                        case 2:
                            var i = Ce(t.ranges, e);
                            return i ? i.classId : 0
                    }
                },
                getCoverageIndex: function(t, e) {
                    switch (t.format) {
                        case 1:
                            var i = Se(t.glyphs, e);
                            return i >= 0 ? i : -1;
                        case 2:
                            var r = Ce(t.ranges, e);
                            return r ? r.index + e - r.start : -1
                    }
                },
                expandCoverage: function(t) {
                    if (1 === t.format) return t.glyphs;
                    for (var e = [], i = t.ranges, r = 0; r < i.length; r++)
                        for (var n = i[r], o = n.start, a = n.end, s = o; s <= a; s++) e.push(s);
                    return e
                }
            }, Ee.prototype = Te.prototype, Ee.prototype.init = function() {
                var t = this.getDefaultScriptName();
                this.defaultKerningTables = this.getKerningTables(t)
            }, Ee.prototype.getKerningValue = function(t, e, i) {
                for (var r = 0; r < t.length; r++)
                    for (var n = t[r].subtables, o = 0; o < n.length; o++) {
                        var a = n[o],
                            s = this.getCoverageIndex(a.coverage, e);
                        if (!(s < 0)) switch (a.posFormat) {
                            case 1:
                                for (var l = a.pairSets[s], h = 0; h < l.length; h++) {
                                    var c = l[h];
                                    if (c.secondGlyph === i) return c.value1 && c.value1.xAdvance || 0
                                }
                                break;
                            case 2:
                                var u = this.getGlyphClass(a.classDef1, e),
                                    f = this.getGlyphClass(a.classDef2, i),
                                    d = a.classRecords[u][f];
                                return d.value1 && d.value1.xAdvance || 0
                        }
                    }
                return 0
            }, Ee.prototype.getKerningTables = function(t, e) {
                if (this.font.tables.gpos) return this.getLookupTables(t, e, "kern", 2)
            }, ke.prototype = Te.prototype, ke.prototype.createDefaultTable = function() {
                return {
                    version: 1,
                    scripts: [{
                        tag: "DFLT",
                        script: {
                            defaultLangSys: {
                                reserved: 0,
                                reqFeatureIndex: 65535,
                                featureIndexes: []
                            },
                            langSysRecords: []
                        }
                    }],
                    features: [],
                    lookups: []
                }
            }, ke.prototype.getSingle = function(t, e, i) {
                for (var r = [], n = this.getLookupTables(e, i, t, 1), o = 0; o < n.length; o++)
                    for (var a = n[o].subtables, s = 0; s < a.length; s++) {
                        var l = a[s],
                            h = this.expandCoverage(l.coverage),
                            c = void 0;
                        if (1 === l.substFormat) {
                            var u = l.deltaGlyphId;
                            for (c = 0; c < h.length; c++) {
                                var f = h[c];
                                r.push({
                                    sub: f,
                                    by: f + u
                                })
                            }
                        } else {
                            var d = l.substitute;
                            for (c = 0; c < h.length; c++) r.push({
                                sub: h[c],
                                by: d[c]
                            })
                        }
                    }
                return r
            }, ke.prototype.getMultiple = function(t, e, i) {
                for (var r = [], n = this.getLookupTables(e, i, t, 2), o = 0; o < n.length; o++)
                    for (var a = n[o].subtables, s = 0; s < a.length; s++) {
                        var l = a[s],
                            h = this.expandCoverage(l.coverage),
                            c = void 0;
                        for (c = 0; c < h.length; c++) {
                            var u = h[c],
                                f = l.sequences[c];
                            r.push({
                                sub: u,
                                by: f
                            })
                        }
                    }
                return r
            }, ke.prototype.getAlternates = function(t, e, i) {
                for (var r = [], n = this.getLookupTables(e, i, t, 3), o = 0; o < n.length; o++)
                    for (var a = n[o].subtables, s = 0; s < a.length; s++)
                        for (var l = a[s], h = this.expandCoverage(l.coverage), c = l.alternateSets, u = 0; u < h.length; u++) r.push({
                            sub: h[u],
                            by: c[u]
                        });
                return r
            }, ke.prototype.getLigatures = function(t, e, i) {
                for (var r = [], n = this.getLookupTables(e, i, t, 4), o = 0; o < n.length; o++)
                    for (var a = n[o].subtables, s = 0; s < a.length; s++)
                        for (var l = a[s], h = this.expandCoverage(l.coverage), c = l.ligatureSets, u = 0; u < h.length; u++)
                            for (var f = h[u], d = c[u], p = 0; p < d.length; p++) {
                                var g = d[p];
                                r.push({
                                    sub: [f].concat(g.components),
                                    by: g.ligGlyph
                                })
                            }
                return r
            }, ke.prototype.addSingle = function(t, e, i, r) {
                var n = Ie(this.getLookupTables(i, r, t, 1, !0)[0], 2, {
                    substFormat: 2,
                    coverage: {
                        format: 1,
                        glyphs: []
                    },
                    substitute: []
                });
                L.assert(1 === n.coverage.format, "Single: unable to modify coverage table format " + n.coverage.format);
                var o = e.sub,
                    a = this.binSearch(n.coverage.glyphs, o);
                a < 0 && (a = -1 - a, n.coverage.glyphs.splice(a, 0, o), n.substitute.splice(a, 0, 0)), n.substitute[a] = e.by
            }, ke.prototype.addMultiple = function(t, e, i, r) {
                L.assert(e.by instanceof Array && e.by.length > 1, 'Multiple: "by" must be an array of two or more ids');
                var n = Ie(this.getLookupTables(i, r, t, 2, !0)[0], 1, {
                    substFormat: 1,
                    coverage: {
                        format: 1,
                        glyphs: []
                    },
                    sequences: []
                });
                L.assert(1 === n.coverage.format, "Multiple: unable to modify coverage table format " + n.coverage.format);
                var o = e.sub,
                    a = this.binSearch(n.coverage.glyphs, o);
                a < 0 && (a = -1 - a, n.coverage.glyphs.splice(a, 0, o), n.sequences.splice(a, 0, 0)), n.sequences[a] = e.by
            }, ke.prototype.addAlternate = function(t, e, i, r) {
                var n = Ie(this.getLookupTables(i, r, t, 3, !0)[0], 1, {
                    substFormat: 1,
                    coverage: {
                        format: 1,
                        glyphs: []
                    },
                    alternateSets: []
                });
                L.assert(1 === n.coverage.format, "Alternate: unable to modify coverage table format " + n.coverage.format);
                var o = e.sub,
                    a = this.binSearch(n.coverage.glyphs, o);
                a < 0 && (a = -1 - a, n.coverage.glyphs.splice(a, 0, o), n.alternateSets.splice(a, 0, 0)), n.alternateSets[a] = e.by
            }, ke.prototype.addLigature = function(t, e, i, r) {
                var n = this.getLookupTables(i, r, t, 4, !0)[0],
                    o = n.subtables[0];
                o || (o = {
                    substFormat: 1,
                    coverage: {
                        format: 1,
                        glyphs: []
                    },
                    ligatureSets: []
                }, n.subtables[0] = o), L.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format);
                var a = e.sub[0],
                    s = e.sub.slice(1),
                    l = {
                        ligGlyph: e.by,
                        components: s
                    },
                    h = this.binSearch(o.coverage.glyphs, a);
                if (h >= 0) {
                    for (var c = o.ligatureSets[h], u = 0; u < c.length; u++)
                        if (Oe(c[u].components, s)) return;
                    c.push(l)
                } else h = -1 - h, o.coverage.glyphs.splice(h, 0, a), o.ligatureSets.splice(h, 0, [l])
            }, ke.prototype.getFeature = function(t, e, i) {
                if (/ss\d\d/.test(t)) return this.getSingle(t, e, i);
                switch (t) {
                    case "aalt":
                    case "salt":
                        return this.getSingle(t, e, i).concat(this.getAlternates(t, e, i));
                    case "dlig":
                    case "liga":
                    case "rlig":
                        return this.getLigatures(t, e, i);
                    case "ccmp":
                        return this.getMultiple(t, e, i).concat(this.getLigatures(t, e, i));
                    case "stch":
                        return this.getMultiple(t, e, i)
                }
            }, ke.prototype.add = function(t, e, i, r) {
                if (/ss\d\d/.test(t)) return this.addSingle(t, e, i, r);
                switch (t) {
                    case "aalt":
                    case "salt":
                        return "number" == typeof e.by ? this.addSingle(t, e, i, r) : this.addAlternate(t, e, i, r);
                    case "dlig":
                    case "liga":
                    case "rlig":
                        return this.addLigature(t, e, i, r);
                    case "ccmp":
                        return e.by instanceof Array ? this.addMultiple(t, e, i, r) : this.addLigature(t, e, i, r)
                }
            };
            var je, Be, Ue, Ne, Ge = {
                getPath: Re,
                parse: function(t, e, i, r, n) {
                    return n.lowMemory ? function(t, e, i, r) {
                        var n = new St.GlyphSet(r);
                        return r._push = function(o) {
                            var a = i[o];
                            a !== i[o + 1] ? n.push(o, St.ttfGlyphLoader(r, o, Ae, t, e + a, Fe)) : n.push(o, St.glyphLoader(r, o))
                        }, n
                    }(t, e, i, r) : function(t, e, i, r) {
                        for (var n = new St.GlyphSet(r), o = 0; o < i.length - 1; o += 1) {
                            var a = i[o];
                            a !== i[o + 1] ? n.push(o, St.ttfGlyphLoader(r, o, Ae, t, e + a, Fe)) : n.push(o, St.glyphLoader(r, o))
                        }
                        return n
                    }(t, e, i, r)
                }
            };

            function Xe(t) {
                this.font = t, this.getCommands = function(t) {
                    return Ge.getPath(t).commands
                }, this._fpgmState = this._prepState = void 0, this._errorState = 0
            }

            function ze(t) {
                return t
            }

            function We(t) {
                return Math.sign(t) * Math.round(Math.abs(t))
            }

            function He(t) {
                return Math.sign(t) * Math.round(Math.abs(2 * t)) / 2
            }

            function Ye(t) {
                return Math.sign(t) * (Math.round(Math.abs(t) + .5) - .5)
            }

            function Ve(t) {
                return Math.sign(t) * Math.ceil(Math.abs(t))
            }

            function qe(t) {
                return Math.sign(t) * Math.floor(Math.abs(t))
            }
            var Ze = function(t) {
                    var e = this.srPeriod,
                        i = this.srPhase,
                        r = 1;
                    return t < 0 && (t = -t, r = -1), t += this.srThreshold - i, t = Math.trunc(t / e) * e, (t += i) < 0 ? i * r : t * r
                },
                Ke = {
                    x: 1,
                    y: 0,
                    axis: "x",
                    distance: function(t, e, i, r) {
                        return (i ? t.xo : t.x) - (r ? e.xo : e.x)
                    },
                    interpolate: function(t, e, i, r) {
                        var n, o, a, s, l, h, c;
                        if (!r || r === this) return n = t.xo - e.xo, o = t.xo - i.xo, l = e.x - e.xo, h = i.x - i.xo, 0 === (c = (a = Math.abs(n)) + (s = Math.abs(o))) ? void(t.x = t.xo + (l + h) / 2) : void(t.x = t.xo + (l * s + h * a) / c);
                        n = r.distance(t, e, !0, !0), o = r.distance(t, i, !0, !0), l = r.distance(e, e, !1, !0), h = r.distance(i, i, !1, !0), 0 !== (c = (a = Math.abs(n)) + (s = Math.abs(o))) ? Ke.setRelative(t, t, (l * s + h * a) / c, r, !0) : Ke.setRelative(t, t, (l + h) / 2, r, !0)
                    },
                    normalSlope: Number.NEGATIVE_INFINITY,
                    setRelative: function(t, e, i, r, n) {
                        if (r && r !== this) {
                            var o = n ? e.xo : e.x,
                                a = n ? e.yo : e.y,
                                s = o + i * r.x,
                                l = a + i * r.y;
                            t.x = s + (t.y - l) / r.normalSlope
                        } else t.x = (n ? e.xo : e.x) + i
                    },
                    slope: 0,
                    touch: function(t) {
                        t.xTouched = !0
                    },
                    touched: function(t) {
                        return t.xTouched
                    },
                    untouch: function(t) {
                        t.xTouched = !1
                    }
                },
                Je = {
                    x: 0,
                    y: 1,
                    axis: "y",
                    distance: function(t, e, i, r) {
                        return (i ? t.yo : t.y) - (r ? e.yo : e.y)
                    },
                    interpolate: function(t, e, i, r) {
                        var n, o, a, s, l, h, c;
                        if (!r || r === this) return n = t.yo - e.yo, o = t.yo - i.yo, l = e.y - e.yo, h = i.y - i.yo, 0 === (c = (a = Math.abs(n)) + (s = Math.abs(o))) ? void(t.y = t.yo + (l + h) / 2) : void(t.y = t.yo + (l * s + h * a) / c);
                        n = r.distance(t, e, !0, !0), o = r.distance(t, i, !0, !0), l = r.distance(e, e, !1, !0), h = r.distance(i, i, !1, !0), 0 !== (c = (a = Math.abs(n)) + (s = Math.abs(o))) ? Je.setRelative(t, t, (l * s + h * a) / c, r, !0) : Je.setRelative(t, t, (l + h) / 2, r, !0)
                    },
                    normalSlope: 0,
                    setRelative: function(t, e, i, r, n) {
                        if (r && r !== this) {
                            var o = n ? e.xo : e.x,
                                a = n ? e.yo : e.y,
                                s = o + i * r.x,
                                l = a + i * r.y;
                            t.y = l + r.normalSlope * (t.x - s)
                        } else t.y = (n ? e.yo : e.y) + i
                    },
                    slope: Number.POSITIVE_INFINITY,
                    touch: function(t) {
                        t.yTouched = !0
                    },
                    touched: function(t) {
                        return t.yTouched
                    },
                    untouch: function(t) {
                        t.yTouched = !1
                    }
                };

            function Qe(t, e) {
                this.x = t, this.y = e, this.axis = void 0, this.slope = e / t, this.normalSlope = -t / e, Object.freeze(this)
            }

            function $e(t, e) {
                var i = Math.sqrt(t * t + e * e);
                return e /= i, 1 === (t /= i) && 0 === e ? Ke : 0 === t && 1 === e ? Je : new Qe(t, e)
            }

            function ti(t, e, i, r) {
                this.x = this.xo = Math.round(64 * t) / 64, this.y = this.yo = Math.round(64 * e) / 64, this.lastPointOfContour = i, this.onCurve = r, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this)
            }
            Object.freeze(Ke), Object.freeze(Je), Qe.prototype.distance = function(t, e, i, r) {
                return this.x * Ke.distance(t, e, i, r) + this.y * Je.distance(t, e, i, r)
            }, Qe.prototype.interpolate = function(t, e, i, r) {
                var n, o, a, s, l, h, c;
                a = r.distance(t, e, !0, !0), s = r.distance(t, i, !0, !0), n = r.distance(e, e, !1, !0), o = r.distance(i, i, !1, !0), 0 !== (c = (l = Math.abs(a)) + (h = Math.abs(s))) ? this.setRelative(t, t, (n * h + o * l) / c, r, !0) : this.setRelative(t, t, (n + o) / 2, r, !0)
            }, Qe.prototype.setRelative = function(t, e, i, r, n) {
                r = r || this;
                var o = n ? e.xo : e.x,
                    a = n ? e.yo : e.y,
                    s = o + i * r.x,
                    l = a + i * r.y,
                    h = r.normalSlope,
                    c = this.slope,
                    u = t.x,
                    f = t.y;
                t.x = (c * u - h * s + l - f) / (c - h), t.y = c * (t.x - u) + f
            }, Qe.prototype.touch = function(t) {
                t.xTouched = !0, t.yTouched = !0
            }, ti.prototype.nextTouched = function(t) {
                for (var e = this.nextPointOnContour; !t.touched(e) && e !== this;) e = e.nextPointOnContour;
                return e
            }, ti.prototype.prevTouched = function(t) {
                for (var e = this.prevPointOnContour; !t.touched(e) && e !== this;) e = e.prevPointOnContour;
                return e
            };
            var ei = Object.freeze(new ti(0, 0)),
                ii = {
                    cvCutIn: 17 / 16,
                    deltaBase: 9,
                    deltaShift: .125,
                    loop: 1,
                    minDis: 1,
                    autoFlip: !0
                };

            function ri(t, e) {
                switch (this.env = t, this.stack = [], this.prog = e, t) {
                    case "glyf":
                        this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
                    case "prep":
                        this.fv = this.pv = this.dpv = Ke, this.round = We
                }
            }

            function ni(t) {
                for (var e = t.tZone = new Array(t.gZone.length), i = 0; i < e.length; i++) e[i] = new ti(0, 0)
            }

            function oi(t, e) {
                var i, r = t.prog,
                    n = t.ip,
                    o = 1;
                do {
                    if (88 === (i = r[++n])) o++;
                    else if (89 === i) o--;
                    else if (64 === i) n += r[n + 1] + 1;
                    else if (65 === i) n += 2 * r[n + 1] + 1;
                    else if (i >= 176 && i <= 183) n += i - 176 + 1;
                    else if (i >= 184 && i <= 191) n += 2 * (i - 184 + 1);
                    else if (e && 1 === o && 27 === i) break
                } while (o > 0);
                t.ip = n
            }

            function ai(t, e) {
                exports.DEBUG && console.log(e.step, "SVTCA[" + t.axis + "]"), e.fv = e.pv = e.dpv = t
            }

            function si(t, e) {
                exports.DEBUG && console.log(e.step, "SPVTCA[" + t.axis + "]"), e.pv = e.dpv = t
            }

            function li(t, e) {
                exports.DEBUG && console.log(e.step, "SFVTCA[" + t.axis + "]"), e.fv = t
            }

            function hi(t, e) {
                var i, r, n = e.stack,
                    o = n.pop(),
                    a = n.pop(),
                    s = e.z2[o],
                    l = e.z1[a];
                exports.DEBUG && console.log("SPVTL[" + t + "]", o, a), t ? (i = s.y - l.y, r = l.x - s.x) : (i = l.x - s.x, r = l.y - s.y), e.pv = e.dpv = $e(i, r)
            }

            function ci(t, e) {
                var i, r, n = e.stack,
                    o = n.pop(),
                    a = n.pop(),
                    s = e.z2[o],
                    l = e.z1[a];
                exports.DEBUG && console.log("SFVTL[" + t + "]", o, a), t ? (i = s.y - l.y, r = l.x - s.x) : (i = l.x - s.x, r = l.y - s.y), e.fv = $e(i, r)
            }

            function ui(t) {
                exports.DEBUG && console.log(t.step, "POP[]"), t.stack.pop()
            }

            function fi(t, e) {
                var i = e.stack.pop(),
                    r = e.z0[i],
                    n = e.fv,
                    o = e.pv;
                exports.DEBUG && console.log(e.step, "MDAP[" + t + "]", i);
                var a = o.distance(r, ei);
                t && (a = e.round(a)), n.setRelative(r, ei, a, o), n.touch(r), e.rp0 = e.rp1 = i
            }

            function di(t, e) {
                var i, r, n, o = e.z2,
                    a = o.length - 2;
                exports.DEBUG && console.log(e.step, "IUP[" + t.axis + "]");
                for (var s = 0; s < a; s++) i = o[s], t.touched(i) || (r = i.prevTouched(t)) !== i && (r === (n = i.nextTouched(t)) && t.setRelative(i, i, t.distance(r, r, !1, !0), t, !0), t.interpolate(i, r, n, t))
            }

            function pi(t, e) {
                for (var i = e.stack, r = t ? e.rp1 : e.rp2, n = (t ? e.z0 : e.z1)[r], o = e.fv, a = e.pv, s = e.loop, l = e.z2; s--;) {
                    var h = i.pop(),
                        c = l[h],
                        u = a.distance(n, n, !1, !0);
                    o.setRelative(c, c, u, a), o.touch(c), exports.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - s) + ": " : "") + "SHP[" + (t ? "rp1" : "rp2") + "]", h)
                }
                e.loop = 1
            }

            function gi(t, e) {
                var i = e.stack,
                    r = t ? e.rp1 : e.rp2,
                    n = (t ? e.z0 : e.z1)[r],
                    o = e.fv,
                    a = e.pv,
                    s = i.pop(),
                    l = e.z2[e.contours[s]],
                    h = l;
                exports.DEBUG && console.log(e.step, "SHC[" + t + "]", s);
                var c = a.distance(n, n, !1, !0);
                do {
                    h !== n && o.setRelative(h, h, c, a), h = h.nextPointOnContour
                } while (h !== l)
            }

            function vi(t, e) {
                var i, r, n = e.stack,
                    o = t ? e.rp1 : e.rp2,
                    a = (t ? e.z0 : e.z1)[o],
                    s = e.fv,
                    l = e.pv,
                    h = n.pop();
                switch (exports.DEBUG && console.log(e.step, "SHZ[" + t + "]", h), h) {
                    case 0:
                        i = e.tZone;
                        break;
                    case 1:
                        i = e.gZone;
                        break;
                    default:
                        throw new Error("Invalid zone")
                }
                for (var c = l.distance(a, a, !1, !0), u = i.length - 2, f = 0; f < u; f++) r = i[f], s.setRelative(r, r, c, l)
            }

            function mi(t, e) {
                var i = e.stack,
                    r = i.pop() / 64,
                    n = i.pop(),
                    o = e.z1[n],
                    a = e.z0[e.rp0],
                    s = e.fv,
                    l = e.pv;
                s.setRelative(o, a, r, l), s.touch(o), exports.DEBUG && console.log(e.step, "MSIRP[" + t + "]", r, n), e.rp1 = e.rp0, e.rp2 = n, t && (e.rp0 = n)
            }

            function yi(t, e) {
                var i = e.stack,
                    r = i.pop(),
                    n = i.pop(),
                    o = e.z0[n],
                    a = e.fv,
                    s = e.pv,
                    l = e.cvt[r];
                exports.DEBUG && console.log(e.step, "MIAP[" + t + "]", r, "(", l, ")", n);
                var h = s.distance(o, ei);
                t && (Math.abs(h - l) < e.cvCutIn && (h = l), h = e.round(h)), a.setRelative(o, ei, h, s), 0 === e.zp0 && (o.xo = o.x, o.yo = o.y), a.touch(o), e.rp0 = e.rp1 = n
            }

            function bi(t, e) {
                var i = e.stack,
                    r = i.pop(),
                    n = e.z2[r];
                exports.DEBUG && console.log(e.step, "GC[" + t + "]", r), i.push(64 * e.dpv.distance(n, ei, t, !1))
            }

            function xi(t, e) {
                var i = e.stack,
                    r = i.pop(),
                    n = i.pop(),
                    o = e.z1[r],
                    a = e.z0[n],
                    s = e.dpv.distance(a, o, t, t);
                exports.DEBUG && console.log(e.step, "MD[" + t + "]", r, n, "->", s), e.stack.push(Math.round(64 * s))
            }

            function _i(t, e) {
                var i = e.stack,
                    r = i.pop(),
                    n = e.fv,
                    o = e.pv,
                    a = e.ppem,
                    s = e.deltaBase + 16 * (t - 1),
                    l = e.deltaShift,
                    h = e.z0;
                exports.DEBUG && console.log(e.step, "DELTAP[" + t + "]", r, i);
                for (var c = 0; c < r; c++) {
                    var u = i.pop(),
                        f = i.pop();
                    if (s + ((240 & f) >> 4) === a) {
                        var d = (15 & f) - 8;
                        d >= 0 && d++, exports.DEBUG && console.log(e.step, "DELTAPFIX", u, "by", d * l);
                        var p = h[u];
                        n.setRelative(p, p, d * l, o)
                    }
                }
            }

            function wi(t, e) {
                var i = e.stack,
                    r = i.pop();
                exports.DEBUG && console.log(e.step, "ROUND[]"), i.push(64 * e.round(r / 64))
            }

            function Si(t, e) {
                var i = e.stack,
                    r = i.pop(),
                    n = e.ppem,
                    o = e.deltaBase + 16 * (t - 1),
                    a = e.deltaShift;
                exports.DEBUG && console.log(e.step, "DELTAC[" + t + "]", r, i);
                for (var s = 0; s < r; s++) {
                    var l = i.pop(),
                        h = i.pop();
                    if (o + ((240 & h) >> 4) === n) {
                        var c = (15 & h) - 8;
                        c >= 0 && c++;
                        var u = c * a;
                        exports.DEBUG && console.log(e.step, "DELTACFIX", l, "by", u), e.cvt[l] += u
                    }
                }
            }

            function Ci(t, e) {
                var i, r, n = e.stack,
                    o = n.pop(),
                    a = n.pop(),
                    s = e.z2[o],
                    l = e.z1[a];
                exports.DEBUG && console.log(e.step, "SDPVTL[" + t + "]", o, a), t ? (i = s.y - l.y, r = l.x - s.x) : (i = l.x - s.x, r = l.y - s.y), e.dpv = $e(i, r)
            }

            function Ti(t, e) {
                var i = e.stack,
                    r = e.prog,
                    n = e.ip;
                exports.DEBUG && console.log(e.step, "PUSHB[" + t + "]");
                for (var o = 0; o < t; o++) i.push(r[++n]);
                e.ip = n
            }

            function Ei(t, e) {
                var i = e.ip,
                    r = e.prog,
                    n = e.stack;
                exports.DEBUG && console.log(e.ip, "PUSHW[" + t + "]");
                for (var o = 0; o < t; o++) {
                    var a = r[++i] << 8 | r[++i];
                    32768 & a && (a = -(1 + (65535 ^ a))), n.push(a)
                }
                e.ip = i
            }

            function ki(t, e, i, r, n, o) {
                var a, s, l, h, c = o.stack,
                    u = t && c.pop(),
                    f = c.pop(),
                    d = o.rp0,
                    p = o.z0[d],
                    g = o.z1[f],
                    v = o.minDis,
                    m = o.fv,
                    y = o.dpv;
                l = (s = a = y.distance(g, p, !0, !0)) >= 0 ? 1 : -1, s = Math.abs(s), t && (h = o.cvt[u], r && Math.abs(s - h) < o.cvCutIn && (s = h)), i && s < v && (s = v), r && (s = o.round(s)), m.setRelative(g, p, l * s, y), m.touch(g), exports.DEBUG && console.log(o.step, (t ? "MIRP[" : "MDRP[") + (e ? "M" : "m") + (i ? ">" : "_") + (r ? "R" : "_") + (0 === n ? "Gr" : 1 === n ? "Bl" : 2 === n ? "Wh" : "") + "]", t ? u + "(" + o.cvt[u] + "," + h + ")" : "", f, "(d =", a, "->", l * s, ")"), o.rp1 = o.rp0, o.rp2 = f, e && (o.rp0 = f)
            }

            function Oi(t) {
                this.char = t, this.state = {}, this.activeState = null
            }

            function Ii(t, e, i) {
                this.contextName = i, this.startIndex = t, this.endOffset = e
            }

            function Pi(t, e, i) {
                this.contextName = t, this.openRange = null, this.ranges = [], this.checkStart = e, this.checkEnd = i
            }

            function Li(t, e) {
                this.context = t, this.index = e, this.length = t.length, this.current = t[e], this.backtrack = t.slice(0, e), this.lookahead = t.slice(e + 1)
            }

            function Mi(t) {
                this.eventId = t, this.subscribers = []
            }

            function Ai(t) {
                var e = this,
                    i = ["start", "end", "next", "newToken", "contextStart", "contextEnd", "insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD", "updateContextsRanges"];
                i.forEach((function(t) {
                    Object.defineProperty(e.events, t, {
                        value: new Mi(t)
                    })
                })), t && i.forEach((function(i) {
                    var r = t[i];
                    "function" == typeof r && e.events[i].subscribe(r)
                }));
                ["insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD"].forEach((function(t) {
                    e.events[t].subscribe(e.updateContextsRanges)
                }))
            }

            function Di(t) {
                this.tokens = [], this.registeredContexts = {}, this.contextCheckers = [], this.events = {}, this.registeredModifiers = [], Ai.call(this, t)
            }

            function Ri(t) {
                return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t)
            }

            function Fi(t) {
                return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(t)
            }

            function ji(t) {
                return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(t)
            }

            function Bi(t) {
                return /[A-z]/.test(t)
            }

            function Ui(t) {
                this.font = t, this.features = {}
            }

            function Ni(t) {
                this.id = t.id, this.tag = t.tag, this.substitution = t.substitution
            }

            function Gi(t, e) {
                if (!t) return -1;
                switch (e.format) {
                    case 1:
                        return e.glyphs.indexOf(t);
                    case 2:
                        for (var i = e.ranges, r = 0; r < i.length; r++) {
                            var n = i[r];
                            if (t >= n.start && t <= n.end) {
                                var o = t - n.start;
                                return n.index + o
                            }
                        }
                        break;
                    default:
                        return -1
                }
                return -1
            }

            function Xi(t, e) {
                return -1 === Gi(t, e.coverage) ? null : t + e.deltaGlyphId
            }

            function zi(t, e) {
                var i = Gi(t, e.coverage);
                return -1 === i ? null : e.substitute[i]
            }

            function Wi(t, e) {
                for (var i = [], r = 0; r < t.length; r++) {
                    var n = t[r],
                        o = e.current,
                        a = Gi(o = Array.isArray(o) ? o[0] : o, n); - 1 !== a && i.push(a)
                }
                return i.length !== t.length ? -1 : i
            }

            function Hi(t, e) {
                var i = e.inputCoverage.length + e.lookaheadCoverage.length + e.backtrackCoverage.length;
                if (t.context.length < i) return [];
                var r = Wi(e.inputCoverage, t);
                if (-1 === r) return [];
                var n = e.inputCoverage.length - 1;
                if (t.lookahead.length < e.lookaheadCoverage.length) return [];
                for (var o = t.lookahead.slice(n); o.length && ji(o[0].char);) o.shift();
                var a = new Li(o, 0),
                    s = Wi(e.lookaheadCoverage, a),
                    l = [].concat(t.backtrack);
                for (l.reverse(); l.length && ji(l[0].char);) l.shift();
                if (l.length < e.backtrackCoverage.length) return [];
                var h = new Li(l, 0),
                    c = Wi(e.backtrackCoverage, h),
                    u = [];
                if (r.length === e.inputCoverage.length && s.length === e.lookaheadCoverage.length && c.length === e.backtrackCoverage.length)
                    for (var f = 0; f < e.lookupRecords.length; f++)
                        for (var d = e.lookupRecords[f].lookupListIndex, p = this.getLookupByIndex(d), g = 0; g < p.subtables.length; g++) {
                            var v = p.subtables[g],
                                m = this.getLookupMethod(p, v);
                            if ("12" === this.getSubstitutionType(p, v))
                                for (var y = 0; y < r.length; y++) {
                                    var b = m(t.get(y));
                                    b && u.push(b)
                                }
                        }
                return u
            }

            function Yi(t, e) {
                var i, r = Gi(t.current, e.coverage);
                if (-1 === r) return null;
                for (var n = e.ligatureSets[r], o = 0; o < n.length; o++) {
                    i = n[o];
                    for (var a = 0; a < i.components.length; a++) {
                        if (t.lookahead[a] !== i.components[a]) break;
                        if (a === i.components.length - 1) return i
                    }
                }
                return null
            }

            function Vi(t, e) {
                var i = Gi(t, e.coverage);
                return -1 === i ? null : e.sequences[i]
            }
            Xe.prototype.exec = function(t, e) {
                if ("number" != typeof e) throw new Error("Point size is not a number!");
                if (!(this._errorState > 2)) {
                    var i = this.font,
                        r = this._prepState;
                    if (!r || r.ppem !== e) {
                        var n = this._fpgmState;
                        if (!n) {
                            ri.prototype = ii, (n = this._fpgmState = new ri("fpgm", i.tables.fpgm)).funcs = [], n.font = i, exports.DEBUG && (console.log("---EXEC FPGM---"), n.step = -1);
                            try {
                                Be(n)
                            } catch (t) {
                                return console.log("Hinting error in FPGM:" + t), void(this._errorState = 3)
                            }
                        }
                        ri.prototype = n, (r = this._prepState = new ri("prep", i.tables.prep)).ppem = e;
                        var o = i.tables.cvt;
                        if (o)
                            for (var a = r.cvt = new Array(o.length), s = e / i.unitsPerEm, l = 0; l < o.length; l++) a[l] = o[l] * s;
                        else r.cvt = [];
                        exports.DEBUG && (console.log("---EXEC PREP---"), r.step = -1);
                        try {
                            Be(r)
                        } catch (t) {
                            this._errorState < 2 && console.log("Hinting error in PREP:" + t), this._errorState = 2
                        }
                    }
                    if (!(this._errorState > 1)) try {
                        return Ue(t, r)
                    } catch (t) {
                        return this._errorState < 1 && (console.log("Hinting error:" + t), console.log("Note: further hinting errors are silenced")), void(this._errorState = 1)
                    }
                }
            }, Ue = function(t, e) {
                var i, r, n, o = e.ppem / e.font.unitsPerEm,
                    a = o,
                    s = t.components;
                if (ri.prototype = e, s) {
                    var l = e.font;
                    r = [], i = [];
                    for (var h = 0; h < s.length; h++) {
                        var c = s[h],
                            u = l.glyphs.get(c.glyphIndex);
                        n = new ri("glyf", u.instructions), exports.DEBUG && (console.log("---EXEC COMP " + h + "---"), n.step = -1), Ne(u, n, o, a);
                        for (var f = Math.round(c.dx * o), d = Math.round(c.dy * a), p = n.gZone, g = n.contours, v = 0; v < p.length; v++) {
                            var m = p[v];
                            m.xTouched = m.yTouched = !1, m.xo = m.x = m.x + f, m.yo = m.y = m.y + d
                        }
                        var y = r.length;
                        r.push.apply(r, p);
                        for (var b = 0; b < g.length; b++) i.push(g[b] + y)
                    }
                    t.instructions && !n.inhibitGridFit && ((n = new ri("glyf", t.instructions)).gZone = n.z0 = n.z1 = n.z2 = r, n.contours = i, r.push(new ti(0, 0), new ti(Math.round(t.advanceWidth * o), 0)), exports.DEBUG && (console.log("---EXEC COMPOSITE---"), n.step = -1), Be(n), r.length -= 2)
                } else n = new ri("glyf", t.instructions), exports.DEBUG && (console.log("---EXEC GLYPH---"), n.step = -1), Ne(t, n, o, a), r = n.gZone;
                return r
            }, Ne = function(t, e, i, r) {
                for (var n, o, a, s = t.points || [], l = s.length, h = e.gZone = e.z0 = e.z1 = e.z2 = [], c = e.contours = [], u = 0; u < l; u++) n = s[u], h[u] = new ti(n.x * i, n.y * r, n.lastPointOfContour, n.onCurve);
                for (var f = 0; f < l; f++) n = h[f], o || (o = n, c.push(f)), n.lastPointOfContour ? (n.nextPointOnContour = o, o.prevPointOnContour = n, o = void 0) : (a = h[f + 1], n.nextPointOnContour = a, a.prevPointOnContour = n);
                if (!e.inhibitGridFit) {
                    if (exports.DEBUG) {
                        console.log("PROCESSING GLYPH", e.stack);
                        for (var d = 0; d < l; d++) console.log(d, h[d].x, h[d].y)
                    }
                    if (h.push(new ti(0, 0), new ti(Math.round(t.advanceWidth * i), 0)), Be(e), h.length -= 2, exports.DEBUG) {
                        console.log("FINISHED GLYPH", e.stack);
                        for (var p = 0; p < l; p++) console.log(p, h[p].x, h[p].y)
                    }
                }
            }, Be = function(t) {
                var e = t.prog;
                if (e) {
                    var i, r = e.length;
                    for (t.ip = 0; t.ip < r; t.ip++) {
                        if (exports.DEBUG && t.step++, !(i = je[e[t.ip]])) throw new Error("unknown instruction: 0x" + Number(e[t.ip]).toString(16));
                        i(t)
                    }
                }
            }, je = [ai.bind(void 0, Je), ai.bind(void 0, Ke), si.bind(void 0, Je), si.bind(void 0, Ke), li.bind(void 0, Je), li.bind(void 0, Ke), hi.bind(void 0, 0), hi.bind(void 0, 1), ci.bind(void 0, 0), ci.bind(void 0, 1), function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "SPVFS[]", i, r), t.pv = t.dpv = $e(r, i)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "SPVFS[]", i, r), t.fv = $e(r, i)
            }, function(t) {
                var e = t.stack,
                    i = t.pv;
                exports.DEBUG && console.log(t.step, "GPV[]"), e.push(16384 * i.x), e.push(16384 * i.y)
            }, function(t) {
                var e = t.stack,
                    i = t.fv;
                exports.DEBUG && console.log(t.step, "GFV[]"), e.push(16384 * i.x), e.push(16384 * i.y)
            }, function(t) {
                t.fv = t.pv, exports.DEBUG && console.log(t.step, "SFVTPV[]")
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop(),
                    n = e.pop(),
                    o = e.pop(),
                    a = e.pop(),
                    s = t.z0,
                    l = t.z1,
                    h = s[i],
                    c = s[r],
                    u = l[n],
                    f = l[o],
                    d = t.z2[a];
                exports.DEBUG && console.log("ISECT[], ", i, r, n, o, a);
                var p = h.x,
                    g = h.y,
                    v = c.x,
                    m = c.y,
                    y = u.x,
                    b = u.y,
                    x = f.x,
                    _ = f.y,
                    w = (p - v) * (b - _) - (g - m) * (y - x),
                    S = p * m - g * v,
                    C = y * _ - b * x;
                d.x = (S * (y - x) - C * (p - v)) / w, d.y = (S * (b - _) - C * (g - m)) / w
            }, function(t) {
                t.rp0 = t.stack.pop(), exports.DEBUG && console.log(t.step, "SRP0[]", t.rp0)
            }, function(t) {
                t.rp1 = t.stack.pop(), exports.DEBUG && console.log(t.step, "SRP1[]", t.rp1)
            }, function(t) {
                t.rp2 = t.stack.pop(), exports.DEBUG && console.log(t.step, "SRP2[]", t.rp2)
            }, function(t) {
                var e = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "SZP0[]", e), t.zp0 = e, e) {
                    case 0:
                        t.tZone || ni(t), t.z0 = t.tZone;
                        break;
                    case 1:
                        t.z0 = t.gZone;
                        break;
                    default:
                        throw new Error("Invalid zone pointer")
                }
            }, function(t) {
                var e = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "SZP1[]", e), t.zp1 = e, e) {
                    case 0:
                        t.tZone || ni(t), t.z1 = t.tZone;
                        break;
                    case 1:
                        t.z1 = t.gZone;
                        break;
                    default:
                        throw new Error("Invalid zone pointer")
                }
            }, function(t) {
                var e = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "SZP2[]", e), t.zp2 = e, e) {
                    case 0:
                        t.tZone || ni(t), t.z2 = t.tZone;
                        break;
                    case 1:
                        t.z2 = t.gZone;
                        break;
                    default:
                        throw new Error("Invalid zone pointer")
                }
            }, function(t) {
                var e = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "SZPS[]", e), t.zp0 = t.zp1 = t.zp2 = e, e) {
                    case 0:
                        t.tZone || ni(t), t.z0 = t.z1 = t.z2 = t.tZone;
                        break;
                    case 1:
                        t.z0 = t.z1 = t.z2 = t.gZone;
                        break;
                    default:
                        throw new Error("Invalid zone pointer")
                }
            }, function(t) {
                t.loop = t.stack.pop(), exports.DEBUG && console.log(t.step, "SLOOP[]", t.loop)
            }, function(t) {
                exports.DEBUG && console.log(t.step, "RTG[]"), t.round = We
            }, function(t) {
                exports.DEBUG && console.log(t.step, "RTHG[]"), t.round = Ye
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SMD[]", e), t.minDis = e / 64
            }, function(t) {
                exports.DEBUG && console.log(t.step, "ELSE[]"), oi(t, !1)
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "JMPR[]", e), t.ip += e - 1
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SCVTCI[]", e), t.cvCutIn = e / 64
            }, void 0, void 0, function(t) {
                var e = t.stack;
                exports.DEBUG && console.log(t.step, "DUP[]"), e.push(e[e.length - 1])
            }, ui, function(t) {
                exports.DEBUG && console.log(t.step, "CLEAR[]"), t.stack.length = 0
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "SWAP[]"), e.push(i), e.push(r)
            }, function(t) {
                var e = t.stack;
                exports.DEBUG && console.log(t.step, "DEPTH[]"), e.push(e.length)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "CINDEX[]", i), e.push(e[e.length - i])
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "MINDEX[]", i), e.push(e.splice(e.length - i, 1)[0])
            }, void 0, void 0, void 0, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "LOOPCALL[]", i, r);
                var n = t.ip,
                    o = t.prog;
                t.prog = t.funcs[i];
                for (var a = 0; a < r; a++) Be(t), exports.DEBUG && console.log(++t.step, a + 1 < r ? "next loopcall" : "done loopcall", a);
                t.ip = n, t.prog = o
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "CALL[]", e);
                var i = t.ip,
                    r = t.prog;
                t.prog = t.funcs[e], Be(t), t.ip = i, t.prog = r, exports.DEBUG && console.log(++t.step, "returning from", e)
            }, function(t) {
                if ("fpgm" !== t.env) throw new Error("FDEF not allowed here");
                var e = t.stack,
                    i = t.prog,
                    r = t.ip,
                    n = e.pop(),
                    o = r;
                for (exports.DEBUG && console.log(t.step, "FDEF[]", n); 45 !== i[++r];);
                t.ip = r, t.funcs[n] = i.slice(o + 1, r)
            }, void 0, fi.bind(void 0, 0), fi.bind(void 0, 1), di.bind(void 0, Je), di.bind(void 0, Ke), pi.bind(void 0, 0), pi.bind(void 0, 1), gi.bind(void 0, 0), gi.bind(void 0, 1), vi.bind(void 0, 0), vi.bind(void 0, 1), function(t) {
                for (var e = t.stack, i = t.loop, r = t.fv, n = e.pop() / 64, o = t.z2; i--;) {
                    var a = e.pop(),
                        s = o[a];
                    exports.DEBUG && console.log(t.step, (t.loop > 1 ? "loop " + (t.loop - i) + ": " : "") + "SHPIX[]", a, n), r.setRelative(s, s, n), r.touch(s)
                }
                t.loop = 1
            }, function(t) {
                for (var e = t.stack, i = t.rp1, r = t.rp2, n = t.loop, o = t.z0[i], a = t.z1[r], s = t.fv, l = t.dpv, h = t.z2; n--;) {
                    var c = e.pop(),
                        u = h[c];
                    exports.DEBUG && console.log(t.step, (t.loop > 1 ? "loop " + (t.loop - n) + ": " : "") + "IP[]", c, i, "<->", r), s.interpolate(u, o, a, l), s.touch(u)
                }
                t.loop = 1
            }, mi.bind(void 0, 0), mi.bind(void 0, 1), function(t) {
                for (var e = t.stack, i = t.rp0, r = t.z0[i], n = t.loop, o = t.fv, a = t.pv, s = t.z1; n--;) {
                    var l = e.pop(),
                        h = s[l];
                    exports.DEBUG && console.log(t.step, (t.loop > 1 ? "loop " + (t.loop - n) + ": " : "") + "ALIGNRP[]", l), o.setRelative(h, r, 0, a), o.touch(h)
                }
                t.loop = 1
            }, function(t) {
                exports.DEBUG && console.log(t.step, "RTDG[]"), t.round = He
            }, yi.bind(void 0, 0), yi.bind(void 0, 1), function(t) {
                var e = t.prog,
                    i = t.ip,
                    r = t.stack,
                    n = e[++i];
                exports.DEBUG && console.log(t.step, "NPUSHB[]", n);
                for (var o = 0; o < n; o++) r.push(e[++i]);
                t.ip = i
            }, function(t) {
                var e = t.ip,
                    i = t.prog,
                    r = t.stack,
                    n = i[++e];
                exports.DEBUG && console.log(t.step, "NPUSHW[]", n);
                for (var o = 0; o < n; o++) {
                    var a = i[++e] << 8 | i[++e];
                    32768 & a && (a = -(1 + (65535 ^ a))), r.push(a)
                }
                t.ip = e
            }, function(t) {
                var e = t.stack,
                    i = t.store;
                i || (i = t.store = []);
                var r = e.pop(),
                    n = e.pop();
                exports.DEBUG && console.log(t.step, "WS", r, n), i[n] = r
            }, function(t) {
                var e = t.stack,
                    i = t.store,
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "RS", r);
                var n = i && i[r] || 0;
                e.push(n)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "WCVTP", i, r), t.cvt[r] = i / 64
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "RCVT", i), e.push(64 * t.cvt[i])
            }, bi.bind(void 0, 0), bi.bind(void 0, 1), void 0, xi.bind(void 0, 0), xi.bind(void 0, 1), function(t) {
                exports.DEBUG && console.log(t.step, "MPPEM[]"), t.stack.push(t.ppem)
            }, void 0, function(t) {
                exports.DEBUG && console.log(t.step, "FLIPON[]"), t.autoFlip = !0
            }, void 0, void 0, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "LT[]", i, r), e.push(r < i ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "LTEQ[]", i, r), e.push(r <= i ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "GT[]", i, r), e.push(r > i ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "GTEQ[]", i, r), e.push(r >= i ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "EQ[]", i, r), e.push(i === r ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "NEQ[]", i, r), e.push(i !== r ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "ODD[]", i), e.push(Math.trunc(i) % 2 ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "EVEN[]", i), e.push(Math.trunc(i) % 2 ? 0 : 1)
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "IF[]", e), e || (oi(t, !0), exports.DEBUG && console.log(t.step, "EIF[]"))
            }, function(t) {
                exports.DEBUG && console.log(t.step, "EIF[]")
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "AND[]", i, r), e.push(i && r ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "OR[]", i, r), e.push(i || r ? 1 : 0)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "NOT[]", i), e.push(i ? 0 : 1)
            }, _i.bind(void 0, 1), function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SDB[]", e), t.deltaBase = e
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SDS[]", e), t.deltaShift = Math.pow(.5, e)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "ADD[]", i, r), e.push(r + i)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "SUB[]", i, r), e.push(r - i)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "DIV[]", i, r), e.push(64 * r / i)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "MUL[]", i, r), e.push(r * i / 64)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "ABS[]", i), e.push(Math.abs(i))
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "NEG[]", i), e.push(-i)
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "FLOOR[]", i), e.push(64 * Math.floor(i / 64))
            }, function(t) {
                var e = t.stack,
                    i = e.pop();
                exports.DEBUG && console.log(t.step, "CEILING[]", i), e.push(64 * Math.ceil(i / 64))
            }, wi.bind(void 0, 0), wi.bind(void 0, 1), wi.bind(void 0, 2), wi.bind(void 0, 3), void 0, void 0, void 0, void 0, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "WCVTF[]", i, r), t.cvt[r] = i * t.ppem / t.font.unitsPerEm
            }, _i.bind(void 0, 2), _i.bind(void 0, 3), Si.bind(void 0, 1), Si.bind(void 0, 2), Si.bind(void 0, 3), function(t) {
                var e, i = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "SROUND[]", i), t.round = Ze, 192 & i) {
                    case 0:
                        e = .5;
                        break;
                    case 64:
                        e = 1;
                        break;
                    case 128:
                        e = 2;
                        break;
                    default:
                        throw new Error("invalid SROUND value")
                }
                switch (t.srPeriod = e, 48 & i) {
                    case 0:
                        t.srPhase = 0;
                        break;
                    case 16:
                        t.srPhase = .25 * e;
                        break;
                    case 32:
                        t.srPhase = .5 * e;
                        break;
                    case 48:
                        t.srPhase = .75 * e;
                        break;
                    default:
                        throw new Error("invalid SROUND value")
                }
                i &= 15, t.srThreshold = 0 === i ? 0 : (i / 8 - .5) * e
            }, function(t) {
                var e, i = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "S45ROUND[]", i), t.round = Ze, 192 & i) {
                    case 0:
                        e = Math.sqrt(2) / 2;
                        break;
                    case 64:
                        e = Math.sqrt(2);
                        break;
                    case 128:
                        e = 2 * Math.sqrt(2);
                        break;
                    default:
                        throw new Error("invalid S45ROUND value")
                }
                switch (t.srPeriod = e, 48 & i) {
                    case 0:
                        t.srPhase = 0;
                        break;
                    case 16:
                        t.srPhase = .25 * e;
                        break;
                    case 32:
                        t.srPhase = .5 * e;
                        break;
                    case 48:
                        t.srPhase = .75 * e;
                        break;
                    default:
                        throw new Error("invalid S45ROUND value")
                }
                i &= 15, t.srThreshold = 0 === i ? 0 : (i / 8 - .5) * e
            }, void 0, void 0, function(t) {
                exports.DEBUG && console.log(t.step, "ROFF[]"), t.round = ze
            }, void 0, function(t) {
                exports.DEBUG && console.log(t.step, "RUTG[]"), t.round = Ve
            }, function(t) {
                exports.DEBUG && console.log(t.step, "RDTG[]"), t.round = qe
            }, ui, ui, void 0, void 0, void 0, void 0, void 0, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SCANCTRL[]", e)
            }, Ci.bind(void 0, 0), Ci.bind(void 0, 1), function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = 0;
                exports.DEBUG && console.log(t.step, "GETINFO[]", i), 1 & i && (r = 35), 32 & i && (r |= 4096), e.push(r)
            }, void 0, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop(),
                    n = e.pop();
                exports.DEBUG && console.log(t.step, "ROLL[]"), e.push(r), e.push(i), e.push(n)
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "MAX[]", i, r), e.push(Math.max(r, i))
            }, function(t) {
                var e = t.stack,
                    i = e.pop(),
                    r = e.pop();
                exports.DEBUG && console.log(t.step, "MIN[]", i, r), e.push(Math.min(r, i))
            }, function(t) {
                var e = t.stack.pop();
                exports.DEBUG && console.log(t.step, "SCANTYPE[]", e)
            }, function(t) {
                var e = t.stack.pop(),
                    i = t.stack.pop();
                switch (exports.DEBUG && console.log(t.step, "INSTCTRL[]", e, i), e) {
                    case 1:
                        return void(t.inhibitGridFit = !!i);
                    case 2:
                        return void(t.ignoreCvt = !!i);
                    default:
                        throw new Error("invalid INSTCTRL[] selector")
                }
            }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, Ti.bind(void 0, 1), Ti.bind(void 0, 2), Ti.bind(void 0, 3), Ti.bind(void 0, 4), Ti.bind(void 0, 5), Ti.bind(void 0, 6), Ti.bind(void 0, 7), Ti.bind(void 0, 8), Ei.bind(void 0, 1), Ei.bind(void 0, 2), Ei.bind(void 0, 3), Ei.bind(void 0, 4), Ei.bind(void 0, 5), Ei.bind(void 0, 6), Ei.bind(void 0, 7), Ei.bind(void 0, 8), ki.bind(void 0, 0, 0, 0, 0, 0), ki.bind(void 0, 0, 0, 0, 0, 1), ki.bind(void 0, 0, 0, 0, 0, 2), ki.bind(void 0, 0, 0, 0, 0, 3), ki.bind(void 0, 0, 0, 0, 1, 0), ki.bind(void 0, 0, 0, 0, 1, 1), ki.bind(void 0, 0, 0, 0, 1, 2), ki.bind(void 0, 0, 0, 0, 1, 3), ki.bind(void 0, 0, 0, 1, 0, 0), ki.bind(void 0, 0, 0, 1, 0, 1), ki.bind(void 0, 0, 0, 1, 0, 2), ki.bind(void 0, 0, 0, 1, 0, 3), ki.bind(void 0, 0, 0, 1, 1, 0), ki.bind(void 0, 0, 0, 1, 1, 1), ki.bind(void 0, 0, 0, 1, 1, 2), ki.bind(void 0, 0, 0, 1, 1, 3), ki.bind(void 0, 0, 1, 0, 0, 0), ki.bind(void 0, 0, 1, 0, 0, 1), ki.bind(void 0, 0, 1, 0, 0, 2), ki.bind(void 0, 0, 1, 0, 0, 3), ki.bind(void 0, 0, 1, 0, 1, 0), ki.bind(void 0, 0, 1, 0, 1, 1), ki.bind(void 0, 0, 1, 0, 1, 2), ki.bind(void 0, 0, 1, 0, 1, 3), ki.bind(void 0, 0, 1, 1, 0, 0), ki.bind(void 0, 0, 1, 1, 0, 1), ki.bind(void 0, 0, 1, 1, 0, 2), ki.bind(void 0, 0, 1, 1, 0, 3), ki.bind(void 0, 0, 1, 1, 1, 0), ki.bind(void 0, 0, 1, 1, 1, 1), ki.bind(void 0, 0, 1, 1, 1, 2), ki.bind(void 0, 0, 1, 1, 1, 3), ki.bind(void 0, 1, 0, 0, 0, 0), ki.bind(void 0, 1, 0, 0, 0, 1), ki.bind(void 0, 1, 0, 0, 0, 2), ki.bind(void 0, 1, 0, 0, 0, 3), ki.bind(void 0, 1, 0, 0, 1, 0), ki.bind(void 0, 1, 0, 0, 1, 1), ki.bind(void 0, 1, 0, 0, 1, 2), ki.bind(void 0, 1, 0, 0, 1, 3), ki.bind(void 0, 1, 0, 1, 0, 0), ki.bind(void 0, 1, 0, 1, 0, 1), ki.bind(void 0, 1, 0, 1, 0, 2), ki.bind(void 0, 1, 0, 1, 0, 3), ki.bind(void 0, 1, 0, 1, 1, 0), ki.bind(void 0, 1, 0, 1, 1, 1), ki.bind(void 0, 1, 0, 1, 1, 2), ki.bind(void 0, 1, 0, 1, 1, 3), ki.bind(void 0, 1, 1, 0, 0, 0), ki.bind(void 0, 1, 1, 0, 0, 1), ki.bind(void 0, 1, 1, 0, 0, 2), ki.bind(void 0, 1, 1, 0, 0, 3), ki.bind(void 0, 1, 1, 0, 1, 0), ki.bind(void 0, 1, 1, 0, 1, 1), ki.bind(void 0, 1, 1, 0, 1, 2), ki.bind(void 0, 1, 1, 0, 1, 3), ki.bind(void 0, 1, 1, 1, 0, 0), ki.bind(void 0, 1, 1, 1, 0, 1), ki.bind(void 0, 1, 1, 1, 0, 2), ki.bind(void 0, 1, 1, 1, 0, 3), ki.bind(void 0, 1, 1, 1, 1, 0), ki.bind(void 0, 1, 1, 1, 1, 1), ki.bind(void 0, 1, 1, 1, 1, 2), ki.bind(void 0, 1, 1, 1, 1, 3)], Oi.prototype.setState = function(t, e) {
                return this.state[t] = e, this.activeState = {
                    key: t,
                    value: this.state[t]
                }, this.activeState
            }, Oi.prototype.getState = function(t) {
                return this.state[t] || null
            }, Di.prototype.inboundIndex = function(t) {
                return t >= 0 && t < this.tokens.length
            }, Di.prototype.composeRUD = function(t) {
                var e = this,
                    i = t.map((function(t) {
                        return e[t[0]].apply(e, t.slice(1).concat(true))
                    })),
                    r = function(t) {
                        return "object" == typeof t && t.hasOwnProperty("FAIL")
                    };
                if (i.every(r)) return {
                    FAIL: "composeRUD: one or more operations hasn't completed successfully",
                    report: i.filter(r)
                };
                this.dispatch("composeRUD", [i.filter((function(t) {
                    return !r(t)
                }))])
            }, Di.prototype.replaceRange = function(t, e, i, r) {
                e = null !== e ? e : this.tokens.length;
                var n = i.every((function(t) {
                    return t instanceof Oi
                }));
                if (!isNaN(t) && this.inboundIndex(t) && n) {
                    var o = this.tokens.splice.apply(this.tokens, [t, e].concat(i));
                    return r || this.dispatch("replaceToken", [t, e, i]), [o, i]
                }
                return {
                    FAIL: "replaceRange: invalid tokens or startIndex."
                }
            }, Di.prototype.replaceToken = function(t, e, i) {
                if (!isNaN(t) && this.inboundIndex(t) && e instanceof Oi) {
                    var r = this.tokens.splice(t, 1, e);
                    return i || this.dispatch("replaceToken", [t, e]), [r[0], e]
                }
                return {
                    FAIL: "replaceToken: invalid token or index."
                }
            }, Di.prototype.removeRange = function(t, e, i) {
                e = isNaN(e) ? this.tokens.length : e;
                var r = this.tokens.splice(t, e);
                return i || this.dispatch("removeRange", [r, t, e]), r
            }, Di.prototype.removeToken = function(t, e) {
                if (!isNaN(t) && this.inboundIndex(t)) {
                    var i = this.tokens.splice(t, 1);
                    return e || this.dispatch("removeToken", [i, t]), i
                }
                return {
                    FAIL: "removeToken: invalid token index."
                }
            }, Di.prototype.insertToken = function(t, e, i) {
                return t.every((function(t) {
                    return t instanceof Oi
                })) ? (this.tokens.splice.apply(this.tokens, [e, 0].concat(t)), i || this.dispatch("insertToken", [t, e]), t) : {
                    FAIL: "insertToken: invalid token(s)."
                }
            }, Di.prototype.registerModifier = function(t, e, i) {
                this.events.newToken.subscribe((function(r, n) {
                    var o = [r, n],
                        a = [r, n];
                    if (null === e || !0 === e.apply(this, o)) {
                        var s = i.apply(this, a);
                        r.setState(t, s)
                    }
                })), this.registeredModifiers.push(t)
            }, Mi.prototype.subscribe = function(t) {
                return "function" == typeof t ? this.subscribers.push(t) - 1 : {
                    FAIL: "invalid '" + this.eventId + "' event handler"
                }
            }, Mi.prototype.unsubscribe = function(t) {
                this.subscribers.splice(t, 1)
            }, Li.prototype.setCurrentIndex = function(t) {
                this.index = t, this.current = this.context[t], this.backtrack = this.context.slice(0, t), this.lookahead = this.context.slice(t + 1)
            }, Li.prototype.get = function(t) {
                switch (!0) {
                    case 0 === t:
                        return this.current;
                    case t < 0 && Math.abs(t) <= this.backtrack.length:
                        return this.backtrack.slice(t)[0];
                    case t > 0 && t <= this.lookahead.length:
                        return this.lookahead[t - 1];
                    default:
                        return null
                }
            }, Di.prototype.rangeToText = function(t) {
                if (t instanceof Ii) return this.getRangeTokens(t).map((function(t) {
                    return t.char
                })).join("")
            }, Di.prototype.getText = function() {
                return this.tokens.map((function(t) {
                    return t.char
                })).join("")
            }, Di.prototype.getContext = function(t) {
                var e = this.registeredContexts[t];
                return e || null
            }, Di.prototype.on = function(t, e) {
                var i = this.events[t];
                return i ? i.subscribe(e) : null
            }, Di.prototype.dispatch = function(t, e) {
                var i = this,
                    r = this.events[t];
                r instanceof Mi && r.subscribers.forEach((function(t) {
                    t.apply(i, e || [])
                }))
            }, Di.prototype.registerContextChecker = function(t, e, i) {
                if (this.getContext(t)) return {
                    FAIL: "context name '" + t + "' is already registered."
                };
                if ("function" != typeof e) return {
                    FAIL: "missing context start check."
                };
                if ("function" != typeof i) return {
                    FAIL: "missing context end check."
                };
                var r = new Pi(t, e, i);
                return this.registeredContexts[t] = r, this.contextCheckers.push(r), r
            }, Di.prototype.getRangeTokens = function(t) {
                var e = t.startIndex + t.endOffset;
                return [].concat(this.tokens.slice(t.startIndex, e))
            }, Di.prototype.getContextRanges = function(t) {
                var e = this.getContext(t);
                return e ? e.ranges : {
                    FAIL: "context checker '" + t + "' is not registered."
                }
            }, Di.prototype.resetContextsRanges = function() {
                var t = this.registeredContexts;
                for (var e in t) {
                    if (t.hasOwnProperty(e)) t[e].ranges = []
                }
            }, Di.prototype.updateContextsRanges = function() {
                this.resetContextsRanges();
                for (var t = this.tokens.map((function(t) {
                        return t.char
                    })), e = 0; e < t.length; e++) {
                    var i = new Li(t, e);
                    this.runContextCheck(i)
                }
                this.dispatch("updateContextsRanges", [this.registeredContexts])
            }, Di.prototype.setEndOffset = function(t, e) {
                var i = new Ii(this.getContext(e).openRange.startIndex, t, e),
                    r = this.getContext(e).ranges;
                return i.rangeId = e + "." + r.length, r.push(i), this.getContext(e).openRange = null, i
            }, Di.prototype.runContextCheck = function(t) {
                var e = this,
                    i = t.index;
                this.contextCheckers.forEach((function(r) {
                    var n = r.contextName,
                        o = e.getContext(n).openRange;
                    if (!o && r.checkStart(t) && (o = new Ii(i, null, n), e.getContext(n).openRange = o, e.dispatch("contextStart", [n, i])), o && r.checkEnd(t)) {
                        var a = i - o.startIndex + 1,
                            s = e.setEndOffset(a, n);
                        e.dispatch("contextEnd", [n, s])
                    }
                }))
            }, Di.prototype.tokenize = function(t) {
                this.tokens = [], this.resetContextsRanges();
                var e = Array.from(t);
                this.dispatch("start");
                for (var i = 0; i < e.length; i++) {
                    var r = e[i],
                        n = new Li(e, i);
                    this.dispatch("next", [n]), this.runContextCheck(n);
                    var o = new Oi(r);
                    this.tokens.push(o), this.dispatch("newToken", [o, n])
                }
                return this.dispatch("end", [this.tokens]), this.tokens
            }, Ui.prototype.getDefaultScriptFeaturesIndexes = function() {
                for (var t = this.font.tables.gsub.scripts, e = 0; e < t.length; e++) {
                    var i = t[e];
                    if ("DFLT" === i.tag) return i.script.defaultLangSys.featureIndexes
                }
                return []
            }, Ui.prototype.getScriptFeaturesIndexes = function(t) {
                if (!this.font.tables.gsub) return [];
                if (!t) return this.getDefaultScriptFeaturesIndexes();
                for (var e = this.font.tables.gsub.scripts, i = 0; i < e.length; i++) {
                    var r = e[i];
                    if (r.tag === t && r.script.defaultLangSys) return r.script.defaultLangSys.featureIndexes;
                    var n = r.langSysRecords;
                    if (n)
                        for (var o = 0; o < n.length; o++) {
                            var a = n[o];
                            if (a.tag === t) return a.langSys.featureIndexes
                        }
                }
                return this.getDefaultScriptFeaturesIndexes()
            }, Ui.prototype.mapTagsToFeatures = function(t, e) {
                for (var i = {}, r = 0; r < t.length; r++) {
                    var n = t[r].tag,
                        o = t[r].feature;
                    i[n] = o
                }
                this.features[e].tags = i
            }, Ui.prototype.getScriptFeatures = function(t) {
                var e = this.features[t];
                if (this.features.hasOwnProperty(t)) return e;
                var i = this.getScriptFeaturesIndexes(t);
                if (!i) return null;
                var r = this.font.tables.gsub;
                return e = i.map((function(t) {
                    return r.features[t]
                })), this.features[t] = e, this.mapTagsToFeatures(e, t), e
            }, Ui.prototype.getSubstitutionType = function(t, e) {
                return t.lookupType.toString() + e.substFormat.toString()
            }, Ui.prototype.getLookupMethod = function(t, e) {
                var i = this;
                switch (this.getSubstitutionType(t, e)) {
                    case "11":
                        return function(t) {
                            return Xi.apply(i, [t, e])
                        };
                    case "12":
                        return function(t) {
                            return zi.apply(i, [t, e])
                        };
                    case "63":
                        return function(t) {
                            return Hi.apply(i, [t, e])
                        };
                    case "41":
                        return function(t) {
                            return Yi.apply(i, [t, e])
                        };
                    case "21":
                        return function(t) {
                            return Vi.apply(i, [t, e])
                        };
                    default:
                        throw new Error("lookupType: " + t.lookupType + " - substFormat: " + e.substFormat + " is not yet supported")
                }
            }, Ui.prototype.lookupFeature = function(t) {
                var e = t.contextParams,
                    i = e.index,
                    r = this.getFeature({
                        tag: t.tag,
                        script: t.script
                    });
                if (!r) return new Error("font '" + this.font.names.fullName.en + "' doesn't support feature '" + t.tag + "' for script '" + t.script + "'.");
                for (var n = this.getFeatureLookups(r), o = [].concat(e.context), a = 0; a < n.length; a++)
                    for (var s = n[a], l = this.getLookupSubtables(s), h = 0; h < l.length; h++) {
                        var c = l[h],
                            u = this.getSubstitutionType(s, c),
                            f = this.getLookupMethod(s, c),
                            d = void 0;
                        switch (u) {
                            case "11":
                                (d = f(e.current)) && o.splice(i, 1, new Ni({
                                    id: 11,
                                    tag: t.tag,
                                    substitution: d
                                }));
                                break;
                            case "12":
                                (d = f(e.current)) && o.splice(i, 1, new Ni({
                                    id: 12,
                                    tag: t.tag,
                                    substitution: d
                                }));
                                break;
                            case "63":
                                d = f(e), Array.isArray(d) && d.length && o.splice(i, 1, new Ni({
                                    id: 63,
                                    tag: t.tag,
                                    substitution: d
                                }));
                                break;
                            case "41":
                                (d = f(e)) && o.splice(i, 1, new Ni({
                                    id: 41,
                                    tag: t.tag,
                                    substitution: d
                                }));
                                break;
                            case "21":
                                (d = f(e.current)) && o.splice(i, 1, new Ni({
                                    id: 21,
                                    tag: t.tag,
                                    substitution: d
                                }))
                        }
                        e = new Li(o, i), Array.isArray(d) && !d.length || (d = null)
                    }
                return o.length ? o : null
            }, Ui.prototype.supports = function(t) {
                if (!t.script) return !1;
                this.getScriptFeatures(t.script);
                var e = this.features.hasOwnProperty(t.script);
                if (!t.tag) return e;
                var i = this.features[t.script].some((function(e) {
                    return e.tag === t.tag
                }));
                return e && i
            }, Ui.prototype.getLookupSubtables = function(t) {
                return t.subtables || null
            }, Ui.prototype.getLookupByIndex = function(t) {
                return this.font.tables.gsub.lookups[t] || null
            }, Ui.prototype.getFeatureLookups = function(t) {
                return t.lookupListIndexes.map(this.getLookupByIndex.bind(this))
            }, Ui.prototype.getFeature = function(t) {
                if (!this.font) return {
                    FAIL: "No font was found"
                };
                this.features.hasOwnProperty(t.script) || this.getScriptFeatures(t.script);
                var e = this.features[t.script];
                return e ? e.tags[t.tag] ? this.features[t.script].tags[t.tag] : null : {
                    FAIL: "No feature for script " + t.script
                }
            };
            var qi = {
                startCheck: function(t) {
                    var e = t.current,
                        i = t.get(-1);
                    return null === i && Ri(e) || !Ri(i) && Ri(e)
                },
                endCheck: function(t) {
                    var e = t.get(1);
                    return null === e || !Ri(e)
                }
            };
            var Zi = {
                startCheck: function(t) {
                    var e = t.current,
                        i = t.get(-1);
                    return (Ri(e) || ji(e)) && !Ri(i)
                },
                endCheck: function(t) {
                    var e = t.get(1);
                    switch (!0) {
                        case null === e:
                            return !0;
                        case !Ri(e) && !ji(e):
                            var i = /\s/.test(e);
                            if (!i) return !0;
                            if (i) {
                                var r;
                                if (r = t.lookahead.some((function(t) {
                                        return Ri(t) || ji(t)
                                    })), !r) return !0
                            }
                            break;
                        default:
                            return !1
                    }
                }
            };
            var Ki = {
                11: function(t, e, i) {
                    e[i].setState(t.tag, t.substitution)
                },
                12: function(t, e, i) {
                    e[i].setState(t.tag, t.substitution)
                },
                63: function(t, e, i) {
                    t.substitution.forEach((function(r, n) {
                        e[i + n].setState(t.tag, r)
                    }))
                },
                41: function(t, e, i) {
                    var r = e[i];
                    r.setState(t.tag, t.substitution.ligGlyph);
                    for (var n = t.substitution.components.length, o = 0; o < n; o++)(r = e[i + o + 1]).setState("deleted", !0)
                }
            };

            function Ji(t, e, i) {
                t instanceof Ni && Ki[t.id] && Ki[t.id](t, e, i)
            }

            function Qi(t) {
                var e = this,
                    i = "arab",
                    r = this.featuresTags.arab,
                    n = this.tokenizer.getRangeTokens(t);
                if (1 !== n.length) {
                    var o = new Li(n.map((function(t) {
                            return t.getState("glyphIndex")
                        })), 0),
                        a = new Li(n.map((function(t) {
                            return t.char
                        })), 0);
                    n.forEach((function(t, s) {
                        if (!ji(t.char)) {
                            o.setCurrentIndex(s), a.setCurrentIndex(s);
                            var l, h = 0;
                            switch (function(t) {
                                    for (var e = [].concat(t.backtrack), i = e.length - 1; i >= 0; i--) {
                                        var r = e[i],
                                            n = Fi(r),
                                            o = ji(r);
                                        if (!n && !o) return !0;
                                        if (n) return !1
                                    }
                                    return !1
                                }(a) && (h |= 1), function(t) {
                                    if (Fi(t.current)) return !1;
                                    for (var e = 0; e < t.lookahead.length; e++)
                                        if (!ji(t.lookahead[e])) return !0;
                                    return !1
                                }(a) && (h |= 2), h) {
                                case 1:
                                    l = "fina";
                                    break;
                                case 2:
                                    l = "init";
                                    break;
                                case 3:
                                    l = "medi"
                            }
                            if (-1 !== r.indexOf(l)) {
                                var c = e.query.lookupFeature({
                                    tag: l,
                                    script: i,
                                    contextParams: o
                                });
                                if (c instanceof Error) return console.info(c.message);
                                c.forEach((function(t, e) {
                                    t instanceof Ni && (Ji(t, n, e), o.context[e] = t.substitution)
                                }))
                            }
                        }
                    }))
                }
            }

            function $i(t, e) {
                return new Li(t.map((function(t) {
                    return t.activeState.value
                })), e || 0)
            }

            function tr(t) {
                var e = this,
                    i = this.tokenizer.getRangeTokens(t),
                    r = $i(i);
                r.context.forEach((function(t, n) {
                    r.setCurrentIndex(n);
                    var o = e.query.lookupFeature({
                        tag: "rlig",
                        script: "arab",
                        contextParams: r
                    });
                    o.length && (o.forEach((function(t) {
                        return Ji(t, i, n)
                    })), r = $i(i))
                }))
            }
            var er = {
                startCheck: function(t) {
                    var e = t.current,
                        i = t.get(-1);
                    return null === i && Bi(e) || !Bi(i) && Bi(e)
                },
                endCheck: function(t) {
                    var e = t.get(1);
                    return null === e || !Bi(e)
                }
            };

            function ir(t, e) {
                return new Li(t.map((function(t) {
                    return t.activeState.value
                })), e || 0)
            }

            function rr(t) {
                var e = this,
                    i = this.tokenizer.getRangeTokens(t),
                    r = ir(i);
                r.context.forEach((function(t, n) {
                    r.setCurrentIndex(n);
                    var o = e.query.lookupFeature({
                        tag: "liga",
                        script: "latn",
                        contextParams: r
                    });
                    o.length && (o.forEach((function(t) {
                        return Ji(t, i, n)
                    })), r = ir(i))
                }))
            }

            function nr(t) {
                this.baseDir = t || "ltr", this.tokenizer = new Di, this.featuresTags = {}
            }

            function or(t) {
                var e = this.contextChecks[t + "Check"];
                return this.tokenizer.registerContextChecker(t, e.startCheck, e.endCheck)
            }

            function ar() {
                return or.call(this, "latinWord"), or.call(this, "arabicWord"), or.call(this, "arabicSentence"), this.tokenizer.tokenize(this.text)
            }

            function sr() {
                var t = this;
                this.tokenizer.getContextRanges("arabicSentence").forEach((function(e) {
                    var i = t.tokenizer.getRangeTokens(e);
                    t.tokenizer.replaceRange(e.startIndex, e.endOffset, i.reverse())
                }))
            }

            function lr() {
                if (-1 === this.tokenizer.registeredModifiers.indexOf("glyphIndex")) throw new Error("glyphIndex modifier is required to apply arabic presentation features.")
            }

            function hr() {
                var t = this;
                this.featuresTags.hasOwnProperty("arab") && (lr.call(this), this.tokenizer.getContextRanges("arabicWord").forEach((function(e) {
                    Qi.call(t, e)
                })))
            }

            function cr() {
                var t = this,
                    e = "arab";
                this.featuresTags.hasOwnProperty(e) && (-1 !== this.featuresTags.arab.indexOf("rlig") && (lr.call(this), this.tokenizer.getContextRanges("arabicWord").forEach((function(e) {
                    tr.call(t, e)
                }))))
            }

            function ur() {
                var t = this,
                    e = "latn";
                this.featuresTags.hasOwnProperty(e) && (-1 !== this.featuresTags.latn.indexOf("liga") && (lr.call(this), this.tokenizer.getContextRanges("latinWord").forEach((function(e) {
                    rr.call(t, e)
                }))))
            }

            function fr(t) {
                (t = t || {}).tables = t.tables || {}, t.empty || (Le(t.familyName, "When creating a new Font object, familyName is required."), Le(t.styleName, "When creating a new Font object, styleName is required."), Le(t.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), Le(t.ascender, "When creating a new Font object, ascender is required."), Le(t.descender <= 0, "When creating a new Font object, negative descender value is required."), this.names = {
                    fontFamily: {
                        en: t.familyName || " "
                    },
                    fontSubfamily: {
                        en: t.styleName || " "
                    },
                    fullName: {
                        en: t.fullName || t.familyName + " " + t.styleName
                    },
                    postScriptName: {
                        en: t.postScriptName || (t.familyName + t.styleName).replace(/\s/g, "")
                    },
                    designer: {
                        en: t.designer || " "
                    },
                    designerURL: {
                        en: t.designerURL || " "
                    },
                    manufacturer: {
                        en: t.manufacturer || " "
                    },
                    manufacturerURL: {
                        en: t.manufacturerURL || " "
                    },
                    license: {
                        en: t.license || " "
                    },
                    licenseURL: {
                        en: t.licenseURL || " "
                    },
                    version: {
                        en: t.version || "Version 0.1"
                    },
                    description: {
                        en: t.description || " "
                    },
                    copyright: {
                        en: t.copyright || " "
                    },
                    trademark: {
                        en: t.trademark || " "
                    }
                }, this.unitsPerEm = t.unitsPerEm || 1e3, this.ascender = t.ascender, this.descender = t.descender, this.createdTimestamp = t.createdTimestamp, this.tables = Object.assign(t.tables, {
                    os2: Object.assign({
                        usWeightClass: t.weightClass || this.usWeightClasses.MEDIUM,
                        usWidthClass: t.widthClass || this.usWidthClasses.MEDIUM,
                        fsSelection: t.fsSelection || this.fsSelectionValues.REGULAR
                    }, t.tables.os2)
                })), this.supported = !0, this.glyphs = new St.GlyphSet(this, t.glyphs || []), this.encoding = new pt(this), this.position = new Ee(this), this.substitution = new ke(this), this.tables = this.tables || {}, this._push = null, this._hmtxTableData = {}, Object.defineProperty(this, "hinting", {
                    get: function() {
                        return this._hinting ? this._hinting : "truetype" === this.outlinesFormat ? this._hinting = new Xe(this) : void 0
                    }
                })
            }

            function dr(t, e) {
                var i = JSON.stringify(t),
                    r = 256;
                for (var n in e) {
                    var o = parseInt(n);
                    if (o && !(o < 256)) {
                        if (JSON.stringify(e[n]) === i) return o;
                        r <= o && (r = o + 1)
                    }
                }
                return e[r] = t, r
            }

            function pr(t, e, i) {
                var r = dr(e.name, i);
                return [{
                    name: "tag_" + t,
                    type: "TAG",
                    value: e.tag
                }, {
                    name: "minValue_" + t,
                    type: "FIXED",
                    value: e.minValue << 16
                }, {
                    name: "defaultValue_" + t,
                    type: "FIXED",
                    value: e.defaultValue << 16
                }, {
                    name: "maxValue_" + t,
                    type: "FIXED",
                    value: e.maxValue << 16
                }, {
                    name: "flags_" + t,
                    type: "USHORT",
                    value: 0
                }, {
                    name: "nameID_" + t,
                    type: "USHORT",
                    value: r
                }]
            }

            function gr(t, e, i) {
                var r = {},
                    n = new st.Parser(t, e);
                return r.tag = n.parseTag(), r.minValue = n.parseFixed(), r.defaultValue = n.parseFixed(), r.maxValue = n.parseFixed(), n.skip("uShort", 1), r.name = i[n.parseUShort()] || {}, r
            }

            function vr(t, e, i, r) {
                for (var n = [{
                        name: "nameID_" + t,
                        type: "USHORT",
                        value: dr(e.name, r)
                    }, {
                        name: "flags_" + t,
                        type: "USHORT",
                        value: 0
                    }], o = 0; o < i.length; ++o) {
                    var a = i[o].tag;
                    n.push({
                        name: "axis_" + t + " " + a,
                        type: "FIXED",
                        value: e.coordinates[a] << 16
                    })
                }
                return n
            }

            function mr(t, e, i, r) {
                var n = {},
                    o = new st.Parser(t, e);
                n.name = r[o.parseUShort()] || {}, o.skip("uShort", 1), n.coordinates = {};
                for (var a = 0; a < i.length; ++a) n.coordinates[i[a].tag] = o.parseFixed();
                return n
            }
            nr.prototype.setText = function(t) {
                this.text = t
            }, nr.prototype.contextChecks = {
                latinWordCheck: er,
                arabicWordCheck: qi,
                arabicSentenceCheck: Zi
            }, nr.prototype.registerFeatures = function(t, e) {
                var i = this,
                    r = e.filter((function(e) {
                        return i.query.supports({
                            script: t,
                            tag: e
                        })
                    }));
                this.featuresTags.hasOwnProperty(t) ? this.featuresTags[t] = this.featuresTags[t].concat(r) : this.featuresTags[t] = r
            }, nr.prototype.applyFeatures = function(t, e) {
                if (!t) throw new Error("No valid font was provided to apply features");
                this.query || (this.query = new Ui(t));
                for (var i = 0; i < e.length; i++) {
                    var r = e[i];
                    this.query.supports({
                        script: r.script
                    }) && this.registerFeatures(r.script, r.tags)
                }
            }, nr.prototype.registerModifier = function(t, e, i) {
                this.tokenizer.registerModifier(t, e, i)
            }, nr.prototype.checkContextReady = function(t) {
                return !!this.tokenizer.getContext(t)
            }, nr.prototype.applyFeaturesToContexts = function() {
                this.checkContextReady("arabicWord") && (hr.call(this), cr.call(this)), this.checkContextReady("latinWord") && ur.call(this), this.checkContextReady("arabicSentence") && sr.call(this)
            }, nr.prototype.processText = function(t) {
                this.text && this.text === t || (this.setText(t), ar.call(this), this.applyFeaturesToContexts())
            }, nr.prototype.getBidiText = function(t) {
                return this.processText(t), this.tokenizer.getText()
            }, nr.prototype.getTextGlyphs = function(t) {
                this.processText(t);
                for (var e = [], i = 0; i < this.tokenizer.tokens.length; i++) {
                    var r = this.tokenizer.tokens[i];
                    if (!r.state.deleted) {
                        var n = r.activeState.value;
                        e.push(Array.isArray(n) ? n[0] : n)
                    }
                }
                return e
            }, fr.prototype.hasChar = function(t) {
                return null !== this.encoding.charToGlyphIndex(t)
            }, fr.prototype.charToGlyphIndex = function(t) {
                return this.encoding.charToGlyphIndex(t)
            }, fr.prototype.charToGlyph = function(t) {
                var e = this.charToGlyphIndex(t),
                    i = this.glyphs.get(e);
                return i || (i = this.glyphs.get(0)), i
            }, fr.prototype.updateFeatures = function(t) {
                return this.defaultRenderOptions.features.map((function(e) {
                    return "latn" === e.script ? {
                        script: "latn",
                        tags: e.tags.filter((function(e) {
                            return t[e]
                        }))
                    } : e
                }))
            }, fr.prototype.stringToGlyphs = function(t, e) {
                var i = this,
                    r = new nr;
                r.registerModifier("glyphIndex", null, (function(t) {
                    return i.charToGlyphIndex(t.char)
                }));
                var n = e ? this.updateFeatures(e.features) : this.defaultRenderOptions.features;
                r.applyFeatures(this, n);
                for (var o = r.getTextGlyphs(t), a = o.length, s = new Array(a), l = this.glyphs.get(0), h = 0; h < a; h += 1) s[h] = this.glyphs.get(o[h]) || l;
                return s
            }, fr.prototype.nameToGlyphIndex = function(t) {
                return this.glyphNames.nameToGlyphIndex(t)
            }, fr.prototype.nameToGlyph = function(t) {
                var e = this.nameToGlyphIndex(t),
                    i = this.glyphs.get(e);
                return i || (i = this.glyphs.get(0)), i
            }, fr.prototype.glyphIndexToName = function(t) {
                return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(t) : ""
            }, fr.prototype.getKerningValue = function(t, e) {
                t = t.index || t, e = e.index || e;
                var i = this.position.defaultKerningTables;
                return i ? this.position.getKerningValue(i, t, e) : this.kerningPairs[t + "," + e] || 0
            }, fr.prototype.defaultRenderOptions = {
                kerning: !0,
                features: [{
                    script: "arab",
                    tags: ["init", "medi", "fina", "rlig"]
                }, {
                    script: "latn",
                    tags: ["liga", "rlig"]
                }]
            }, fr.prototype.forEachGlyph = function(t, e, i, r, n, o) {
                e = void 0 !== e ? e : 0, i = void 0 !== i ? i : 0, r = void 0 !== r ? r : 72, n = Object.assign({}, this.defaultRenderOptions, n);
                var a, s = 1 / this.unitsPerEm * r,
                    l = this.stringToGlyphs(t, n);
                if (n.kerning) {
                    var h = n.script || this.position.getDefaultScriptName();
                    a = this.position.getKerningTables(h, n.language)
                }
                for (var c = 0; c < l.length; c += 1) {
                    var u = l[c];
                    if (o.call(this, u, e, i, r, n), u.advanceWidth && (e += u.advanceWidth * s), n.kerning && c < l.length - 1) e += (a ? this.position.getKerningValue(a, u.index, l[c + 1].index) : this.getKerningValue(u, l[c + 1])) * s;
                    n.letterSpacing ? e += n.letterSpacing * r : n.tracking && (e += n.tracking / 1e3 * r)
                }
                return e
            }, fr.prototype.getPath = function(t, e, i, r, n) {
                var o = new O;
                return this.forEachGlyph(t, e, i, r, n, (function(t, e, i, r) {
                    var a = t.getPath(e, i, r, n, this);
                    o.extend(a)
                })), o
            }, fr.prototype.getPaths = function(t, e, i, r, n) {
                var o = [];
                return this.forEachGlyph(t, e, i, r, n, (function(t, e, i, r) {
                    var a = t.getPath(e, i, r, n, this);
                    o.push(a)
                })), o
            }, fr.prototype.getAdvanceWidth = function(t, e, i) {
                return this.forEachGlyph(t, 0, 0, e, i, (function() {}))
            }, fr.prototype.draw = function(t, e, i, r, n, o) {
                this.getPath(e, i, r, n, o).draw(t)
            }, fr.prototype.drawPoints = function(t, e, i, r, n, o) {
                this.forEachGlyph(e, i, r, n, o, (function(e, i, r, n) {
                    e.drawPoints(t, i, r, n)
                }))
            }, fr.prototype.drawMetrics = function(t, e, i, r, n, o) {
                this.forEachGlyph(e, i, r, n, o, (function(e, i, r, n) {
                    e.drawMetrics(t, i, r, n)
                }))
            }, fr.prototype.getEnglishName = function(t) {
                var e = this.names[t];
                if (e) return e.en
            }, fr.prototype.validate = function() {
                var t = this;

                function e(e) {
                    var i = t.getEnglishName(e);
                    i && i.trim().length
                }
                e("fontFamily"), e("weightName"), e("manufacturer"), e("copyright"), e("version"), this.unitsPerEm
            }, fr.prototype.toTables = function() {
                return _e.fontToTable(this)
            }, fr.prototype.toBuffer = function() {
                return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer()
            }, fr.prototype.toArrayBuffer = function() {
                for (var t = this.toTables().encode(), e = new ArrayBuffer(t.length), i = new Uint8Array(e), r = 0; r < t.length; r++) i[r] = t[r];
                return e
            }, fr.prototype.download = function(t) {
                var e = this.getEnglishName("fontFamily"),
                    r = this.getEnglishName("fontSubfamily");
                t = t || e.replace(/\s/g, "") + "-" + r + ".otf";
                var n = this.toArrayBuffer();
                if ("undefined" != typeof window)
                    if (window.URL = window.URL || window.webkitURL, window.URL) {
                        var o = new DataView(n),
                            a = new Blob([o], {
                                type: "font/opentype"
                            }),
                            s = document.createElement("a");
                        s.href = window.URL.createObjectURL(a), s.download = t;
                        var l = document.createEvent("MouseEvents");
                        l.initEvent("click", !0, !1), s.dispatchEvent(l)
                    } else console.warn("Font file could not be downloaded. Try using a different browser.");
                else {
                    var h = i(46102),
                        c = function(t) {
                            for (var e = new Buffer(t.byteLength), i = new Uint8Array(t), r = 0; r < e.length; ++r) e[r] = i[r];
                            return e
                        }(n);
                    h.writeFileSync(t, c)
                }
            }, fr.prototype.fsSelectionValues = {
                ITALIC: 1,
                UNDERSCORE: 2,
                NEGATIVE: 4,
                OUTLINED: 8,
                STRIKEOUT: 16,
                BOLD: 32,
                REGULAR: 64,
                USER_TYPO_METRICS: 128,
                WWS: 256,
                OBLIQUE: 512
            }, fr.prototype.usWidthClasses = {
                ULTRA_CONDENSED: 1,
                EXTRA_CONDENSED: 2,
                CONDENSED: 3,
                SEMI_CONDENSED: 4,
                MEDIUM: 5,
                SEMI_EXPANDED: 6,
                EXPANDED: 7,
                EXTRA_EXPANDED: 8,
                ULTRA_EXPANDED: 9
            }, fr.prototype.usWeightClasses = {
                THIN: 100,
                EXTRA_LIGHT: 200,
                LIGHT: 300,
                NORMAL: 400,
                MEDIUM: 500,
                SEMI_BOLD: 600,
                BOLD: 700,
                EXTRA_BOLD: 800,
                BLACK: 900
            };
            var yr = {
                    make: function(t, e) {
                        var i = new $.Table("fvar", [{
                            name: "version",
                            type: "ULONG",
                            value: 65536
                        }, {
                            name: "offsetToData",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "countSizePairs",
                            type: "USHORT",
                            value: 2
                        }, {
                            name: "axisCount",
                            type: "USHORT",
                            value: t.axes.length
                        }, {
                            name: "axisSize",
                            type: "USHORT",
                            value: 20
                        }, {
                            name: "instanceCount",
                            type: "USHORT",
                            value: t.instances.length
                        }, {
                            name: "instanceSize",
                            type: "USHORT",
                            value: 4 + 4 * t.axes.length
                        }]);
                        i.offsetToData = i.sizeOf();
                        for (var r = 0; r < t.axes.length; r++) i.fields = i.fields.concat(pr(r, t.axes[r], e));
                        for (var n = 0; n < t.instances.length; n++) i.fields = i.fields.concat(vr(n, t.instances[n], t.axes, e));
                        return i
                    },
                    parse: function(t, e, i) {
                        var r = new st.Parser(t, e),
                            n = r.parseULong();
                        L.argument(65536 === n, "Unsupported fvar table version.");
                        var o = r.parseOffset16();
                        r.skip("uShort", 1);
                        for (var a = r.parseUShort(), s = r.parseUShort(), l = r.parseUShort(), h = r.parseUShort(), c = [], u = 0; u < a; u++) c.push(gr(t, e + o + u * s, i));
                        for (var f = [], d = e + o + a * s, p = 0; p < l; p++) f.push(mr(t, d + p * h, c, i));
                        return {
                            axes: c,
                            instances: f
                        }
                    }
                },
                br = function() {
                    return {
                        coverage: this.parsePointer(ot.coverage),
                        attachPoints: this.parseList(ot.pointer(ot.uShortList))
                    }
                },
                xr = function() {
                    var t = this.parseUShort();
                    return L.argument(1 === t || 2 === t || 3 === t, "Unsupported CaretValue table version."), 1 === t ? {
                        coordinate: this.parseShort()
                    } : 2 === t ? {
                        pointindex: this.parseShort()
                    } : 3 === t ? {
                        coordinate: this.parseShort()
                    } : void 0
                },
                _r = function() {
                    return this.parseList(ot.pointer(xr))
                },
                wr = function() {
                    return {
                        coverage: this.parsePointer(ot.coverage),
                        ligGlyphs: this.parseList(ot.pointer(_r))
                    }
                },
                Sr = function() {
                    return this.parseUShort(), this.parseList(ot.pointer(ot.coverage))
                };
            var Cr = {
                    parse: function(t, e) {
                        var i = new ot(t, e = e || 0),
                            r = i.parseVersion(1);
                        L.argument(1 === r || 1.2 === r || 1.3 === r, "Unsupported GDEF table version.");
                        var n = {
                            version: r,
                            classDef: i.parsePointer(ot.classDef),
                            attachList: i.parsePointer(br),
                            ligCaretList: i.parsePointer(wr),
                            markAttachClassDef: i.parsePointer(ot.classDef)
                        };
                        return r >= 1.2 && (n.markGlyphSets = i.parsePointer(Sr)), n
                    }
                },
                Tr = new Array(10);
            Tr[1] = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                return 1 === e ? {
                    posFormat: 1,
                    coverage: this.parsePointer(ot.coverage),
                    value: this.parseValueRecord()
                } : 2 === e ? {
                    posFormat: 2,
                    coverage: this.parsePointer(ot.coverage),
                    values: this.parseValueRecordList()
                } : void L.assert(!1, "0x" + t.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.")
            }, Tr[2] = function() {
                var t = this.offset + this.relativeOffset,
                    e = this.parseUShort();
                L.assert(1 === e || 2 === e, "0x" + t.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
                var i = this.parsePointer(ot.coverage),
                    r = this.parseUShort(),
                    n = this.parseUShort();
                if (1 === e) return {
                    posFormat: e,
                    coverage: i,
                    valueFormat1: r,
                    valueFormat2: n,
                    pairSets: this.parseList(ot.pointer(ot.list((function() {
                        return {
                            secondGlyph: this.parseUShort(),
                            value1: this.parseValueRecord(r),
                            value2: this.parseValueRecord(n)
                        }
                    }))))
                };
                if (2 === e) {
                    var o = this.parsePointer(ot.classDef),
                        a = this.parsePointer(ot.classDef),
                        s = this.parseUShort(),
                        l = this.parseUShort();
                    return {
                        posFormat: e,
                        coverage: i,
                        valueFormat1: r,
                        valueFormat2: n,
                        classDef1: o,
                        classDef2: a,
                        class1Count: s,
                        class2Count: l,
                        classRecords: this.parseList(s, ot.list(l, (function() {
                            return {
                                value1: this.parseValueRecord(r),
                                value2: this.parseValueRecord(n)
                            }
                        })))
                    }
                }
            }, Tr[3] = function() {
                return {
                    error: "GPOS Lookup 3 not supported"
                }
            }, Tr[4] = function() {
                return {
                    error: "GPOS Lookup 4 not supported"
                }
            }, Tr[5] = function() {
                return {
                    error: "GPOS Lookup 5 not supported"
                }
            }, Tr[6] = function() {
                return {
                    error: "GPOS Lookup 6 not supported"
                }
            }, Tr[7] = function() {
                return {
                    error: "GPOS Lookup 7 not supported"
                }
            }, Tr[8] = function() {
                return {
                    error: "GPOS Lookup 8 not supported"
                }
            }, Tr[9] = function() {
                return {
                    error: "GPOS Lookup 9 not supported"
                }
            };
            var Er = new Array(10);
            var kr = {
                parse: function(t, e) {
                    var i = new ot(t, e = e || 0),
                        r = i.parseVersion(1);
                    return L.argument(1 === r || 1.1 === r, "Unsupported GPOS table version " + r), 1 === r ? {
                        version: r,
                        scripts: i.parseScriptList(),
                        features: i.parseFeatureList(),
                        lookups: i.parseLookupList(Tr)
                    } : {
                        version: r,
                        scripts: i.parseScriptList(),
                        features: i.parseFeatureList(),
                        lookups: i.parseLookupList(Tr),
                        variations: i.parseFeatureVariationsList()
                    }
                },
                make: function(t) {
                    return new $.Table("GPOS", [{
                        name: "version",
                        type: "ULONG",
                        value: 65536
                    }, {
                        name: "scripts",
                        type: "TABLE",
                        value: new $.ScriptList(t.scripts)
                    }, {
                        name: "features",
                        type: "TABLE",
                        value: new $.FeatureList(t.features)
                    }, {
                        name: "lookups",
                        type: "TABLE",
                        value: new $.LookupList(t.lookups, Er)
                    }])
                }
            };
            var Or = {
                parse: function(t, e) {
                    var i = new st.Parser(t, e),
                        r = i.parseUShort();
                    if (0 === r) return function(t) {
                        var e = {};
                        t.skip("uShort");
                        var i = t.parseUShort();
                        L.argument(0 === i, "Unsupported kern sub-table version."), t.skip("uShort", 2);
                        var r = t.parseUShort();
                        t.skip("uShort", 3);
                        for (var n = 0; n < r; n += 1) {
                            var o = t.parseUShort(),
                                a = t.parseUShort(),
                                s = t.parseShort();
                            e[o + "," + a] = s
                        }
                        return e
                    }(i);
                    if (1 === r) return function(t) {
                        var e = {};
                        t.skip("uShort"), t.parseULong() > 1 && console.warn("Only the first kern subtable is supported."), t.skip("uLong");
                        var i = 255 & t.parseUShort();
                        if (t.skip("uShort"), 0 === i) {
                            var r = t.parseUShort();
                            t.skip("uShort", 3);
                            for (var n = 0; n < r; n += 1) {
                                var o = t.parseUShort(),
                                    a = t.parseUShort(),
                                    s = t.parseShort();
                                e[o + "," + a] = s
                            }
                        }
                        return e
                    }(i);
                    throw new Error("Unsupported kern table version (" + r + ").")
                }
            };
            var Ir = {
                parse: function(t, e, i, r) {
                    for (var n = new st.Parser(t, e), o = r ? n.parseUShort : n.parseULong, a = [], s = 0; s < i + 1; s += 1) {
                        var l = o.call(n);
                        r && (l *= 2), a.push(l)
                    }
                    return a
                }
            };

            function Pr(t, e) {
                i(46102).readFile(t, (function(t, i) {
                    if (t) return e(t.message);
                    e(null, Pe(i))
                }))
            }

            function Lr(t, e) {
                var i = new XMLHttpRequest;
                i.open("get", t, !0), i.responseType = "arraybuffer", i.onload = function() {
                    return i.response ? e(null, i.response) : e("Font could not be loaded: " + i.statusText)
                }, i.onerror = function() {
                    e("Font could not be loaded")
                }, i.send()
            }

            function Mr(t, e) {
                for (var i = [], r = 12, n = 0; n < e; n += 1) {
                    var o = st.getTag(t, r),
                        a = st.getULong(t, r + 4),
                        s = st.getULong(t, r + 8),
                        l = st.getULong(t, r + 12);
                    i.push({
                        tag: o,
                        checksum: a,
                        offset: s,
                        length: l,
                        compression: !1
                    }), r += 16
                }
                return i
            }

            function Ar(t, e) {
                if ("WOFF" === e.compression) {
                    var i = new Uint8Array(t.buffer, e.offset + 2, e.compressedLength - 2),
                        r = new Uint8Array(e.length);
                    if (T(i, r), r.byteLength !== e.length) throw new Error("Decompression error: " + e.tag + " decompressed length doesn't match recorded length");
                    return {
                        data: new DataView(r.buffer, 0),
                        offset: 0
                    }
                }
                return {
                    data: t,
                    offset: e.offset
                }
            }

            function Dr(t, e) {
                var i, r;
                e = null == e ? {} : e;
                var n, o, a, s, l, h, c, u, f, d, p, g, v, m = new fr({
                        empty: !0
                    }),
                    y = new DataView(t, 0),
                    b = [],
                    x = st.getTag(y, 0);
                if (x === String.fromCharCode(0, 1, 0, 0) || "true" === x || "typ1" === x) m.outlinesFormat = "truetype", b = Mr(y, n = st.getUShort(y, 4));
                else if ("OTTO" === x) m.outlinesFormat = "cff", b = Mr(y, n = st.getUShort(y, 4));
                else {
                    if ("wOFF" !== x) throw new Error("Unsupported OpenType signature " + x);
                    var _ = st.getTag(y, 4);
                    if (_ === String.fromCharCode(0, 1, 0, 0)) m.outlinesFormat = "truetype";
                    else {
                        if ("OTTO" !== _) throw new Error("Unsupported OpenType flavor " + x);
                        m.outlinesFormat = "cff"
                    }
                    b = function(t, e) {
                        for (var i = [], r = 44, n = 0; n < e; n += 1) {
                            var o = st.getTag(t, r),
                                a = st.getULong(t, r + 4),
                                s = st.getULong(t, r + 8),
                                l = st.getULong(t, r + 12),
                                h = void 0;
                            h = s < l && "WOFF", i.push({
                                tag: o,
                                offset: a,
                                compression: h,
                                compressedLength: s,
                                length: l
                            }), r += 20
                        }
                        return i
                    }(y, n = st.getUShort(y, 12))
                }
                for (var w = 0; w < n; w += 1) {
                    var S = b[w],
                        C = void 0;
                    switch (S.tag) {
                        case "cmap":
                            C = Ar(y, S), m.tables.cmap = ht.parse(C.data, C.offset), m.encoding = new gt(m.tables.cmap);
                            break;
                        case "cvt ":
                            C = Ar(y, S), v = new st.Parser(C.data, C.offset), m.tables.cvt = v.parseShortList(S.length / 2);
                            break;
                        case "fvar":
                            a = S;
                            break;
                        case "fpgm":
                            C = Ar(y, S), v = new st.Parser(C.data, C.offset), m.tables.fpgm = v.parseByteList(S.length);
                            break;
                        case "head":
                            C = Ar(y, S), m.tables.head = zt.parse(C.data, C.offset), m.unitsPerEm = m.tables.head.unitsPerEm, i = m.tables.head.indexToLocFormat;
                            break;
                        case "hhea":
                            C = Ar(y, S), m.tables.hhea = Wt.parse(C.data, C.offset), m.ascender = m.tables.hhea.ascender, m.descender = m.tables.hhea.descender, m.numberOfHMetrics = m.tables.hhea.numberOfHMetrics;
                            break;
                        case "hmtx":
                            u = S;
                            break;
                        case "ltag":
                            C = Ar(y, S), r = Yt.parse(C.data, C.offset);
                            break;
                        case "maxp":
                            C = Ar(y, S), m.tables.maxp = Vt.parse(C.data, C.offset), m.numGlyphs = m.tables.maxp.numGlyphs;
                            break;
                        case "name":
                            p = S;
                            break;
                        case "OS/2":
                            C = Ar(y, S), m.tables.os2 = le.parse(C.data, C.offset);
                            break;
                        case "post":
                            C = Ar(y, S), m.tables.post = he.parse(C.data, C.offset), m.glyphNames = new mt(m.tables.post);
                            break;
                        case "prep":
                            C = Ar(y, S), v = new st.Parser(C.data, C.offset), m.tables.prep = v.parseByteList(S.length);
                            break;
                        case "glyf":
                            s = S;
                            break;
                        case "loca":
                            d = S;
                            break;
                        case "CFF ":
                            o = S;
                            break;
                        case "kern":
                            f = S;
                            break;
                        case "GDEF":
                            l = S;
                            break;
                        case "GPOS":
                            h = S;
                            break;
                        case "GSUB":
                            c = S;
                            break;
                        case "meta":
                            g = S
                    }
                }
                var T = Ar(y, p);
                if (m.tables.name = ae.parse(T.data, T.offset, r), m.names = m.tables.name, s && d) {
                    var E = 0 === i,
                        k = Ar(y, d),
                        O = Ir.parse(k.data, k.offset, m.numGlyphs, E),
                        I = Ar(y, s);
                    m.glyphs = Ge.parse(I.data, I.offset, O, m, e)
                } else {
                    if (!o) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                    var P = Ar(y, o);
                    Xt.parse(P.data, P.offset, m, e)
                }
                var L = Ar(y, u);
                if (Ht.parse(m, L.data, L.offset, m.numberOfHMetrics, m.numGlyphs, m.glyphs, e), yt(m, e), f) {
                    var M = Ar(y, f);
                    m.kerningPairs = Or.parse(M.data, M.offset)
                } else m.kerningPairs = {};
                if (l) {
                    var A = Ar(y, l);
                    m.tables.gdef = Cr.parse(A.data, A.offset)
                }
                if (h) {
                    var D = Ar(y, h);
                    m.tables.gpos = kr.parse(D.data, D.offset), m.position.init()
                }
                if (c) {
                    var R = Ar(y, c);
                    m.tables.gsub = de.parse(R.data, R.offset)
                }
                if (a) {
                    var F = Ar(y, a);
                    m.tables.fvar = yr.parse(F.data, F.offset, m.names)
                }
                if (g) {
                    var j = Ar(y, g);
                    m.tables.meta = pe.parse(j.data, j.offset), m.metas = m.tables.meta
                }
                return m
            }

            function Rr(t, e, i) {
                i = null == i ? {} : i;
                var r = "undefined" == typeof window && !i.isUrl ? Pr : Lr;
                return new Promise((function(n, o) {
                    r(t, (function(t, r) {
                        if (t) {
                            if (e) return e(t);
                            o(t)
                        }
                        var a;
                        try {
                            a = Dr(r, i)
                        } catch (t) {
                            if (e) return e(t, null);
                            o(t)
                        }
                        if (e) return e(null, a);
                        n(a)
                    }))
                }))
            }

            function Fr(t, e) {
                return Dr(Pe(i(46102).readFileSync(t)), e)
            }
            var jr = Object.freeze({
                __proto__: null,
                Font: fr,
                Glyph: xt,
                Path: O,
                BoundingBox: k,
                _parse: st,
                parse: Dr,
                load: Rr,
                loadSync: Fr
            });
            e.default = jr
        },
        67079: t => {
            window,
            t.exports = function(t) {
                var e = {};

                function i(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, i), n.l = !0, n.exports
                }
                return i.m = t, i.c = e, i.d = function(t, e, r) {
                    i.o(t, e) || Object.defineProperty(t, e, {
                        enumerable: !0,
                        get: r
                    })
                }, i.r = function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(t, "__esModule", {
                        value: !0
                    })
                }, i.t = function(t, e) {
                    if (1 & e && (t = i(t)), 8 & e) return t;
                    if (4 & e && "object" == typeof t && t && t.__esModule) return t;
                    var r = Object.create(null);
                    if (i.r(r), Object.defineProperty(r, "default", {
                            enumerable: !0,
                            value: t
                        }), 2 & e && "string" != typeof t)
                        for (var n in t) i.d(r, n, function(e) {
                            return t[e]
                        }.bind(null, n));
                    return r
                }, i.n = function(t) {
                    var e = t && t.__esModule ? function() {
                        return t.default
                    } : function() {
                        return t
                    };
                    return i.d(e, "a", e), e
                }, i.o = function(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, i.p = "", i(i.s = 1)
            }([function(t, e, i) {
                var r, n;
                r = [i(2)], void 0 === (n = function(t) {
                    function e(r) {
                        if (e.is(r, "function")) return i ? r() : t.on("raphael.DOMload", r);
                        if (e.is(r, P)) return e._engine.create[d](e, r.splice(0, 3 + e.is(r[0], I))).add(r);
                        var n = Array.prototype.slice.call(arguments, 0);
                        if (e.is(n[n.length - 1], "function")) {
                            var o = n.pop();
                            return i ? o.call(e._engine.create[d](e, n)) : t.on("raphael.DOMload", (function() {
                                o.call(e._engine.create[d](e, n))
                            }))
                        }
                        return e._engine.create[d](e, arguments)
                    }
                    e.version = "2.3.0", e.eve = t;
                    var i, r, n, o, a = /[, ]+/,
                        s = {
                            circle: 1,
                            rect: 1,
                            path: 1,
                            ellipse: 1,
                            text: 1,
                            image: 1
                        },
                        l = /\{(\d+)\}/g,
                        h = "hasOwnProperty",
                        c = {
                            doc: document,
                            win: window
                        },
                        u = {
                            was: Object.prototype[h].call(c.win, "Raphael"),
                            is: c.win.Raphael
                        },
                        f = function() {
                            this.ca = this.customAttributes = {}
                        },
                        d = "apply",
                        p = "concat",
                        g = "ontouchstart" in window || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch,
                        v = "",
                        m = " ",
                        y = String,
                        b = "split",
                        x = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel" [b](m),
                        _ = {
                            mousedown: "touchstart",
                            mousemove: "touchmove",
                            mouseup: "touchend"
                        },
                        w = y.prototype.toLowerCase,
                        S = Math,
                        C = S.max,
                        T = S.min,
                        E = S.abs,
                        k = S.pow,
                        O = S.PI,
                        I = "number",
                        P = "array",
                        L = Object.prototype.toString,
                        M = (e._ISURL = /^url\(['"]?(.+?)['"]?\)$/i, /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i),
                        A = {
                            NaN: 1,
                            Infinity: 1,
                            "-Infinity": 1
                        },
                        D = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,
                        R = S.round,
                        F = parseFloat,
                        j = parseInt,
                        B = y.prototype.toUpperCase,
                        U = e._availableAttrs = {
                            "arrow-end": "none",
                            "arrow-start": "none",
                            blur: 0,
                            "clip-rect": "0 0 1e9 1e9",
                            cursor: "default",
                            cx: 0,
                            cy: 0,
                            fill: "#fff",
                            "fill-opacity": 1,
                            font: '10px "Arial"',
                            "font-family": '"Arial"',
                            "font-size": "10",
                            "font-style": "normal",
                            "font-weight": 400,
                            gradient: 0,
                            height: 0,
                            href: "http://raphaeljs.com/",
                            "letter-spacing": 0,
                            opacity: 1,
                            path: "M0,0",
                            r: 0,
                            rx: 0,
                            ry: 0,
                            src: "",
                            stroke: "#000",
                            "stroke-dasharray": "",
                            "stroke-linecap": "butt",
                            "stroke-linejoin": "butt",
                            "stroke-miterlimit": 0,
                            "stroke-opacity": 1,
                            "stroke-width": 1,
                            target: "_blank",
                            "text-anchor": "middle",
                            title: "Raphael",
                            transform: "",
                            width: 0,
                            x: 0,
                            y: 0,
                            class: ""
                        },
                        N = e._availableAnimAttrs = {
                            blur: I,
                            "clip-rect": "csv",
                            cx: I,
                            cy: I,
                            fill: "colour",
                            "fill-opacity": I,
                            "font-size": I,
                            height: I,
                            opacity: I,
                            path: "path",
                            r: I,
                            rx: I,
                            ry: I,
                            stroke: "colour",
                            "stroke-opacity": I,
                            "stroke-width": I,
                            transform: "transform",
                            width: I,
                            x: I,
                            y: I
                        },
                        G = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,
                        X = {
                            hs: 1,
                            rg: 1
                        },
                        z = /,?([achlmqrstvxz]),?/gi,
                        W = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,
                        H = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,
                        Y = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,
                        V = (e._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/, {}),
                        q = function(t, e) {
                            return F(t) - F(e)
                        },
                        Z = function(t) {
                            return t
                        },
                        K = e._rectPath = function(t, e, i, r, n) {
                            return n ? [
                                ["M", t + n, e],
                                ["l", i - 2 * n, 0],
                                ["a", n, n, 0, 0, 1, n, n],
                                ["l", 0, r - 2 * n],
                                ["a", n, n, 0, 0, 1, -n, n],
                                ["l", 2 * n - i, 0],
                                ["a", n, n, 0, 0, 1, -n, -n],
                                ["l", 0, 2 * n - r],
                                ["a", n, n, 0, 0, 1, n, -n],
                                ["z"]
                            ] : [
                                ["M", t, e],
                                ["l", i, 0],
                                ["l", 0, r],
                                ["l", -i, 0],
                                ["z"]
                            ]
                        },
                        J = function(t, e, i, r) {
                            return null == r && (r = i), [
                                ["M", t, e],
                                ["m", 0, -r],
                                ["a", i, r, 0, 1, 1, 0, 2 * r],
                                ["a", i, r, 0, 1, 1, 0, -2 * r],
                                ["z"]
                            ]
                        },
                        Q = e._getPath = {
                            path: function(t) {
                                return t.attr("path")
                            },
                            circle: function(t) {
                                var e = t.attrs;
                                return J(e.cx, e.cy, e.r)
                            },
                            ellipse: function(t) {
                                var e = t.attrs;
                                return J(e.cx, e.cy, e.rx, e.ry)
                            },
                            rect: function(t) {
                                var e = t.attrs;
                                return K(e.x, e.y, e.width, e.height, e.r)
                            },
                            image: function(t) {
                                var e = t.attrs;
                                return K(e.x, e.y, e.width, e.height)
                            },
                            text: function(t) {
                                var e = t._getBBox();
                                return K(e.x, e.y, e.width, e.height)
                            },
                            set: function(t) {
                                var e = t._getBBox();
                                return K(e.x, e.y, e.width, e.height)
                            }
                        },
                        $ = e.mapPath = function(t, e) {
                            if (!e) return t;
                            var i, r, n, o, a, s, l;
                            for (n = 0, a = (t = kt(t)).length; n < a; n++)
                                for (o = 1, s = (l = t[n]).length; o < s; o += 2) i = e.x(l[o], l[o + 1]), r = e.y(l[o], l[o + 1]), l[o] = i, l[o + 1] = r;
                            return t
                        };
                    if (e._g = c, e.type = c.win.SVGAngle || c.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML", "VML" == e.type) {
                        var tt, et = c.doc.createElement("div");
                        if (et.innerHTML = '<v:shape adj="1"/>', (tt = et.firstChild).style.behavior = "url(#default#VML)", !tt || "object" != typeof tt.adj) return e.type = v;
                        et = null
                    }

                    function it(t) {
                        if ("function" == typeof t || Object(t) !== t) return t;
                        var e = new t.constructor;
                        for (var i in t) t[h](i) && (e[i] = it(t[i]));
                        return e
                    }
                    e.svg = !(e.vml = "VML" == e.type), e._Paper = f, e.fn = r = f.prototype = e.prototype, e._id = 0, e.is = function(t, e) {
                        return "finite" == (e = w.call(e)) ? !A[h](+t) : "array" == e ? t instanceof Array : "null" == e && null === t || e == typeof t && null !== t || "object" == e && t === Object(t) || "array" == e && Array.isArray && Array.isArray(t) || L.call(t).slice(8, -1).toLowerCase() == e
                    }, e.angle = function(t, i, r, n, o, a) {
                        if (null == o) {
                            var s = t - r,
                                l = i - n;
                            return s || l ? (180 + 180 * S.atan2(-l, -s) / O + 360) % 360 : 0
                        }
                        return e.angle(t, i, o, a) - e.angle(r, n, o, a)
                    }, e.rad = function(t) {
                        return t % 360 * O / 180
                    }, e.deg = function(t) {
                        return Math.round(180 * t / O % 360 * 1e3) / 1e3
                    }, e.snapTo = function(t, i, r) {
                        if (r = e.is(r, "finite") ? r : 10, e.is(t, P)) {
                            for (var n = t.length; n--;)
                                if (E(t[n] - i) <= r) return t[n]
                        } else {
                            var o = i % (t = +t);
                            if (o < r) return i - o;
                            if (o > t - r) return i - o + t
                        }
                        return i
                    }, e.createUUID = (n = /[xy]/g, o = function(t) {
                        var e = 16 * S.random() | 0;
                        return ("x" == t ? e : 3 & e | 8).toString(16)
                    }, function() {
                        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(n, o).toUpperCase()
                    }), e.setWindow = function(i) {
                        t("raphael.setWindow", e, c.win, i), c.win = i, c.doc = c.win.document, e._engine.initWin && e._engine.initWin(c.win)
                    };
                    var rt = function(t) {
                            if (e.vml) {
                                var i, r = /^\s+|\s+$/g;
                                try {
                                    var n = new ActiveXObject("htmlfile");
                                    n.write("<body>"), n.close(), i = n.body
                                } catch (t) {
                                    i = createPopup().document.body
                                }
                                var o = i.createTextRange();
                                rt = ht((function(t) {
                                    try {
                                        i.style.color = y(t).replace(r, v);
                                        var e = o.queryCommandValue("ForeColor");
                                        return "#" + ("000000" + (e = (255 & e) << 16 | 65280 & e | (16711680 & e) >>> 16).toString(16)).slice(-6)
                                    } catch (t) {
                                        return "none"
                                    }
                                }))
                            } else {
                                var a = c.doc.createElement("i");
                                a.title = "RaphaÃ«l Colour Picker", a.style.display = "none", c.doc.body.appendChild(a), rt = ht((function(t) {
                                    return a.style.color = t, c.doc.defaultView.getComputedStyle(a, v).getPropertyValue("color")
                                }))
                            }
                            return rt(t)
                        },
                        nt = function() {
                            return "hsb(" + [this.h, this.s, this.b] + ")"
                        },
                        ot = function() {
                            return "hsl(" + [this.h, this.s, this.l] + ")"
                        },
                        at = function() {
                            return this.hex
                        },
                        st = function(t, i, r) {
                            if (null == i && e.is(t, "object") && "r" in t && "g" in t && "b" in t && (r = t.b, i = t.g, t = t.r), null == i && e.is(t, "string")) {
                                var n = e.getRGB(t);
                                t = n.r, i = n.g, r = n.b
                            }
                            return (t > 1 || i > 1 || r > 1) && (t /= 255, i /= 255, r /= 255), [t, i, r]
                        },
                        lt = function(t, i, r, n) {
                            var o = {
                                r: t *= 255,
                                g: i *= 255,
                                b: r *= 255,
                                hex: e.rgb(t, i, r),
                                toString: at
                            };
                            return e.is(n, "finite") && (o.opacity = n), o
                        };

                    function ht(t, e, i) {
                        return function r() {
                            var n = Array.prototype.slice.call(arguments, 0),
                                o = n.join("â€"),
                                a = r.cache = r.cache || {},
                                s = r.count = r.count || [];
                            return a[h](o) ? (function(t, e) {
                                for (var i = 0, r = t.length; i < r; i++)
                                    if (t[i] === e) return t.push(t.splice(i, 1)[0])
                            }(s, o), i ? i(a[o]) : a[o]) : (s.length >= 1e3 && delete a[s.shift()], s.push(o), a[o] = t[d](e, n), i ? i(a[o]) : a[o])
                        }
                    }

                    function ct() {
                        return this.hex
                    }

                    function ut(t, e) {
                        for (var i = [], r = 0, n = t.length; n - 2 * !e > r; r += 2) {
                            var o = [{
                                x: +t[r - 2],
                                y: +t[r - 1]
                            }, {
                                x: +t[r],
                                y: +t[r + 1]
                            }, {
                                x: +t[r + 2],
                                y: +t[r + 3]
                            }, {
                                x: +t[r + 4],
                                y: +t[r + 5]
                            }];
                            e ? r ? n - 4 == r ? o[3] = {
                                x: +t[0],
                                y: +t[1]
                            } : n - 2 == r && (o[2] = {
                                x: +t[0],
                                y: +t[1]
                            }, o[3] = {
                                x: +t[2],
                                y: +t[3]
                            }) : o[0] = {
                                x: +t[n - 2],
                                y: +t[n - 1]
                            } : n - 4 == r ? o[3] = o[2] : r || (o[0] = {
                                x: +t[r],
                                y: +t[r + 1]
                            }), i.push(["C", (-o[0].x + 6 * o[1].x + o[2].x) / 6, (-o[0].y + 6 * o[1].y + o[2].y) / 6, (o[1].x + 6 * o[2].x - o[3].x) / 6, (o[1].y + 6 * o[2].y - o[3].y) / 6, o[2].x, o[2].y])
                        }
                        return i
                    }
                    e.color = function(t) {
                        var i;
                        return e.is(t, "object") && "h" in t && "s" in t && "b" in t ? (i = e.hsb2rgb(t), t.r = i.r, t.g = i.g, t.b = i.b, t.hex = i.hex) : e.is(t, "object") && "h" in t && "s" in t && "l" in t ? (i = e.hsl2rgb(t), t.r = i.r, t.g = i.g, t.b = i.b, t.hex = i.hex) : (e.is(t, "string") && (t = e.getRGB(t)), e.is(t, "object") && "r" in t && "g" in t && "b" in t ? (i = e.rgb2hsl(t), t.h = i.h, t.s = i.s, t.l = i.l, i = e.rgb2hsb(t), t.v = i.b) : (t = {
                            hex: "none"
                        }).r = t.g = t.b = t.h = t.s = t.v = t.l = -1), t.toString = at, t
                    }, e.hsb2rgb = function(t, e, i, r) {
                        var n, o, a, s, l;
                        return this.is(t, "object") && "h" in t && "s" in t && "b" in t && (i = t.b, e = t.s, r = t.o, t = t.h), s = (l = i * e) * (1 - E((t = (t *= 360) % 360 / 60) % 2 - 1)), n = o = a = i - l, lt(n += [l, s, 0, 0, s, l][t = ~~t], o += [s, l, l, s, 0, 0][t], a += [0, 0, s, l, l, s][t], r)
                    }, e.hsl2rgb = function(t, e, i, r) {
                        var n, o, a, s, l;
                        return this.is(t, "object") && "h" in t && "s" in t && "l" in t && (i = t.l, e = t.s, t = t.h), (t > 1 || e > 1 || i > 1) && (t /= 360, e /= 100, i /= 100), s = (l = 2 * e * (i < .5 ? i : 1 - i)) * (1 - E((t = (t *= 360) % 360 / 60) % 2 - 1)), n = o = a = i - l / 2, lt(n += [l, s, 0, 0, s, l][t = ~~t], o += [s, l, l, s, 0, 0][t], a += [0, 0, s, l, l, s][t], r)
                    }, e.rgb2hsb = function(t, e, i) {
                        var r, n;
                        return t = (i = st(t, e, i))[0], e = i[1], i = i[2], {
                            h: ((0 == (n = (r = C(t, e, i)) - T(t, e, i)) ? null : r == t ? (e - i) / n : r == e ? (i - t) / n + 2 : (t - e) / n + 4) + 360) % 6 * 60 / 360,
                            s: 0 == n ? 0 : n / r,
                            b: r,
                            toString: nt
                        }
                    }, e.rgb2hsl = function(t, e, i) {
                        var r, n, o, a;
                        return t = (i = st(t, e, i))[0], e = i[1], i = i[2], r = ((n = C(t, e, i)) + (o = T(t, e, i))) / 2, {
                            h: ((0 == (a = n - o) ? null : n == t ? (e - i) / a : n == e ? (i - t) / a + 2 : (t - e) / a + 4) + 360) % 6 * 60 / 360,
                            s: 0 == a ? 0 : r < .5 ? a / (2 * r) : a / (2 - 2 * r),
                            l: r,
                            toString: ot
                        }
                    }, e._path2string = function() {
                        return this.join(",").replace(z, "$1")
                    }, e._preload = function(t, e) {
                        var i = c.doc.createElement("img");
                        i.style.cssText = "position:absolute;left:-9999em;top:-9999em", i.onload = function() {
                            e.call(this), this.onload = null, c.doc.body.removeChild(this)
                        }, i.onerror = function() {
                            c.doc.body.removeChild(this)
                        }, c.doc.body.appendChild(i), i.src = t
                    }, e.getRGB = ht((function(t) {
                        if (!t || (t = y(t)).indexOf("-") + 1) return {
                            r: -1,
                            g: -1,
                            b: -1,
                            hex: "none",
                            error: 1,
                            toString: ct
                        };
                        if ("none" == t) return {
                            r: -1,
                            g: -1,
                            b: -1,
                            hex: "none",
                            toString: ct
                        };
                        !X[h](t.toLowerCase().substring(0, 2)) && "#" != t.charAt() && (t = rt(t));
                        var i, r, n, o, a, s, l = t.match(M);
                        return l ? (l[2] && (n = j(l[2].substring(5), 16), r = j(l[2].substring(3, 5), 16), i = j(l[2].substring(1, 3), 16)), l[3] && (n = j((a = l[3].charAt(3)) + a, 16), r = j((a = l[3].charAt(2)) + a, 16), i = j((a = l[3].charAt(1)) + a, 16)), l[4] && (s = l[4][b](G), i = F(s[0]), "%" == s[0].slice(-1) && (i *= 2.55), r = F(s[1]), "%" == s[1].slice(-1) && (r *= 2.55), n = F(s[2]), "%" == s[2].slice(-1) && (n *= 2.55), "rgba" == l[1].toLowerCase().slice(0, 4) && (o = F(s[3])), s[3] && "%" == s[3].slice(-1) && (o /= 100)), l[5] ? (s = l[5][b](G), i = F(s[0]), "%" == s[0].slice(-1) && (i *= 2.55), r = F(s[1]), "%" == s[1].slice(-1) && (r *= 2.55), n = F(s[2]), "%" == s[2].slice(-1) && (n *= 2.55), ("deg" == s[0].slice(-3) || "Â°" == s[0].slice(-1)) && (i /= 360), "hsba" == l[1].toLowerCase().slice(0, 4) && (o = F(s[3])), s[3] && "%" == s[3].slice(-1) && (o /= 100), e.hsb2rgb(i, r, n, o)) : l[6] ? (s = l[6][b](G), i = F(s[0]), "%" == s[0].slice(-1) && (i *= 2.55), r = F(s[1]), "%" == s[1].slice(-1) && (r *= 2.55), n = F(s[2]), "%" == s[2].slice(-1) && (n *= 2.55), ("deg" == s[0].slice(-3) || "Â°" == s[0].slice(-1)) && (i /= 360), "hsla" == l[1].toLowerCase().slice(0, 4) && (o = F(s[3])), s[3] && "%" == s[3].slice(-1) && (o /= 100), e.hsl2rgb(i, r, n, o)) : ((l = {
                            r: i,
                            g: r,
                            b: n,
                            toString: ct
                        }).hex = "#" + (16777216 | n | r << 8 | i << 16).toString(16).slice(1), e.is(o, "finite") && (l.opacity = o), l)) : {
                            r: -1,
                            g: -1,
                            b: -1,
                            hex: "none",
                            error: 1,
                            toString: ct
                        }
                    }), e), e.hsb = ht((function(t, i, r) {
                        return e.hsb2rgb(t, i, r).hex
                    })), e.hsl = ht((function(t, i, r) {
                        return e.hsl2rgb(t, i, r).hex
                    })), e.rgb = ht((function(t, e, i) {
                        function r(t) {
                            return t + .5 | 0
                        }
                        return "#" + (16777216 | r(i) | r(e) << 8 | r(t) << 16).toString(16).slice(1)
                    })), e.getColor = function(t) {
                        var e = this.getColor.start = this.getColor.start || {
                                h: 0,
                                s: 1,
                                b: t || .75
                            },
                            i = this.hsb2rgb(e.h, e.s, e.b);
                        return e.h += .075, e.h > 1 && (e.h = 0, e.s -= .2, e.s <= 0 && (this.getColor.start = {
                            h: 0,
                            s: 1,
                            b: e.b
                        })), i.hex
                    }, e.getColor.reset = function() {
                        delete this.start
                    }, e.parsePathString = function(t) {
                        if (!t) return null;
                        var i = ft(t);
                        if (i.arr) return bt(i.arr);
                        var r = {
                                a: 7,
                                c: 6,
                                h: 1,
                                l: 2,
                                m: 2,
                                r: 4,
                                q: 4,
                                s: 4,
                                t: 2,
                                v: 1,
                                z: 0
                            },
                            n = [];
                        return e.is(t, P) && e.is(t[0], P) && (n = bt(t)), n.length || y(t).replace(W, (function(t, e, i) {
                            var o = [],
                                a = e.toLowerCase();
                            if (i.replace(Y, (function(t, e) {
                                    e && o.push(+e)
                                })), "m" == a && o.length > 2 && (n.push([e][p](o.splice(0, 2))), a = "l", e = "m" == e ? "l" : "L"), "r" == a) n.push([e][p](o));
                            else
                                for (; o.length >= r[a] && (n.push([e][p](o.splice(0, r[a]))), r[a]););
                        })), n.toString = e._path2string, i.arr = bt(n), n
                    }, e.parseTransformString = ht((function(t) {
                        if (!t) return null;
                        var i = [];
                        return e.is(t, P) && e.is(t[0], P) && (i = bt(t)), i.length || y(t).replace(H, (function(t, e, r) {
                            var n = [];
                            w.call(e), r.replace(Y, (function(t, e) {
                                e && n.push(+e)
                            })), i.push([e][p](n))
                        })), i.toString = e._path2string, i
                    }), this, (function(t) {
                        if (!t) return t;
                        for (var e = [], i = 0; i < t.length; i++) {
                            for (var r = [], n = 0; n < t[i].length; n++) r.push(t[i][n]);
                            e.push(r)
                        }
                        return e
                    }));
                    var ft = function(t) {
                        var e = ft.ps = ft.ps || {};
                        return e[t] ? e[t].sleep = 100 : e[t] = {
                            sleep: 100
                        }, setTimeout((function() {
                            for (var i in e) e[h](i) && i != t && (e[i].sleep--, !e[i].sleep && delete e[i])
                        })), e[t]
                    };

                    function dt(t, e, i, r, n) {
                        return t * (t * (-3 * e + 9 * i - 9 * r + 3 * n) + 6 * e - 12 * i + 6 * r) - 3 * e + 3 * i
                    }

                    function pt(t, e, i, r, n, o, a, s, l) {
                        null == l && (l = 1);
                        for (var h = (l = l > 1 ? 1 : l < 0 ? 0 : l) / 2, c = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], u = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], f = 0, d = 0; d < 12; d++) {
                            var p = h * c[d] + h,
                                g = dt(p, t, i, n, a),
                                v = dt(p, e, r, o, s),
                                m = g * g + v * v;
                            f += u[d] * S.sqrt(m)
                        }
                        return h * f
                    }

                    function gt(t, e, i, r, n, o, a, s) {
                        if (!(C(t, i) < T(n, a) || T(t, i) > C(n, a) || C(e, r) < T(o, s) || T(e, r) > C(o, s))) {
                            var l = (t - i) * (o - s) - (e - r) * (n - a);
                            if (l) {
                                var h = ((t * r - e * i) * (n - a) - (t - i) * (n * s - o * a)) / l,
                                    c = ((t * r - e * i) * (o - s) - (e - r) * (n * s - o * a)) / l,
                                    u = +h.toFixed(2),
                                    f = +c.toFixed(2);
                                if (!(u < +T(t, i).toFixed(2) || u > +C(t, i).toFixed(2) || u < +T(n, a).toFixed(2) || u > +C(n, a).toFixed(2) || f < +T(e, r).toFixed(2) || f > +C(e, r).toFixed(2) || f < +T(o, s).toFixed(2) || f > +C(o, s).toFixed(2))) return {
                                    x: h,
                                    y: c
                                }
                            }
                        }
                    }

                    function vt(t, i, r) {
                        var n = e.bezierBBox(t),
                            o = e.bezierBBox(i);
                        if (!e.isBBoxIntersect(n, o)) return r ? 0 : [];
                        for (var a = pt.apply(0, t), s = pt.apply(0, i), l = C(~~(a / 5), 1), h = C(~~(s / 5), 1), c = [], u = [], f = {}, d = r ? 0 : [], p = 0; p < l + 1; p++) {
                            var g = e.findDotsAtSegment.apply(e, t.concat(p / l));
                            c.push({
                                x: g.x,
                                y: g.y,
                                t: p / l
                            })
                        }
                        for (p = 0; p < h + 1; p++) g = e.findDotsAtSegment.apply(e, i.concat(p / h)), u.push({
                            x: g.x,
                            y: g.y,
                            t: p / h
                        });
                        for (p = 0; p < l; p++)
                            for (var v = 0; v < h; v++) {
                                var m = c[p],
                                    y = c[p + 1],
                                    b = u[v],
                                    x = u[v + 1],
                                    _ = E(y.x - m.x) < .001 ? "y" : "x",
                                    w = E(x.x - b.x) < .001 ? "y" : "x",
                                    S = gt(m.x, m.y, y.x, y.y, b.x, b.y, x.x, x.y);
                                if (S) {
                                    if (f[S.x.toFixed(4)] == S.y.toFixed(4)) continue;
                                    f[S.x.toFixed(4)] = S.y.toFixed(4);
                                    var k = m.t + E((S[_] - m[_]) / (y[_] - m[_])) * (y.t - m.t),
                                        O = b.t + E((S[w] - b[w]) / (x[w] - b[w])) * (x.t - b.t);
                                    k >= 0 && k <= 1.001 && O >= 0 && O <= 1.001 && (r ? d++ : d.push({
                                        x: S.x,
                                        y: S.y,
                                        t1: T(k, 1),
                                        t2: T(O, 1)
                                    }))
                                }
                            }
                        return d
                    }

                    function mt(t, i, r) {
                        t = e._path2curve(t), i = e._path2curve(i);
                        for (var n, o, a, s, l, h, c, u, f, d, p = r ? 0 : [], g = 0, v = t.length; g < v; g++) {
                            var m = t[g];
                            if ("M" == m[0]) n = l = m[1], o = h = m[2];
                            else {
                                "C" == m[0] ? (f = [n, o].concat(m.slice(1)), n = f[6], o = f[7]) : (f = [n, o, n, o, l, h, l, h], n = l, o = h);
                                for (var y = 0, b = i.length; y < b; y++) {
                                    var x = i[y];
                                    if ("M" == x[0]) a = c = x[1], s = u = x[2];
                                    else {
                                        "C" == x[0] ? (d = [a, s].concat(x.slice(1)), a = d[6], s = d[7]) : (d = [a, s, a, s, c, u, c, u], a = c, s = u);
                                        var _ = vt(f, d, r);
                                        if (r) p += _;
                                        else {
                                            for (var w = 0, S = _.length; w < S; w++) _[w].segment1 = g, _[w].segment2 = y, _[w].bez1 = f, _[w].bez2 = d;
                                            p = p.concat(_)
                                        }
                                    }
                                }
                            }
                        }
                        return p
                    }
                    e.findDotsAtSegment = function(t, e, i, r, n, o, a, s, l) {
                        var h = 1 - l,
                            c = k(h, 3),
                            u = k(h, 2),
                            f = l * l,
                            d = f * l,
                            p = c * t + 3 * u * l * i + 3 * h * l * l * n + d * a,
                            g = c * e + 3 * u * l * r + 3 * h * l * l * o + d * s,
                            v = t + 2 * l * (i - t) + f * (n - 2 * i + t),
                            m = e + 2 * l * (r - e) + f * (o - 2 * r + e),
                            y = i + 2 * l * (n - i) + f * (a - 2 * n + i),
                            b = r + 2 * l * (o - r) + f * (s - 2 * o + r),
                            x = h * t + l * i,
                            _ = h * e + l * r,
                            w = h * n + l * a,
                            C = h * o + l * s,
                            T = 90 - 180 * S.atan2(v - y, m - b) / O;
                        return (v > y || m < b) && (T += 180), {
                            x: p,
                            y: g,
                            m: {
                                x: v,
                                y: m
                            },
                            n: {
                                x: y,
                                y: b
                            },
                            start: {
                                x,
                                y: _
                            },
                            end: {
                                x: w,
                                y: C
                            },
                            alpha: T
                        }
                    }, e.bezierBBox = function(t, i, r, n, o, a, s, l) {
                        e.is(t, "array") || (t = [t, i, r, n, o, a, s, l]);
                        var h = Et.apply(null, t);
                        return {
                            x: h.min.x,
                            y: h.min.y,
                            x2: h.max.x,
                            y2: h.max.y,
                            width: h.max.x - h.min.x,
                            height: h.max.y - h.min.y
                        }
                    }, e.isPointInsideBBox = function(t, e, i) {
                        return e >= t.x && e <= t.x2 && i >= t.y && i <= t.y2
                    }, e.isBBoxIntersect = function(t, i) {
                        var r = e.isPointInsideBBox;
                        return r(i, t.x, t.y) || r(i, t.x2, t.y) || r(i, t.x, t.y2) || r(i, t.x2, t.y2) || r(t, i.x, i.y) || r(t, i.x2, i.y) || r(t, i.x, i.y2) || r(t, i.x2, i.y2) || (t.x < i.x2 && t.x > i.x || i.x < t.x2 && i.x > t.x) && (t.y < i.y2 && t.y > i.y || i.y < t.y2 && i.y > t.y)
                    }, e.pathIntersection = function(t, e) {
                        return mt(t, e)
                    }, e.pathIntersectionNumber = function(t, e) {
                        return mt(t, e, 1)
                    }, e.isPointInsidePath = function(t, i, r) {
                        var n = e.pathBBox(t);
                        return e.isPointInsideBBox(n, i, r) && mt(t, [
                            ["M", i, r],
                            ["H", n.x2 + 10]
                        ], 1) % 2 == 1
                    }, e._removedFactory = function(e) {
                        return function() {
                            t("raphael.log", null, "RaphaÃ«l: you are calling to method â€œ" + e + "â€ of removed object", e)
                        }
                    };
                    var yt = e.pathBBox = function(t) {
                            var e = ft(t);
                            if (e.bbox) return it(e.bbox);
                            if (!t) return {
                                x: 0,
                                y: 0,
                                width: 0,
                                height: 0,
                                x2: 0,
                                y2: 0
                            };
                            for (var i, r = 0, n = 0, o = [], a = [], s = 0, l = (t = kt(t)).length; s < l; s++)
                                if ("M" == (i = t[s])[0]) r = i[1], n = i[2], o.push(r), a.push(n);
                                else {
                                    var h = Et(r, n, i[1], i[2], i[3], i[4], i[5], i[6]);
                                    o = o[p](h.min.x, h.max.x), a = a[p](h.min.y, h.max.y), r = i[5], n = i[6]
                                } var c = T[d](0, o),
                                u = T[d](0, a),
                                f = C[d](0, o),
                                g = C[d](0, a),
                                v = f - c,
                                m = g - u,
                                y = {
                                    x: c,
                                    y: u,
                                    x2: f,
                                    y2: g,
                                    width: v,
                                    height: m,
                                    cx: c + v / 2,
                                    cy: u + m / 2
                                };
                            return e.bbox = it(y), y
                        },
                        bt = function(t) {
                            var i = it(t);
                            return i.toString = e._path2string, i
                        },
                        xt = e._pathToRelative = function(t) {
                            var i = ft(t);
                            if (i.rel) return bt(i.rel);
                            e.is(t, P) && e.is(t && t[0], P) || (t = e.parsePathString(t));
                            var r = [],
                                n = 0,
                                o = 0,
                                a = 0,
                                s = 0,
                                l = 0;
                            "M" == t[0][0] && (a = n = t[0][1], s = o = t[0][2], l++, r.push(["M", n, o]));
                            for (var h = l, c = t.length; h < c; h++) {
                                var u = r[h] = [],
                                    f = t[h];
                                if (f[0] != w.call(f[0])) switch (u[0] = w.call(f[0]), u[0]) {
                                    case "a":
                                        u[1] = f[1], u[2] = f[2], u[3] = f[3], u[4] = f[4], u[5] = f[5], u[6] = +(f[6] - n).toFixed(3), u[7] = +(f[7] - o).toFixed(3);
                                        break;
                                    case "v":
                                        u[1] = +(f[1] - o).toFixed(3);
                                        break;
                                    case "m":
                                        a = f[1], s = f[2];
                                    default:
                                        for (var d = 1, p = f.length; d < p; d++) u[d] = +(f[d] - (d % 2 ? n : o)).toFixed(3)
                                } else {
                                    u = r[h] = [], "m" == f[0] && (a = f[1] + n, s = f[2] + o);
                                    for (var g = 0, v = f.length; g < v; g++) r[h][g] = f[g]
                                }
                                var m = r[h].length;
                                switch (r[h][0]) {
                                    case "z":
                                        n = a, o = s;
                                        break;
                                    case "h":
                                        n += +r[h][m - 1];
                                        break;
                                    case "v":
                                        o += +r[h][m - 1];
                                        break;
                                    default:
                                        n += +r[h][m - 2], o += +r[h][m - 1]
                                }
                            }
                            return r.toString = e._path2string, i.rel = bt(r), r
                        },
                        _t = e._pathToAbsolute = function(t) {
                            var i = ft(t);
                            if (i.abs) return bt(i.abs);
                            if (e.is(t, P) && e.is(t && t[0], P) || (t = e.parsePathString(t)), !t || !t.length) return [
                                ["M", 0, 0]
                            ];
                            var r = [],
                                n = 0,
                                o = 0,
                                a = 0,
                                s = 0,
                                l = 0;
                            "M" == t[0][0] && (a = n = +t[0][1], s = o = +t[0][2], l++, r[0] = ["M", n, o]);
                            for (var h, c, u = 3 == t.length && "M" == t[0][0] && "R" == t[1][0].toUpperCase() && "Z" == t[2][0].toUpperCase(), f = l, d = t.length; f < d; f++) {
                                if (r.push(h = []), (c = t[f])[0] != B.call(c[0])) switch (h[0] = B.call(c[0]), h[0]) {
                                        case "A":
                                            h[1] = c[1], h[2] = c[2], h[3] = c[3], h[4] = c[4], h[5] = c[5], h[6] = +(c[6] + n), h[7] = +(c[7] + o);
                                            break;
                                        case "V":
                                            h[1] = +c[1] + o;
                                            break;
                                        case "H":
                                            h[1] = +c[1] + n;
                                            break;
                                        case "R":
                                            for (var g = [n, o][p](c.slice(1)), v = 2, m = g.length; v < m; v++) g[v] = +g[v] + n, g[++v] = +g[v] + o;
                                            r.pop(), r = r[p](ut(g, u));
                                            break;
                                        case "M":
                                            a = +c[1] + n, s = +c[2] + o;
                                        default:
                                            for (v = 1, m = c.length; v < m; v++) h[v] = +c[v] + (v % 2 ? n : o)
                                    } else if ("R" == c[0]) g = [n, o][p](c.slice(1)), r.pop(), r = r[p](ut(g, u)), h = ["R"][p](c.slice(-2));
                                    else
                                        for (var y = 0, b = c.length; y < b; y++) h[y] = c[y];
                                switch (h[0]) {
                                    case "Z":
                                        n = a, o = s;
                                        break;
                                    case "H":
                                        n = h[1];
                                        break;
                                    case "V":
                                        o = h[1];
                                        break;
                                    case "M":
                                        a = h[h.length - 2], s = h[h.length - 1];
                                    default:
                                        n = h[h.length - 2], o = h[h.length - 1]
                                }
                            }
                            return r.toString = e._path2string, i.abs = bt(r), r
                        },
                        wt = function(t, e, i, r) {
                            return [t, e, i, r, i, r]
                        },
                        St = function(t, e, i, r, n, o) {
                            return [1 / 3 * t + 2 / 3 * i, 1 / 3 * e + 2 / 3 * r, 1 / 3 * n + 2 / 3 * i, 1 / 3 * o + 2 / 3 * r, n, o]
                        },
                        Ct = function(t, e, i, r, n, o, a, s, l, h) {
                            var c, u = 120 * O / 180,
                                f = O / 180 * (+n || 0),
                                d = [],
                                g = ht((function(t, e, i) {
                                    return {
                                        x: t * S.cos(i) - e * S.sin(i),
                                        y: t * S.sin(i) + e * S.cos(i)
                                    }
                                }));
                            if (h) k = h[0], I = h[1], C = h[2], T = h[3];
                            else {
                                t = (c = g(t, e, -f)).x, e = c.y, s = (c = g(s, l, -f)).x, l = c.y, S.cos(O / 180 * n), S.sin(O / 180 * n);
                                var v = (t - s) / 2,
                                    m = (e - l) / 2,
                                    y = v * v / (i * i) + m * m / (r * r);
                                y > 1 && (i *= y = S.sqrt(y), r *= y);
                                var x = i * i,
                                    _ = r * r,
                                    w = (o == a ? -1 : 1) * S.sqrt(E((x * _ - x * m * m - _ * v * v) / (x * m * m + _ * v * v))),
                                    C = w * i * m / r + (t + s) / 2,
                                    T = w * -r * v / i + (e + l) / 2,
                                    k = S.asin(((e - T) / r).toFixed(9)),
                                    I = S.asin(((l - T) / r).toFixed(9));
                                (k = t < C ? O - k : k) < 0 && (k = 2 * O + k), (I = s < C ? O - I : I) < 0 && (I = 2 * O + I), a && k > I && (k -= 2 * O), !a && I > k && (I -= 2 * O)
                            }
                            var P = I - k;
                            if (E(P) > u) {
                                var L = I,
                                    M = s,
                                    A = l;
                                I = k + u * (a && I > k ? 1 : -1), s = C + i * S.cos(I), l = T + r * S.sin(I), d = Ct(s, l, i, r, n, 0, a, M, A, [I, L, C, T])
                            }
                            P = I - k;
                            var D = S.cos(k),
                                R = S.sin(k),
                                F = S.cos(I),
                                j = S.sin(I),
                                B = S.tan(P / 4),
                                U = 4 / 3 * i * B,
                                N = 4 / 3 * r * B,
                                G = [t, e],
                                X = [t + U * R, e - N * D],
                                z = [s + U * j, l - N * F],
                                W = [s, l];
                            if (X[0] = 2 * G[0] - X[0], X[1] = 2 * G[1] - X[1], h) return [X, z, W][p](d);
                            for (var H = [], Y = 0, V = (d = [X, z, W][p](d).join()[b](",")).length; Y < V; Y++) H[Y] = Y % 2 ? g(d[Y - 1], d[Y], f).y : g(d[Y], d[Y + 1], f).x;
                            return H
                        },
                        Tt = function(t, e, i, r, n, o, a, s, l) {
                            var h = 1 - l;
                            return {
                                x: k(h, 3) * t + 3 * k(h, 2) * l * i + 3 * h * l * l * n + k(l, 3) * a,
                                y: k(h, 3) * e + 3 * k(h, 2) * l * r + 3 * h * l * l * o + k(l, 3) * s
                            }
                        },
                        Et = ht((function(t, e, i, r, n, o, a, s) {
                            var l, h = n - 2 * i + t - (a - 2 * n + i),
                                c = 2 * (i - t) - 2 * (n - i),
                                u = t - i,
                                f = (-c + S.sqrt(c * c - 4 * h * u)) / 2 / h,
                                p = (-c - S.sqrt(c * c - 4 * h * u)) / 2 / h,
                                g = [e, s],
                                v = [t, a];
                            return E(f) > "1e12" && (f = .5), E(p) > "1e12" && (p = .5), f > 0 && f < 1 && (l = Tt(t, e, i, r, n, o, a, s, f), v.push(l.x), g.push(l.y)), p > 0 && p < 1 && (l = Tt(t, e, i, r, n, o, a, s, p), v.push(l.x), g.push(l.y)), h = o - 2 * r + e - (s - 2 * o + r), u = e - r, f = (-(c = 2 * (r - e) - 2 * (o - r)) + S.sqrt(c * c - 4 * h * u)) / 2 / h, p = (-c - S.sqrt(c * c - 4 * h * u)) / 2 / h, E(f) > "1e12" && (f = .5), E(p) > "1e12" && (p = .5), f > 0 && f < 1 && (l = Tt(t, e, i, r, n, o, a, s, f), v.push(l.x), g.push(l.y)), p > 0 && p < 1 && (l = Tt(t, e, i, r, n, o, a, s, p), v.push(l.x), g.push(l.y)), {
                                min: {
                                    x: T[d](0, v),
                                    y: T[d](0, g)
                                },
                                max: {
                                    x: C[d](0, v),
                                    y: C[d](0, g)
                                }
                            }
                        })),
                        kt = e._path2curve = ht((function(t, e) {
                            var i = !e && ft(t);
                            if (!e && i.curve) return bt(i.curve);
                            for (var r = _t(t), n = e && _t(e), o = {
                                    x: 0,
                                    y: 0,
                                    bx: 0,
                                    by: 0,
                                    X: 0,
                                    Y: 0,
                                    qx: null,
                                    qy: null
                                }, a = {
                                    x: 0,
                                    y: 0,
                                    bx: 0,
                                    by: 0,
                                    X: 0,
                                    Y: 0,
                                    qx: null,
                                    qy: null
                                }, s = function(t, e, i) {
                                    var r, n;
                                    if (!t) return ["C", e.x, e.y, e.x, e.y, e.x, e.y];
                                    switch (!(t[0] in {
                                            T: 1,
                                            Q: 1
                                        }) && (e.qx = e.qy = null), t[0]) {
                                        case "M":
                                            e.X = t[1], e.Y = t[2];
                                            break;
                                        case "A":
                                            t = ["C"][p](Ct[d](0, [e.x, e.y][p](t.slice(1))));
                                            break;
                                        case "S":
                                            "C" == i || "S" == i ? (r = 2 * e.x - e.bx, n = 2 * e.y - e.by) : (r = e.x, n = e.y), t = ["C", r, n][p](t.slice(1));
                                            break;
                                        case "T":
                                            "Q" == i || "T" == i ? (e.qx = 2 * e.x - e.qx, e.qy = 2 * e.y - e.qy) : (e.qx = e.x, e.qy = e.y), t = ["C"][p](St(e.x, e.y, e.qx, e.qy, t[1], t[2]));
                                            break;
                                        case "Q":
                                            e.qx = t[1], e.qy = t[2], t = ["C"][p](St(e.x, e.y, t[1], t[2], t[3], t[4]));
                                            break;
                                        case "L":
                                            t = ["C"][p](wt(e.x, e.y, t[1], t[2]));
                                            break;
                                        case "H":
                                            t = ["C"][p](wt(e.x, e.y, t[1], e.y));
                                            break;
                                        case "V":
                                            t = ["C"][p](wt(e.x, e.y, e.x, t[1]));
                                            break;
                                        case "Z":
                                            t = ["C"][p](wt(e.x, e.y, e.X, e.Y))
                                    }
                                    return t
                                }, l = function(t, e) {
                                    if (t[e].length > 7) {
                                        t[e].shift();
                                        for (var i = t[e]; i.length;) c[e] = "A", n && (u[e] = "A"), t.splice(e++, 0, ["C"][p](i.splice(0, 6)));
                                        t.splice(e, 1), m = C(r.length, n && n.length || 0)
                                    }
                                }, h = function(t, e, i, o, a) {
                                    t && e && "M" == t[a][0] && "M" != e[a][0] && (e.splice(a, 0, ["M", o.x, o.y]), i.bx = 0, i.by = 0, i.x = t[a][1], i.y = t[a][2], m = C(r.length, n && n.length || 0))
                                }, c = [], u = [], f = "", g = "", v = 0, m = C(r.length, n && n.length || 0); v < m; v++) {
                                r[v] && (f = r[v][0]), "C" != f && (c[v] = f, v && (g = c[v - 1])), r[v] = s(r[v], o, g), "A" != c[v] && "C" == f && (c[v] = "C"), l(r, v), n && (n[v] && (f = n[v][0]), "C" != f && (u[v] = f, v && (g = u[v - 1])), n[v] = s(n[v], a, g), "A" != u[v] && "C" == f && (u[v] = "C"), l(n, v)), h(r, n, o, a, v), h(n, r, a, o, v);
                                var y = r[v],
                                    b = n && n[v],
                                    x = y.length,
                                    _ = n && b.length;
                                o.x = y[x - 2], o.y = y[x - 1], o.bx = F(y[x - 4]) || o.x, o.by = F(y[x - 3]) || o.y, a.bx = n && (F(b[_ - 4]) || a.x), a.by = n && (F(b[_ - 3]) || a.y), a.x = n && b[_ - 2], a.y = n && b[_ - 1]
                            }
                            return n || (i.curve = bt(r)), n ? [r, n] : r
                        }), null, bt),
                        Ot = (e._parseDots = ht((function(t) {
                            for (var i = [], r = 0, n = t.length; r < n; r++) {
                                var o = {},
                                    a = t[r].match(/^([^:]*):?([\d\.]*)/);
                                if (o.color = e.getRGB(a[1]), o.color.error) return null;
                                o.opacity = o.color.opacity, o.color = o.color.hex, a[2] && (o.offset = a[2] + "%"), i.push(o)
                            }
                            for (r = 1, n = i.length - 1; r < n; r++)
                                if (!i[r].offset) {
                                    for (var s = F(i[r - 1].offset || 0), l = 0, h = r + 1; h < n; h++)
                                        if (i[h].offset) {
                                            l = i[h].offset;
                                            break
                                        } l || (l = 100, h = n);
                                    for (var c = ((l = F(l)) - s) / (h - r + 1); r < h; r++) s += c, i[r].offset = s + "%"
                                } return i
                        })), e._tear = function(t, e) {
                            t == e.top && (e.top = t.prev), t == e.bottom && (e.bottom = t.next), t.next && (t.next.prev = t.prev), t.prev && (t.prev.next = t.next)
                        }),
                        It = (e._tofront = function(t, e) {
                            e.top !== t && (Ot(t, e), t.next = null, t.prev = e.top, e.top.next = t, e.top = t)
                        }, e._toback = function(t, e) {
                            e.bottom !== t && (Ot(t, e), t.next = e.bottom, t.prev = null, e.bottom.prev = t, e.bottom = t)
                        }, e._insertafter = function(t, e, i) {
                            Ot(t, i), e == i.top && (i.top = t), e.next && (e.next.prev = t), t.next = e.next, t.prev = e, e.next = t
                        }, e._insertbefore = function(t, e, i) {
                            Ot(t, i), e == i.bottom && (i.bottom = t), e.prev && (e.prev.next = t), t.prev = e.prev, e.prev = t, t.next = e
                        }, e.toMatrix = function(t, e) {
                            var i = yt(t),
                                r = {
                                    _: {
                                        transform: v
                                    },
                                    getBBox: function() {
                                        return i
                                    }
                                };
                            return Pt(r, e), r.matrix
                        }),
                        Pt = (e.transformPath = function(t, e) {
                            return $(t, It(t, e))
                        }, e._extractTransform = function(t, i) {
                            if (null == i) return t._.transform;
                            i = y(i).replace(/\.{3}|\u2026/g, t._.transform || v);
                            var r, n, o = e.parseTransformString(i),
                                a = 0,
                                s = 1,
                                l = 1,
                                h = t._,
                                c = new At;
                            if (h.transform = o || [], o)
                                for (var u = 0, f = o.length; u < f; u++) {
                                    var d, p, g, m, b, x = o[u],
                                        _ = x.length,
                                        w = y(x[0]).toLowerCase(),
                                        S = x[0] != w,
                                        C = S ? c.invert() : 0;
                                    "t" == w && 3 == _ ? S ? (d = C.x(0, 0), p = C.y(0, 0), g = C.x(x[1], x[2]), m = C.y(x[1], x[2]), c.translate(g - d, m - p)) : c.translate(x[1], x[2]) : "r" == w ? 2 == _ ? (b = b || t.getBBox(1), c.rotate(x[1], b.x + b.width / 2, b.y + b.height / 2), a += x[1]) : 4 == _ && (S ? (g = C.x(x[2], x[3]), m = C.y(x[2], x[3]), c.rotate(x[1], g, m)) : c.rotate(x[1], x[2], x[3]), a += x[1]) : "s" == w ? 2 == _ || 3 == _ ? (b = b || t.getBBox(1), c.scale(x[1], x[_ - 1], b.x + b.width / 2, b.y + b.height / 2), s *= x[1], l *= x[_ - 1]) : 5 == _ && (S ? (g = C.x(x[3], x[4]), m = C.y(x[3], x[4]), c.scale(x[1], x[2], g, m)) : c.scale(x[1], x[2], x[3], x[4]), s *= x[1], l *= x[2]) : "m" == w && 7 == _ && c.add(x[1], x[2], x[3], x[4], x[5], x[6]), h.dirtyT = 1, t.matrix = c
                                }
                            t.matrix = c, h.sx = s, h.sy = l, h.deg = a, h.dx = r = c.e, h.dy = n = c.f, 1 == s && 1 == l && !a && h.bbox ? (h.bbox.x += +r, h.bbox.y += +n) : h.dirtyT = 1
                        }),
                        Lt = function(t) {
                            var e = t[0];
                            switch (e.toLowerCase()) {
                                case "t":
                                    return [e, 0, 0];
                                case "m":
                                    return [e, 1, 0, 0, 1, 0, 0];
                                case "r":
                                    return 4 == t.length ? [e, 0, t[2], t[3]] : [e, 0];
                                case "s":
                                    return 5 == t.length ? [e, 1, 1, t[3], t[4]] : 3 == t.length ? [e, 1, 1] : [e, 1]
                            }
                        },
                        Mt = e._equaliseTransform = function(t, i) {
                            i = y(i).replace(/\.{3}|\u2026/g, t), t = e.parseTransformString(t) || [], i = e.parseTransformString(i) || [];
                            for (var r, n, o, a, s = C(t.length, i.length), l = [], h = [], c = 0; c < s; c++) {
                                if (o = t[c] || Lt(i[c]), a = i[c] || Lt(o), o[0] != a[0] || "r" == o[0].toLowerCase() && (o[2] != a[2] || o[3] != a[3]) || "s" == o[0].toLowerCase() && (o[3] != a[3] || o[4] != a[4])) return;
                                for (l[c] = [], h[c] = [], r = 0, n = C(o.length, a.length); r < n; r++) r in o && (l[c][r] = o[r]), r in a && (h[c][r] = a[r])
                            }
                            return {
                                from: l,
                                to: h
                            }
                        };

                    function At(t, e, i, r, n, o) {
                        null != t ? (this.a = +t, this.b = +e, this.c = +i, this.d = +r, this.e = +n, this.f = +o) : (this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0)
                    }
                    e._getContainer = function(t, i, r, n) {
                            var o;
                            if (null != (o = null != n || e.is(t, "object") ? t : c.doc.getElementById(t))) return o.tagName ? null == i ? {
                                container: o,
                                width: o.style.pixelWidth || o.offsetWidth,
                                height: o.style.pixelHeight || o.offsetHeight
                            } : {
                                container: o,
                                width: i,
                                height: r
                            } : {
                                container: 1,
                                x: t,
                                y: i,
                                width: r,
                                height: n
                            }
                        }, e.pathToRelative = xt, e._engine = {}, e.path2curve = kt, e.matrix = function(t, e, i, r, n, o) {
                            return new At(t, e, i, r, n, o)
                        },
                        function(t) {
                            function i(t) {
                                return t[0] * t[0] + t[1] * t[1]
                            }

                            function r(t) {
                                var e = S.sqrt(i(t));
                                t[0] && (t[0] /= e), t[1] && (t[1] /= e)
                            }
                            t.add = function(t, e, i, r, n, o) {
                                var a, s, l, h, c = [
                                        [],
                                        [],
                                        []
                                    ],
                                    u = [
                                        [this.a, this.c, this.e],
                                        [this.b, this.d, this.f],
                                        [0, 0, 1]
                                    ],
                                    f = [
                                        [t, i, n],
                                        [e, r, o],
                                        [0, 0, 1]
                                    ];
                                for (t && t instanceof At && (f = [
                                        [t.a, t.c, t.e],
                                        [t.b, t.d, t.f],
                                        [0, 0, 1]
                                    ]), a = 0; a < 3; a++)
                                    for (s = 0; s < 3; s++) {
                                        for (h = 0, l = 0; l < 3; l++) h += u[a][l] * f[l][s];
                                        c[a][s] = h
                                    }
                                this.a = c[0][0], this.b = c[1][0], this.c = c[0][1], this.d = c[1][1], this.e = c[0][2], this.f = c[1][2]
                            }, t.invert = function() {
                                var t = this,
                                    e = t.a * t.d - t.b * t.c;
                                return new At(t.d / e, -t.b / e, -t.c / e, t.a / e, (t.c * t.f - t.d * t.e) / e, (t.b * t.e - t.a * t.f) / e)
                            }, t.clone = function() {
                                return new At(this.a, this.b, this.c, this.d, this.e, this.f)
                            }, t.translate = function(t, e) {
                                this.add(1, 0, 0, 1, t, e)
                            }, t.scale = function(t, e, i, r) {
                                null == e && (e = t), (i || r) && this.add(1, 0, 0, 1, i, r), this.add(t, 0, 0, e, 0, 0), (i || r) && this.add(1, 0, 0, 1, -i, -r)
                            }, t.rotate = function(t, i, r) {
                                t = e.rad(t), i = i || 0, r = r || 0;
                                var n = +S.cos(t).toFixed(9),
                                    o = +S.sin(t).toFixed(9);
                                this.add(n, o, -o, n, i, r), this.add(1, 0, 0, 1, -i, -r)
                            }, t.x = function(t, e) {
                                return t * this.a + e * this.c + this.e
                            }, t.y = function(t, e) {
                                return t * this.b + e * this.d + this.f
                            }, t.get = function(t) {
                                return +this[y.fromCharCode(97 + t)].toFixed(4)
                            }, t.toString = function() {
                                return e.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join()
                            }, t.toFilter = function() {
                                return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')"
                            }, t.offset = function() {
                                return [this.e.toFixed(4), this.f.toFixed(4)]
                            }, t.split = function() {
                                var t = {};
                                t.dx = this.e, t.dy = this.f;
                                var n = [
                                    [this.a, this.c],
                                    [this.b, this.d]
                                ];
                                t.scalex = S.sqrt(i(n[0])), r(n[0]), t.shear = n[0][0] * n[1][0] + n[0][1] * n[1][1], n[1] = [n[1][0] - n[0][0] * t.shear, n[1][1] - n[0][1] * t.shear], t.scaley = S.sqrt(i(n[1])), r(n[1]), t.shear /= t.scaley;
                                var o = -n[0][1],
                                    a = n[1][1];
                                return a < 0 ? (t.rotate = e.deg(S.acos(a)), o < 0 && (t.rotate = 360 - t.rotate)) : t.rotate = e.deg(S.asin(o)), t.isSimple = !(+t.shear.toFixed(9) || t.scalex.toFixed(9) != t.scaley.toFixed(9) && t.rotate), t.isSuperSimple = !+t.shear.toFixed(9) && t.scalex.toFixed(9) == t.scaley.toFixed(9) && !t.rotate, t.noRotation = !+t.shear.toFixed(9) && !t.rotate, t
                            }, t.toTransformString = function(t) {
                                var e = t || this[b]();
                                return e.isSimple ? (e.scalex = +e.scalex.toFixed(4), e.scaley = +e.scaley.toFixed(4), e.rotate = +e.rotate.toFixed(4), (e.dx || e.dy ? "t" + [e.dx, e.dy] : v) + (1 != e.scalex || 1 != e.scaley ? "s" + [e.scalex, e.scaley, 0, 0] : v) + (e.rotate ? "r" + [e.rotate, 0, 0] : v)) : "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)]
                            }
                        }(At.prototype);
                    for (var Dt = function() {
                            this.returnValue = !1
                        }, Rt = function() {
                            return this.originalEvent.preventDefault()
                        }, Ft = function() {
                            this.cancelBubble = !0
                        }, jt = function() {
                            return this.originalEvent.stopPropagation()
                        }, Bt = function(t) {
                            var e = c.doc.documentElement.scrollTop || c.doc.body.scrollTop,
                                i = c.doc.documentElement.scrollLeft || c.doc.body.scrollLeft;
                            return {
                                x: t.clientX + i,
                                y: t.clientY + e
                            }
                        }, Ut = c.doc.addEventListener ? function(t, e, i, r) {
                            var n = function(t) {
                                var e = Bt(t);
                                return i.call(r, t, e.x, e.y)
                            };
                            if (t.addEventListener(e, n, !1), g && _[e]) {
                                var o = function(e) {
                                    for (var n = Bt(e), o = e, a = 0, s = e.targetTouches && e.targetTouches.length; a < s; a++)
                                        if (e.targetTouches[a].target == t) {
                                            (e = e.targetTouches[a]).originalEvent = o, e.preventDefault = Rt, e.stopPropagation = jt;
                                            break
                                        } return i.call(r, e, n.x, n.y)
                                };
                                t.addEventListener(_[e], o, !1)
                            }
                            return function() {
                                return t.removeEventListener(e, n, !1), g && _[e] && t.removeEventListener(_[e], o, !1), !0
                            }
                        } : c.doc.attachEvent ? function(t, e, i, r) {
                            var n = function(t) {
                                t = t || c.win.event;
                                var e = c.doc.documentElement.scrollTop || c.doc.body.scrollTop,
                                    n = c.doc.documentElement.scrollLeft || c.doc.body.scrollLeft,
                                    o = t.clientX + n,
                                    a = t.clientY + e;
                                return t.preventDefault = t.preventDefault || Dt, t.stopPropagation = t.stopPropagation || Ft, i.call(r, t, o, a)
                            };
                            return t.attachEvent("on" + e, n),
                                function() {
                                    return t.detachEvent("on" + e, n), !0
                                }
                        } : void 0, Nt = [], Gt = function(e) {
                            for (var i, r = e.clientX, n = e.clientY, o = c.doc.documentElement.scrollTop || c.doc.body.scrollTop, a = c.doc.documentElement.scrollLeft || c.doc.body.scrollLeft, s = Nt.length; s--;) {
                                if (i = Nt[s], g && e.touches) {
                                    for (var l, h = e.touches.length; h--;)
                                        if ((l = e.touches[h]).identifier == i.el._drag.id) {
                                            r = l.clientX, n = l.clientY, (e.originalEvent ? e.originalEvent : e).preventDefault();
                                            break
                                        }
                                } else e.preventDefault();
                                var u, f = i.el.node,
                                    d = f.nextSibling,
                                    p = f.parentNode,
                                    v = f.style.display;
                                c.win.opera && p.removeChild(f), f.style.display = "none", u = i.el.paper.getElementByPoint(r, n), f.style.display = v, c.win.opera && (d ? p.insertBefore(f, d) : p.appendChild(f)), u && t("raphael.drag.over." + i.el.id, i.el, u), r += a, n += o, t("raphael.drag.move." + i.el.id, i.move_scope || i.el, r - i.el._drag.x, n - i.el._drag.y, r, n, e)
                            }
                        }, Xt = function(i) {
                            e.unmousemove(Gt).unmouseup(Xt);
                            for (var r, n = Nt.length; n--;)(r = Nt[n]).el._drag = {}, t("raphael.drag.end." + r.el.id, r.end_scope || r.start_scope || r.move_scope || r.el, i);
                            Nt = []
                        }, zt = e.el = {}, Wt = x.length; Wt--;) ! function(t) {
                        e[t] = zt[t] = function(i, r) {
                            return e.is(i, "function") && (this.events = this.events || [], this.events.push({
                                name: t,
                                f: i,
                                unbind: Ut(this.shape || this.node || c.doc, t, i, r || this)
                            })), this
                        }, e["un" + t] = zt["un" + t] = function(i) {
                            for (var r = this.events || [], n = r.length; n--;) r[n].name != t || !e.is(i, "undefined") && r[n].f != i || (r[n].unbind(), r.splice(n, 1), !r.length && delete this.events);
                            return this
                        }
                    }(x[Wt]);
                    zt.data = function(i, r) {
                        var n = V[this.id] = V[this.id] || {};
                        if (0 == arguments.length) return n;
                        if (1 == arguments.length) {
                            if (e.is(i, "object")) {
                                for (var o in i) i[h](o) && this.data(o, i[o]);
                                return this
                            }
                            return t("raphael.data.get." + this.id, this, n[i], i), n[i]
                        }
                        return n[i] = r, t("raphael.data.set." + this.id, this, r, i), this
                    }, zt.removeData = function(t) {
                        return null == t ? delete V[this.id] : V[this.id] && delete V[this.id][t], this
                    }, zt.getData = function() {
                        return it(V[this.id] || {})
                    }, zt.hover = function(t, e, i, r) {
                        return this.mouseover(t, i).mouseout(e, r || i)
                    }, zt.unhover = function(t, e) {
                        return this.unmouseover(t).unmouseout(e)
                    };
                    var Ht = [];

                    function Yt() {
                        return this.x + m + this.y + m + this.width + " Ã— " + this.height
                    }
                    zt.drag = function(i, r, n, o, a, s) {
                        function l(l) {
                            (l.originalEvent || l).preventDefault();
                            var h = l.clientX,
                                u = l.clientY,
                                f = c.doc.documentElement.scrollTop || c.doc.body.scrollTop,
                                d = c.doc.documentElement.scrollLeft || c.doc.body.scrollLeft;
                            if (this._drag.id = l.identifier, g && l.touches)
                                for (var p, v = l.touches.length; v--;)
                                    if (p = l.touches[v], this._drag.id = p.identifier, p.identifier == this._drag.id) {
                                        h = p.clientX, u = p.clientY;
                                        break
                                    } this._drag.x = h + d, this._drag.y = u + f, !Nt.length && e.mousemove(Gt).mouseup(Xt), Nt.push({
                                el: this,
                                move_scope: o,
                                start_scope: a,
                                end_scope: s
                            }), r && t.on("raphael.drag.start." + this.id, r), i && t.on("raphael.drag.move." + this.id, i), n && t.on("raphael.drag.end." + this.id, n), t("raphael.drag.start." + this.id, a || o || this, this._drag.x, this._drag.y, l)
                        }
                        return this._drag = {}, Ht.push({
                            el: this,
                            start: l
                        }), this.mousedown(l), this
                    }, zt.onDragOver = function(e) {
                        e ? t.on("raphael.drag.over." + this.id, e) : t.unbind("raphael.drag.over." + this.id)
                    }, zt.undrag = function() {
                        for (var i = Ht.length; i--;) Ht[i].el == this && (this.unmousedown(Ht[i].start), Ht.splice(i, 1), t.unbind("raphael.drag.*." + this.id));
                        !Ht.length && e.unmousemove(Gt).unmouseup(Xt), Nt = []
                    }, r.circle = function(t, i, r) {
                        var n = e._engine.circle(this, t || 0, i || 0, r || 0);
                        return this.__set__ && this.__set__.push(n), n
                    }, r.rect = function(t, i, r, n, o) {
                        var a = e._engine.rect(this, t || 0, i || 0, r || 0, n || 0, o || 0);
                        return this.__set__ && this.__set__.push(a), a
                    }, r.ellipse = function(t, i, r, n) {
                        var o = e._engine.ellipse(this, t || 0, i || 0, r || 0, n || 0);
                        return this.__set__ && this.__set__.push(o), o
                    }, r.path = function(t) {
                        t && !e.is(t, "string") && !e.is(t[0], P) && (t += v);
                        var i = e._engine.path(e.format[d](e, arguments), this);
                        return this.__set__ && this.__set__.push(i), i
                    }, r.image = function(t, i, r, n, o) {
                        var a = e._engine.image(this, t || "about:blank", i || 0, r || 0, n || 0, o || 0);
                        return this.__set__ && this.__set__.push(a), a
                    }, r.text = function(t, i, r) {
                        var n = e._engine.text(this, t || 0, i || 0, y(r));
                        return this.__set__ && this.__set__.push(n), n
                    }, r.set = function(t) {
                        !e.is(t, "array") && (t = Array.prototype.splice.call(arguments, 0, arguments.length));
                        var i = new ue(t);
                        return this.__set__ && this.__set__.push(i), i.paper = this, i.type = "set", i
                    }, r.setStart = function(t) {
                        this.__set__ = t || this.set()
                    }, r.setFinish = function(t) {
                        var e = this.__set__;
                        return delete this.__set__, e
                    }, r.getSize = function() {
                        var t = this.canvas.parentNode;
                        return {
                            width: t.offsetWidth,
                            height: t.offsetHeight
                        }
                    }, r.setSize = function(t, i) {
                        return e._engine.setSize.call(this, t, i)
                    }, r.setViewBox = function(t, i, r, n, o) {
                        return e._engine.setViewBox.call(this, t, i, r, n, o)
                    }, r.top = r.bottom = null, r.raphael = e, r.getElementByPoint = function(t, e) {
                        var i, r, n, o, a, s, l, h = this.canvas,
                            u = c.doc.elementFromPoint(t, e);
                        if (c.win.opera && "svg" == u.tagName) {
                            var f = (r = (i = h).getBoundingClientRect(), o = (n = i.ownerDocument).body, s = (a = n.documentElement).clientTop || o.clientTop || 0, l = a.clientLeft || o.clientLeft || 0, {
                                    y: r.top + (c.win.pageYOffset || a.scrollTop || o.scrollTop) - s,
                                    x: r.left + (c.win.pageXOffset || a.scrollLeft || o.scrollLeft) - l
                                }),
                                d = h.createSVGRect();
                            d.x = t - f.x, d.y = e - f.y, d.width = d.height = 1;
                            var p = h.getIntersectionList(d, null);
                            p.length && (u = p[p.length - 1])
                        }
                        if (!u) return null;
                        for (; u.parentNode && u != h.parentNode && !u.raphael;) u = u.parentNode;
                        return u == this.canvas.parentNode && (u = h), u && u.raphael ? this.getById(u.raphaelid) : null
                    }, r.getElementsByBBox = function(t) {
                        var i = this.set();
                        return this.forEach((function(r) {
                            e.isBBoxIntersect(r.getBBox(), t) && i.push(r)
                        })), i
                    }, r.getById = function(t) {
                        for (var e = this.bottom; e;) {
                            if (e.id == t) return e;
                            e = e.next
                        }
                        return null
                    }, r.forEach = function(t, e) {
                        for (var i = this.bottom; i;) {
                            if (!1 === t.call(e, i)) return this;
                            i = i.next
                        }
                        return this
                    }, r.getElementsByPoint = function(t, e) {
                        var i = this.set();
                        return this.forEach((function(r) {
                            r.isPointInside(t, e) && i.push(r)
                        })), i
                    }, zt.isPointInside = function(t, i) {
                        var r = this.realPath = Q[this.type](this);
                        return this.attr("transform") && this.attr("transform").length && (r = e.transformPath(r, this.attr("transform"))), e.isPointInsidePath(r, t, i)
                    }, zt.getBBox = function(t) {
                        if (this.removed) return {};
                        var e = this._;
                        return t ? (!e.dirty && e.bboxwt || (this.realPath = Q[this.type](this), e.bboxwt = yt(this.realPath), e.bboxwt.toString = Yt, e.dirty = 0), e.bboxwt) : ((e.dirty || e.dirtyT || !e.bbox) && (!e.dirty && this.realPath || (e.bboxwt = 0, this.realPath = Q[this.type](this)), e.bbox = yt($(this.realPath, this.matrix)), e.bbox.toString = Yt, e.dirty = e.dirtyT = 0), e.bbox)
                    }, zt.clone = function() {
                        if (this.removed) return null;
                        var t = this.paper[this.type]().attr(this.attr());
                        return this.__set__ && this.__set__.push(t), t
                    }, zt.glow = function(t) {
                        if ("text" == this.type) return null;
                        var e = {
                                width: ((t = t || {}).width || 10) + (+this.attr("stroke-width") || 1),
                                fill: t.fill || !1,
                                opacity: null == t.opacity ? .5 : t.opacity,
                                offsetx: t.offsetx || 0,
                                offsety: t.offsety || 0,
                                color: t.color || "#000"
                            },
                            i = e.width / 2,
                            r = this.paper,
                            n = r.set(),
                            o = this.realPath || Q[this.type](this);
                        o = this.matrix ? $(o, this.matrix) : o;
                        for (var a = 1; a < i + 1; a++) n.push(r.path(o).attr({
                            stroke: e.color,
                            fill: e.fill ? e.color : "none",
                            "stroke-linejoin": "round",
                            "stroke-linecap": "round",
                            "stroke-width": +(e.width / i * a).toFixed(3),
                            opacity: +(e.opacity / i).toFixed(3)
                        }));
                        return n.insertBefore(this).translate(e.offsetx, e.offsety)
                    };
                    var Vt = function(t, i, r, n, o, a, s, l, h) {
                            return null == h ? pt(t, i, r, n, o, a, s, l) : e.findDotsAtSegment(t, i, r, n, o, a, s, l, function(t, e, i, r, n, o, a, s, l) {
                                if (!(l < 0 || pt(t, e, i, r, n, o, a, s) < l)) {
                                    var h, c = .5,
                                        u = 1 - c;
                                    for (h = pt(t, e, i, r, n, o, a, s, u); E(h - l) > .01;) h = pt(t, e, i, r, n, o, a, s, u += (h < l ? 1 : -1) * (c /= 2));
                                    return u
                                }
                            }(t, i, r, n, o, a, s, l, h))
                        },
                        qt = function(t, i) {
                            return function(r, n, o) {
                                for (var a, s, l, h, c, u = "", f = {}, d = 0, p = 0, g = (r = kt(r)).length; p < g; p++) {
                                    if ("M" == (l = r[p])[0]) a = +l[1], s = +l[2];
                                    else {
                                        if (d + (h = Vt(a, s, l[1], l[2], l[3], l[4], l[5], l[6])) > n) {
                                            if (i && !f.start) {
                                                if (u += ["C" + (c = Vt(a, s, l[1], l[2], l[3], l[4], l[5], l[6], n - d)).start.x, c.start.y, c.m.x, c.m.y, c.x, c.y], o) return u;
                                                f.start = u, u = ["M" + c.x, c.y + "C" + c.n.x, c.n.y, c.end.x, c.end.y, l[5], l[6]].join(), d += h, a = +l[5], s = +l[6];
                                                continue
                                            }
                                            if (!t && !i) return {
                                                x: (c = Vt(a, s, l[1], l[2], l[3], l[4], l[5], l[6], n - d)).x,
                                                y: c.y,
                                                alpha: c.alpha
                                            }
                                        }
                                        d += h, a = +l[5], s = +l[6]
                                    }
                                    u += l.shift() + l
                                }
                                return f.end = u, (c = t ? d : i ? f : e.findDotsAtSegment(a, s, l[0], l[1], l[2], l[3], l[4], l[5], 1)).alpha && (c = {
                                    x: c.x,
                                    y: c.y,
                                    alpha: c.alpha
                                }), c
                            }
                        },
                        Zt = qt(1),
                        Kt = qt(),
                        Jt = qt(0, 1);
                    e.getTotalLength = Zt, e.getPointAtLength = Kt, e.getSubpath = function(t, e, i) {
                        if (this.getTotalLength(t) - i < 1e-6) return Jt(t, e).end;
                        var r = Jt(t, i, 1);
                        return e ? Jt(r, e).end : r
                    }, zt.getTotalLength = function() {
                        var t = this.getPath();
                        if (t) return this.node.getTotalLength ? this.node.getTotalLength() : Zt(t)
                    }, zt.getPointAtLength = function(t) {
                        var e = this.getPath();
                        if (e) return Kt(e, t)
                    }, zt.getPath = function() {
                        var t, i = e._getPath[this.type];
                        if ("text" != this.type && "set" != this.type) return i && (t = i(this)), t
                    }, zt.getSubpath = function(t, i) {
                        var r = this.getPath();
                        if (r) return e.getSubpath(r, t, i)
                    };
                    var Qt = e.easing_formulas = {
                        linear: function(t) {
                            return t
                        },
                        "<": function(t) {
                            return k(t, 1.7)
                        },
                        ">": function(t) {
                            return k(t, .48)
                        },
                        "<>": function(t) {
                            var e = .48 - t / 1.04,
                                i = S.sqrt(.1734 + e * e),
                                r = i - e,
                                n = -i - e,
                                o = k(E(r), 1 / 3) * (r < 0 ? -1 : 1) + k(E(n), 1 / 3) * (n < 0 ? -1 : 1) + .5;
                            return 3 * (1 - o) * o * o + o * o * o
                        },
                        backIn: function(t) {
                            var e = 1.70158;
                            return t * t * ((e + 1) * t - e)
                        },
                        backOut: function(t) {
                            var e = 1.70158;
                            return (t -= 1) * t * ((e + 1) * t + e) + 1
                        },
                        elastic: function(t) {
                            return t == !!t ? t : k(2, -10 * t) * S.sin(2 * O * (t - .075) / .3) + 1
                        },
                        bounce: function(t) {
                            var e = 7.5625,
                                i = 2.75;
                            return t < 1 / i ? e * t * t : t < 2 / i ? e * (t -= 1.5 / i) * t + .75 : t < 2.5 / i ? e * (t -= 2.25 / i) * t + .9375 : e * (t -= 2.625 / i) * t + .984375
                        }
                    };
                    Qt.easeIn = Qt["ease-in"] = Qt["<"], Qt.easeOut = Qt["ease-out"] = Qt[">"], Qt.easeInOut = Qt["ease-in-out"] = Qt["<>"], Qt["back-in"] = Qt.backIn, Qt["back-out"] = Qt.backOut;
                    var $t = [],
                        te = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(t) {
                            setTimeout(t, 16)
                        },
                        ee = function() {
                            for (var i = +new Date, r = 0; r < $t.length; r++) {
                                var n = $t[r];
                                if (!n.el.removed && !n.paused) {
                                    var o, a, s = i - n.start,
                                        l = n.ms,
                                        c = n.easing,
                                        u = n.from,
                                        f = n.diff,
                                        d = n.to,
                                        g = (n.t, n.el),
                                        v = {},
                                        y = {};
                                    if (n.initstatus ? (s = (n.initstatus * n.anim.top - n.prev) / (n.percent - n.prev) * l, n.status = n.initstatus, delete n.initstatus, n.stop && $t.splice(r--, 1)) : n.status = (n.prev + (n.percent - n.prev) * (s / l)) / n.anim.top, !(s < 0))
                                        if (s < l) {
                                            var b = c(s / l);
                                            for (var x in u)
                                                if (u[h](x)) {
                                                    switch (N[x]) {
                                                        case I:
                                                            o = +u[x] + b * l * f[x];
                                                            break;
                                                        case "colour":
                                                            o = "rgb(" + [ie(R(u[x].r + b * l * f[x].r)), ie(R(u[x].g + b * l * f[x].g)), ie(R(u[x].b + b * l * f[x].b))].join(",") + ")";
                                                            break;
                                                        case "path":
                                                            o = [];
                                                            for (var _ = 0, w = u[x].length; _ < w; _++) {
                                                                o[_] = [u[x][_][0]];
                                                                for (var S = 1, C = u[x][_].length; S < C; S++) o[_][S] = +u[x][_][S] + b * l * f[x][_][S];
                                                                o[_] = o[_].join(m)
                                                            }
                                                            o = o.join(m);
                                                            break;
                                                        case "transform":
                                                            if (f[x].real)
                                                                for (o = [], _ = 0, w = u[x].length; _ < w; _++)
                                                                    for (o[_] = [u[x][_][0]], S = 1, C = u[x][_].length; S < C; S++) o[_][S] = u[x][_][S] + b * l * f[x][_][S];
                                                            else {
                                                                var T = function(t) {
                                                                    return +u[x][t] + b * l * f[x][t]
                                                                };
                                                                o = [
                                                                    ["m", T(0), T(1), T(2), T(3), T(4), T(5)]
                                                                ]
                                                            }
                                                            break;
                                                        case "csv":
                                                            if ("clip-rect" == x)
                                                                for (o = [], _ = 4; _--;) o[_] = +u[x][_] + b * l * f[x][_];
                                                            break;
                                                        default:
                                                            var E = [][p](u[x]);
                                                            for (o = [], _ = g.paper.customAttributes[x].length; _--;) o[_] = +E[_] + b * l * f[x][_]
                                                    }
                                                    v[x] = o
                                                } g.attr(v),
                                                function(e, i, r) {
                                                    setTimeout((function() {
                                                        t("raphael.anim.frame." + e, i, r)
                                                    }))
                                                }(g.id, g, n.anim)
                                        } else {
                                            if (function(i, r, n) {
                                                    setTimeout((function() {
                                                        t("raphael.anim.frame." + r.id, r, n), t("raphael.anim.finish." + r.id, r, n), e.is(i, "function") && i.call(r)
                                                    }))
                                                }(n.callback, g, n.anim), g.attr(d), $t.splice(r--, 1), n.repeat > 1 && !n.next) {
                                                for (a in d) d[h](a) && (y[a] = n.totalOrigin[a]);
                                                n.el.attr(y), oe(n.anim, n.el, n.anim.percents[0], null, n.totalOrigin, n.repeat - 1)
                                            }
                                            n.next && !n.stop && oe(n.anim, n.el, n.next, null, n.totalOrigin, n.repeat)
                                        }
                                }
                            }
                            $t.length && te(ee)
                        },
                        ie = function(t) {
                            return t > 255 ? 255 : t < 0 ? 0 : t
                        };

                    function re(t, e, i, r, n, o) {
                        var a = 3 * e,
                            s = 3 * (r - e) - a,
                            l = 1 - a - s,
                            h = 3 * i,
                            c = 3 * (n - i) - h,
                            u = 1 - h - c;

                        function f(t) {
                            return ((l * t + s) * t + a) * t
                        }
                        return function(t, e) {
                            var i = function(t, e) {
                                var i, r, n, o, h, c;
                                for (n = t, c = 0; c < 8; c++) {
                                    if (o = f(n) - t, E(o) < e) return n;
                                    if (E(h = (3 * l * n + 2 * s) * n + a) < 1e-6) break;
                                    n -= o / h
                                }
                                if ((n = t) < (i = 0)) return i;
                                if (n > (r = 1)) return r;
                                for (; i < r;) {
                                    if (o = f(n), E(o - t) < e) return n;
                                    t > o ? i = n : r = n, n = (r - i) / 2 + i
                                }
                                return n
                            }(t, e);
                            return ((u * i + c) * i + h) * i
                        }(t, 1 / (200 * o))
                    }

                    function ne(t, e) {
                        var i = [],
                            r = {};
                        if (this.ms = e, this.times = 1, t) {
                            for (var n in t) t[h](n) && (r[F(n)] = t[n], i.push(F(n)));
                            i.sort(q)
                        }
                        this.anim = r, this.top = i[i.length - 1], this.percents = i
                    }

                    function oe(i, r, n, o, s, l) {
                        n = F(n);
                        var c, u, f, d, g, v, m = i.ms,
                            x = {},
                            _ = {},
                            w = {};
                        if (o)
                            for (C = 0, T = $t.length; C < T; C++) {
                                var S = $t[C];
                                if (S.el.id == r.id && S.anim == i) {
                                    S.percent != n ? ($t.splice(C, 1), f = 1) : u = S, r.attr(S.totalOrigin);
                                    break
                                }
                            } else o = +_;
                        for (var C = 0, T = i.percents.length; C < T; C++) {
                            if (i.percents[C] == n || i.percents[C] > o * i.top) {
                                n = i.percents[C], g = i.percents[C - 1] || 0, m = m / i.top * (n - g), d = i.percents[C + 1], c = i.anim[n];
                                break
                            }
                            o && r.attr(i.anim[i.percents[C]])
                        }
                        if (c) {
                            if (u) u.initstatus = o, u.start = new Date - u.ms * o;
                            else {
                                for (var E in c)
                                    if (c[h](E) && (N[h](E) || r.paper.customAttributes[h](E))) switch (x[E] = r.attr(E), null == x[E] && (x[E] = U[E]), _[E] = c[E], N[E]) {
                                        case I:
                                            w[E] = (_[E] - x[E]) / m;
                                            break;
                                        case "colour":
                                            x[E] = e.getRGB(x[E]);
                                            var k = e.getRGB(_[E]);
                                            w[E] = {
                                                r: (k.r - x[E].r) / m,
                                                g: (k.g - x[E].g) / m,
                                                b: (k.b - x[E].b) / m
                                            };
                                            break;
                                        case "path":
                                            var O = kt(x[E], _[E]),
                                                P = O[1];
                                            for (x[E] = O[0], w[E] = [], C = 0, T = x[E].length; C < T; C++) {
                                                w[E][C] = [0];
                                                for (var L = 1, M = x[E][C].length; L < M; L++) w[E][C][L] = (P[C][L] - x[E][C][L]) / m
                                            }
                                            break;
                                        case "transform":
                                            var A = r._,
                                                R = Mt(A[E], _[E]);
                                            if (R)
                                                for (x[E] = R.from, _[E] = R.to, w[E] = [], w[E].real = !0, C = 0, T = x[E].length; C < T; C++)
                                                    for (w[E][C] = [x[E][C][0]], L = 1, M = x[E][C].length; L < M; L++) w[E][C][L] = (_[E][C][L] - x[E][C][L]) / m;
                                            else {
                                                var j = r.matrix || new At,
                                                    B = {
                                                        _: {
                                                            transform: A.transform
                                                        },
                                                        getBBox: function() {
                                                            return r.getBBox(1)
                                                        }
                                                    };
                                                x[E] = [j.a, j.b, j.c, j.d, j.e, j.f], Pt(B, _[E]), _[E] = B._.transform, w[E] = [(B.matrix.a - j.a) / m, (B.matrix.b - j.b) / m, (B.matrix.c - j.c) / m, (B.matrix.d - j.d) / m, (B.matrix.e - j.e) / m, (B.matrix.f - j.f) / m]
                                            }
                                            break;
                                        case "csv":
                                            var G = y(c[E])[b](a),
                                                X = y(x[E])[b](a);
                                            if ("clip-rect" == E)
                                                for (x[E] = X, w[E] = [], C = X.length; C--;) w[E][C] = (G[C] - x[E][C]) / m;
                                            _[E] = G;
                                            break;
                                        default:
                                            for (G = [][p](c[E]), X = [][p](x[E]), w[E] = [], C = r.paper.customAttributes[E].length; C--;) w[E][C] = ((G[C] || 0) - (X[C] || 0)) / m
                                    }
                                var z = c.easing,
                                    W = e.easing_formulas[z];
                                if (!W)
                                    if ((W = y(z).match(D)) && 5 == W.length) {
                                        var H = W;
                                        W = function(t) {
                                            return re(t, +H[1], +H[2], +H[3], +H[4], m)
                                        }
                                    } else W = Z;
                                if (S = {
                                        anim: i,
                                        percent: n,
                                        timestamp: v = c.start || i.start || +new Date,
                                        start: v + (i.del || 0),
                                        status: 0,
                                        initstatus: o || 0,
                                        stop: !1,
                                        ms: m,
                                        easing: W,
                                        from: x,
                                        diff: w,
                                        to: _,
                                        el: r,
                                        callback: c.callback,
                                        prev: g,
                                        next: d,
                                        repeat: l || i.times,
                                        origin: r.attr(),
                                        totalOrigin: s
                                    }, $t.push(S), o && !u && !f && (S.stop = !0, S.start = new Date - m * o, 1 == $t.length)) return ee();
                                f && (S.start = new Date - S.ms * o), 1 == $t.length && te(ee)
                            }
                            t("raphael.anim.start." + r.id, r, i)
                        }
                    }

                    function ae(t) {
                        for (var e = 0; e < $t.length; e++) $t[e].el.paper == t && $t.splice(e--, 1)
                    }
                    zt.animateWith = function(t, i, r, n, o, a) {
                        if (this.removed) return a && a.call(this), this;
                        var s = r instanceof ne ? r : e.animation(r, n, o, a);
                        oe(s, this, s.percents[0], null, this.attr());
                        for (var l = 0, h = $t.length; l < h; l++)
                            if ($t[l].anim == i && $t[l].el == t) {
                                $t[h - 1].start = $t[l].start;
                                break
                            } return this
                    }, zt.onAnimation = function(e) {
                        return e ? t.on("raphael.anim.frame." + this.id, e) : t.unbind("raphael.anim.frame." + this.id), this
                    }, ne.prototype.delay = function(t) {
                        var e = new ne(this.anim, this.ms);
                        return e.times = this.times, e.del = +t || 0, e
                    }, ne.prototype.repeat = function(t) {
                        var e = new ne(this.anim, this.ms);
                        return e.del = this.del, e.times = S.floor(C(t, 0)) || 1, e
                    }, e.animation = function(t, i, r, n) {
                        if (t instanceof ne) return t;
                        !e.is(r, "function") && r || (n = n || r || null, r = null), t = Object(t), i = +i || 0;
                        var o, a, s = {};
                        for (a in t) t[h](a) && F(a) != a && F(a) + "%" != a && (o = !0, s[a] = t[a]);
                        if (o) return r && (s.easing = r), n && (s.callback = n), new ne({
                            100: s
                        }, i);
                        if (n) {
                            var l = 0;
                            for (var c in t) {
                                var u = j(c);
                                t[h](c) && u > l && (l = u)
                            }!t[l += "%"].callback && (t[l].callback = n)
                        }
                        return new ne(t, i)
                    }, zt.animate = function(t, i, r, n) {
                        if (this.removed) return n && n.call(this), this;
                        var o = t instanceof ne ? t : e.animation(t, i, r, n);
                        return oe(o, this, o.percents[0], null, this.attr()), this
                    }, zt.setTime = function(t, e) {
                        return t && null != e && this.status(t, T(e, t.ms) / t.ms), this
                    }, zt.status = function(t, e) {
                        var i, r, n = [],
                            o = 0;
                        if (null != e) return oe(t, this, -1, T(e, 1)), this;
                        for (i = $t.length; o < i; o++)
                            if ((r = $t[o]).el.id == this.id && (!t || r.anim == t)) {
                                if (t) return r.status;
                                n.push({
                                    anim: r.anim,
                                    status: r.status
                                })
                            } return t ? 0 : n
                    }, zt.pause = function(e) {
                        for (var i = 0; i < $t.length; i++) $t[i].el.id != this.id || e && $t[i].anim != e || !1 !== t("raphael.anim.pause." + this.id, this, $t[i].anim) && ($t[i].paused = !0);
                        return this
                    }, zt.resume = function(e) {
                        for (var i = 0; i < $t.length; i++)
                            if ($t[i].el.id == this.id && (!e || $t[i].anim == e)) {
                                var r = $t[i];
                                !1 !== t("raphael.anim.resume." + this.id, this, r.anim) && (delete r.paused, this.status(r.anim, r.status))
                            } return this
                    }, zt.stop = function(e) {
                        for (var i = 0; i < $t.length; i++) $t[i].el.id != this.id || e && $t[i].anim != e || !1 !== t("raphael.anim.stop." + this.id, this, $t[i].anim) && $t.splice(i--, 1);
                        return this
                    }, t.on("raphael.remove", ae), t.on("raphael.clear", ae), zt.toString = function() {
                        return "RaphaÃ«lâ€™s object"
                    };
                    var se, le, he, ce, ue = function(t) {
                            if (this.items = [], this.length = 0, this.type = "set", t)
                                for (var e = 0, i = t.length; e < i; e++) !t[e] || t[e].constructor != zt.constructor && t[e].constructor != ue || (this[this.items.length] = this.items[this.items.length] = t[e], this.length++)
                        },
                        fe = ue.prototype;
                    for (var de in fe.push = function() {
                            for (var t, e, i = 0, r = arguments.length; i < r; i++) !(t = arguments[i]) || t.constructor != zt.constructor && t.constructor != ue || (this[e = this.items.length] = this.items[e] = t, this.length++);
                            return this
                        }, fe.pop = function() {
                            return this.length && delete this[this.length--], this.items.pop()
                        }, fe.forEach = function(t, e) {
                            for (var i = 0, r = this.items.length; i < r; i++)
                                if (!1 === t.call(e, this.items[i], i)) return this;
                            return this
                        }, zt) zt[h](de) && (fe[de] = function(t) {
                        return function() {
                            var e = arguments;
                            return this.forEach((function(i) {
                                i[t][d](i, e)
                            }))
                        }
                    }(de));
                    return fe.attr = function(t, i) {
                            if (t && e.is(t, P) && e.is(t[0], "object"))
                                for (var r = 0, n = t.length; r < n; r++) this.items[r].attr(t[r]);
                            else
                                for (var o = 0, a = this.items.length; o < a; o++) this.items[o].attr(t, i);
                            return this
                        }, fe.clear = function() {
                            for (; this.length;) this.pop()
                        }, fe.splice = function(t, e, i) {
                            t = t < 0 ? C(this.length + t, 0) : t, e = C(0, T(this.length - t, e));
                            var r, n = [],
                                o = [],
                                a = [];
                            for (r = 2; r < arguments.length; r++) a.push(arguments[r]);
                            for (r = 0; r < e; r++) o.push(this[t + r]);
                            for (; r < this.length - t; r++) n.push(this[t + r]);
                            var s = a.length;
                            for (r = 0; r < s + n.length; r++) this.items[t + r] = this[t + r] = r < s ? a[r] : n[r - s];
                            for (r = this.items.length = this.length -= e - s; this[r];) delete this[r++];
                            return new ue(o)
                        }, fe.exclude = function(t) {
                            for (var e = 0, i = this.length; e < i; e++)
                                if (this[e] == t) return this.splice(e, 1), !0
                        }, fe.animate = function(t, i, r, n) {
                            (e.is(r, "function") || !r) && (n = r || null);
                            var o, a, s = this.items.length,
                                l = s,
                                h = this;
                            if (!s) return this;
                            n && (a = function() {
                                !--s && n.call(h)
                            }), r = e.is(r, "string") ? r : a;
                            var c = e.animation(t, i, r, a);
                            for (o = this.items[--l].animate(c); l--;) this.items[l] && !this.items[l].removed && this.items[l].animateWith(o, c, c), this.items[l] && !this.items[l].removed || s--;
                            return this
                        }, fe.insertAfter = function(t) {
                            for (var e = this.items.length; e--;) this.items[e].insertAfter(t);
                            return this
                        }, fe.getBBox = function() {
                            for (var t = [], e = [], i = [], r = [], n = this.items.length; n--;)
                                if (!this.items[n].removed) {
                                    var o = this.items[n].getBBox();
                                    t.push(o.x), e.push(o.y), i.push(o.x + o.width), r.push(o.y + o.height)
                                } return {
                                x: t = T[d](0, t),
                                y: e = T[d](0, e),
                                x2: i = C[d](0, i),
                                y2: r = C[d](0, r),
                                width: i - t,
                                height: r - e
                            }
                        }, fe.clone = function(t) {
                            t = this.paper.set();
                            for (var e = 0, i = this.items.length; e < i; e++) t.push(this.items[e].clone());
                            return t
                        }, fe.toString = function() {
                            return "RaphaÃ«lâ€˜s set"
                        }, fe.glow = function(t) {
                            var e = this.paper.set();
                            return this.forEach((function(i, r) {
                                var n = i.glow(t);
                                null != n && n.forEach((function(t, i) {
                                    e.push(t)
                                }))
                            })), e
                        }, fe.isPointInside = function(t, e) {
                            var i = !1;
                            return this.forEach((function(r) {
                                if (r.isPointInside(t, e)) return i = !0, !1
                            })), i
                        }, e.registerFont = function(t) {
                            if (!t.face) return t;
                            this.fonts = this.fonts || {};
                            var e = {
                                    w: t.w,
                                    face: {},
                                    glyphs: {}
                                },
                                i = t.face["font-family"];
                            for (var r in t.face) t.face[h](r) && (e.face[r] = t.face[r]);
                            if (this.fonts[i] ? this.fonts[i].push(e) : this.fonts[i] = [e], !t.svg)
                                for (var n in e.face["units-per-em"] = j(t.face["units-per-em"], 10), t.glyphs)
                                    if (t.glyphs[h](n)) {
                                        var o = t.glyphs[n];
                                        if (e.glyphs[n] = {
                                                w: o.w,
                                                k: {},
                                                d: o.d && "M" + o.d.replace(/[mlcxtrv]/g, (function(t) {
                                                    return {
                                                        l: "L",
                                                        c: "C",
                                                        x: "z",
                                                        t: "m",
                                                        r: "l",
                                                        v: "c"
                                                    } [t] || "M"
                                                })) + "z"
                                            }, o.k)
                                            for (var a in o.k) o[h](a) && (e.glyphs[n].k[a] = o.k[a])
                                    } return t
                        }, r.getFont = function(t, i, r, n) {
                            if (n = n || "normal", r = r || "normal", i = +i || {
                                    normal: 400,
                                    bold: 700,
                                    lighter: 300,
                                    bolder: 800
                                } [i] || 400, e.fonts) {
                                var o, a = e.fonts[t];
                                if (!a) {
                                    var s = new RegExp("(^|\\s)" + t.replace(/[^\w\d\s+!~.:_-]/g, v) + "(\\s|$)", "i");
                                    for (var l in e.fonts)
                                        if (e.fonts[h](l) && s.test(l)) {
                                            a = e.fonts[l];
                                            break
                                        }
                                }
                                if (a)
                                    for (var c = 0, u = a.length; c < u && ((o = a[c]).face["font-weight"] != i || o.face["font-style"] != r && o.face["font-style"] || o.face["font-stretch"] != n); c++);
                                return o
                            }
                        }, r.print = function(t, i, r, n, o, s, l, h) {
                            s = s || "middle", l = C(T(l || 0, 1), -1), h = C(T(h || 1, 3), 1);
                            var c, u = y(r)[b](v),
                                f = 0,
                                d = 0,
                                p = v;
                            if (e.is(n, "string") && (n = this.getFont(n)), n) {
                                c = (o || 16) / n.face["units-per-em"];
                                for (var g = n.face.bbox[b](a), m = +g[0], x = g[3] - g[1], _ = 0, w = +g[1] + ("baseline" == s ? x + +n.face.descent : x / 2), S = 0, E = u.length; S < E; S++) {
                                    if ("\n" == u[S]) f = 0, O = 0, d = 0, _ += x * h;
                                    else {
                                        var k = d && n.glyphs[u[S - 1]] || {},
                                            O = n.glyphs[u[S]];
                                        f += d ? (k.w || n.w) + (k.k && k.k[u[S]] || 0) + n.w * l : 0, d = 1
                                    }
                                    O && O.d && (p += e.transformPath(O.d, ["t", f * c, _ * c, "s", c, c, m, w, "t", (t - m) / c, (i - w) / c]))
                                }
                            }
                            return this.path(p).attr({
                                fill: "#000",
                                stroke: "none"
                            })
                        }, r.add = function(t) {
                            if (e.is(t, "array"))
                                for (var i, r = this.set(), n = 0, o = t.length; n < o; n++) i = t[n] || {}, s[h](i.type) && r.push(this[i.type]().attr(i));
                            return r
                        }, e.format = function(t, i) {
                            var r = e.is(i, P) ? [0][p](i) : arguments;
                            return t && e.is(t, "string") && r.length - 1 && (t = t.replace(l, (function(t, e) {
                                return null == r[++e] ? v : r[e]
                            }))), t || v
                        }, e.fullfill = (se = /\{([^\}]+)\}/g, le = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g, function(t, e) {
                            return String(t).replace(se, (function(t, i) {
                                return function(t, e, i) {
                                    var r = i;
                                    return e.replace(le, (function(t, e, i, n, o) {
                                        e = e || n, r && (e in r && (r = r[e]), "function" == typeof r && o && (r = r()))
                                    })), r = (null == r || r == i ? t : r) + ""
                                }(t, i, e)
                            }))
                        }), e.ninja = function() {
                            if (u.was) c.win.Raphael = u.is;
                            else {
                                window.Raphael = void 0;
                                try {
                                    delete window.Raphael
                                } catch (t) {}
                            }
                            return e
                        }, e.st = fe, t.on("raphael.DOMload", (function() {
                            i = !0
                        })), null == (he = document).readyState && he.addEventListener && (he.addEventListener("DOMContentLoaded", ce = function() {
                            he.removeEventListener("DOMContentLoaded", ce, !1), he.readyState = "complete"
                        }, !1), he.readyState = "loading"),
                        function t() {
                            /in/.test(he.readyState) ? setTimeout(t, 9) : e.eve("raphael.DOMload")
                        }(), e
                }.apply(e, r)) || (t.exports = n)
            }, function(t, e, i) {
                var r, n;
                r = [i(0), i(3), i(4)], void 0 === (n = function(t) {
                    return t
                }.apply(e, r)) || (t.exports = n)
            }, function(t, e, i) {
                var r, n, o, a, s, l, h, c, u, f, d, p, g, v;
                a = "hasOwnProperty", s = /[\.\/]/, l = /\s*,\s*/, h = function(t, e) {
                    return t - e
                }, c = {
                    n: {}
                }, u = function() {
                    for (var t = 0, e = this.length; t < e; t++)
                        if (void 0 !== this[t]) return this[t]
                }, f = function() {
                    for (var t = this.length; --t;)
                        if (void 0 !== this[t]) return this[t]
                }, d = Object.prototype.toString, p = String, g = Array.isArray || function(t) {
                    return t instanceof Array || "[object Array]" == d.call(t)
                }, (v = function(t, e) {
                    var i, r = o,
                        a = Array.prototype.slice.call(arguments, 2),
                        s = v.listeners(t),
                        l = 0,
                        c = [],
                        d = {},
                        p = [],
                        g = n;
                    p.firstDefined = u, p.lastDefined = f, n = t, o = 0;
                    for (var m = 0, y = s.length; m < y; m++) "zIndex" in s[m] && (c.push(s[m].zIndex), s[m].zIndex < 0 && (d[s[m].zIndex] = s[m]));
                    for (c.sort(h); c[l] < 0;)
                        if (i = d[c[l++]], p.push(i.apply(e, a)), o) return o = r, p;
                    for (m = 0; m < y; m++)
                        if ("zIndex" in (i = s[m]))
                            if (i.zIndex == c[l]) {
                                if (p.push(i.apply(e, a)), o) break;
                                do {
                                    if ((i = d[c[++l]]) && p.push(i.apply(e, a)), o) break
                                } while (i)
                            } else d[i.zIndex] = i;
                    else if (p.push(i.apply(e, a)), o) break;
                    return o = r, n = g, p
                })._events = c, v.listeners = function(t) {
                    var e, i, r, n, o, a, l, h, u = g(t) ? t : t.split(s),
                        f = c,
                        d = [f],
                        p = [];
                    for (n = 0, o = u.length; n < o; n++) {
                        for (h = [], a = 0, l = d.length; a < l; a++)
                            for (i = [(f = d[a].n)[u[n]], f["*"]], r = 2; r--;)(e = i[r]) && (h.push(e), p = p.concat(e.f || []));
                        d = h
                    }
                    return p
                }, v.separator = function(t) {
                    t ? (t = "[" + (t = p(t).replace(/(?=[\.\^\]\[\-])/g, "\\")) + "]", s = new RegExp(t)) : s = /[\.\/]/
                }, v.on = function(t, e) {
                    if ("function" != typeof e) return function() {};
                    for (var i = g(t) ? g(t[0]) ? t : [t] : p(t).split(l), r = 0, n = i.length; r < n; r++) ! function(t) {
                        for (var i, r = g(t) ? t : p(t).split(s), n = c, o = 0, a = r.length; o < a; o++) n = (n = n.n).hasOwnProperty(r[o]) && n[r[o]] || (n[r[o]] = {
                            n: {}
                        });
                        for (n.f = n.f || [], o = 0, a = n.f.length; o < a; o++)
                            if (n.f[o] == e) {
                                i = !0;
                                break
                            }! i && n.f.push(e)
                    }(i[r]);
                    return function(t) {
                        +t == +t && (e.zIndex = +t)
                    }
                }, v.f = function(t) {
                    var e = [].slice.call(arguments, 1);
                    return function() {
                        v.apply(null, [t, null].concat(e).concat([].slice.call(arguments, 0)))
                    }
                }, v.stop = function() {
                    o = 1
                }, v.nt = function(t) {
                    var e = g(n) ? n.join(".") : n;
                    return t ? new RegExp("(?:\\.|\\/|^)" + t + "(?:\\.|\\/|$)").test(e) : e
                }, v.nts = function() {
                    return g(n) ? n : n.split(s)
                }, v.off = v.unbind = function(t, e) {
                    if (t) {
                        var i = g(t) ? g(t[0]) ? t : [t] : p(t).split(l);
                        if (i.length > 1)
                            for (var r = 0, n = i.length; r < n; r++) v.off(i[r], e);
                        else {
                            i = g(t) ? t : p(t).split(s);
                            var o, h, u, f, d, m = [c];
                            for (r = 0, n = i.length; r < n; r++)
                                for (f = 0; f < m.length; f += u.length - 2) {
                                    if (u = [f, 1], o = m[f].n, "*" != i[r]) o[i[r]] && u.push(o[i[r]]);
                                    else
                                        for (h in o) o[a](h) && u.push(o[h]);
                                    m.splice.apply(m, u)
                                }
                            for (r = 0, n = m.length; r < n; r++)
                                for (o = m[r]; o.n;) {
                                    if (e) {
                                        if (o.f) {
                                            for (f = 0, d = o.f.length; f < d; f++)
                                                if (o.f[f] == e) {
                                                    o.f.splice(f, 1);
                                                    break
                                                }! o.f.length && delete o.f
                                        }
                                        for (h in o.n)
                                            if (o.n[a](h) && o.n[h].f) {
                                                var y = o.n[h].f;
                                                for (f = 0, d = y.length; f < d; f++)
                                                    if (y[f] == e) {
                                                        y.splice(f, 1);
                                                        break
                                                    }! y.length && delete o.n[h].f
                                            }
                                    } else
                                        for (h in delete o.f, o.n) o.n[a](h) && o.n[h].f && delete o.n[h].f;
                                    o = o.n
                                }
                        }
                    } else v._events = c = {
                        n: {}
                    }
                }, v.once = function(t, e) {
                    var i = function() {
                        return v.off(t, i), e.apply(this, arguments)
                    };
                    return v.on(t, i)
                }, v.version = "0.5.0", v.toString = function() {
                    return "You are running Eve 0.5.0"
                }, t.exports ? t.exports = v : void 0 === (r = function() {
                    return v
                }.apply(e, [])) || (t.exports = r)
            }, function(t, e, i) {
                var r, n;
                r = [i(0)], void 0 === (n = function(t) {
                    if (!t || t.svg) {
                        var e = "hasOwnProperty",
                            i = String,
                            r = parseFloat,
                            n = parseInt,
                            o = Math,
                            a = o.max,
                            s = o.abs,
                            l = o.pow,
                            h = /[, ]+/,
                            c = t.eve,
                            u = "",
                            f = " ",
                            d = "http://www.w3.org/1999/xlink",
                            p = {
                                block: "M5,0 0,2.5 5,5z",
                                classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
                                diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
                                open: "M6,1 1,3.5 6,6",
                                oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
                            },
                            g = {};
                        t.toString = function() {
                            return "Your browser supports SVG.\nYou are running RaphaÃ«l " + this.version
                        };
                        var v = function(r, n) {
                                if (n)
                                    for (var o in "string" == typeof r && (r = v(r)), n) n[e](o) && ("xlink:" == o.substring(0, 6) ? r.setAttributeNS(d, o.substring(6), i(n[o])) : r.setAttribute(o, i(n[o])));
                                else(r = t._g.doc.createElementNS("http://www.w3.org/2000/svg", r)).style && (r.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
                                return r
                            },
                            m = function(e, n) {
                                var h = "linear",
                                    c = e.id + n,
                                    f = .5,
                                    d = .5,
                                    p = e.node,
                                    g = e.paper,
                                    m = p.style,
                                    b = t._g.doc.getElementById(c);
                                if (!b) {
                                    if (n = (n = i(n).replace(t._radial_gradient, (function(t, e, i) {
                                            if (h = "radial", e && i) {
                                                f = r(e);
                                                var n = 2 * ((d = r(i)) > .5) - 1;
                                                l(f - .5, 2) + l(d - .5, 2) > .25 && (d = o.sqrt(.25 - l(f - .5, 2)) * n + .5) && .5 != d && (d = d.toFixed(5) - 1e-5 * n)
                                            }
                                            return u
                                        }))).split(/\s*\-\s*/), "linear" == h) {
                                        var x = n.shift();
                                        if (x = -r(x), isNaN(x)) return null;
                                        var _ = [0, 0, o.cos(t.rad(x)), o.sin(t.rad(x))],
                                            w = 1 / (a(s(_[2]), s(_[3])) || 1);
                                        _[2] *= w, _[3] *= w, _[2] < 0 && (_[0] = -_[2], _[2] = 0), _[3] < 0 && (_[1] = -_[3], _[3] = 0)
                                    }
                                    var S = t._parseDots(n);
                                    if (!S) return null;
                                    if (c = c.replace(/[\(\)\s,\xb0#]/g, "_"), e.gradient && c != e.gradient.id && (g.defs.removeChild(e.gradient), delete e.gradient), !e.gradient) {
                                        b = v(h + "Gradient", {
                                            id: c
                                        }), e.gradient = b, v(b, "radial" == h ? {
                                            fx: f,
                                            fy: d
                                        } : {
                                            x1: _[0],
                                            y1: _[1],
                                            x2: _[2],
                                            y2: _[3],
                                            gradientTransform: e.matrix.invert()
                                        }), g.defs.appendChild(b);
                                        for (var C = 0, T = S.length; C < T; C++) b.appendChild(v("stop", {
                                            offset: S[C].offset ? S[C].offset : C ? "100%" : "0%",
                                            "stop-color": S[C].color || "#fff",
                                            "stop-opacity": isFinite(S[C].opacity) ? S[C].opacity : 1
                                        }))
                                    }
                                }
                                return v(p, {
                                    fill: y(c),
                                    opacity: 1,
                                    "fill-opacity": 1
                                }), m.fill = u, m.opacity = 1, m.fillOpacity = 1, 1
                            },
                            y = function(t) {
                                if ((e = document.documentMode) && (9 === e || 10 === e)) return "url('#" + t + "')";
                                var e, i = document.location;
                                return "url('" + i.protocol + "//" + i.host + i.pathname + i.search + "#" + t + "')"
                            },
                            b = function(t) {
                                var e = t.getBBox(1);
                                v(t.pattern, {
                                    patternTransform: t.matrix.invert() + " translate(" + e.x + "," + e.y + ")"
                                })
                            },
                            x = function(r, n, o) {
                                if ("path" == r.type) {
                                    for (var a, s, l, h, c, f = i(n).toLowerCase().split("-"), d = r.paper, m = o ? "end" : "start", y = r.node, b = r.attrs, x = b["stroke-width"], _ = f.length, w = "classic", S = 3, C = 3, T = 5; _--;) switch (f[_]) {
                                        case "block":
                                        case "classic":
                                        case "oval":
                                        case "diamond":
                                        case "open":
                                        case "none":
                                            w = f[_];
                                            break;
                                        case "wide":
                                            C = 5;
                                            break;
                                        case "narrow":
                                            C = 2;
                                            break;
                                        case "long":
                                            S = 5;
                                            break;
                                        case "short":
                                            S = 2
                                    }
                                    if ("open" == w ? (S += 2, C += 2, T += 2, l = 1, h = o ? 4 : 1, c = {
                                            fill: "none",
                                            stroke: b.stroke
                                        }) : (h = l = S / 2, c = {
                                            fill: b.stroke,
                                            stroke: "none"
                                        }), r._.arrows ? o ? (r._.arrows.endPath && g[r._.arrows.endPath]--, r._.arrows.endMarker && g[r._.arrows.endMarker]--) : (r._.arrows.startPath && g[r._.arrows.startPath]--, r._.arrows.startMarker && g[r._.arrows.startMarker]--) : r._.arrows = {}, "none" != w) {
                                        var E = "raphael-marker-" + w,
                                            k = "raphael-marker-" + m + w + S + C + "-obj" + r.id;
                                        t._g.doc.getElementById(E) ? g[E]++ : (d.defs.appendChild(v(v("path"), {
                                            "stroke-linecap": "round",
                                            d: p[w],
                                            id: E
                                        })), g[E] = 1);
                                        var O, I = t._g.doc.getElementById(k);
                                        I ? (g[k]++, O = I.getElementsByTagName("use")[0]) : (I = v(v("marker"), {
                                            id: k,
                                            markerHeight: C,
                                            markerWidth: S,
                                            orient: "auto",
                                            refX: h,
                                            refY: C / 2
                                        }), O = v(v("use"), {
                                            "xlink:href": "#" + E,
                                            transform: (o ? "rotate(180 " + S / 2 + " " + C / 2 + ") " : u) + "scale(" + S / T + "," + C / T + ")",
                                            "stroke-width": (1 / ((S / T + C / T) / 2)).toFixed(4)
                                        }), I.appendChild(O), d.defs.appendChild(I), g[k] = 1), v(O, c);
                                        var P = l * ("diamond" != w && "oval" != w);
                                        o ? (a = r._.arrows.startdx * x || 0, s = t.getTotalLength(b.path) - P * x) : (a = P * x, s = t.getTotalLength(b.path) - (r._.arrows.enddx * x || 0)), (c = {})["marker-" + m] = "url(#" + k + ")", (s || a) && (c.d = t.getSubpath(b.path, a, s)), v(y, c), r._.arrows[m + "Path"] = E, r._.arrows[m + "Marker"] = k, r._.arrows[m + "dx"] = P, r._.arrows[m + "Type"] = w, r._.arrows[m + "String"] = n
                                    } else o ? (a = r._.arrows.startdx * x || 0, s = t.getTotalLength(b.path) - a) : (a = 0, s = t.getTotalLength(b.path) - (r._.arrows.enddx * x || 0)), r._.arrows[m + "Path"] && v(y, {
                                        d: t.getSubpath(b.path, a, s)
                                    }), delete r._.arrows[m + "Path"], delete r._.arrows[m + "Marker"], delete r._.arrows[m + "dx"], delete r._.arrows[m + "Type"], delete r._.arrows[m + "String"];
                                    for (c in g)
                                        if (g[e](c) && !g[c]) {
                                            var L = t._g.doc.getElementById(c);
                                            L && L.parentNode.removeChild(L)
                                        }
                                }
                            },
                            _ = {
                                "-": [3, 1],
                                ".": [1, 1],
                                "-.": [3, 1, 1, 1],
                                "-..": [3, 1, 1, 1, 1, 1],
                                ". ": [1, 3],
                                "- ": [4, 3],
                                "--": [8, 3],
                                "- .": [4, 3, 1, 3],
                                "--.": [8, 3, 1, 3],
                                "--..": [8, 3, 1, 3, 1, 3]
                            },
                            w = function(t, e, r) {
                                if (e = _[i(e).toLowerCase()]) {
                                    for (var n = t.attrs["stroke-width"] || "1", o = {
                                            round: n,
                                            square: n,
                                            butt: 0
                                        } [t.attrs["stroke-linecap"] || r["stroke-linecap"]] || 0, a = [], s = e.length; s--;) a[s] = e[s] * n + (s % 2 ? 1 : -1) * o;
                                    v(t.node, {
                                        "stroke-dasharray": a.join(",")
                                    })
                                } else v(t.node, {
                                    "stroke-dasharray": "none"
                                })
                            },
                            S = function(r, o) {
                                var l = r.node,
                                    c = r.attrs,
                                    f = l.style.visibility;
                                for (var p in l.style.visibility = "hidden", o)
                                    if (o[e](p)) {
                                        if (!t._availableAttrs[e](p)) continue;
                                        var g = o[p];
                                        switch (c[p] = g, p) {
                                            case "blur":
                                                r.blur(g);
                                                break;
                                            case "title":
                                                var y = l.getElementsByTagName("title");
                                                if (y.length && (y = y[0])) y.firstChild.nodeValue = g;
                                                else {
                                                    y = v("title");
                                                    var _ = t._g.doc.createTextNode(g);
                                                    y.appendChild(_), l.appendChild(y)
                                                }
                                                break;
                                            case "href":
                                            case "target":
                                                var S = l.parentNode;
                                                if ("a" != S.tagName.toLowerCase()) {
                                                    var T = v("a");
                                                    S.insertBefore(T, l), T.appendChild(l), S = T
                                                }
                                                "target" == p ? S.setAttributeNS(d, "show", "blank" == g ? "new" : g) : S.setAttributeNS(d, p, g);
                                                break;
                                            case "cursor":
                                                l.style.cursor = g;
                                                break;
                                            case "transform":
                                                r.transform(g);
                                                break;
                                            case "arrow-start":
                                                x(r, g);
                                                break;
                                            case "arrow-end":
                                                x(r, g, 1);
                                                break;
                                            case "clip-rect":
                                                var E = i(g).split(h);
                                                if (4 == E.length) {
                                                    r.clip && r.clip.parentNode.parentNode.removeChild(r.clip.parentNode);
                                                    var k = v("clipPath"),
                                                        O = v("rect");
                                                    k.id = t.createUUID(), v(O, {
                                                        x: E[0],
                                                        y: E[1],
                                                        width: E[2],
                                                        height: E[3]
                                                    }), k.appendChild(O), r.paper.defs.appendChild(k), v(l, {
                                                        "clip-path": "url(#" + k.id + ")"
                                                    }), r.clip = O
                                                }
                                                if (!g) {
                                                    var I = l.getAttribute("clip-path");
                                                    if (I) {
                                                        var P = t._g.doc.getElementById(I.replace(/(^url\(#|\)$)/g, u));
                                                        P && P.parentNode.removeChild(P), v(l, {
                                                            "clip-path": u
                                                        }), delete r.clip
                                                    }
                                                }
                                                break;
                                            case "path":
                                                "path" == r.type && (v(l, {
                                                    d: g ? c.path = t._pathToAbsolute(g) : "M0,0"
                                                }), r._.dirty = 1, r._.arrows && ("startString" in r._.arrows && x(r, r._.arrows.startString), "endString" in r._.arrows && x(r, r._.arrows.endString, 1)));
                                                break;
                                            case "width":
                                                if (l.setAttribute(p, g), r._.dirty = 1, !c.fx) break;
                                                p = "x", g = c.x;
                                            case "x":
                                                c.fx && (g = -c.x - (c.width || 0));
                                            case "rx":
                                                if ("rx" == p && "rect" == r.type) break;
                                            case "cx":
                                                l.setAttribute(p, g), r.pattern && b(r), r._.dirty = 1;
                                                break;
                                            case "height":
                                                if (l.setAttribute(p, g), r._.dirty = 1, !c.fy) break;
                                                p = "y", g = c.y;
                                            case "y":
                                                c.fy && (g = -c.y - (c.height || 0));
                                            case "ry":
                                                if ("ry" == p && "rect" == r.type) break;
                                            case "cy":
                                                l.setAttribute(p, g), r.pattern && b(r), r._.dirty = 1;
                                                break;
                                            case "r":
                                                "rect" == r.type ? v(l, {
                                                    rx: g,
                                                    ry: g
                                                }) : l.setAttribute(p, g), r._.dirty = 1;
                                                break;
                                            case "src":
                                                "image" == r.type && l.setAttributeNS(d, "href", g);
                                                break;
                                            case "stroke-width":
                                                1 == r._.sx && 1 == r._.sy || (g /= a(s(r._.sx), s(r._.sy)) || 1), l.setAttribute(p, g), c["stroke-dasharray"] && w(r, c["stroke-dasharray"], o), r._.arrows && ("startString" in r._.arrows && x(r, r._.arrows.startString), "endString" in r._.arrows && x(r, r._.arrows.endString, 1));
                                                break;
                                            case "stroke-dasharray":
                                                w(r, g, o);
                                                break;
                                            case "fill":
                                                var L = i(g).match(t._ISURL);
                                                if (L) {
                                                    k = v("pattern");
                                                    var M = v("image");
                                                    k.id = t.createUUID(), v(k, {
                                                            x: 0,
                                                            y: 0,
                                                            patternUnits: "userSpaceOnUse",
                                                            height: 1,
                                                            width: 1
                                                        }), v(M, {
                                                            x: 0,
                                                            y: 0,
                                                            "xlink:href": L[1]
                                                        }), k.appendChild(M),
                                                        function(e) {
                                                            t._preload(L[1], (function() {
                                                                var t = this.offsetWidth,
                                                                    i = this.offsetHeight;
                                                                v(e, {
                                                                    width: t,
                                                                    height: i
                                                                }), v(M, {
                                                                    width: t,
                                                                    height: i
                                                                })
                                                            }))
                                                        }(k), r.paper.defs.appendChild(k), v(l, {
                                                            fill: "url(#" + k.id + ")"
                                                        }), r.pattern = k, r.pattern && b(r);
                                                    break
                                                }
                                                var A = t.getRGB(g);
                                                if (A.error) {
                                                    if (("circle" == r.type || "ellipse" == r.type || "r" != i(g).charAt()) && m(r, g)) {
                                                        if ("opacity" in c || "fill-opacity" in c) {
                                                            var D = t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, u));
                                                            if (D) {
                                                                var R = D.getElementsByTagName("stop");
                                                                v(R[R.length - 1], {
                                                                    "stop-opacity": ("opacity" in c ? c.opacity : 1) * ("fill-opacity" in c ? c["fill-opacity"] : 1)
                                                                })
                                                            }
                                                        }
                                                        c.gradient = g, c.fill = "none";
                                                        break
                                                    }
                                                } else delete o.gradient, delete c.gradient, !t.is(c.opacity, "undefined") && t.is(o.opacity, "undefined") && v(l, {
                                                    opacity: c.opacity
                                                }), !t.is(c["fill-opacity"], "undefined") && t.is(o["fill-opacity"], "undefined") && v(l, {
                                                    "fill-opacity": c["fill-opacity"]
                                                });
                                                A[e]("opacity") && v(l, {
                                                    "fill-opacity": A.opacity > 1 ? A.opacity / 100 : A.opacity
                                                });
                                            case "stroke":
                                                A = t.getRGB(g), l.setAttribute(p, A.hex), "stroke" == p && A[e]("opacity") && v(l, {
                                                    "stroke-opacity": A.opacity > 1 ? A.opacity / 100 : A.opacity
                                                }), "stroke" == p && r._.arrows && ("startString" in r._.arrows && x(r, r._.arrows.startString), "endString" in r._.arrows && x(r, r._.arrows.endString, 1));
                                                break;
                                            case "gradient":
                                                ("circle" == r.type || "ellipse" == r.type || "r" != i(g).charAt()) && m(r, g);
                                                break;
                                            case "opacity":
                                                c.gradient && !c[e]("stroke-opacity") && v(l, {
                                                    "stroke-opacity": g > 1 ? g / 100 : g
                                                });
                                            case "fill-opacity":
                                                if (c.gradient) {
                                                    (D = t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, u))) && (R = D.getElementsByTagName("stop"), v(R[R.length - 1], {
                                                        "stop-opacity": g
                                                    }));
                                                    break
                                                }
                                            default:
                                                "font-size" == p && (g = n(g, 10) + "px");
                                                var F = p.replace(/(\-.)/g, (function(t) {
                                                    return t.substring(1).toUpperCase()
                                                }));
                                                l.style[F] = g, r._.dirty = 1, l.setAttribute(p, g)
                                        }
                                    } C(r, o), l.style.visibility = f
                            },
                            C = function(r, o) {
                                if ("text" == r.type && (o[e]("text") || o[e]("font") || o[e]("font-size") || o[e]("x") || o[e]("y"))) {
                                    var a = r.attrs,
                                        s = r.node,
                                        l = s.firstChild ? n(t._g.doc.defaultView.getComputedStyle(s.firstChild, u).getPropertyValue("font-size"), 10) : 10;
                                    if (o[e]("text")) {
                                        for (a.text = o.text; s.firstChild;) s.removeChild(s.firstChild);
                                        for (var h, c = i(o.text).split("\n"), f = [], d = 0, p = c.length; d < p; d++) h = v("tspan"), d && v(h, {
                                            dy: 1.2 * l,
                                            x: a.x
                                        }), h.appendChild(t._g.doc.createTextNode(c[d])), s.appendChild(h), f[d] = h
                                    } else
                                        for (d = 0, p = (f = s.getElementsByTagName("tspan")).length; d < p; d++) d ? v(f[d], {
                                            dy: 1.2 * l,
                                            x: a.x
                                        }) : v(f[0], {
                                            dy: 0
                                        });
                                    v(s, {
                                        x: a.x,
                                        y: a.y
                                    }), r._.dirty = 1;
                                    var g = r._getBBox(),
                                        m = a.y - (g.y + g.height / 2);
                                    m && t.is(m, "finite") && v(f[0], {
                                        dy: m
                                    })
                                }
                            },
                            T = function(t) {
                                return t.parentNode && "a" === t.parentNode.tagName.toLowerCase() ? t.parentNode : t
                            },
                            E = function(e, i) {
                                this[0] = this.node = e, e.raphael = !0, this.id = ("0000" + (Math.random() * Math.pow(36, 5) << 0).toString(36)).slice(-5), e.raphaelid = this.id, this.matrix = t.matrix(), this.realPath = null, this.paper = i, this.attrs = this.attrs || {}, this._ = {
                                    transform: [],
                                    sx: 1,
                                    sy: 1,
                                    deg: 0,
                                    dx: 0,
                                    dy: 0,
                                    dirty: 1
                                }, !i.bottom && (i.bottom = this), this.prev = i.top, i.top && (i.top.next = this), i.top = this, this.next = null
                            },
                            k = t.el;
                        E.prototype = k, k.constructor = E, t._engine.path = function(t, e) {
                            var i = v("path");
                            e.canvas && e.canvas.appendChild(i);
                            var r = new E(i, e);
                            return r.type = "path", S(r, {
                                fill: "none",
                                stroke: "#000",
                                path: t
                            }), r
                        }, k.rotate = function(t, e, n) {
                            if (this.removed) return this;
                            if ((t = i(t).split(h)).length - 1 && (e = r(t[1]), n = r(t[2])), t = r(t[0]), null == n && (e = n), null == e || null == n) {
                                var o = this.getBBox(1);
                                e = o.x + o.width / 2, n = o.y + o.height / 2
                            }
                            return this.transform(this._.transform.concat([
                                ["r", t, e, n]
                            ])), this
                        }, k.scale = function(t, e, n, o) {
                            if (this.removed) return this;
                            if ((t = i(t).split(h)).length - 1 && (e = r(t[1]), n = r(t[2]), o = r(t[3])), t = r(t[0]), null == e && (e = t), null == o && (n = o), null == n || null == o) var a = this.getBBox(1);
                            return n = null == n ? a.x + a.width / 2 : n, o = null == o ? a.y + a.height / 2 : o, this.transform(this._.transform.concat([
                                ["s", t, e, n, o]
                            ])), this
                        }, k.translate = function(t, e) {
                            return this.removed || ((t = i(t).split(h)).length - 1 && (e = r(t[1])), t = r(t[0]) || 0, e = +e || 0, this.transform(this._.transform.concat([
                                ["t", t, e]
                            ]))), this
                        }, k.transform = function(i) {
                            var r = this._;
                            if (null == i) return r.transform;
                            if (t._extractTransform(this, i), this.clip && v(this.clip, {
                                    transform: this.matrix.invert()
                                }), this.pattern && b(this), this.node && v(this.node, {
                                    transform: this.matrix
                                }), 1 != r.sx || 1 != r.sy) {
                                var n = this.attrs[e]("stroke-width") ? this.attrs["stroke-width"] : 1;
                                this.attr({
                                    "stroke-width": n
                                })
                            }
                            return this
                        }, k.hide = function() {
                            return this.removed || (this.node.style.display = "none"), this
                        }, k.show = function() {
                            return this.removed || (this.node.style.display = ""), this
                        }, k.remove = function() {
                            var e = T(this.node);
                            if (!this.removed && e.parentNode) {
                                var i = this.paper;
                                for (var r in i.__set__ && i.__set__.exclude(this), c.unbind("raphael.*.*." + this.id), this.gradient && i.defs.removeChild(this.gradient), t._tear(this, i), e.parentNode.removeChild(e), this.removeData(), this) this[r] = "function" == typeof this[r] ? t._removedFactory(r) : null;
                                this.removed = !0
                            }
                        }, k._getBBox = function() {
                            if ("none" == this.node.style.display) {
                                this.show();
                                var t = !0
                            }
                            var e, i = !1;
                            this.paper.canvas.parentElement ? e = this.paper.canvas.parentElement.style : this.paper.canvas.parentNode && (e = this.paper.canvas.parentNode.style), e && "none" == e.display && (i = !0, e.display = "");
                            var r = {};
                            try {
                                r = this.node.getBBox()
                            } catch (t) {
                                r = {
                                    x: this.node.clientLeft,
                                    y: this.node.clientTop,
                                    width: this.node.clientWidth,
                                    height: this.node.clientHeight
                                }
                            } finally {
                                r = r || {}, i && (e.display = "none")
                            }
                            return t && this.hide(), r
                        }, k.attr = function(i, r) {
                            if (this.removed) return this;
                            if (null == i) {
                                var n = {};
                                for (var o in this.attrs) this.attrs[e](o) && (n[o] = this.attrs[o]);
                                return n.gradient && "none" == n.fill && (n.fill = n.gradient) && delete n.gradient, n.transform = this._.transform, n
                            }
                            if (null == r && t.is(i, "string")) {
                                if ("fill" == i && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;
                                if ("transform" == i) return this._.transform;
                                for (var a = i.split(h), s = {}, l = 0, u = a.length; l < u; l++)(i = a[l]) in this.attrs ? s[i] = this.attrs[i] : t.is(this.paper.customAttributes[i], "function") ? s[i] = this.paper.customAttributes[i].def : s[i] = t._availableAttrs[i];
                                return u - 1 ? s : s[a[0]]
                            }
                            if (null == r && t.is(i, "array")) {
                                for (s = {}, l = 0, u = i.length; l < u; l++) s[i[l]] = this.attr(i[l]);
                                return s
                            }
                            if (null != r) {
                                var f = {};
                                f[i] = r
                            } else null != i && t.is(i, "object") && (f = i);
                            for (var d in f) c("raphael.attr." + d + "." + this.id, this, f[d]);
                            for (d in this.paper.customAttributes)
                                if (this.paper.customAttributes[e](d) && f[e](d) && t.is(this.paper.customAttributes[d], "function")) {
                                    var p = this.paper.customAttributes[d].apply(this, [].concat(f[d]));
                                    for (var g in this.attrs[d] = f[d], p) p[e](g) && (f[g] = p[g])
                                } return S(this, f), this
                        }, k.toFront = function() {
                            if (this.removed) return this;
                            var e = T(this.node);
                            e.parentNode.appendChild(e);
                            var i = this.paper;
                            return i.top != this && t._tofront(this, i), this
                        }, k.toBack = function() {
                            if (this.removed) return this;
                            var e = T(this.node),
                                i = e.parentNode;
                            return i.insertBefore(e, i.firstChild), t._toback(this, this.paper), this.paper, this
                        }, k.insertAfter = function(e) {
                            if (this.removed || !e) return this;
                            var i = T(this.node),
                                r = T(e.node || e[e.length - 1].node);
                            return r.nextSibling ? r.parentNode.insertBefore(i, r.nextSibling) : r.parentNode.appendChild(i), t._insertafter(this, e, this.paper), this
                        }, k.insertBefore = function(e) {
                            if (this.removed || !e) return this;
                            var i = T(this.node),
                                r = T(e.node || e[0].node);
                            return r.parentNode.insertBefore(i, r), t._insertbefore(this, e, this.paper), this
                        }, k.blur = function(e) {
                            var i = this;
                            if (0 != +e) {
                                var r = v("filter"),
                                    n = v("feGaussianBlur");
                                i.attrs.blur = e, r.id = t.createUUID(), v(n, {
                                    stdDeviation: +e || 1.5
                                }), r.appendChild(n), i.paper.defs.appendChild(r), i._blur = r, v(i.node, {
                                    filter: "url(#" + r.id + ")"
                                })
                            } else i._blur && (i._blur.parentNode.removeChild(i._blur), delete i._blur, delete i.attrs.blur), i.node.removeAttribute("filter");
                            return i
                        }, t._engine.circle = function(t, e, i, r) {
                            var n = v("circle");
                            t.canvas && t.canvas.appendChild(n);
                            var o = new E(n, t);
                            return o.attrs = {
                                cx: e,
                                cy: i,
                                r,
                                fill: "none",
                                stroke: "#000"
                            }, o.type = "circle", v(n, o.attrs), o
                        }, t._engine.rect = function(t, e, i, r, n, o) {
                            var a = v("rect");
                            t.canvas && t.canvas.appendChild(a);
                            var s = new E(a, t);
                            return s.attrs = {
                                x: e,
                                y: i,
                                width: r,
                                height: n,
                                rx: o || 0,
                                ry: o || 0,
                                fill: "none",
                                stroke: "#000"
                            }, s.type = "rect", v(a, s.attrs), s
                        }, t._engine.ellipse = function(t, e, i, r, n) {
                            var o = v("ellipse");
                            t.canvas && t.canvas.appendChild(o);
                            var a = new E(o, t);
                            return a.attrs = {
                                cx: e,
                                cy: i,
                                rx: r,
                                ry: n,
                                fill: "none",
                                stroke: "#000"
                            }, a.type = "ellipse", v(o, a.attrs), a
                        }, t._engine.image = function(t, e, i, r, n, o) {
                            var a = v("image");
                            v(a, {
                                x: i,
                                y: r,
                                width: n,
                                height: o,
                                preserveAspectRatio: "none"
                            }), a.setAttributeNS(d, "href", e), t.canvas && t.canvas.appendChild(a);
                            var s = new E(a, t);
                            return s.attrs = {
                                x: i,
                                y: r,
                                width: n,
                                height: o,
                                src: e
                            }, s.type = "image", s
                        }, t._engine.text = function(e, i, r, n) {
                            var o = v("text");
                            e.canvas && e.canvas.appendChild(o);
                            var a = new E(o, e);
                            return a.attrs = {
                                x: i,
                                y: r,
                                "text-anchor": "middle",
                                text: n,
                                "font-family": t._availableAttrs["font-family"],
                                "font-size": t._availableAttrs["font-size"],
                                stroke: "none",
                                fill: "#000"
                            }, a.type = "text", S(a, a.attrs), a
                        }, t._engine.setSize = function(t, e) {
                            return this.width = t || this.width, this.height = e || this.height, this.canvas.setAttribute("width", this.width), this.canvas.setAttribute("height", this.height), this._viewBox && this.setViewBox.apply(this, this._viewBox), this
                        }, t._engine.create = function() {
                            var e = t._getContainer.apply(0, arguments),
                                i = e && e.container;
                            if (!i) throw new Error("SVG container not found.");
                            var r, n = e.x,
                                o = e.y,
                                a = e.width,
                                s = e.height,
                                l = v("svg"),
                                h = "overflow:hidden;";
                            return n = n || 0, o = o || 0, v(l, {
                                height: s = s || 342,
                                version: 1.1,
                                width: a = a || 512,
                                xmlns: "http://www.w3.org/2000/svg",
                                "xmlns:xlink": "http://www.w3.org/1999/xlink"
                            }), 1 == i ? (l.style.cssText = h + "position:absolute;left:" + n + "px;top:" + o + "px", t._g.doc.body.appendChild(l), r = 1) : (l.style.cssText = h + "position:relative", i.firstChild ? i.insertBefore(l, i.firstChild) : i.appendChild(l)), (i = new t._Paper).width = a, i.height = s, i.canvas = l, i.clear(), i._left = i._top = 0, r && (i.renderfix = function() {}), i.renderfix(), i
                        }, t._engine.setViewBox = function(t, e, i, r, n) {
                            c("raphael.setViewBox", this, this._viewBox, [t, e, i, r, n]);
                            var o, s, l = this.getSize(),
                                h = a(i / l.width, r / l.height),
                                u = this.top,
                                d = n ? "xMidYMid meet" : "xMinYMin";
                            for (null == t ? (this._vbSize && (h = 1), delete this._vbSize, o = "0 0 " + this.width + f + this.height) : (this._vbSize = h, o = t + f + e + f + i + f + r), v(this.canvas, {
                                    viewBox: o,
                                    preserveAspectRatio: d
                                }); h && u;) s = "stroke-width" in u.attrs ? u.attrs["stroke-width"] : 1, u.attr({
                                "stroke-width": s
                            }), u._.dirty = 1, u._.dirtyT = 1, u = u.prev;
                            return this._viewBox = [t, e, i, r, !!n], this
                        }, t.prototype.renderfix = function() {
                            var t, e = this.canvas,
                                i = e.style;
                            try {
                                t = e.getScreenCTM() || e.createSVGMatrix()
                            } catch (i) {
                                t = e.createSVGMatrix()
                            }
                            var r = -t.e % 1,
                                n = -t.f % 1;
                            (r || n) && (r && (this._left = (this._left + r) % 1, i.left = this._left + "px"), n && (this._top = (this._top + n) % 1, i.top = this._top + "px"))
                        }, t.prototype.clear = function() {
                            t.eve("raphael.clear", this);
                            for (var e = this.canvas; e.firstChild;) e.removeChild(e.firstChild);
                            this.bottom = this.top = null, (this.desc = v("desc")).appendChild(t._g.doc.createTextNode("Created with RaphaÃ«l " + t.version)), e.appendChild(this.desc), e.appendChild(this.defs = v("defs"))
                        }, t.prototype.remove = function() {
                            for (var e in c("raphael.remove", this), this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas), this) this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null
                        };
                        var O = t.st;
                        for (var I in k) k[e](I) && !O[e](I) && (O[I] = function(t) {
                            return function() {
                                var e = arguments;
                                return this.forEach((function(i) {
                                    i[t].apply(i, e)
                                }))
                            }
                        }(I))
                    }
                }.apply(e, r)) || (t.exports = n)
            }, function(t, e, i) {
                var r, n;
                r = [i(0)], void 0 === (n = function(t) {
                    if (!t || t.vml) {
                        var e = "hasOwnProperty",
                            i = String,
                            r = parseFloat,
                            n = Math,
                            o = n.round,
                            a = n.max,
                            s = n.min,
                            l = n.abs,
                            h = /[, ]+/,
                            c = t.eve,
                            u = " ",
                            f = "",
                            d = {
                                M: "m",
                                L: "l",
                                C: "c",
                                Z: "x",
                                m: "t",
                                l: "r",
                                c: "v",
                                z: "x"
                            },
                            p = /([clmz]),?([^clmz]*)/gi,
                            g = / progid:\S+Blur\([^\)]+\)/g,
                            v = /-?[^,\s-]+/g,
                            m = "position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)",
                            y = 21600,
                            b = {
                                path: 1,
                                rect: 1,
                                image: 1
                            },
                            x = {
                                circle: 1,
                                ellipse: 1
                            },
                            _ = function(e, i, r) {
                                var n = t.matrix();
                                return n.rotate(-e, .5, .5), {
                                    dx: n.x(i, r),
                                    dy: n.y(i, r)
                                }
                            },
                            w = function(t, e, i, r, n, o) {
                                var a = t._,
                                    s = t.matrix,
                                    h = a.fillpos,
                                    c = t.node,
                                    f = c.style,
                                    d = 1,
                                    p = "",
                                    g = y / e,
                                    v = y / i;
                                if (f.visibility = "hidden", e && i) {
                                    if (c.coordsize = l(g) + u + l(v), f.rotation = o * (e * i < 0 ? -1 : 1), o) {
                                        var m = _(o, r, n);
                                        r = m.dx, n = m.dy
                                    }
                                    if (e < 0 && (p += "x"), i < 0 && (p += " y") && (d = -1), f.flip = p, c.coordorigin = r * -g + u + n * -v, h || a.fillsize) {
                                        var b = c.getElementsByTagName("fill");
                                        b = b && b[0], c.removeChild(b), h && (m = _(o, s.x(h[0], h[1]), s.y(h[0], h[1])), b.position = m.dx * d + u + m.dy * d), a.fillsize && (b.size = a.fillsize[0] * l(e) + u + a.fillsize[1] * l(i)), c.appendChild(b)
                                    }
                                    f.visibility = "visible"
                                }
                            };
                        t.toString = function() {
                            return "Your browser doesnâ€™t support SVG. Falling down to VML.\nYou are running RaphaÃ«l " + this.version
                        };
                        var S, C = function(t, e, r) {
                                for (var n = i(e).toLowerCase().split("-"), o = r ? "end" : "start", a = n.length, s = "classic", l = "medium", h = "medium"; a--;) switch (n[a]) {
                                    case "block":
                                    case "classic":
                                    case "oval":
                                    case "diamond":
                                    case "open":
                                    case "none":
                                        s = n[a];
                                        break;
                                    case "wide":
                                    case "narrow":
                                        h = n[a];
                                        break;
                                    case "long":
                                    case "short":
                                        l = n[a]
                                }
                                var c = t.node.getElementsByTagName("stroke")[0];
                                c[o + "arrow"] = s, c[o + "arrowlength"] = l, c[o + "arrowwidth"] = h
                            },
                            T = function(n, l) {
                                n.attrs = n.attrs || {};
                                var c = n.node,
                                    g = n.attrs,
                                    m = c.style,
                                    _ = b[n.type] && (l.x != g.x || l.y != g.y || l.width != g.width || l.height != g.height || l.cx != g.cx || l.cy != g.cy || l.rx != g.rx || l.ry != g.ry || l.r != g.r),
                                    T = x[n.type] && (g.cx != l.cx || g.cy != l.cy || g.r != l.r || g.rx != l.rx || g.ry != l.ry),
                                    k = n;
                                for (var O in l) l[e](O) && (g[O] = l[O]);
                                if (_ && (g.path = t._getPath[n.type](n), n._.dirty = 1), l.href && (c.href = l.href), l.title && (c.title = l.title), l.target && (c.target = l.target), l.cursor && (m.cursor = l.cursor), "blur" in l && n.blur(l.blur), (l.path && "path" == n.type || _) && (c.path = function(e) {
                                        var r = /[ahqstv]/gi,
                                            n = t._pathToAbsolute;
                                        if (i(e).match(r) && (n = t._path2curve), r = /[clmz]/g, n == t._pathToAbsolute && !i(e).match(r)) {
                                            var a = i(e).replace(p, (function(t, e, i) {
                                                var r = [],
                                                    n = "m" == e.toLowerCase(),
                                                    a = d[e];
                                                return i.replace(v, (function(t) {
                                                    n && 2 == r.length && (a += r + d["m" == e ? "l" : "L"], r = []), r.push(o(t * y))
                                                })), a + r
                                            }));
                                            return a
                                        }
                                        var s, l, h = n(e);
                                        a = [];
                                        for (var c = 0, g = h.length; c < g; c++) {
                                            s = h[c], "z" == (l = h[c][0].toLowerCase()) && (l = "x");
                                            for (var m = 1, b = s.length; m < b; m++) l += o(s[m] * y) + (m != b - 1 ? "," : f);
                                            a.push(l)
                                        }
                                        return a.join(u)
                                    }(~i(g.path).toLowerCase().indexOf("r") ? t._pathToAbsolute(g.path) : g.path), n._.dirty = 1, "image" == n.type && (n._.fillpos = [g.x, g.y], n._.fillsize = [g.width, g.height], w(n, 1, 1, 0, 0, 0))), "transform" in l && n.transform(l.transform), T) {
                                    var I = +g.cx,
                                        P = +g.cy,
                                        L = +g.rx || +g.r || 0,
                                        M = +g.ry || +g.r || 0;
                                    c.path = t.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", o((I - L) * y), o((P - M) * y), o((I + L) * y), o((P + M) * y), o(I * y)), n._.dirty = 1
                                }
                                if ("clip-rect" in l) {
                                    var A = i(l["clip-rect"]).split(h);
                                    if (4 == A.length) {
                                        A[2] = +A[2] + +A[0], A[3] = +A[3] + +A[1];
                                        var D = c.clipRect || t._g.doc.createElement("div"),
                                            R = D.style;
                                        R.clip = t.format("rect({1}px {2}px {3}px {0}px)", A), c.clipRect || (R.position = "absolute", R.top = 0, R.left = 0, R.width = n.paper.width + "px", R.height = n.paper.height + "px", c.parentNode.insertBefore(D, c), D.appendChild(c), c.clipRect = D)
                                    }
                                    l["clip-rect"] || c.clipRect && (c.clipRect.style.clip = "auto")
                                }
                                if (n.textpath) {
                                    var F = n.textpath.style;
                                    l.font && (F.font = l.font), l["font-family"] && (F.fontFamily = '"' + l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, f) + '"'), l["font-size"] && (F.fontSize = l["font-size"]), l["font-weight"] && (F.fontWeight = l["font-weight"]), l["font-style"] && (F.fontStyle = l["font-style"])
                                }
                                if ("arrow-start" in l && C(k, l["arrow-start"]), "arrow-end" in l && C(k, l["arrow-end"], 1), null != l.opacity || null != l.fill || null != l.src || null != l.stroke || null != l["stroke-width"] || null != l["stroke-opacity"] || null != l["fill-opacity"] || null != l["stroke-dasharray"] || null != l["stroke-miterlimit"] || null != l["stroke-linejoin"] || null != l["stroke-linecap"]) {
                                    var j = c.getElementsByTagName("fill");
                                    if (!(j = j && j[0]) && (j = S("fill")), "image" == n.type && l.src && (j.src = l.src), l.fill && (j.on = !0), null != j.on && "none" != l.fill && null !== l.fill || (j.on = !1), j.on && l.fill) {
                                        var B = i(l.fill).match(t._ISURL);
                                        if (B) {
                                            j.parentNode == c && c.removeChild(j), j.rotate = !0, j.src = B[1], j.type = "tile";
                                            var U = n.getBBox(1);
                                            j.position = U.x + u + U.y, n._.fillpos = [U.x, U.y], t._preload(B[1], (function() {
                                                n._.fillsize = [this.offsetWidth, this.offsetHeight]
                                            }))
                                        } else j.color = t.getRGB(l.fill).hex, j.src = f, j.type = "solid", t.getRGB(l.fill).error && (k.type in {
                                            circle: 1,
                                            ellipse: 1
                                        } || "r" != i(l.fill).charAt()) && E(k, l.fill, j) && (g.fill = "none", g.gradient = l.fill, j.rotate = !1)
                                    }
                                    if ("fill-opacity" in l || "opacity" in l) {
                                        var N = ((+g["fill-opacity"] + 1 || 2) - 1) * ((+g.opacity + 1 || 2) - 1) * ((+t.getRGB(l.fill).o + 1 || 2) - 1);
                                        N = s(a(N, 0), 1), j.opacity = N, j.src && (j.color = "none")
                                    }
                                    c.appendChild(j);
                                    var G = c.getElementsByTagName("stroke") && c.getElementsByTagName("stroke")[0],
                                        X = !1;
                                    !G && (X = G = S("stroke")), (l.stroke && "none" != l.stroke || l["stroke-width"] || null != l["stroke-opacity"] || l["stroke-dasharray"] || l["stroke-miterlimit"] || l["stroke-linejoin"] || l["stroke-linecap"]) && (G.on = !0), ("none" == l.stroke || null === l.stroke || null == G.on || 0 == l.stroke || 0 == l["stroke-width"]) && (G.on = !1);
                                    var z = t.getRGB(l.stroke);
                                    G.on && l.stroke && (G.color = z.hex), N = ((+g["stroke-opacity"] + 1 || 2) - 1) * ((+g.opacity + 1 || 2) - 1) * ((+z.o + 1 || 2) - 1);
                                    var W = .75 * (r(l["stroke-width"]) || 1);
                                    if (N = s(a(N, 0), 1), null == l["stroke-width"] && (W = g["stroke-width"]), l["stroke-width"] && (G.weight = W), W && W < 1 && (N *= W) && (G.weight = 1), G.opacity = N, l["stroke-linejoin"] && (G.joinstyle = l["stroke-linejoin"] || "miter"), G.miterlimit = l["stroke-miterlimit"] || 8, l["stroke-linecap"] && (G.endcap = "butt" == l["stroke-linecap"] ? "flat" : "square" == l["stroke-linecap"] ? "square" : "round"), "stroke-dasharray" in l) {
                                        var H = {
                                            "-": "shortdash",
                                            ".": "shortdot",
                                            "-.": "shortdashdot",
                                            "-..": "shortdashdotdot",
                                            ". ": "dot",
                                            "- ": "dash",
                                            "--": "longdash",
                                            "- .": "dashdot",
                                            "--.": "longdashdot",
                                            "--..": "longdashdotdot"
                                        };
                                        G.dashstyle = H[e](l["stroke-dasharray"]) ? H[l["stroke-dasharray"]] : f
                                    }
                                    X && c.appendChild(G)
                                }
                                if ("text" == k.type) {
                                    k.paper.canvas.style.display = f;
                                    var Y = k.paper.span,
                                        V = g.font && g.font.match(/\d+(?:\.\d*)?(?=px)/);
                                    m = Y.style, g.font && (m.font = g.font), g["font-family"] && (m.fontFamily = g["font-family"]), g["font-weight"] && (m.fontWeight = g["font-weight"]), g["font-style"] && (m.fontStyle = g["font-style"]), V = r(g["font-size"] || V && V[0]) || 10, m.fontSize = 100 * V + "px", k.textpath.string && (Y.innerHTML = i(k.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
                                    var q = Y.getBoundingClientRect();
                                    k.W = g.w = (q.right - q.left) / 100, k.H = g.h = (q.bottom - q.top) / 100, k.X = g.x, k.Y = g.y + k.H / 2, ("x" in l || "y" in l) && (k.path.v = t.format("m{0},{1}l{2},{1}", o(g.x * y), o(g.y * y), o(g.x * y) + 1));
                                    for (var Z = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"], K = 0, J = Z.length; K < J; K++)
                                        if (Z[K] in l) {
                                            k._.dirty = 1;
                                            break
                                        } switch (g["text-anchor"]) {
                                        case "start":
                                            k.textpath.style["v-text-align"] = "left", k.bbx = k.W / 2;
                                            break;
                                        case "end":
                                            k.textpath.style["v-text-align"] = "right", k.bbx = -k.W / 2;
                                            break;
                                        default:
                                            k.textpath.style["v-text-align"] = "center", k.bbx = 0
                                    }
                                    k.textpath.style["v-text-kern"] = !0
                                }
                            },
                            E = function(e, o, a) {
                                e.attrs = e.attrs || {}, e.attrs;
                                var s = Math.pow,
                                    l = "linear",
                                    h = ".5 .5";
                                if (e.attrs.gradient = o, o = (o = i(o).replace(t._radial_gradient, (function(t, e, i) {
                                        return l = "radial", e && i && (e = r(e), i = r(i), s(e - .5, 2) + s(i - .5, 2) > .25 && (i = n.sqrt(.25 - s(e - .5, 2)) * (2 * (i > .5) - 1) + .5), h = e + u + i), f
                                    }))).split(/\s*\-\s*/), "linear" == l) {
                                    var c = o.shift();
                                    if (c = -r(c), isNaN(c)) return null
                                }
                                var d = t._parseDots(o);
                                if (!d) return null;
                                if (e = e.shape || e.node, d.length) {
                                    e.removeChild(a), a.on = !0, a.method = "none", a.color = d[0].color, a.color2 = d[d.length - 1].color;
                                    for (var p = [], g = 0, v = d.length; g < v; g++) d[g].offset && p.push(d[g].offset + u + d[g].color);
                                    a.colors = p.length ? p.join() : "0% " + a.color, "radial" == l ? (a.type = "gradientTitle", a.focus = "100%", a.focussize = "0 0", a.focusposition = h, a.angle = 0) : (a.type = "gradient", a.angle = (270 - c) % 360), e.appendChild(a)
                                }
                                return 1
                            },
                            k = function(e, i) {
                                this[0] = this.node = e, e.raphael = !0, this.id = t._oid++, e.raphaelid = this.id, this.X = 0, this.Y = 0, this.attrs = {}, this.paper = i, this.matrix = t.matrix(), this._ = {
                                    transform: [],
                                    sx: 1,
                                    sy: 1,
                                    dx: 0,
                                    dy: 0,
                                    deg: 0,
                                    dirty: 1,
                                    dirtyT: 1
                                }, !i.bottom && (i.bottom = this), this.prev = i.top, i.top && (i.top.next = this), i.top = this, this.next = null
                            },
                            O = t.el;
                        k.prototype = O, O.constructor = k, O.transform = function(e) {
                            if (null == e) return this._.transform;
                            var r, n = this.paper._viewBoxShift,
                                o = n ? "s" + [n.scale, n.scale] + "-1-1t" + [n.dx, n.dy] : f;
                            n && (r = e = i(e).replace(/\.{3}|\u2026/g, this._.transform || f)), t._extractTransform(this, o + e);
                            var a, s = this.matrix.clone(),
                                l = this.skew,
                                h = this.node,
                                c = ~i(this.attrs.fill).indexOf("-"),
                                d = !i(this.attrs.fill).indexOf("url(");
                            if (s.translate(1, 1), d || c || "image" == this.type)
                                if (l.matrix = "1 0 0 1", l.offset = "0 0", a = s.split(), c && a.noRotation || !a.isSimple) {
                                    h.style.filter = s.toFilter();
                                    var p = this.getBBox(),
                                        g = this.getBBox(1),
                                        v = p.x - g.x,
                                        m = p.y - g.y;
                                    h.coordorigin = v * -y + u + m * -y, w(this, 1, 1, v, m, 0)
                                } else h.style.filter = f, w(this, a.scalex, a.scaley, a.dx, a.dy, a.rotate);
                            else h.style.filter = f, l.matrix = i(s), l.offset = s.offset();
                            return null !== r && (this._.transform = r, t._extractTransform(this, r)), this
                        }, O.rotate = function(t, e, n) {
                            if (this.removed) return this;
                            if (null != t) {
                                if ((t = i(t).split(h)).length - 1 && (e = r(t[1]), n = r(t[2])), t = r(t[0]), null == n && (e = n), null == e || null == n) {
                                    var o = this.getBBox(1);
                                    e = o.x + o.width / 2, n = o.y + o.height / 2
                                }
                                return this._.dirtyT = 1, this.transform(this._.transform.concat([
                                    ["r", t, e, n]
                                ])), this
                            }
                        }, O.translate = function(t, e) {
                            return this.removed || ((t = i(t).split(h)).length - 1 && (e = r(t[1])), t = r(t[0]) || 0, e = +e || 0, this._.bbox && (this._.bbox.x += t, this._.bbox.y += e), this.transform(this._.transform.concat([
                                ["t", t, e]
                            ]))), this
                        }, O.scale = function(t, e, n, o) {
                            if (this.removed) return this;
                            if ((t = i(t).split(h)).length - 1 && (e = r(t[1]), n = r(t[2]), o = r(t[3]), isNaN(n) && (n = null), isNaN(o) && (o = null)), t = r(t[0]), null == e && (e = t), null == o && (n = o), null == n || null == o) var a = this.getBBox(1);
                            return n = null == n ? a.x + a.width / 2 : n, o = null == o ? a.y + a.height / 2 : o, this.transform(this._.transform.concat([
                                ["s", t, e, n, o]
                            ])), this._.dirtyT = 1, this
                        }, O.hide = function() {
                            return !this.removed && (this.node.style.display = "none"), this
                        }, O.show = function() {
                            return !this.removed && (this.node.style.display = f), this
                        }, O.auxGetBBox = t.el.getBBox, O.getBBox = function() {
                            var t = this.auxGetBBox();
                            if (this.paper && this.paper._viewBoxShift) {
                                var e = {},
                                    i = 1 / this.paper._viewBoxShift.scale;
                                return e.x = t.x - this.paper._viewBoxShift.dx, e.x *= i, e.y = t.y - this.paper._viewBoxShift.dy, e.y *= i, e.width = t.width * i, e.height = t.height * i, e.x2 = e.x + e.width, e.y2 = e.y + e.height, e
                            }
                            return t
                        }, O._getBBox = function() {
                            return this.removed ? {} : {
                                x: this.X + (this.bbx || 0) - this.W / 2,
                                y: this.Y - this.H,
                                width: this.W,
                                height: this.H
                            }
                        }, O.remove = function() {
                            if (!this.removed && this.node.parentNode) {
                                for (var e in this.paper.__set__ && this.paper.__set__.exclude(this), t.eve.unbind("raphael.*.*." + this.id), t._tear(this, this.paper), this.node.parentNode.removeChild(this.node), this.shape && this.shape.parentNode.removeChild(this.shape), this) this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null;
                                this.removed = !0
                            }
                        }, O.attr = function(i, r) {
                            if (this.removed) return this;
                            if (null == i) {
                                var n = {};
                                for (var o in this.attrs) this.attrs[e](o) && (n[o] = this.attrs[o]);
                                return n.gradient && "none" == n.fill && (n.fill = n.gradient) && delete n.gradient, n.transform = this._.transform, n
                            }
                            if (null == r && t.is(i, "string")) {
                                if ("fill" == i && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;
                                for (var a = i.split(h), s = {}, l = 0, u = a.length; l < u; l++)(i = a[l]) in this.attrs ? s[i] = this.attrs[i] : t.is(this.paper.customAttributes[i], "function") ? s[i] = this.paper.customAttributes[i].def : s[i] = t._availableAttrs[i];
                                return u - 1 ? s : s[a[0]]
                            }
                            if (this.attrs && null == r && t.is(i, "array")) {
                                for (s = {}, l = 0, u = i.length; l < u; l++) s[i[l]] = this.attr(i[l]);
                                return s
                            }
                            var f;
                            for (var d in null != r && ((f = {})[i] = r), null == r && t.is(i, "object") && (f = i), f) c("raphael.attr." + d + "." + this.id, this, f[d]);
                            if (f) {
                                for (d in this.paper.customAttributes)
                                    if (this.paper.customAttributes[e](d) && f[e](d) && t.is(this.paper.customAttributes[d], "function")) {
                                        var p = this.paper.customAttributes[d].apply(this, [].concat(f[d]));
                                        for (var g in this.attrs[d] = f[d], p) p[e](g) && (f[g] = p[g])
                                    } f.text && "text" == this.type && (this.textpath.string = f.text), T(this, f)
                            }
                            return this
                        }, O.toFront = function() {
                            return !this.removed && this.node.parentNode.appendChild(this.node), this.paper && this.paper.top != this && t._tofront(this, this.paper), this
                        }, O.toBack = function() {
                            return this.removed || this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild), t._toback(this, this.paper)), this
                        }, O.insertAfter = function(e) {
                            return this.removed || (e.constructor == t.st.constructor && (e = e[e.length - 1]), e.node.nextSibling ? e.node.parentNode.insertBefore(this.node, e.node.nextSibling) : e.node.parentNode.appendChild(this.node), t._insertafter(this, e, this.paper)), this
                        }, O.insertBefore = function(e) {
                            return this.removed || (e.constructor == t.st.constructor && (e = e[0]), e.node.parentNode.insertBefore(this.node, e.node), t._insertbefore(this, e, this.paper)), this
                        }, O.blur = function(e) {
                            var i = this.node.runtimeStyle,
                                r = i.filter;
                            return r = r.replace(g, f), 0 != +e ? (this.attrs.blur = e, i.filter = r + u + " progid:DXImageTransform.Microsoft.Blur(pixelradius=" + (+e || 1.5) + ")", i.margin = t.format("-{0}px 0 0 -{0}px", o(+e || 1.5))) : (i.filter = r, i.margin = 0, delete this.attrs.blur), this
                        }, t._engine.path = function(t, e) {
                            var i = S("shape");
                            i.style.cssText = m, i.coordsize = y + u + y, i.coordorigin = e.coordorigin;
                            var r = new k(i, e),
                                n = {
                                    fill: "none",
                                    stroke: "#000"
                                };
                            t && (n.path = t), r.type = "path", r.path = [], r.Path = f, T(r, n), e.canvas && e.canvas.appendChild(i);
                            var o = S("skew");
                            return o.on = !0, i.appendChild(o), r.skew = o, r.transform(f), r
                        }, t._engine.rect = function(e, i, r, n, o, a) {
                            var s = t._rectPath(i, r, n, o, a),
                                l = e.path(s),
                                h = l.attrs;
                            return l.X = h.x = i, l.Y = h.y = r, l.W = h.width = n, l.H = h.height = o, h.r = a, h.path = s, l.type = "rect", l
                        }, t._engine.ellipse = function(t, e, i, r, n) {
                            var o = t.path();
                            return o.attrs, o.X = e - r, o.Y = i - n, o.W = 2 * r, o.H = 2 * n, o.type = "ellipse", T(o, {
                                cx: e,
                                cy: i,
                                rx: r,
                                ry: n
                            }), o
                        }, t._engine.circle = function(t, e, i, r) {
                            var n = t.path();
                            return n.attrs, n.X = e - r, n.Y = i - r, n.W = n.H = 2 * r, n.type = "circle", T(n, {
                                cx: e,
                                cy: i,
                                r
                            }), n
                        }, t._engine.image = function(e, i, r, n, o, a) {
                            var s = t._rectPath(r, n, o, a),
                                l = e.path(s).attr({
                                    stroke: "none"
                                }),
                                h = l.attrs,
                                c = l.node,
                                u = c.getElementsByTagName("fill")[0];
                            return h.src = i, l.X = h.x = r, l.Y = h.y = n, l.W = h.width = o, l.H = h.height = a, h.path = s, l.type = "image", u.parentNode == c && c.removeChild(u), u.rotate = !0, u.src = i, u.type = "tile", l._.fillpos = [r, n], l._.fillsize = [o, a], c.appendChild(u), w(l, 1, 1, 0, 0, 0), l
                        }, t._engine.text = function(e, r, n, a) {
                            var s = S("shape"),
                                l = S("path"),
                                h = S("textpath");
                            r = r || 0, n = n || 0, a = a || "", l.v = t.format("m{0},{1}l{2},{1}", o(r * y), o(n * y), o(r * y) + 1), l.textpathok = !0, h.string = i(a), h.on = !0, s.style.cssText = m, s.coordsize = y + u + y, s.coordorigin = "0 0";
                            var c = new k(s, e),
                                d = {
                                    fill: "#000",
                                    stroke: "none",
                                    font: t._availableAttrs.font,
                                    text: a
                                };
                            c.shape = s, c.path = l, c.textpath = h, c.type = "text", c.attrs.text = i(a), c.attrs.x = r, c.attrs.y = n, c.attrs.w = 1, c.attrs.h = 1, T(c, d), s.appendChild(h), s.appendChild(l), e.canvas.appendChild(s);
                            var p = S("skew");
                            return p.on = !0, s.appendChild(p), c.skew = p, c.transform(f), c
                        }, t._engine.setSize = function(e, i) {
                            var r = this.canvas.style;
                            return this.width = e, this.height = i, e == +e && (e += "px"), i == +i && (i += "px"), r.width = e, r.height = i, r.clip = "rect(0 " + e + " " + i + " 0)", this._viewBox && t._engine.setViewBox.apply(this, this._viewBox), this
                        }, t._engine.setViewBox = function(e, i, r, n, o) {
                            t.eve("raphael.setViewBox", this, this._viewBox, [e, i, r, n, o]);
                            var a, s, l = this.getSize(),
                                h = l.width,
                                c = l.height;
                            return o && (r * (a = c / n) < h && (e -= (h - r * a) / 2 / a), n * (s = h / r) < c && (i -= (c - n * s) / 2 / s)), this._viewBox = [e, i, r, n, !!o], this._viewBoxShift = {
                                dx: -e,
                                dy: -i,
                                scale: l
                            }, this.forEach((function(t) {
                                t.transform("...")
                            })), this
                        }, t._engine.initWin = function(t) {
                            var e = t.document;
                            e.styleSheets.length < 31 ? e.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)") : e.styleSheets[0].addRule(".rvml", "behavior:url(#default#VML)");
                            try {
                                !e.namespaces.rvml && e.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), S = function(t) {
                                    return e.createElement("<rvml:" + t + ' class="rvml">')
                                }
                            } catch (t) {
                                S = function(t) {
                                    return e.createElement("<" + t + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
                                }
                            }
                        }, t._engine.initWin(t._g.win), t._engine.create = function() {
                            var e = t._getContainer.apply(0, arguments),
                                i = e.container,
                                r = e.height,
                                n = e.width,
                                o = e.x,
                                a = e.y;
                            if (!i) throw new Error("VML container not found.");
                            var s = new t._Paper,
                                l = s.canvas = t._g.doc.createElement("div"),
                                h = l.style;
                            return o = o || 0, a = a || 0, n = n || 512, r = r || 342, s.width = n, s.height = r, n == +n && (n += "px"), r == +r && (r += "px"), s.coordsize = 216e5 + u + 216e5, s.coordorigin = "0 0", s.span = t._g.doc.createElement("span"), s.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;", l.appendChild(s.span), h.cssText = t.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", n, r), 1 == i ? (t._g.doc.body.appendChild(l), h.left = o + "px", h.top = a + "px", h.position = "absolute") : i.firstChild ? i.insertBefore(l, i.firstChild) : i.appendChild(l), s.renderfix = function() {}, s
                        }, t.prototype.clear = function() {
                            t.eve("raphael.clear", this), this.canvas.innerHTML = f, this.span = t._g.doc.createElement("span"), this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;", this.canvas.appendChild(this.span), this.bottom = this.top = null
                        }, t.prototype.remove = function() {
                            for (var e in t.eve("raphael.remove", this), this.canvas.parentNode.removeChild(this.canvas), this) this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null;
                            return !0
                        };
                        var I = t.st;
                        for (var P in O) O[e](P) && !I[e](P) && (I[P] = function(t) {
                            return function() {
                                var e = arguments;
                                return this.forEach((function(i) {
                                    i[t].apply(i, e)
                                }))
                            }
                        }(P))
                    }
                }.apply(e, r)) || (t.exports = n)
            }])
        },
        97271: function(t) {
            (function() {
                function e(t) {
                    if (t = t || {}, this.method = t.method || 2, this.colors = t.colors || 256, this.initColors = t.initColors || 4096, this.initDist = t.initDist || .01, this.distIncr = t.distIncr || .005, this.hueGroups = t.hueGroups || 10, this.satGroups = t.satGroups || 10, this.lumGroups = t.lumGroups || 10, this.minHueCols = t.minHueCols || 0, this.hueStats = this.minHueCols ? new i(this.hueGroups, this.minHueCols) : null, this.boxSize = t.boxSize || [64, 64], this.boxPxls = t.boxPxls || 2, this.palLocked = !1, this.dithKern = t.dithKern || null, this.dithSerp = t.dithSerp || !1, this.dithDelta = t.dithDelta || 0, this.histogram = {}, this.idxrgb = t.palette ? t.palette.slice(0) : [], this.idxi32 = [], this.i32idx = {}, this.i32rgb = {}, this.useCache = !1 !== t.useCache, this.cacheFreq = t.cacheFreq || 10, this.reIndex = t.reIndex || 0 == this.idxrgb.length, this.colorDist = "manhattan" == t.colorDist ? h : l, this.idxrgb.length > 0) {
                        var e = this;
                        this.idxrgb.forEach((function(t, i) {
                            var r = (255 << 24 | t[2] << 16 | t[1] << 8 | t[0]) >>> 0;
                            e.idxi32[i] = r, e.i32idx[r] = i, e.i32rgb[r] = t
                        }))
                    }
                }

                function i(t, e) {
                    this.numGroups = t, this.minCols = e, this.stats = {};
                    for (var i = -1; i < t; i++) this.stats[i] = {
                        num: 0,
                        cols: []
                    };
                    this.groupsFull = 0
                }
                e.prototype.sample = function(t, e) {
                    if (this.palLocked) throw "Cannot sample additional images, palette already assembled.";
                    var i = g(t, e);
                    switch (this.method) {
                        case 1:
                            this.colorStats1D(i.buf32);
                            break;
                        case 2:
                            this.colorStats2D(i.buf32, i.width)
                    }
                }, e.prototype.reduce = function(t, e, i, r) {
                    if (this.palLocked || this.buildPal(), i = i || this.dithKern, r = void 0 !== r ? r : this.dithSerp, e = e || 1, i) var n = this.dither(t, i, r);
                    else
                        for (var o = g(t).buf32, a = o.length, s = (n = new Uint32Array(a), 0); s < a; s++) {
                            var l = o[s];
                            n[s] = this.nearestColor(l)
                        }
                    if (1 == e) return new Uint8Array(n.buffer);
                    if (2 == e) {
                        var h = [];
                        for (a = n.length, s = 0; s < a; s++) {
                            l = n[s];
                            h[s] = this.i32idx[l]
                        }
                        return h
                    }
                }, e.prototype.dither = function(t, e, i) {
                    var r = {
                        FloydSteinberg: [
                            [7 / 16, 1, 0],
                            [3 / 16, -1, 1],
                            [5 / 16, 0, 1],
                            [1 / 16, 1, 1]
                        ],
                        FalseFloydSteinberg: [
                            [3 / 8, 1, 0],
                            [3 / 8, 0, 1],
                            [2 / 8, 1, 1]
                        ],
                        Stucki: [
                            [8 / 42, 1, 0],
                            [4 / 42, 2, 0],
                            [2 / 42, -2, 1],
                            [4 / 42, -1, 1],
                            [8 / 42, 0, 1],
                            [4 / 42, 1, 1],
                            [2 / 42, 2, 1],
                            [1 / 42, -2, 2],
                            [2 / 42, -1, 2],
                            [4 / 42, 0, 2],
                            [2 / 42, 1, 2],
                            [1 / 42, 2, 2]
                        ],
                        Atkinson: [
                            [1 / 8, 1, 0],
                            [1 / 8, 2, 0],
                            [1 / 8, -1, 1],
                            [1 / 8, 0, 1],
                            [1 / 8, 1, 1],
                            [1 / 8, 0, 2]
                        ],
                        Jarvis: [
                            [7 / 48, 1, 0],
                            [5 / 48, 2, 0],
                            [3 / 48, -2, 1],
                            [5 / 48, -1, 1],
                            [7 / 48, 0, 1],
                            [5 / 48, 1, 1],
                            [3 / 48, 2, 1],
                            [1 / 48, -2, 2],
                            [3 / 48, -1, 2],
                            [5 / 48, 0, 2],
                            [3 / 48, 1, 2],
                            [1 / 48, 2, 2]
                        ],
                        Burkes: [
                            [.25, 1, 0],
                            [4 / 32, 2, 0],
                            [2 / 32, -2, 1],
                            [4 / 32, -1, 1],
                            [.25, 0, 1],
                            [4 / 32, 1, 1],
                            [2 / 32, 2, 1]
                        ],
                        Sierra: [
                            [5 / 32, 1, 0],
                            [3 / 32, 2, 0],
                            [2 / 32, -2, 1],
                            [4 / 32, -1, 1],
                            [5 / 32, 0, 1],
                            [4 / 32, 1, 1],
                            [2 / 32, 2, 1],
                            [2 / 32, -1, 2],
                            [3 / 32, 0, 2],
                            [2 / 32, 1, 2]
                        ],
                        TwoSierra: [
                            [.25, 1, 0],
                            [3 / 16, 2, 0],
                            [1 / 16, -2, 1],
                            [2 / 16, -1, 1],
                            [3 / 16, 0, 1],
                            [2 / 16, 1, 1],
                            [1 / 16, 2, 1]
                        ],
                        SierraLite: [
                            [.5, 1, 0],
                            [1 / 4, -1, 1],
                            [1 / 4, 0, 1]
                        ]
                    };
                    if (!e || !r[e]) throw "Unknown dithering kernel: " + e;
                    for (var n = r[e], o = g(t), a = o.buf32, s = o.width, l = o.height, h = (a.length, i ? -1 : 1), c = 0; c < l; c++) {
                        i && (h *= -1);
                        for (var u = c * s, f = 1 == h ? 0 : s - 1, d = 1 == h ? s : 0; f !== d; f += h) {
                            var p = u + f,
                                v = a[p],
                                m = 255 & v,
                                y = (65280 & v) >> 8,
                                b = (16711680 & v) >> 16,
                                x = this.nearestColor(v),
                                _ = 255 & x,
                                w = (65280 & x) >> 8,
                                S = (16711680 & x) >> 16;
                            if (a[p] = 255 << 24 | S << 16 | w << 8 | _, this.dithDelta)
                                if (this.colorDist([m, y, b], [_, w, S]) < this.dithDelta) continue;
                            for (var C = m - _, T = y - w, E = b - S, k = 1 == h ? 0 : n.length - 1, O = 1 == h ? n.length : 0; k !== O; k += h) {
                                var I = n[k][1] * h,
                                    P = n[k][2],
                                    L = P * s;
                                if (I + f >= 0 && I + f < s && P + c >= 0 && P + c < l) {
                                    var M = n[k][0],
                                        A = p + (L + I),
                                        D = 255 & a[A],
                                        R = (65280 & a[A]) >> 8,
                                        F = (16711680 & a[A]) >> 16,
                                        j = Math.max(0, Math.min(255, D + C * M)),
                                        B = Math.max(0, Math.min(255, R + T * M)),
                                        U = Math.max(0, Math.min(255, F + E * M));
                                    a[A] = 255 << 24 | U << 16 | B << 8 | j
                                }
                            }
                        }
                    }
                    return a
                }, e.prototype.buildPal = function(t) {
                    if (!(this.palLocked || this.idxrgb.length > 0 && this.idxrgb.length <= this.colors)) {
                        var e = this.histogram,
                            i = function(t, e) {
                                var i = [];
                                for (var r in t) i.push(r);
                                return p.call(i, (function(i, r) {
                                    return e ? t[r] - t[i] : t[i] - t[r]
                                }))
                            }(e, !0);
                        if (0 == i.length) throw "Nothing has been sampled, palette cannot be built.";
                        switch (this.method) {
                            case 1:
                                for (var r = this.initColors, n = e[i[r - 1]], o = i.slice(0, r), a = r, s = i.length; a < s && e[i[a]] == n;) o.push(i[a++]);
                                this.hueStats && this.hueStats.inject(o);
                                break;
                            case 2:
                                o = i
                        }
                        o = o.map((function(t) {
                            return +t
                        })), this.reducePal(o), !t && this.reIndex && this.sortPal(), this.useCache && this.cacheHistogram(o), this.palLocked = !0
                    }
                }, e.prototype.palette = function(t, e) {
                    return this.buildPal(e), t ? this.idxrgb : new Uint8Array(new Uint32Array(this.idxi32).buffer)
                }, e.prototype.prunePal = function(t) {
                    for (var e, i = 0; i < this.idxrgb.length; i++) t[i] || (e = this.idxi32[i], this.idxrgb[i] = null, this.idxi32[i] = null, delete this.i32idx[e]);
                    if (this.reIndex) {
                        for (var r = [], n = [], o = {}, a = (i = 0, 0); i < this.idxrgb.length; i++) this.idxrgb[i] && (e = this.idxi32[i], r[a] = this.idxrgb[i], o[e] = a, n[a] = e, a++);
                        this.idxrgb = r, this.idxi32 = n, this.i32idx = o
                    }
                }, e.prototype.reducePal = function(t) {
                    if (this.idxrgb.length > this.colors) {
                        for (var e, i = t.length, r = {}, n = 0, o = !1, a = 0; a < i; a++) n != this.colors || o || (this.prunePal(r), o = !0), e = this.nearestIndex(t[a]), n < this.colors && !r[e] && (r[e] = !0, n++);
                        o || (this.prunePal(r), o = !0)
                    } else {
                        var s = t.map((function(t) {
                                return [255 & t, (65280 & t) >> 8, (16711680 & t) >> 16]
                            })),
                            l = i = s.length,
                            h = this.initDist;
                        if (l > this.colors) {
                            for (; l > this.colors;) {
                                var c = [];
                                for (a = 0; a < i; a++) {
                                    var u = s[a];
                                    t[a];
                                    if (u)
                                        for (var f = a + 1; f < i; f++) {
                                            var d = s[f],
                                                g = t[f];
                                            if (d) {
                                                var v = this.colorDist(u, d);
                                                v < h && (c.push([f, d, g, v]), delete s[f], l--)
                                            }
                                        }
                                }
                                h += l > 3 * this.colors ? this.initDist : this.distIncr
                            }
                            if (l < this.colors) {
                                p.call(c, (function(t, e) {
                                    return e[3] - t[3]
                                }));
                                for (var m = 0; l < this.colors;) s[c[m][0]] = c[m][1], l++, m++
                            }
                        }
                        for (i = s.length, a = 0; a < i; a++) s[a] && (this.idxrgb.push(s[a]), this.idxi32.push(t[a]), this.i32idx[t[a]] = this.idxi32.length - 1, this.i32rgb[t[a]] = s[a])
                    }
                }, e.prototype.colorStats1D = function(t) {
                    for (var e, i = this.histogram, r = t.length, n = 0; n < r; n++)(4278190080 & (e = t[n])) >> 24 != 0 && (this.hueStats && this.hueStats.check(e), e in i ? i[e]++ : i[e] = 1)
                }, e.prototype.colorStats2D = function(t, e) {
                    var i = this.boxSize[0],
                        r = this.boxSize[1],
                        n = i * r,
                        o = function(t, e, i, r) {
                            for (var n = t % i, o = e % r, a = t - n, s = e - o, l = [], h = 0; h < e; h += r)
                                for (var c = 0; c < t; c += i) l.push({
                                    x: c,
                                    y: h,
                                    w: c == a ? n : i,
                                    h: h == s ? o : r
                                });
                            return l
                        }(e, t.length / e, i, r),
                        a = this.histogram,
                        s = this;
                    o.forEach((function(i) {
                        var r, o = Math.max(Math.round(i.w * i.h / n) * s.boxPxls, 2),
                            l = {};
                        ! function(t, e, i) {
                            var r = t,
                                n = r.y * e + r.x,
                                o = (r.y + r.h - 1) * e + (r.x + r.w - 1),
                                a = 0,
                                s = e - r.w + 1,
                                l = n;
                            do {
                                i.call(this, l), l += ++a % r.w == 0 ? s : 1
                            } while (l <= o)
                        }(i, e, (function(e) {
                            (4278190080 & (r = t[e])) >> 24 != 0 && (s.hueStats && s.hueStats.check(r), r in a ? a[r]++ : r in l ? ++l[r] >= o && (a[r] = l[r]) : l[r] = 1)
                        }))
                    })), this.hueStats && this.hueStats.inject(a)
                }, e.prototype.sortPal = function() {
                    var t = this;
                    this.idxi32.sort((function(e, i) {
                        var r = t.i32idx[e],
                            n = t.i32idx[i],
                            o = t.idxrgb[r],
                            a = t.idxrgb[n],
                            s = c(o[0], o[1], o[2]),
                            l = c(a[0], a[1], a[2]),
                            h = o[0] == o[1] && o[1] == o[2] ? -1 : u(s.h, t.hueGroups),
                            f = (a[0] == a[1] && a[1] == a[2] ? -1 : u(l.h, t.hueGroups)) - h;
                        if (f) return -f;
                        var d = +l.l.toFixed(2) - +s.l.toFixed(2);
                        if (d) return -d;
                        var p = +l.s.toFixed(2) - +s.s.toFixed(2);
                        return p ? -p : void 0
                    })), this.idxi32.forEach((function(e, i) {
                        t.idxrgb[i] = t.i32rgb[e], t.i32idx[e] = i
                    }))
                }, e.prototype.nearestColor = function(t) {
                    var e = this.nearestIndex(t);
                    return null === e ? 0 : this.idxi32[e]
                }, e.prototype.nearestIndex = function(t) {
                    if ((4278190080 & t) >> 24 == 0) return null;
                    if (this.useCache && "" + t in this.i32idx) return this.i32idx[t];
                    for (var e, i = 1e3, r = [255 & t, (65280 & t) >> 8, (16711680 & t) >> 16], n = this.idxrgb.length, o = 0; o < n; o++)
                        if (this.idxrgb[o]) {
                            var a = this.colorDist(r, this.idxrgb[o]);
                            a < i && (i = a, e = o)
                        } return e
                }, e.prototype.cacheHistogram = function(t) {
                    for (var e = 0, i = t[e]; e < t.length && this.histogram[i] >= this.cacheFreq; i = t[e++]) this.i32idx[i] = this.nearestIndex(i)
                }, i.prototype.check = function(t) {
                    this.groupsFull == this.numGroups + 1 && (this.check = function() {});
                    var e = 255 & t,
                        i = (65280 & t) >> 8,
                        r = (16711680 & t) >> 16,
                        n = e == i && i == r ? -1 : u(c(e, i, r).h, this.numGroups),
                        o = this.stats[n],
                        a = this.minCols;
                    o.num++, o.num > a || (o.num == a && this.groupsFull++, o.num <= a && this.stats[n].cols.push(t))
                }, i.prototype.inject = function(t) {
                    for (var e = -1; e < this.numGroups; e++)
                        if (this.stats[e].num <= this.minCols) switch (f(t)) {
                            case "Array":
                                this.stats[e].cols.forEach((function(e) {
                                    -1 == t.indexOf(e) && t.push(e)
                                }));
                                break;
                            case "Object":
                                this.stats[e].cols.forEach((function(e) {
                                    t[e] ? t[e]++ : t[e] = 1
                                }))
                        }
                };
                var r = .2126,
                    n = .7152,
                    o = .0722;

                function a(t, e, i) {
                    return Math.sqrt(r * t * t + n * e * e + o * i * i)
                }
                var s = Math.sqrt(65025);

                function l(t, e) {
                    var i = e[0] - t[0],
                        a = e[1] - t[1],
                        l = e[2] - t[2];
                    return Math.sqrt(r * i * i + n * a * a + o * l * l) / s
                }

                function h(t, e) {
                    var i = Math.abs(e[0] - t[0]),
                        a = Math.abs(e[1] - t[1]),
                        s = Math.abs(e[2] - t[2]);
                    return (r * i + n * a + o * s) / 254.99999999999997
                }

                function c(t, e, i) {
                    var r, n, o, s, l;
                    if (t /= 255, e /= 255, i /= 255, (r = Math.max(t, e, i)) == (n = Math.min(t, e, i))) o = s = 0;
                    else {
                        switch (l = r - n, s = (r + n) / 2 > .5 ? l / (2 - r - n) : l / (r + n), r) {
                            case t:
                                o = (e - i) / l + (e < i ? 6 : 0);
                                break;
                            case e:
                                o = (i - t) / l + 2;
                                break;
                            case i:
                                o = (t - e) / l + 4
                        }
                        o /= 6
                    }
                    return {
                        h: o,
                        s,
                        l: a(t, e, i)
                    }
                }

                function u(t, e) {
                    var i = 1 / e,
                        r = i / 2;
                    if (t >= 1 - r || t <= r) return 0;
                    for (var n = 1; n < e; n++) {
                        var o = n * i;
                        if (t >= o - r && t <= o + r) return n
                    }
                }

                function f(t) {
                    return Object.prototype.toString.call(t).slice(8, -1)
                }
                var d, p = "xyzvwtursopqmnklhijfgdeabc" == (d = "abcdefghijklmnopqrstuvwxyz").split("").sort((function(t, e) {
                    return ~~(d.indexOf(e) / 2.3) - ~~(d.indexOf(t) / 2.3)
                })).join("") ? Array.prototype.sort : function(t) {
                    var e = f(this[0]);
                    if ("Number" == e || "String" == e) {
                        for (var i, r = {}, n = this.length, o = 0; o < n; o++) i = this[o], r[i] || 0 === r[i] || (r[i] = o);
                        return this.sort((function(e, i) {
                            return t(e, i) || r[e] - r[i]
                        }))
                    }
                    r = this.map((function(t) {
                        return t
                    }));
                    return this.sort((function(e, i) {
                        return t(e, i) || r.indexOf(e) - r.indexOf(i)
                    }))
                };

                function g(t, e) {
                    var i, r, n, o, a, s;
                    switch (f(t)) {
                        case "HTMLImageElement":
                            (i = document.createElement("canvas")).width = t.naturalWidth, i.height = t.naturalHeight, (r = i.getContext("2d")).drawImage(t, 0, 0);
                        case "Canvas":
                        case "HTMLCanvasElement":
                            i = i || t, r = r || i.getContext("2d");
                        case "CanvasRenderingContext2D":
                            r = r || t, i = i || r.canvas, n = r.getImageData(0, 0, i.width, i.height);
                        case "ImageData":
                            e = (n = n || t).width, o = "CanvasPixelArray" == f(n.data) ? new Uint8Array(n.data) : n.data;
                        case "Array":
                        case "CanvasPixelArray":
                            o = o || new Uint8Array(t);
                        case "Uint8Array":
                        case "Uint8ClampedArray":
                            o = o || t, a = new Uint32Array(o.buffer);
                        case "Uint32Array":
                            a = a || t, o = o || new Uint8Array(a.buffer), e = e || a.length, s = a.length / e
                    }
                    return {
                        can: i,
                        ctx: r,
                        imgd: n,
                        buf8: o,
                        buf32: a,
                        width: e,
                        height: s
                    }
                }
                this.RgbQuant = e, t.exports && (t.exports = e)
            }).call(this)
        },
        33494: (t, e, i) => {
            "use strict";
            i.r(e), i.d(e, {
                default: () => o
            });
            var r = i(20477),
                n = i.n(r);

            function o() {
                return n()('/*! License information is available at https://static.cdn.printful.com/dist-pf/pf-mockup-canvas.worker.licenses.txt if third party dependencies are included */(()=>{var t={324:(t,e,r)=>{"use strict";var n=r(836),a=(Object.defineProperty(e,"__esModule",{value:!0}),e.PFMockupCanvasBase=void 0,n(r(687))),o=n(r(156)),i=n(r(690)),s=n(r(728)),u=n(r(416)),l=n(r(468)),c=n(r(661)),f=r(101);r(70);function h(t,e){p(t,e),e.add(t)}function d(t,e,r){p(t,e),e.set(t,r)}function p(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function g(t,e,r){if(e.has(t))return r;throw new TypeError("attempted to get private field on non-instance")}var v="PrintfileLayer",y="MultiFileLayer",w="DisplacementLayer",m="StoredLayer",x={default:"source-over",overlay:"source-over",multiply:"multiply",screen:"screen",darken:"darken",lighten:"lighten",colorburn:"color-burn",dodge:"color-dodge",softlight:"soft-light",linearburn:"multiply",dstin:"destination-in",dstover:"destination-over",sourcein:"source-in"},b=new WeakMap,k=new WeakMap,_=new WeakMap,M=new WeakMap,I=new WeakMap,E=new WeakMap,O=new WeakMap,S=new WeakMap,C=new WeakSet,L=new WeakSet,D=new WeakSet,P=new WeakSet,W=new WeakSet,j=new WeakSet,R=new WeakSet,T=new WeakSet,B=new WeakSet,U=new WeakSet,A=new WeakSet,F=new WeakSet,N=new WeakSet,V=new WeakSet,z=function(){function t(e){if((0,i.default)(this,t),h(this,V),h(this,N),h(this,F),h(this,A),h(this,U),h(this,B),h(this,T),h(this,R),h(this,j),h(this,W),h(this,P),h(this,D),h(this,L),h(this,C),(0,u.default)(this,"CACHE_TIMEOUT",1e4),(0,u.default)(this,"IS_BROWSER",!1),d(this,b,{writable:!0,value:null}),d(this,k,{writable:!0,value:null}),d(this,_,{writable:!0,value:0}),d(this,M,{writable:!0,value:[]}),d(this,I,{writable:!0,value:""}),d(this,E,{writable:!0,value:null}),d(this,O,{writable:!0,value:null}),d(this,S,{writable:!0,value:null}),this.constructor===t)throw new Error("Abstract classes can\'t be instantiated.");(0,c.default)(this,S,e),(0,c.default)(this,M,null!=(e=null==(e=(0,l.default)(this,S).mockupData)?void 0:e.layers)?e:[]),(0,c.default)(this,I,null!=(e=null==(e=(0,l.default)(this,S).mockupData)?void 0:e.layerBaseColor)?e:""),(0,c.default)(this,E,new WeakMap),(0,c.default)(this,O,{})}var e;return(0,s.default)(t,[{key:"renderMockup",value:(e=(0,o.default)(a.default.mark((function t(){return a.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(g(this,V,it).call(this)){t.next=2;break}throw new Error("Invalid params passed!");case 2:return t.next=4,g(this,L,H).call(this);case 4:return t.next=6,g(this,R,X).call(this);case 6:return t.abrupt("return",(0,l.default)(this,b));case 7:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"createCanvas",value:function(t,e){g(this,C,G).call(this)}},{key:"loadImage",value:function(t){g(this,C,G).call(this)}},{key:"fetchUrl",value:function(t){g(this,C,G).call(this)}},{key:"createImageData",value:function(t,e,r){g(this,C,G).call(this)}},{key:"debugLogImage",value:function(t){var e,r;(0,l.default)(this,S).consoleVisualDebug&&this.IS_BROWSER&&t.toDataURL&&(r=Math.min(1,300/t.height),e=t.width*r,r=t.height*r,r="\\n            background-color: #ccc;\\n            background-image: url(\'"+t.toDataURL()+"\'),\\n            linear-gradient(45deg, #888 25%, transparent 25%),\\n            linear-gradient(45deg, transparent 75%, #888 75%),\\n            linear-gradient(45deg, transparent 75%, #888 75%),\\n            linear-gradient(45deg, #888 25%, transparent 25%);\\n            background-position:0 0, 0 0, 0 0, -20px -20px, 20px 20px;\\n            background-repeat: no-repeat, repeat, repeat, repeat, repeat;\\n            background-size: "+e+"px "+r+"px, 40px 40px, 40px 40px, 40px 40px, 40px 40px;\\n            padding: "+r/2+"px "+e/2+"px; \\n            line-height: 1px;\\n            font-size: 1px;\\n            color:transparent;\\n        ",console.info(t.width+"x"+t.height),console.info("%c+",r))}},{key:"debugInfo",value:function(t){(0,l.default)(this,S).debugMode&&console.info(t)}}]),t}();function G(){throw new Error("Method must be implemented.")}function H(){(0,c.default)(this,b,this.createCanvas((0,l.default)(this,S).mockupSize,(0,l.default)(this,S).mockupSize)),(0,c.default)(this,k,(0,l.default)(this,b).getContext("2d")),(0,c.default)(this,_,(0,l.default)(this,b).height/(0,l.default)(this,S).mockupData.height),(0,l.default)(this,S).mockupData.width!==(0,l.default)(this,S).mockupData.height&&(this.debugInfo("mockupData width !== height"),(0,l.default)(this,b).width=(0,l.default)(this,S).mockupData.width*(0,l.default)(this,_));var t,e=[];for(t in(0,l.default)(this,M))g(this,D,Y).call(this,(0,l.default)(this,M)[t],e);return Promise.all(e)}function Y(t,e){var r,n,a,o=this,i=(null!=(i=t.children)&&i.forEach((function(t){return g(o,D,Y).call(o,t,e)})),"");t._type===y?(n=(0,l.default)(this,S).layerParams[t.paramName],i=t.files[n]||Object.values(t.files)[0]):t.filePath&&(i=t.filePath),i=i.replace("[size]",(0,l.default)(this,S).mockupSize),(i=t._type===v?null==(n=r=(0,l.default)(this,S).printfileData[t.fileType])?void 0:n.printfilePreview:i)&&(t._type===w?a=g(this,W,J).call(this,i):(a=g(this,P,q).call(this,i),t._type===v&&null!=(n=r)&&null!=(i=n.options)&&i.sticker_effect&&(a=a.then((function(t){return g(o,N,ot).call(o,t,r.width)})))),e.push(a.then((function(e){(0,l.default)(o,E).set(t,e)}))))}function q(t){var e,r=this;return(e=z.imageCache)[t]||(e[t]=this.loadImage(t).then((function(e){return r.debugInfo("Loaded image",t.slice(0,200)),e})).finally((function(){r.IS_BROWSER&&setTimeout((function(){return delete z.imageCache[t]}),r.CACHE_TIMEOUT)})))}function J(t){var e,r=this,n=performance.now();return(e=z.displacementMapCache)[t]||(e[t]=this.fetchUrl(t).then((function(t){return t.arrayBuffer()})).then((function(e){r.debugInfo("Downloaded map "+t+" ("+(performance.now()-n)+"ms)");var a=new Uint16Array(e,0,4),o=a[1],i=a[2],s=o*i;if(65450!==a[0]||65467!==a[3])throw new Error("Invalid header!");if(e.byteLength!==a.byteLength+4*s)throw new Error("Invalid data length!");return{isRaw:!0,redData:new Uint16Array(e,8,s),greenData:new Uint16Array(e,8+2*s,s),width:o,height:i}})).finally((function(){r.IS_BROWSER&&setTimeout((function(){return delete z.displacementMapCache[t]}),r.CACHE_TIMEOUT)})))}function K(t){return Q.apply(this,arguments)}function Q(){return(Q=(0,o.default)(a.default.mark((function t(e){var r,n,o;return a.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=e.width*(0,l.default)(this,_)||(0,l.default)(this,b).width,n=e.height*(0,l.default)(this,_)||(0,l.default)(this,b).height,r=this.createCanvas(r,n),n=r.getContext("2d"),t.t0=a.default.keys(e.children||[]);case 5:if((t.t1=t.t0()).done){t.next=12;break}return o=t.t1.value,o=e.children[o],t.next=10,g(this,B,tt).call(this,o,n);case 10:t.next=5;break;case 12:return t.abrupt("return",r);case 13:case"end":return t.stop()}}),t,this)})))).apply(this,arguments)}function X(){return Z.apply(this,arguments)}function Z(){return(Z=(0,o.default)(a.default.mark((function t(){var e,r,n,o;return a.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.debugInfo("Rendering",(0,l.default)(this,S).generatorVariantId),e=performance.now(),r=this.createCanvas((0,l.default)(this,b).width,(0,l.default)(this,b).height),n=r.getContext("2d"),(0,l.default)(this,I)&&g(this,T,$).call(this,(0,l.default)(this,I),n),t.t0=a.default.keys((0,l.default)(this,M));case 6:if((t.t1=t.t0()).done){t.next=13;break}return o=t.t1.value,o=(0,l.default)(this,M)[o],t.next=11,g(this,B,tt).call(this,o,n);case 11:t.next=6;break;case 13:(0,l.default)(this,S).mockupBackgroundColor&&g(this,T,$).call(this,(0,l.default)(this,S).mockupBackgroundColor,(0,l.default)(this,k)),(0,l.default)(this,k).drawImage(r,0,0),o=performance.now(),this.debugInfo("Rendered in "+(o-e)+" ms.",(0,l.default)(this,S).generatorVariantId);case 17:case"end":return t.stop()}}),t,this)})))).apply(this,arguments)}function $(t,e){e.fillStyle=t,e.fillRect(0,0,e.canvas.width,e.canvas.height)}function tt(t,e){return et.apply(this,arguments)}function et(){return(et=(0,o.default)(a.default.mark((function t(e,r){var n,o,i,s,u,c,f,h,d,p;return a.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e&&r){t.next=2;break}return t.abrupt("return");case 2:if(n=!1,e._type===w)return g(this,F,at).call(this,e,r),t.abrupt("return");t.next=6;break;case 6:if(e._type!==m){t.next=14;break}if(!(o=(0,l.default)(this,O)[e.name])){t.next=12;break}(0,l.default)(this,E).set(e,o),t.next=14;break;case 12:return console.error("Stored layer not known: "+e.name),t.abrupt("return");case 14:if((0,l.default)(this,E).has(e)){t.next=24;break}if(e.children&&e.children.length)return t.next=18,g(this,j,K).call(this,e);t.next=23;break;case 18:o=t.sent,n=!0,(0,l.default)(this,E).set(e,o),t.next=24;break;case 23:return t.abrupt("return");case 24:if(this.debugInfo("Drawing layer "+e.fileType+" "+e.filePath+" "+e.blending,e,(0,l.default)(this,_),(0,l.default)(this,S).generatorVariantId),i=(0,l.default)(this,E).get(e),e.storeAs)return(0,l.default)(this,O)[e.storeAs]=i,t.abrupt("return");t.next=29;break;case 29:if(s=e.left*(0,l.default)(this,_)||0,u=e.top*(0,l.default)(this,_)||0,c=n?i.height:e.height*(0,l.default)(this,_)||r.canvas.height,(f=n?i.width:e.width*(0,l.default)(this,_)||r.canvas.width)&&c){t.next=36;break}return console.error("no width/height defined",r.canvas.width,r.canvas.height),t.abrupt("return");case 36:r.globalCompositeOperation=g(this,U,rt).call(this,e.blending),e.rotate&&(p=e.rotate*Math.PI/180,h=Math.abs(f*Math.cos(p))+Math.abs(c*Math.sin(p)),d=Math.abs(c*Math.cos(p))+Math.abs(f*Math.sin(p)),r.translate(s+h/2,u+d/2),r.rotate(p),s=-f/2,u=-c/2),e._type===v&&null!=(h=(0,l.default)(this,S).printfileData[e.fileType])&&h.position&&(p=null==(d=(0,l.default)(this,S).printfileData[e.fileType])?void 0:d.position,i=g(this,A,nt).call(this,i,p,f,c)),r.drawImage(i,Math.floor(s),Math.floor(u),Math.floor(f),Math.floor(c)),r.resetTransform(),r.globalCompositeOperation=x.default,this.debugLogImage(r.canvas);case 43:case"end":return t.stop()}}),t,this)})))).apply(this,arguments)}function rt(t){return x[t]||(t&&console.error("Unknown blending mode "+t),x.default)}function nt(t,e,r,n){if(e.width===e.areaWidth&&e.height===e.areaHeight&&0===e.left&&0===e.top||!e.areaWidth||!e.areaHeight)return t;var a=this.createCanvas(r,n),o=a.getContext("2d");r/=e.areaWidth,n/=e.areaHeight;return o.drawImage(t,Math.floor(r*e.left),Math.floor(n*e.top),Math.floor(r*e.width),Math.floor(n*e.height)),a}function at(t,e){var r=(0,l.default)(this,E).get(t),n=(this.debugInfo("Applying displacement",r.width,r.height,(0,l.default)(this,S).generatorVariantId),performance.now());r=(0,f.applyDisplacement)(r,e.getImageData(0,0,e.canvas.width,e.canvas.height),(0,l.default)(this,S).useInterpolation,(0,l.default)(this,S).debugMode),this.debugInfo("Finished displacement "+t.filePath+" ("+(performance.now()-n)+"ms)",(0,l.default)(this,S).generatorVariantId),t=this.createCanvas(r.width,r.height),n=this.createImageData(r.data,r.width,r.height);t.getContext("2d").putImageData(n,0,0),e.canvas.width=(0,l.default)(this,b).width,e.canvas.height=(0,l.default)(this,b).height,e.clearRect(0,0,e.canvas.width,e.canvas.height),e.drawImage(t,0,0,e.canvas.width,e.canvas.height),this.debugLogImage(e.canvas),this.debugInfo("Done",(0,l.default)(this,S).generatorVariantId)}function ot(t,e){for(var r=t.naturalWidth||t.width,n=t.naturalHeight||t.height,a=this.createCanvas(r,n),o=a.getContext("2d"),i=.0984251968503937*r/e,s=0;s<=360;s++){var u=s*(Math.PI/180);o.drawImage(t,Math.floor(i*Math.sin(u)),Math.floor(i*Math.cos(u)))}return o.globalCompositeOperation=x.sourcein,o.fillStyle="#fff",o.fillRect(0,0,r,n),o.globalCompositeOperation=x.default,o.drawImage(t,0,0),a}function it(){return!(!(0,l.default)(this,S).mockupData||!(0,l.default)(this,S).printfileData)||(console.error("Invalid params for generateMockup call",{mockupData:(0,l.default)(this,S).mockupData,printfileData:(0,l.default)(this,S).printfileData}),!1)}e.PFMockupCanvasBase=z,(0,u.default)(z,"displacementMapCache",{}),(0,u.default)(z,"imageCache",{})},70:(t,e,r)=>{"use strict";var n=r(836),a=(Object.defineProperty(e,"__esModule",{value:!0}),e.PFMockupCanvasPar=void 0,n(r(728))),o=n(r(690)),i=n(r(416)),s=(0,a.default)((function t(){(0,o.default)(this,t),(0,i.default)(this,"mockupSize",200),(0,i.default)(this,"mockupData",null),(0,i.default)(this,"printfileData",null),(0,i.default)(this,"generatorVariantId",null),(0,i.default)(this,"consoleVisualDebug",!1),(0,i.default)(this,"useInterpolation",!1),(0,i.default)(this,"layerParams",{}),(0,i.default)(this,"mockupBackgroundColor",null),(0,i.default)(this,"debugMode",!1)}));e.PFMockupCanvasPar=s},101:(t,e)=>{"use strict";function r(t,e,r,n){return(e*r+t)*(void 0===n?4:n)}function n(t,e,r,n){return(1-Math.abs(t-r))*(1-Math.abs(e-n))}Object.defineProperty(e,"__esModule",{value:!0}),e.applyDisplacement=function(t,e,a,o){void 0===a&&(a=!1);for(var i,s,u,l,c,f,h,d=(o=void 0!==o&&o)?performance.now():null,p=t.width,g=t.height,v=new Uint8ClampedArray(p*g*4),y=e.width/p,w=e.height/g,m=e.width,x=e.data,b=0;b<g;b++)for(h=0;h<p;h++){if(t.isRaw){if(i=r(h,b,p,1),c=t.redData[i],f=t.greenData[i],0===c&&0===f)continue;i*=4}else{if(i=r(h,b,p),0===t.data[i+3])continue;c=t.data[i],f=t.data[i+1]}if(l=(b+2*g*(f/65535-.5))*w,u=(h+2*p*(c/65535-.5))*y,a)for(var k=Math.floor(u),_=Math.floor(l),M=0;M<=3;M++)v[i+M]=x[r(k,_,m)+M]*n(k,_,u,l)+x[r(k+1,_,m)+M]*n(k+1,_,u,l)+x[r(k,_+1,m)+M]*n(k,_+1,u,l)+x[r(k+1,_+1,m)+M]*n(k+1,_+1,u,l);else s=r(Math.round(u),Math.round(l),m),v[i]=x[s],v[i+1]=x[s+1],v[i+2]=x[s+2],v[i+3]=x[s+3]}return o&&console.log("Finished displacement in "+(performance.now()-d)+"ms"),{data:v,width:p,height:g}}},115:t=>{t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return t},t.exports.__esModule=!0,t.exports.default=t.exports},156:t=>{function e(t,e,r,n,a,o,i){try{var s=t[o](i),u=s.value}catch(t){return void r(t)}s.done?e(u):Promise.resolve(u).then(n,a)}t.exports=function(t){return function(){var r=this,n=arguments;return new Promise((function(a,o){var i=t.apply(r,n);function s(t){e(i,a,o,s,u,"next",t)}function u(t){e(i,a,o,s,u,"throw",t)}s(void 0)}))}},t.exports.__esModule=!0,t.exports.default=t.exports},912:t=>{t.exports=function(t,e){return e.get?e.get.call(t):e.value},t.exports.__esModule=!0,t.exports.default=t.exports},448:t=>{t.exports=function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}},t.exports.__esModule=!0,t.exports.default=t.exports},690:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.__esModule=!0,t.exports.default=t.exports},69:t=>{t.exports=function(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)},t.exports.__esModule=!0,t.exports.default=t.exports},468:(t,e,r)=>{var n=r(912),a=r(69);t.exports=function(t,e){var r=a(t,e,"get");return n(t,r)},t.exports.__esModule=!0,t.exports.default=t.exports},661:(t,e,r)=>{var n=r(448),a=r(69);t.exports=function(t,e,r){var o=a(t,e,"set");return n(t,o,r),r},t.exports.__esModule=!0,t.exports.default=t.exports},728:t=>{function e(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}t.exports=function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t},t.exports.__esModule=!0,t.exports.default=t.exports},416:t=>{t.exports=function(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t},t.exports.__esModule=!0,t.exports.default=t.exports},808:t=>{function e(r){return t.exports=e=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},t.exports.__esModule=!0,t.exports.default=t.exports,e(r)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports},655:(t,e,r)=>{var n=r(15);t.exports=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&n(t,e)},t.exports.__esModule=!0,t.exports.default=t.exports},836:t=>{t.exports=function(t){return t&&t.__esModule?t:{default:t}},t.exports.__esModule=!0,t.exports.default=t.exports},993:(t,e,r)=>{var n=r(698).default,a=r(115);t.exports=function(t,e){if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return a(t)},t.exports.__esModule=!0,t.exports.default=t.exports},61:(t,e,r)=>{var n=r(698).default;function a(){"use strict";t.exports=a=function(){return e},t.exports.__esModule=!0,t.exports.default=t.exports;var e={},r=Object.prototype,o=r.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},s=i.iterator||"@@iterator",u=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),i=new E(n||[]);return o._invoke=function(t,e,r){var n="suspendedStart";return function(a,o){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===a)throw o;return S()}for(r.method=a,r.arg=o;;){var i=r.delegate;if(i){var s=_(i,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var u=h(t,e,r);if("normal"===u.type){if(n=r.done?"completed":"suspendedYield",u.arg===d)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n="completed",r.method="throw",r.arg=u.arg)}}}(t,r,i),o}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=f;var d={};function p(){}function g(){}function v(){}var y={};c(y,s,(function(){return this}));var w=Object.getPrototypeOf,m=w&&w(w(O([])));m&&m!==r&&o.call(m,s)&&(y=m);var x=v.prototype=p.prototype=Object.create(y);function b(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function k(t,e){function r(a,i,s,u){var l=h(t[a],t,i);if("throw"!==l.type){var c=l.arg,f=c.value;return f&&"object"==n(f)&&o.call(f,"__await")?e.resolve(f.__await).then((function(t){r("next",t,s,u)}),(function(t){r("throw",t,s,u)})):e.resolve(f).then((function(t){c.value=t,s(c)}),(function(t){return r("throw",t,s,u)}))}u(l.arg)}var a;this._invoke=function(t,n){function o(){return new e((function(e,a){r(t,n,e,a)}))}return a=a?a.then(o,o):o()}}function _(t,e){var r=t.iterator[e.method];if(void 0===r){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,_(t,e),"throw"===e.method))return d;e.method="throw",e.arg=new TypeError("The iterator does not provide a \'throw\' method")}return d}var n=h(r,t.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,d;var a=n.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function M(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function I(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(M,this),this.reset(!0)}function O(t){if(t){var e=t[s];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,n=function e(){for(;++r<t.length;)if(o.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return n.next=n}}return{next:S}}function S(){return{value:void 0,done:!0}}return g.prototype=v,c(x,"constructor",v),c(v,"constructor",g),g.displayName=c(v,l,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,v):(t.__proto__=v,c(t,l,"GeneratorFunction")),t.prototype=Object.create(x),t},e.awrap=function(t){return{__await:t}},b(k.prototype),c(k.prototype,u,(function(){return this})),e.AsyncIterator=k,e.async=function(t,r,n,a,o){void 0===o&&(o=Promise);var i=new k(f(t,r,n,a),o);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},b(x),c(x,l,"Generator"),c(x,s,(function(){return this})),c(x,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=O,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(I),!t)for(var e in this)"t"===e.charAt(0)&&o.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,n){return i.type="throw",i.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=o.call(a,"catchLoc"),u=o.call(a,"finallyLoc");if(s&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var a=n;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),I(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var a=n.arg;I(r)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:O(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},e}t.exports=a,t.exports.__esModule=!0,t.exports.default=t.exports},15:t=>{function e(r,n){return t.exports=e=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},t.exports.__esModule=!0,t.exports.default=t.exports,e(r,n)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports},698:t=>{function e(r){return t.exports=e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t.exports.__esModule=!0,t.exports.default=t.exports,e(r)}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports},687:(t,e,r)=>{var n=r(61)();t.exports=n;try{regeneratorRuntime=n}catch(t){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}}},e={};function r(n){var a=e[n];if(void 0!==a)return a.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}(()=>{"use strict";var t=r(836),e=t(r(690)),n=t(r(728)),a=t(r(115)),o=t(r(655)),i=t(r(993)),s=t(r(808)),u=t(r(416)),l=r(324);r(70);function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=(0,s.default)(t);return r=e?(r=(0,s.default)(this).constructor,Reflect.construct(n,arguments,r)):n.apply(this,arguments),(0,i.default)(this,r)}}var f=function(t){(0,o.default)(i,t);var r=c(i);function i(t){return(0,e.default)(this,i),t=r.call(this,t),(0,u.default)((0,a.default)(t),"createCanvas",(function(t,e){return new OffscreenCanvas(t,e)})),t.fetchUrl=self.fetch.bind(self),t.IS_BROWSER=!0,t}return(0,n.default)(i,[{key:"loadImage",value:function(t){return fetch(t,{mode:"cors"}).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t)}))}},{key:"createImageData",value:function(t,e,r){return new ImageData(t,e,r)}}]),i}(l.PFMockupCanvasBase);onmessage=function(t){var e;(e=t.data.params,new f(e).renderMockup()).then((function(e){if(t.data.returnAsUrl)return e.convertToBlob().then((function(e){e=URL.createObjectURL(e),postMessage({messageId:t.data.messageId,response:e})}));e=e.transferToImageBitmap(),postMessage({messageId:t.data.messageId,response:e},[e])})).catch((function(e){throw postMessage({messageId:t.data.messageId,error:e}),e}))}})()})();', "Worker", void 0, i.p + "pf-mockup-canvas.worker.3e9af680cbc2625c71ca.worker.js")
            }
        },
        20477: t => {
            "use strict";
            t.exports = function(t, e, i, r) {
                var n = self || window;
                try {
                    try {
                        var o;
                        try {
                            o = new n.Blob([t])
                        } catch (e) {
                            (o = new(n.BlobBuilder || n.WebKitBlobBuilder || n.MozBlobBuilder || n.MSBlobBuilder)).append(t), o = o.getBlob()
                        }
                        var a = n.URL || n.webkitURL,
                            s = a.createObjectURL(o),
                            l = new n[e](s, i);
                        return a.revokeObjectURL(s), l
                    } catch (r) {
                        return new n[e]("data:application/javascript,".concat(encodeURIComponent(t)), i)
                    }
                } catch (t) {
                    if (!r) throw Error("Inline worker is not supported");
                    return new n[e](r, i)
                }
            }
        },
        66115: t => {
            t.exports = function(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        17156: t => {
            function e(t, e, i, r, n, o, a) {
                try {
                    var s = t[o](a),
                        l = s.value
                } catch (t) {
                    return void i(t)
                }
                s.done ? e(l) : Promise.resolve(l).then(r, n)
            }
            t.exports = function(t) {
                return function() {
                    var i = this,
                        r = arguments;
                    return new Promise((function(n, o) {
                        var a = t.apply(i, r);

                        function s(t) {
                            e(a, n, o, s, l, "next", t)
                        }

                        function l(t) {
                            e(a, n, o, s, l, "throw", t)
                        }
                        s(void 0)
                    }))
                }
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        48912: t => {
            t.exports = function(t, e) {
                return e.get ? e.get.call(t) : e.value
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        43448: t => {
            t.exports = function(t, e, i) {
                if (e.set) e.set.call(t, i);
                else {
                    if (!e.writable) throw new TypeError("attempted to set read only private field");
                    e.value = i
                }
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        56690: t => {
            t.exports = function(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        54069: t => {
            t.exports = function(t, e, i) {
                if (!e.has(t)) throw new TypeError("attempted to " + i + " private field on non-instance");
                return e.get(t)
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        50468: (t, e, i) => {
            var r = i(48912),
                n = i(54069);
            t.exports = function(t, e) {
                var i = n(t, e, "get");
                return r(t, i)
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        65661: (t, e, i) => {
            var r = i(43448),
                n = i(54069);
            t.exports = function(t, e, i) {
                var o = n(t, e, "set");
                return r(t, o, i), i
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        89728: t => {
            function e(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var r = e[i];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            t.exports = function(t, i, r) {
                return i && e(t.prototype, i), r && e(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        38416: t => {
            t.exports = function(t, e, i) {
                return e in t ? Object.defineProperty(t, e, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = i, t
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        73808: t => {
            function e(i) {
                return t.exports = e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                }, t.exports.__esModule = !0, t.exports.default = t.exports, e(i)
            }
            t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        61655: (t, e, i) => {
            var r = i(6015);
            t.exports = function(t, e) {
                if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), e && r(t, e)
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        64836: t => {
            t.exports = function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        94993: (t, e, i) => {
            var r = i(18698).default,
                n = i(66115);
            t.exports = function(t, e) {
                if (e && ("object" === r(e) || "function" == typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return n(t)
            }, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        17061: (t, e, i) => {
            var r = i(18698).default;

            function n() {
                "use strict";
                t.exports = n = function() {
                    return e
                }, t.exports.__esModule = !0, t.exports.default = t.exports;
                var e = {},
                    i = Object.prototype,
                    o = i.hasOwnProperty,
                    a = "function" == typeof Symbol ? Symbol : {},
                    s = a.iterator || "@@iterator",
                    l = a.asyncIterator || "@@asyncIterator",
                    h = a.toStringTag || "@@toStringTag";

                function c(t, e, i) {
                    return Object.defineProperty(t, e, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), t[e]
                }
                try {
                    c({}, "")
                } catch (t) {
                    c = function(t, e, i) {
                        return t[e] = i
                    }
                }

                function u(t, e, i, r) {
                    var n = e && e.prototype instanceof p ? e : p,
                        o = Object.create(n.prototype),
                        a = new E(r || []);
                    return o._invoke = function(t, e, i) {
                        var r = "suspendedStart";
                        return function(n, o) {
                            if ("executing" === r) throw new Error("Generator is already running");
                            if ("completed" === r) {
                                if ("throw" === n) throw o;
                                return O()
                            }
                            for (i.method = n, i.arg = o;;) {
                                var a = i.delegate;
                                if (a) {
                                    var s = S(a, i);
                                    if (s) {
                                        if (s === d) continue;
                                        return s
                                    }
                                }
                                if ("next" === i.method) i.sent = i._sent = i.arg;
                                else if ("throw" === i.method) {
                                    if ("suspendedStart" === r) throw r = "completed", i.arg;
                                    i.dispatchException(i.arg)
                                } else "return" === i.method && i.abrupt("return", i.arg);
                                r = "executing";
                                var l = f(t, e, i);
                                if ("normal" === l.type) {
                                    if (r = i.done ? "completed" : "suspendedYield", l.arg === d) continue;
                                    return {
                                        value: l.arg,
                                        done: i.done
                                    }
                                }
                                "throw" === l.type && (r = "completed", i.method = "throw", i.arg = l.arg)
                            }
                        }
                    }(t, i, a), o
                }

                function f(t, e, i) {
                    try {
                        return {
                            type: "normal",
                            arg: t.call(e, i)
                        }
                    } catch (t) {
                        return {
                            type: "throw",
                            arg: t
                        }
                    }
                }
                e.wrap = u;
                var d = {};

                function p() {}

                function g() {}

                function v() {}
                var m = {};
                c(m, s, (function() {
                    return this
                }));
                var y = Object.getPrototypeOf,
                    b = y && y(y(k([])));
                b && b !== i && o.call(b, s) && (m = b);
                var x = v.prototype = p.prototype = Object.create(m);

                function _(t) {
                    ["next", "throw", "return"].forEach((function(e) {
                        c(t, e, (function(t) {
                            return this._invoke(e, t)
                        }))
                    }))
                }

                function w(t, e) {
                    function i(n, a, s, l) {
                        var h = f(t[n], t, a);
                        if ("throw" !== h.type) {
                            var c = h.arg,
                                u = c.value;
                            return u && "object" == r(u) && o.call(u, "__await") ? e.resolve(u.__await).then((function(t) {
                                i("next", t, s, l)
                            }), (function(t) {
                                i("throw", t, s, l)
                            })) : e.resolve(u).then((function(t) {
                                c.value = t, s(c)
                            }), (function(t) {
                                return i("throw", t, s, l)
                            }))
                        }
                        l(h.arg)
                    }
                    var n;
                    this._invoke = function(t, r) {
                        function o() {
                            return new e((function(e, n) {
                                i(t, r, e, n)
                            }))
                        }
                        return n = n ? n.then(o, o) : o()
                    }
                }

                function S(t, e) {
                    var i = t.iterator[e.method];
                    if (void 0 === i) {
                        if (e.delegate = null, "throw" === e.method) {
                            if (t.iterator.return && (e.method = "return", e.arg = void 0, S(t, e), "throw" === e.method)) return d;
                            e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return d
                    }
                    var r = f(i, t.iterator, e.arg);
                    if ("throw" === r.type) return e.method = "throw", e.arg = r.arg, e.delegate = null, d;
                    var n = r.arg;
                    return n ? n.done ? (e[t.resultName] = n.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, d) : n : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, d)
                }

                function C(t) {
                    var e = {
                        tryLoc: t[0]
                    };
                    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
                }

                function T(t) {
                    var e = t.completion || {};
                    e.type = "normal", delete e.arg, t.completion = e
                }

                function E(t) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], t.forEach(C, this), this.reset(!0)
                }

                function k(t) {
                    if (t) {
                        var e = t[s];
                        if (e) return e.call(t);
                        if ("function" == typeof t.next) return t;
                        if (!isNaN(t.length)) {
                            var i = -1,
                                r = function e() {
                                    for (; ++i < t.length;)
                                        if (o.call(t, i)) return e.value = t[i], e.done = !1, e;
                                    return e.value = void 0, e.done = !0, e
                                };
                            return r.next = r
                        }
                    }
                    return {
                        next: O
                    }
                }

                function O() {
                    return {
                        value: void 0,
                        done: !0
                    }
                }
                return g.prototype = v, c(x, "constructor", v), c(v, "constructor", g), g.displayName = c(v, h, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
                    var e = "function" == typeof t && t.constructor;
                    return !!e && (e === g || "GeneratorFunction" === (e.displayName || e.name))
                }, e.mark = function(t) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(t, v) : (t.__proto__ = v, c(t, h, "GeneratorFunction")), t.prototype = Object.create(x), t
                }, e.awrap = function(t) {
                    return {
                        __await: t
                    }
                }, _(w.prototype), c(w.prototype, l, (function() {
                    return this
                })), e.AsyncIterator = w, e.async = function(t, i, r, n, o) {
                    void 0 === o && (o = Promise);
                    var a = new w(u(t, i, r, n), o);
                    return e.isGeneratorFunction(i) ? a : a.next().then((function(t) {
                        return t.done ? t.value : a.next()
                    }))
                }, _(x), c(x, h, "Generator"), c(x, s, (function() {
                    return this
                })), c(x, "toString", (function() {
                    return "[object Generator]"
                })), e.keys = function(t) {
                    var e = [];
                    for (var i in t) e.push(i);
                    return e.reverse(),
                        function i() {
                            for (; e.length;) {
                                var r = e.pop();
                                if (r in t) return i.value = r, i.done = !1, i
                            }
                            return i.done = !0, i
                        }
                }, e.values = k, E.prototype = {
                    constructor: E,
                    reset: function(t) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(T), !t)
                            for (var e in this) "t" === e.charAt(0) && o.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var t = this.tryEntries[0].completion;
                        if ("throw" === t.type) throw t.arg;
                        return this.rval
                    },
                    dispatchException: function(t) {
                        if (this.done) throw t;
                        var e = this;

                        function i(i, r) {
                            return a.type = "throw", a.arg = t, e.next = i, r && (e.method = "next", e.arg = void 0), !!r
                        }
                        for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                            var n = this.tryEntries[r],
                                a = n.completion;
                            if ("root" === n.tryLoc) return i("end");
                            if (n.tryLoc <= this.prev) {
                                var s = o.call(n, "catchLoc"),
                                    l = o.call(n, "finallyLoc");
                                if (s && l) {
                                    if (this.prev < n.catchLoc) return i(n.catchLoc, !0);
                                    if (this.prev < n.finallyLoc) return i(n.finallyLoc)
                                } else if (s) {
                                    if (this.prev < n.catchLoc) return i(n.catchLoc, !0)
                                } else {
                                    if (!l) throw new Error("try statement without catch or finally");
                                    if (this.prev < n.finallyLoc) return i(n.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(t, e) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var r = this.tryEntries[i];
                            if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var n = r;
                                break
                            }
                        }
                        n && ("break" === t || "continue" === t) && n.tryLoc <= e && e <= n.finallyLoc && (n = null);
                        var a = n ? n.completion : {};
                        return a.type = t, a.arg = e, n ? (this.method = "next", this.next = n.finallyLoc, d) : this.complete(a)
                    },
                    complete: function(t, e) {
                        if ("throw" === t.type) throw t.arg;
                        return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), d
                    },
                    finish: function(t) {
                        for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                            var i = this.tryEntries[e];
                            if (i.finallyLoc === t) return this.complete(i.completion, i.afterLoc), T(i), d
                        }
                    },
                    catch: function(t) {
                        for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                            var i = this.tryEntries[e];
                            if (i.tryLoc === t) {
                                var r = i.completion;
                                if ("throw" === r.type) {
                                    var n = r.arg;
                                    T(i)
                                }
                                return n
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(t, e, i) {
                        return this.delegate = {
                            iterator: k(t),
                            resultName: e,
                            nextLoc: i
                        }, "next" === this.method && (this.arg = void 0), d
                    }
                }, e
            }
            t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        6015: t => {
            function e(i, r) {
                return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                    return t.__proto__ = e, t
                }, t.exports.__esModule = !0, t.exports.default = t.exports, e(i, r)
            }
            t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        18698: t => {
            function e(i) {
                return t.exports = e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }, t.exports.__esModule = !0, t.exports.default = t.exports, e(i)
            }
            t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports
        },
        64687: (t, e, i) => {
            var r = i(17061)();
            t.exports = r;
            try {
                regeneratorRuntime = r
            } catch (t) {
                "object" == typeof globalThis ? globalThis.regeneratorRuntime = r : Function("r", "regeneratorRuntime = r")(r)
            }
        },
        15671: (t, e, i) => {
            "use strict";

            function r(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }
            i.d(e, {
                Z: () => r
            })
        },
        43144: (t, e, i) => {
            "use strict";

            function r(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var r = e[i];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function n(t, e, i) {
                return e && r(t.prototype, e), i && r(t, i), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), t
            }
            i.d(e, {
                Z: () => n
            })
        },
        4942: (t, e, i) => {
            "use strict";

            function r(t, e, i) {
                return e in t ? Object.defineProperty(t, e, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = i, t
            }
            i.d(e, {
                Z: () => r
            })
        },
        41153: (t, e, i) => {
            "use strict";
            i.d(e, {
                V: () => st
            });
            var r, n, o, a, s, l, h, c, u, f, d, p, g, v, m, y, b, x, _, w, S, C, T, E, k, O, I, P, L, M, A, D, R, F, j, B, U, N, G = 189,
                X = 19,
                z = 403,
                W = 407,
                H = 3,
                Y = 221,
                V = 280,
                q = 242,
                Z = 83,
                K = 89,
                J = 214,
                Q = 215,
                $ = 382,
                tt = 261,
                et = 329,
                it = 320,
                rt = 328,
                nt = 513,
                ot = 525,
                at = 654,
                st = {
                    DEFAULT_PLACEMENT_ID: "default",
                    DEFAULT_FILL_COLOR: "#ffffff"
                };
            st.DEFAULT_DIMENSIONS = "undefined" == typeof window ? {
                width: 600,
                height: 600
            } : {
                width: 300,
                height: 300
            }, st.POSITION_X = 0, st.POSITION_Y = 0, st.POSITION_Z = 2, st.AMBIENT_LIGHT_COLOR = 13421772, st.AMBIENT_LIGHT_INTENSITY = 1, st.DIRECTIONAL_LIGHT_COLOR = 15658734, st.DIRECTIONAL_LIGHT_INTENSITY = .2, st.DEFAULT_PLACEMENT_MAP = {
                0: "default"
            }, st.staticImageCache = {}, st.placementImageStorage = {}, st.STATUS_NO_CHANGES = 2, st.STATUS_RELOAD_PRINTFILE = 1, st.STATUS_RELOAD_MODEL = 0, st.STATUS_RELOAD_MODEL_PROCESSING = -1, st.DEFAULT_MATERIAL_MAP = {
                0: "default"
            }, st.MATERIAL_METAL = "metal", st.MATERIAL_ENAMEL = "enamel", st.XXS = "XXS", st.XS = "XS", st.SM = "SM", st.MD = "MD", st.LG = "LG", st.XL = "XL", st.PRODUCT_MODEL_CONFIG = null, st.MATERIALS = {
                METAL: "material_for_metallic"
            }, st.SIZES = {
                XXS: 0,
                XS: 540,
                SM: 768,
                MD: 992,
                LG: 1200,
                XL: 1600,
                getWindowSize: function() {
                    return window.innerWidth
                },
                getWindowBreakpoint: function() {
                    var t = this.getWindowSize(),
                        e = null,
                        i = -1 / 0;
                    return Object.keys(st.SIZES).forEach((function(r) {
                        var n = st.SIZES[r];
                        n < t && i < n && (e = r, i = st.SIZES[e])
                    })), {
                        key: e,
                        value: i
                    }
                }
            }, st.PRODUCT_OBJ_FILE_MAP = [{
                uniqueId: 1,
                productId: G,
                templateIds: [58, 64],
                objFile: "189-all-over-print-leggings.glb",
                rowColCount: 2,
                staticColorMap: {
                    1: "#ffffff"
                },
                minPolarAngle: Math.PI / 180 * 45,
                maxPolarAngle: Math.PI / 180 * 135,
                breakpointSettings: ((r = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, r[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 1.9
                }, r[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 1.9
                }, r),
                showWarning: !0,
                warningBannerData: {
                    header: ["generator", "3D view represents size M"],
                    content: ["generator", "The design's position and scale may look a little different for other sizes"]
                }
            }, {
                uniqueId: 2,
                productId: X,
                templateIds: [43],
                objFile: "19-11oz-mug.glb",
                rowColCount: 2,
                objPosAdjustY: -.03,
                breakpointSettings: ((n = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .1829,
                    posX: -.0275
                }, n[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 700,
                    zoom: .264,
                    posX: -.0427
                }, n[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 700,
                    zoom: .199,
                    posX: .0651
                }, n)
            }, {
                uniqueId: 3,
                productId: X,
                templateIds: [44],
                objFile: "19-15oz-mug.glb",
                rowColCount: 2,
                breakpointSettings: ((o = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 3.3
                }, o[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 550,
                    zoom: 5.6
                }, o[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 550,
                    zoom: 4.4
                }, o),
                objPosAdjustY: -1.5
            }, {
                uniqueId: 4,
                productId: z,
                templateIds: [43],
                objFile: "403-11oz-color-mug.glb",
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((a = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .2
                }, a[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: .35
                }, a[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 1e3,
                    zoom: .35
                }, a)
            }, {
                uniqueId: 5,
                productId: H,
                templateIds: [51],
                objFile: "3-12x12-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                hasTexture: !0,
                breakpointSettings: ((s = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, s[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 3.5
                }, s[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 2.5
                }, s)
            }, {
                uniqueId: 6,
                productId: H,
                templateIds: [45],
                objFile: "3-12x16-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                breakpointSettings: ((l = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.7
                }, l[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 3.5
                }, l[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 2.5
                }, l)
            }, {
                uniqueId: 7,
                productId: H,
                templateIds: [46],
                objFile: "3-12x16-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                rotateBy90Deg: !0,
                breakpointSettings: ((h = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.7
                }, h[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 3.8
                }, h[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 2.8
                }, h)
            }, {
                uniqueId: 8,
                productId: H,
                templateIds: [52],
                objFile: "3-16x16-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                breakpointSettings: ((c = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2
                }, c[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 4
                }, c[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 3
                }, c)
            }, {
                uniqueId: 9,
                productId: H,
                templateIds: [47],
                objFile: "3-16x20-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                breakpointSettings: ((u = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2.2
                }, u[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 4.5
                }, u[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 3.5
                }, u)
            }, {
                uniqueId: 10,
                productId: H,
                templateIds: [48],
                objFile: "3-16x20-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                rotateBy90Deg: !0,
                breakpointSettings: ((f = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2.2
                }, f[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 5
                }, f[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 4
                }, f)
            }, {
                uniqueId: 11,
                productId: H,
                templateIds: [49],
                objFile: "3-18x24-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                breakpointSettings: ((d = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2.5
                }, d[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 5
                }, d[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 4
                }, d)
            }, {
                uniqueId: 12,
                productId: H,
                templateIds: [50],
                objFile: "3-18x24-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                rotateBy90Deg: !0,
                breakpointSettings: ((p = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2.5
                }, p[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 5.5
                }, p[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 4.5
                }, p)
            }, {
                uniqueId: 13,
                productId: H,
                templateIds: [53],
                objFile: "3-24x36-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                breakpointSettings: ((g = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 3.5
                }, g[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 6
                }, g[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 5.2
                }, g)
            }, {
                uniqueId: 14,
                productId: H,
                templateIds: [54],
                objFile: "3-24x36-canvas.glb",
                rowColCount: 2,
                staticColorMap: {
                    3: "#cccccc"
                },
                staticImageMap: {
                    2: "images/wood.jpg"
                },
                rotateBy90Deg: !0,
                breakpointSettings: ((v = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 3.7
                }, v[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 8
                }, v[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 6.5
                }, v)
            }, {
                uniqueId: 15,
                productId: Y,
                templateIds: [73, 64],
                objFile: "221-all-over-print--capri-leggings.glb",
                rowColCount: 2,
                staticColorMap: {
                    1: "#ffffff"
                },
                minPolarAngle: Math.PI / 180 * 45,
                maxPolarAngle: Math.PI / 180 * 135,
                breakpointSettings: ((m = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, m[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 1.9
                }, m[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 1.9
                }, m),
                showWarning: !0,
                warningBannerData: {
                    header: ["generator", "3D view represents size M"],
                    content: ["generator", "The design's position and scale may look a little different for other sizes"]
                }
            }, {
                uniqueId: 16,
                productId: V,
                templateIds: [132, 82, 82, 64],
                objFile: "280-all-over-print-yoga-capri-leggings.glb",
                placementMap: {
                    0: "default",
                    1: "belt_front",
                    2: "belt_back",
                    3: "label_inside"
                },
                rowColCount: 2,
                minPolarAngle: Math.PI / 180 * 45,
                maxPolarAngle: Math.PI / 180 * 135,
                breakpointSettings: ((y = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .1,
                    posX: 2.5
                }, y[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: .2,
                    posX: 3.2
                }, y[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: .2,
                    posX: 2.8
                }, y),
                showWarning: !0,
                warningBannerData: {
                    header: ["generator", "3D view represents size M"],
                    content: ["generator", "The design's position and scale may look a little different for other sizes"]
                }
            }, {
                uniqueId: 17,
                productId: q,
                templateIds: [81, 82, 83, 64],
                objFile: "242-all-over-print-yoga-leggings.glb",
                placementMap: {
                    0: "default",
                    1: "belt_front",
                    2: "belt_back",
                    3: "label_inside"
                },
                rowColCount: 2,
                minPolarAngle: Math.PI / 180 * 45,
                maxPolarAngle: Math.PI / 180 * 135,
                breakpointSettings: ((b = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, b[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: 1.9
                }, b[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: 1.9
                }, b),
                showWarning: !0,
                warningBannerData: {
                    header: ["generator", "3D view represents size M"],
                    content: ["generator", "The design's position and scale may look a little different for other sizes"]
                }
            }, {
                uniqueId: 18,
                productId: Z,
                templateIds: [32, 32],
                objFile: "square-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((x = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, x[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, x[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, x)
            }, {
                uniqueId: 19,
                productId: Z,
                templateIds: [214, 214],
                objFile: "square-pillow.glb",
                placementId: "front",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((_ = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, _[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, _[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, _)
            }, {
                uniqueId: 20,
                productId: Z,
                templateIds: [72, 72],
                objFile: "rectangular-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((w = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2
                }, w[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 4
                }, w[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 3
                }, w)
            }, {
                uniqueId: 21,
                productId: K,
                templateIds: [32, 32],
                objFile: "square-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((S = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, S[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, S[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, S)
            }, {
                uniqueId: 22,
                productId: K,
                templateIds: [214, 214],
                objFile: "square-pillow.glb",
                placementId: "front",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((C = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, C[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, C[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, C)
            }, {
                uniqueId: 23,
                productId: K,
                templateIds: [72, 72],
                objFile: "rectangular-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((T = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2
                }, T[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 4
                }, T[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 3
                }, T)
            }, {
                uniqueId: 24,
                productId: J,
                templateIds: [32, 32],
                objFile: "square-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((E = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, E[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, E[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, E)
            }, {
                uniqueId: 25,
                productId: J,
                templateIds: [214, 214],
                objFile: "square-pillow.glb",
                placementId: "front",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((k = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, k[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, k[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, k)
            }, {
                uniqueId: 26,
                productId: J,
                templateIds: [72, 72],
                objFile: "rectangular-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((O = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2
                }, O[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 4
                }, O[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 3
                }, O)
            }, {
                uniqueId: 27,
                productId: Q,
                templateIds: [32, 32],
                objFile: "square-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((I = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, I[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, I[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, I)
            }, {
                uniqueId: 28,
                productId: Q,
                templateIds: [214, 214],
                objFile: "square-pillow.glb",
                placementId: "front",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((P = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.5
                }, P[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 3.5
                }, P[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 2.5
                }, P)
            }, {
                uniqueId: 29,
                productId: Q,
                templateIds: [72, 72],
                objFile: "rectangular-pillow.glb",
                placementMap: {
                    0: "front",
                    1: "back"
                },
                variantColorSector: 2,
                rowColCount: 2,
                breakpointSettings: ((L = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 2
                }, L[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 4
                }, L[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 3
                }, L)
            }, {
                uniqueId: 30,
                productId: $,
                templateIds: [192],
                objFile: "382-water-bottle-with-material-v4.glb",
                rowColCount: 2,
                breakpointSettings: ((M = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 400,
                    zoom: .4
                }, M[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 800,
                    zoom: .3
                }, M[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 800,
                    zoom: .3
                }, M)
            }, {
                uniqueId: 31,
                productId: tt,
                templateIds: [98, 98, 99, 99],
                objFile: "261-all-over-print-crew-neck-t-shirt-womens-300822.glb",
                placementMap: {
                    0: "default",
                    1: "back",
                    2: "sleeve_left",
                    3: "sleeve_right"
                },
                variantColorSector: 2,
                rowColCount: 3,
                positionY: .29,
                breakpointSettings: ((A = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .8
                }, A[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: .8
                }, A[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: .85
                }, A)
            }, {
                uniqueId: 32,
                productId: et,
                templateIds: [169, 169, 170, 170, 123],
                objFile: "329-all-over-print-athletic-t-shirt-womens-300822.glb",
                placementMap: {
                    0: "front",
                    1: "back",
                    2: "sleeve_right",
                    3: "sleeve_left"
                },
                variantColorSector: 2,
                rowColCount: 3,
                positionY: .28,
                breakpointSettings: ((D = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .5
                }, D[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: .7
                }, D[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: .75
                }, D)
            }, {
                uniqueId: 33,
                productId: it,
                templateIds: [151, 151, 151, 151, 64],
                objFile: "320-all-over-print-sweatshirt-300822.glb",
                placementMap: {
                    0: "front",
                    1: "back",
                    2: "sleeve_left",
                    3: "sleeve_right",
                    4: "label_inside"
                },
                variantColorSector: 2,
                rowColCount: 3,
                positionY: .3,
                breakpointSettings: ((R = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: 1.3
                }, R[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: 2.5
                }, R[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: 1
                }, R)
            }, {
                uniqueId: 34,
                productId: 257,
                templateIds: [94, 94, 95, 95],
                objFile: "257-all-over-print-crew-neck-t-shirt-men.glb",
                placementMap: {
                    0: "default",
                    1: "back",
                    2: "sleeve_left",
                    3: "sleeve_right"
                },
                variantColorSector: 2,
                rowColCount: 3,
                breakpointSettings: {
                    0: {
                        width: 300,
                        height: 300,
                        zoom: 1
                    },
                    1200: {
                        width: 272,
                        height: 650,
                        zoom: 2
                    },
                    1600: {
                        width: 371,
                        height: 650,
                        zoom: 2
                    }
                }
            }, {
                uniqueId: 35,
                productId: rt,
                templateIds: [168, 168, 143, 143],
                objFile: "328-all-over-print-athletic-t-shirt-mens-300822.glb",
                placementMap: {
                    0: "front",
                    1: "back",
                    2: "sleeve_right",
                    3: "sleeve_left"
                },
                variantColorSector: 2,
                rowColCount: 3,
                positionY: .33,
                breakpointSettings: ((F = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .75
                }, F[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 650,
                    zoom: .85
                }, F[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 650,
                    zoom: .8
                }, F)
            }, {
                uniqueId: 36,
                productId: nt,
                templateIds: [260, 260, 260, 260, 263],
                objFile: "513-525-high-top-canvas-shoes.glb",
                placementMap: {
                    0: "shoe_quarters_left",
                    1: "shoe_quarters_right",
                    2: "shoe_tongue_left",
                    3: "shoe_tongue_right",
                    6: "label_inside"
                },
                staticColorMap: {
                    5: "#cacaca"
                },
                staticImageMap: {
                    7: "images/shoe_39.jpg"
                },
                variantColorSector: 4,
                rowColCount: 3,
                positionY: .05,
                breakpointSettings: ((j = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .45,
                    posX: .184
                }, j[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 750,
                    zoom: .45,
                    posX: .184
                }, j[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 750,
                    zoom: .45,
                    posX: .308
                }, j)
            }, {
                uniqueId: 37,
                productId: ot,
                templateIds: [260, 260, 260, 260, 263],
                objFile: "513-525-high-top-canvas-shoes.glb",
                placementMap: {
                    0: "shoe_quarters_left",
                    1: "shoe_quarters_right",
                    2: "shoe_tongue_left",
                    3: "shoe_tongue_right",
                    6: "label_inside"
                },
                staticColorMap: {
                    5: "#cacaca"
                },
                staticImageMap: {
                    7: "images/shoe_39.jpg"
                },
                variantColorSector: 4,
                rowColCount: 3,
                positionY: .05,
                breakpointSettings: ((B = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .45,
                    posX: .184
                }, B[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 750,
                    zoom: .45,
                    posX: .184
                }, B[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 750,
                    zoom: .45,
                    posX: .308
                }, B)
            }, {
                uniqueId: 38,
                productId: W,
                templateIds: [215],
                objFile: "407-12oz-enamel-mug.glb",
                materialMap: {
                    2: st.MATERIAL_ENAMEL
                },
                rowColCount: 2,
                staticColorMap: {
                    3: "#ffffff"
                },
                staticImageMap: {
                    1: "images/metallic_bg.png"
                },
                objPosAdjustY: -.03,
                positionY: 0,
                breakpointSettings: ((U = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .1829,
                    posX: -.0275
                }, U[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 700,
                    zoom: .264,
                    posX: -.0427
                }, U[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 700,
                    zoom: .199,
                    posX: .0651
                }, U)
            }, {
                uniqueId: 39,
                productId: at,
                templateIds: [410, 410, 410, 410],
                placementMap: {
                    0: "outside_front",
                    1: "outside_back",
                    2: "inside_front",
                    3: "inside_back"
                },
                objFile: "aop_bucket_hat.glb",
                rowColCount: 2,
                breakpointSettings: ((N = {})[st.SIZES[st.XXS]] = {
                    width: 300,
                    height: 300,
                    zoom: .5,
                    posX: -.0275,
                    posY: .05
                }, N[st.SIZES[st.LG]] = {
                    width: 272,
                    height: 700,
                    zoom: .5,
                    posX: -.0427,
                    posY: .05
                }, N[st.SIZES[st.XL]] = {
                    width: 371,
                    height: 700,
                    zoom: .5,
                    posX: .0651,
                    posY: .05
                }, N)
            }], st.getMapObject = function(t, e) {
                return st.PRODUCT_OBJ_FILE_MAP.find((function(i) {
                    return i.productId === e && -1 < i.templateIds.indexOf(t)
                }))
            }, st.setMapObject = function(t) {
                st.PRODUCT_MODEL_CONFIG = t
            }, st.getPositionValues = function(t) {
                var e = this._getBreakPointObject(t, ["zoom", "posX", "posY"]);
                return e.posX = (null == e ? void 0 : e.posX) || (null == t ? void 0 : t.positionX) || st.POSITION_X, e.posY = (null == e ? void 0 : e.posY) || (null == t ? void 0 : t.positionY) || st.POSITION_Y, e.zoom = (null == e ? void 0 : e.zoom) || (null == t ? void 0 : t.positionZ) || st.POSITION_Z, e
            }, st.getDimensions = function(t) {
                return this._getBreakPointObject(t, ["width", "height"]) || st.DEFAULT_DIMENSIONS
            }, st.getFillColor = function(t) {
                return (null == t ? void 0 : t.fillColor) || st.DEFAULT_FILL_COLOR
            }, st.getNeededPlacementIds = function(t) {
                return null != t && t.placementMap ? Object.values(t.placementMap) : [st.DEFAULT_PLACEMENT_ID]
            }, st._getBreakPointObject = function(t, e) {
                var i, r, n, o = null;
                return null != t && t.breakpointSettings && (r = null == (i = st.SIZES.getWindowBreakpoint()) ? void 0 : i.value, n = -1 / 0, Object.keys(t.breakpointSettings).forEach((function(i) {
                    t.breakpointSettings[i][e[0]] && i <= r && n < i && (n = i, o = {}, e.forEach((function(e) {
                        return o[e] = t.breakpointSettings[n][e]
                    })))
                }))), o
            }, st.savePlacementImage = function(t, e) {
                st.placementImageStorage[t] = e
            }, st.getPlacementImage = function(t) {
                return st.placementImageStorage[t] || null
            }, st.getPlacementMap = function(t) {
                return (null == t ? void 0 : t.placementMap) || st.DEFAULT_PLACEMENT_MAP
            }, st.getMaterialMap = function(t) {
                return (null == t ? void 0 : t.materialMap) || st.DEFAULT_MATERIAL_MAP
            }
        },
        3506: (t, e, i) => {
            "use strict";

            function r(t, e, i, r, n, o, a) {
                try {
                    var s = t[o](a),
                        l = s.value
                } catch (t) {
                    return void i(t)
                }
                s.done ? e(l) : Promise.resolve(l).then(r, n)
            }

            function n(t) {
                return function() {
                    var e = this,
                        i = arguments;
                    return new Promise((function(n, o) {
                        var a = t.apply(e, i);

                        function s(t) {
                            r(a, n, o, s, l, "next", t)
                        }

                        function l(t) {
                            r(a, n, o, s, l, "throw", t)
                        }
                        s(void 0)
                    }))
                }
            }
            i.d(e, {
                W: () => C
            });
            var o = i(15671),
                a = i(43144),
                s = i(4942);

            function l(t, e, i) {
                if (!e.has(t)) throw new TypeError("attempted to " + i + " private field on non-instance");
                return e.get(t)
            }

            function h(t, e) {
                return function(t, e) {
                    return e.get ? e.get.call(t) : e.value
                }(t, l(t, e, "get"))
            }

            function c(t, e, i) {
                return function(t, e, i) {
                    if (e.set) e.set.call(t, i);
                    else {
                        if (!e.writable) throw new TypeError("attempted to set read only private field");
                        e.value = i
                    }
                }(t, l(t, e, "set"), i), i
            }
            var u = i(64687),
                f = i(41153);

            function d(t, e, i) {
                (function(t, e) {
                    if (e.has(t)) throw new TypeError("Cannot initialize the same private elements twice on an object")
                })(t, e), e.set(t, i)
            }
            var p = new WeakMap,
                g = new WeakMap,
                v = new WeakMap,
                m = new WeakMap,
                y = new WeakMap,
                b = new WeakMap,
                x = new WeakMap,
                _ = new WeakMap,
                w = new WeakMap,
                S = new WeakMap,
                C = function() {
                    function t(e) {
                        (0, o.Z)(this, t), d(this, p, {
                            writable: !0,
                            value: null
                        }), d(this, g, {
                            writable: !0,
                            value: null
                        }), d(this, v, {
                            writable: !0,
                            value: null
                        }), d(this, m, {
                            writable: !0,
                            value: null
                        }), d(this, y, {
                            writable: !0,
                            value: null
                        }), d(this, b, {
                            writable: !0,
                            value: []
                        }), d(this, x, {
                            writable: !0,
                            value: null
                        }), d(this, _, {
                            writable: !0,
                            value: null
                        }), d(this, w, {
                            writable: !0,
                            value: null
                        }), (0, s.Z)(this, "dimensions", null), (0, s.Z)(this, "positionValues", null), d(this, S, {
                            writable: !0,
                            value: null
                        }), (0, s.Z)(this, "isNode", "undefined" == typeof window), (0, s.Z)(this, "PFThreeCache", {
                            THREE: null,
                            OrbitControls: null,
                            GLTFLoader: null,
                            GLTFExporter: null
                        }), c(this, p, e)
                    }
                    var e, r, l, C, T, E, k;
                    return (0, a.Z)(t, [{
                        key: "loadThreeCache",
                        value: (k = n(u.mark((function t() {
                            var e, r, n, o;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (this.PFThreeCache.THREE && this.PFThreeCache.OrbitControls && this.PFThreeCache.GLTFLoader && this.PFThreeCache.GLTFExporter) return t.abrupt("return");
                                        t.next = 2;
                                        break;
                                    case 2:
                                        if (this.isNode) {
                                            t.next = 14;
                                            break
                                        }
                                        return t.next = 5, Promise.all([i.e(84581).then(i.bind(i, 84581)), Promise.all([i.e(84581), i.e(78399)]).then(i.bind(i, 35330)), Promise.all([i.e(84581), i.e(97645)]).then(i.bind(i, 46083)), Promise.all([i.e(84581), i.e(3166)]).then(i.bind(i, 3166))]);
                                    case 5:
                                        o = t.sent, e = o[0], r = o[1].OrbitControls, n = o[2].GLTFLoader, o = o[3].GLTFExporter, this.PFThreeCache.THREE = e, this.PFThreeCache.OrbitControls = r, this.PFThreeCache.GLTFLoader = n, this.PFThreeCache.GLTFExporter = o;
                                    case 14:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this)
                        }))), function() {
                            return k.apply(this, arguments)
                        })
                    }, {
                        key: "_validate3dViewCreation",
                        value: function() {
                            var t = null == (t = h(this, p).getSelectedVariant()) ? void 0 : t.templateId,
                                e = h(this, p).productId;
                            return f.V.getMapObject(t, e) ? h(this, p).getCanvasObj() ? !!this._isWebGlAvailable() || (console.error("WebGl is not available for your browser"), h(this, p).setAndShowError(), !1) : (console.error("Canvas object is not reachable!"), h(this, p).setAndShowError(), !1) : (console.error("Obj file could not be found for ", e, t), h(this, p).setAndShowError(), !1)
                        }
                    }, {
                        key: "generate3d",
                        value: (E = n(u.mark((function t() {
                            var e, i, r, n, o;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (this._validate3dViewCreation()) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 2:
                                        if (t.prev = 2, n = null == (n = h(this, p).getSelectedVariant()) ? void 0 : n.templateId, e = h(this, p).productId, this.setObjMap(), h(this, _)) {
                                            t.next = 10;
                                            break
                                        }
                                        return console.error("map config object not defined", e, n), h(this, p).setAndShowError(), t.abrupt("return");
                                    case 10:
                                        return t.prev = 10, t.next = 13, this.getAndPrepareImg();
                                    case 13:
                                        return i = t.sent, t.next = 16, this._flipImage(i);
                                    case 16:
                                        i = t.sent, t.next = 22;
                                        break;
                                    case 19:
                                        return t.prev = 19, t.t0 = t.catch(10), t.abrupt("return");
                                    case 22:
                                        if ((r = h(this, p).path + h(this, _).objFile) && i) {
                                            t.next = 27;
                                            break
                                        }
                                        return console.error("base64ImageSrc or objFilePath is not defined", r), h(this, p).setAndShowError(), t.abrupt("return");
                                    case 27:
                                        if (h(this, p).customDimensions && !Object.values(h(this, p).customDimensions).includes(0) ? this.dimensions = h(this, p).customDimensions : this.dimensions = f.V.getDimensions(h(this, _)), null != (e = this.dimensions) && e.width && this.dimensions.height) {
                                            t.next = 32;
                                            break
                                        }
                                        return console.error("Dimensions for 3d model is not defined"), h(this, p).setAndShowError(), t.abrupt("return");
                                    case 32:
                                        if (c(this, g, new this.PFThreeCache.THREE.PerspectiveCamera(75, this.dimensions.width / this.dimensions.height, .1, 1e3)), this.positionValues = f.V.getPositionValues(h(this, _)), h(this, g).position.z = this.positionValues.zoom, h(this, g).position.y = this.positionValues.posY ? 1.3 * this.positionValues.posY : 0, this.isNode) {
                                            t.next = 39;
                                            break
                                        }
                                        return t.next = 39, this.setOrbitControls();
                                    case 39:
                                        return c(this, v, new this.PFThreeCache.THREE.Scene), n = new this.PFThreeCache.THREE.AmbientLight(f.V.AMBIENT_LIGHT_COLOR, f.V.AMBIENT_LIGHT_INTENSITY), h(this, v).add(n), (o = new this.PFThreeCache.THREE.DirectionalLight(f.V.DIRECTIONAL_LIGHT_COLOR, f.V.DIRECTIONAL_LIGHT_INTENSITY)).position.set(1, 1, 1).normalize(), h(this, v).add(o), (o = new this.PFThreeCache.THREE.DirectionalLight(f.V.DIRECTIONAL_LIGHT_COLOR, f.V.DIRECTIONAL_LIGHT_INTENSITY)).position.set(-1, -1, -1).normalize(), h(this, v).add(o), t.next = 50, this.createTextureCube(h(this, p).path);
                                    case 50:
                                        c(this, y, new this.PFThreeCache.THREE.Object3D), h(this, v).add(h(this, y)), this._updateMaterial(i, this._init3dModel.bind(this, r)), c(this, m, new this.PFThreeCache.THREE.WebGLRenderer({
                                            alpha: !0,
                                            antialias: !0
                                        })), h(this, m).setPixelRatio(window.devicePixelRatio), h(this, m).setSize(this.dimensions.width, this.dimensions.height, !1), h(this, m).setClearColor(16777215, 0), h(this, m).domElement.style.width = "100%", h(this, p).render3dPreview(h(this, m).domElement), this._animate(), t.next = 66;
                                        break;
                                    case 62:
                                        t.prev = 62, t.t1 = t.catch(2), h(this, p).setAndShowError(), console.error(t.t1);
                                    case 66:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this, [
                                [2, 62],
                                [10, 19]
                            ])
                        }))), function() {
                            return E.apply(this, arguments)
                        })
                    }, {
                        key: "createTextureCube",
                        value: function(t) {
                            var e = this,
                                i = ["front.png", "back.png", "top.png", "bottom.png", "right.png", "left.png"];
                            return new Promise((function(r, n) {
                                (new e.PFThreeCache.THREE.CubeTextureLoader).setPath(t).load(i, (function(t) {
                                    e.reflectionCube = t, r()
                                }), (function() {}), (function(t) {
                                    console.error("Reflection cube failed to load", t), n()
                                }))
                            }))
                        }
                    }, {
                        key: "getTextureLoader",
                        value: function() {
                            return h(this, x) || (this.PFThreeCache.THREE.ImageUtils.crossOrigin = "", c(this, x, new this.PFThreeCache.THREE.TextureLoader)), h(this, x)
                        }
                    }, {
                        key: "setOrbitControls",
                        value: (T = n(u.mark((function t() {
                            var e, i;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2, h(this, p).configureControls(this.PFThreeCache.OrbitControls, h(this, g));
                                    case 2:
                                        (i = t.sent).enableZoom = !1, i.minPolarAngle = h(this, _).minPolarAngle || 0, i.maxPolarAngle = h(this, _).maxPolarAngle || Math.PI, i.minAzimuthAngle = h(this, _).minAzimuthAngle || -1 / 0, i.maxAzimuthAngle = h(this, _).maxAzimuthAngle || 1 / 0, i.target.y = null == (e = this.positionValues) ? void 0 : e.posY, i.enablePan = !1, i.update();
                                    case 11:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this)
                        }))), function() {
                            return T.apply(this, arguments)
                        })
                    }, {
                        key: "getAndPrepareImg",
                        value: function() {
                            var t = this;
                            return new Promise(function() {
                                var e = n(u.mark((function e(i, r) {
                                    var n, o, a, s;
                                    return u.wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                if (h(t, p).getSelectedPlacementId) {
                                                    e.next = 2;
                                                    break
                                                }
                                                return e.abrupt("return", r("getAndPrepareImg no getSelectedPlacementId!"));
                                            case 2:
                                                if (n = f.V.getFillColor(h(t, _)), a = f.V.getNeededPlacementIds(h(t, _)), s = h(t, p).getSelectedPlacementId(), e.prev = 5, "undefined" != typeof window) {
                                                    e.next = 10;
                                                    break
                                                }
                                                o = f.V.getPlacementImage(s), e.next = 18;
                                                break;
                                            case 10:
                                                if (-1 < a.indexOf(s)) return e.next = 13, t._getCanvasPreview(n);
                                                e.next = 16;
                                                break;
                                            case 13:
                                                e.t0 = e.sent, e.next = 17;
                                                break;
                                            case 16:
                                                e.t0 = f.V.getPlacementImage(s);
                                            case 17:
                                                o = e.t0;
                                            case 18:
                                                if (o) {
                                                    e.next = 20;
                                                    break
                                                }
                                                return e.abrupt("return", r("getAndPrepareImg no imageUri! selected placement: " + s + ", needed placements: " + a));
                                            case 20:
                                                return e.next = 22, t._resamplePngFile(o, n);
                                            case 22:
                                                o = e.sent, e.next = 28;
                                                break;
                                            case 25:
                                                return e.prev = 25, e.t1 = e.catch(5), e.abrupt("return", r(e.t1));
                                            case 28:
                                                i(o);
                                            case 29:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e, null, [
                                        [5, 25]
                                    ])
                                })));
                                return function(t, i) {
                                    return e.apply(this, arguments)
                                }
                            }())
                        }
                    }, {
                        key: "setObjMap",
                        value: function() {
                            var t;
                            c(this, _, f.V.getMapObject(null == (t = h(this, p).getSelectedVariant()) ? void 0 : t.templateId, h(this, p).productId))
                        }
                    }, {
                        key: "_getCanvasPreview",
                        value: function(t) {
                            var e = this;
                            return new Promise(function() {
                                var i = n(u.mark((function i(r, n) {
                                    var o, a;
                                    return u.wrap((function(i) {
                                        for (;;) switch (i.prev = i.next) {
                                            case 0:
                                                if (h(e, p).getCanvasObj) {
                                                    i.next = 2;
                                                    break
                                                }
                                                return i.abrupt("return", n("_getCanvasPreview no getCanvasObj!"));
                                            case 2:
                                                if (o = h(e, p).getCanvasObj()) {
                                                    i.next = 5;
                                                    break
                                                }
                                                return i.abrupt("return", !1);
                                            case 5:
                                                if (a = o.convertToPreview({
                                                        multiplier: 1,
                                                        fillColor: t
                                                    })) {
                                                    i.next = 8;
                                                    break
                                                }
                                                return i.abrupt("return", n("convertToPreview no base64Image!"));
                                            case 8:
                                                return i.abrupt("return", r(a));
                                            case 9:
                                            case "end":
                                                return i.stop()
                                        }
                                    }), i)
                                })));
                                return function(t, e) {
                                    return i.apply(this, arguments)
                                }
                            }())
                        }
                    }, {
                        key: "_updateMaterial",
                        value: function(t, e) {
                            var i = this;
                            this.getTextureLoader().load(t, (function(t) {
                                var r;
                                if (t.generateMipmaps = !1, t.wrapS = t.wrapT = i.PFThreeCache.THREE.ClampToEdgeWrapping, t.minFilter = i.PFThreeCache.THREE.LinearFilter, t.needsUpdate = !0, null != (r = h(i, b)[0]) && r.map) {
                                    h(i, b)[0].map = t;
                                    for (var n = 0, o = Object.entries(f.V.getMaterialMap(h(i, _))); n < o.length; n++) {
                                        var a = o[n];
                                        a[0], a[1] === f.V.MATERIAL_ENAMEL && (null != (a = h(i, b)[0]) && a.dispose(), c(i, b, [new i.PFThreeCache.THREE.MeshPhongMaterial({
                                            map: t,
                                            needsUpdate: !0,
                                            shininess: 20,
                                            specular: "#a1a1a1"
                                        })]))
                                    }
                                } else {
                                    null != (r = h(i, b)[0]) && r.dispose(), c(i, b, [new i.PFThreeCache.THREE.MeshPhongMaterial({
                                        map: t
                                    })]);
                                    for (var s = 0, l = Object.entries(f.V.getMaterialMap(h(i, _))); s < l.length; s++) {
                                        var u = l[s];
                                        u[0], u[1] === f.V.MATERIAL_METAL && h(i, b).push(new i.PFThreeCache.THREE.MeshPhongMaterial({
                                            map: t,
                                            needsUpdate: !1,
                                            shininess: 150,
                                            specular: "#a1a1a1"
                                        }))
                                    }
                                }
                                e && e(), t.dispose()
                            }), null, this._onDataLoadError)
                        }
                    }, {
                        key: "_init3dModel",
                        value: function(t) {
                            var e = h(this, p).getLoaded3dObj();
                            e ? this._onObjLoaded(e) : (new this.PFThreeCache.GLTFLoader).load(t, this._onObjLoaded.bind(this), this._onObjLoadProgress, this._onDataLoadError)
                        }
                    }, {
                        key: "scheduleDesignReload",
                        value: function() {
                            h(this, p).utilsDelayer("3d-model-reload", this.reloadDesign.bind(this), 50)
                        }
                    }, {
                        key: "reloadDesign",
                        value: (C = n(u.mark((function t() {
                            var e;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (h(this, S)) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 2:
                                        return h(this, p).changeTextContent(""), t.prev = 3, t.next = 6, this.getAndPrepareImg();
                                    case 6:
                                        e = t.sent, t.next = 12;
                                        break;
                                    case 9:
                                        return t.prev = 9, t.t0 = t.catch(3), t.abrupt("return");
                                    case 12:
                                        if (e && h(this, w) !== e) return t.next = 15, this._flipImage(e);
                                        t.next = 19;
                                        break;
                                    case 15:
                                        e = t.sent, c(this, w, e), this._updateMaterial(e, this._setMaterialForModel.bind(this)), this.startAnimate();
                                    case 19:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this, [
                                [3, 9]
                            ])
                        }))), function() {
                            return C.apply(this, arguments)
                        })
                    }, {
                        key: "_setMaterialForModel",
                        value: function() {
                            var t = this;
                            h(this, y) && h(this, y).traverse((function(e) {
                                var i;
                                e instanceof t.PFThreeCache.THREE.Mesh && (null != (i = h(t, _)) && i.hasTexture ? "user_design" === (null == (i = e.material) ? void 0 : i.name) && (e.material.dispose(), e.material = h(t, b)[0]) : null != (i = e.material) && i.name.includes(f.V.MATERIALS.METAL) ? (e.material.map = h(t, b)[0].map, e.material.envMap = t.reflectionCube, e.material.map.needsUpdate = !0) : (null != (i = e.material) && i.displose && null != (i = e.material) && i.dispose(), 1 === h(t, b).length || e.name === h(t, _).materialMesh ? e.material = h(t, b)[0] : e.material = h(t, b)[1]))
                            }))
                        }
                    }, {
                        key: "_getPngDimensions",
                        value: (l = n(u.mark((function t(e, i) {
                            var r = this;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.abrupt("return", new Promise((function(t, n) {
                                            i.onload = function() {
                                                return t(r._resizeDimensions(i.naturalWidth, i.naturalHeight))
                                            }, i.onerror = n, i.crossOrigin = "anonymous", i.src = e
                                        })));
                                    case 1:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        }))), function(t, e) {
                            return l.apply(this, arguments)
                        })
                    }, {
                        key: "_resizeDimensions",
                        value: function(t, e) {
                            return this.isNode && h(this, p).maxWidth && h(this, p).maxHeight && (t > h(this, p).maxWidth || e > h(this, p).maxHeight) && (e < t ? (e = h(this, p).maxWidth * e / t, t = h(this, p).maxWidth) : (t = h(this, p).maxHeight * t / e, e = h(this, p).maxHeight)), {
                                width: t = Math.max(t, e),
                                height: e = Math.max(t, e)
                            }
                        }
                    }, {
                        key: "_resamplePngFile",
                        value: (r = n(u.mark((function t(e, i) {
                            var r, n, o, a, s, l, c, d, g, v, m;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (r = h(this, _).rowColCount, e) {
                                            t.next = 3;
                                            break
                                        }
                                        return t.abrupt("return", new Promise((function(t, e) {
                                            return e("_resamplePngFile no imageUri!")
                                        })));
                                    case 3:
                                        return a = (this.isNode ? h(this, p).jsdom : document).createElement("img"), t.next = 6, this._getPngDimensions(e, a);
                                    case 6:
                                        return n = t.sent, o = this.isNode ? h(this, p).canvas.createCanvas() : document.createElement("canvas"), a = o.getContext("2d"), o.width = n.width * r, o.height = n.height * r, a.fillStyle = i, a.fillRect(0, 0, o.width, o.height), this._resampleAddSelectedVariantColor(n, a), this._resampleStaticColors(n, a), t.prev = 15, t.next = 18, this._resampleStaticImage(n, o);
                                    case 18:
                                        t.next = 23;
                                        break;
                                    case 20:
                                        return t.prev = 20, t.t0 = t.catch(15), t.abrupt("return", new Promise((function(e, i) {
                                            return i(t.t0)
                                        })));
                                    case 23:
                                        s = "", l = 0, c = Object.entries(f.V.getPlacementMap(h(this, _)));
                                    case 25:
                                        if (!(l < c.length)) {
                                            t.next = 48;
                                            break
                                        }
                                        if (v = c[l], d = v[0], v = v[1], !(g = (g = f.V.getPlacementImage(v + "_" + h(this, _).templateIds[d])) || f.V.getPlacementImage(v))) {
                                            t.next = 45;
                                            break
                                        }
                                        if (t.prev = 30, h(this, _).rotateBy90Deg) return t.next = 34, this._rotateImageBy90Deg(g);
                                        t.next = 35;
                                        break;
                                    case 34:
                                        g = t.sent;
                                    case 35:
                                        return v = d % h(this, _).rowColCount * n.width, m = Math.floor(d / h(this, _).rowColCount) * n.height, t.next = 39, this._drawImageReturnBase64(g, o, v, m, n.width, n.height, !0);
                                    case 39:
                                        s = t.sent, t.next = 45;
                                        break;
                                    case 42:
                                        return t.prev = 42, t.t1 = t.catch(30), t.abrupt("return", new Promise((function(e, i) {
                                            return i(t.t1)
                                        })));
                                    case 45:
                                        l++, t.next = 25;
                                        break;
                                    case 48:
                                        return t.abrupt("return", s);
                                    case 49:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this, [
                                [15, 20],
                                [30, 42]
                            ])
                        }))), function(t, e) {
                            return r.apply(this, arguments)
                        })
                    }, {
                        key: "_flipImage",
                        value: (e = n(u.mark((function t(e) {
                            var i = this;
                            return u.wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.abrupt("return", new Promise((function(t, r) {
                                            function n(e) {
                                                var r = i.isNode ? h(i, p).canvas.createCanvas() : document.createElement("canvas"),
                                                    n = (r.width = e.width, r.height = e.height, r.getContext("2d"));
                                                n.translate(0, e.height), n.scale(1, -1), n.drawImage(e, 0, 0), t(r.toDataURL())
                                            }
                                            var o;
                                            i.isNode ? h(i, p).canvas.loadImage(imgSrc).then((function(t) {
                                                n(o = t)
                                            })) : ((o = new Image).onload = function() {
                                                return n(o)
                                            }, o.onerror = r, o.crossOrigin = "anonymous", o.src = e)
                                        })));
                                    case 1:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        }))), function(t) {
                            return e.apply(this, arguments)
                        })
                    }, {
                        key: "_rotateImageBy90Deg",
                        value: function(t) {
                            return new Promise((function(e, i) {
                                var r = new Image;
                                r.onload = function() {
                                    var t = document.createElement("canvas"),
                                        i = (t.width = r.height, t.height = r.width, t.getContext("2d"));
                                    i.translate(Math.floor(r.height / 2), Math.floor(r.width / 2)), i.rotate(Math.PI / 180 * 90), i.drawImage(r, -r.width / 2, -r.height / 2), e(t.toDataURL())
                                }, r.onerror = i, r.crossOrigin = "anonymous", r.src = t
                            }))
                        }
                    }, {
                        key: "_drawImageReturnBase64",
                        value: function(t, e, i, r, n, o, a) {
                            var s = this;
                            return new Promise((function(l, c) {
                                function u(a) {
                                    e.getContext("2d").drawImage(a, i, r, n, o), f.V.staticImageCache[t] = a, l(e.toDataURL())
                                }
                                var d;
                                a && f.V.staticImageCache[t] ? u(f.V.staticImageCache[t]) : s.isNode ? h(s, p).canvas.loadImage(t).then((function(t) {
                                    u(t)
                                })).catch((function(t) {
                                    return c(t)
                                })) : ((d = new Image).onload = function() {
                                    return u(d)
                                }, d.onerror = c, d.crossOrigin = "anonymous", d.src = t)
                            }))
                        }
                    }, {
                        key: "_resampleAddSelectedVariantColor",
                        value: function(t, e) {
                            var i, r;
                            h(this, _) && t && e && (i = h(this, _).variantColorSector) && (r = h(this, p).getDesignData(), (r = this._getSelectedVariantHexColor(r)) && this._resampleColorSector(t, e, i, r))
                        }
                    }, {
                        key: "_resampleColorSector",
                        value: function(t, e, i, r) {
                            e.fillStyle = r, r = i % h(this, _).rowColCount * t.width, i = Math.floor(i / h(this, _).rowColCount) * t.height, e.fillRect(r, i, t.width, t.height)
                        }
                    }, {
                        key: "_resampleStaticColors",
                        value: function(t, e) {
                            var i;
                            if (null != (i = h(this, _)) && i.staticColorMap && t && e)
                                for (var r = 0, n = Object.entries(h(this, _).staticColorMap); r < n.length; r++) {
                                    var o = (a = n[r])[0],
                                        a = a[1];
                                    this._resampleColorSector(t, e, o, a)
                                }
                        }
                    }, {
                        key: "_resampleStaticImage",
                        value: function(t, e) {
                            var i = this;
                            return new Promise(function() {
                                var r = n(u.mark((function r(n, o) {
                                    var a, s, l, c, f, d;
                                    return u.wrap((function(r) {
                                        for (;;) switch (r.prev = r.next) {
                                            case 0:
                                                if (null != (l = h(i, _)) && l.staticImageMap && t && e) {
                                                    r.next = 3;
                                                    break
                                                }
                                                return n(), r.abrupt("return");
                                            case 3:
                                                a = 0, s = Object.entries(h(i, _).staticImageMap);
                                            case 4:
                                                if (a < s.length) return l = s[a], d = l[0], c = l[1], c = h(i, p).path + c, f = d % h(i, _).rowColCount * t.width, d = Math.floor(d / h(i, _).rowColCount) * t.height, r.prev = 9, r.next = 12, i._drawImageReturnBase64(c, e, f, d, t.width, t.height, !0);
                                                r.next = 20;
                                                break;
                                            case 12:
                                                r.next = 17;
                                                break;
                                            case 14:
                                                return r.prev = 14, r.t0 = r.catch(9), r.abrupt("return", o(r.t0));
                                            case 17:
                                                a++, r.next = 4;
                                                break;
                                            case 20:
                                                n();
                                            case 21:
                                            case "end":
                                                return r.stop()
                                        }
                                    }), r, null, [
                                        [9, 14]
                                    ])
                                })));
                                return function(t, e) {
                                    return r.apply(this, arguments)
                                }
                            }())
                        }
                    }, {
                        key: "_animate",
                        value: function() {
                            h(this, m) && (this._animationKey = requestAnimationFrame(this._animate.bind(this)), h(this, m).render(h(this, v), h(this, g)))
                        }
                    }, {
                        key: "stopAnimate",
                        value: function() {
                            this._animationKey && cancelAnimationFrame(this._animationKey)
                        }
                    }, {
                        key: "startAnimate",
                        value: function() {
                            this.stopAnimate(), this._animate(), h(this, p).setLoading(!1)
                        }
                    }, {
                        key: "_onObjLoaded",
                        value: function(t) {
                            c(this, S, !0), t.scene.position.x = (null == (e = h(this, _)) ? void 0 : e.objPosAdjustX) || 0, t.scene.position.y = (null == (e = h(this, _)) ? void 0 : e.objPosAdjustY) || 0, t.scene.position.z = (null == (e = h(this, _)) ? void 0 : e.objPosAdjustZ) || 0, 0 === t.scene.rotation.z && h(this, _).rotateBy90Deg ? t.scene.rotateZ(this.PFThreeCache.THREE.MathUtils.degToRad(90)) : 0 === t.scene.rotation.z || h(this, _).rotateBy90Deg || t.scene.rotateZ(this.PFThreeCache.THREE.MathUtils.degToRad(-90)), h(this, y).add(t.scene), this._setMaterialForModel();
                            var e = (null == (e = h(this, _)) ? void 0 : e.showWarning) && (null == (t = h(this, _)) ? void 0 : t.warningBannerData);
                            h(this, p).on3dObjectLoaded && h(this, p).on3dObjectLoaded(h(this, y), null == (t = h(this, _)) ? void 0 : t.uniqueId, e), h(this, p).showWarningAlert && e ? h(this, p).modifyWarningBanner(!0, {
                                bannerHeader: h(this, _).warningBannerData.header,
                                bannerContent: h(this, _).warningBannerData.content
                            }) : h(this, p).modifyWarningBanner(!1), h(this, p).setLoading(!1)
                        }
                    }, {
                        key: "export3dModel",
                        value: function(t, e) {
                            var i = this,
                                r = new this.PFThreeCache.GLTFExporter,
                                n = e ? ".glb" : ".gltf",
                                o = h(this, v).children.filter((function(t) {
                                    return "Object3D" === t.type
                                }));
                            r.parse(o[0], (function(r) {
                                i._downloadFile(r, t + n, e)
                            }), (function(t) {
                                console.error(t)
                            }), {
                                binary: e,
                                trs: !0
                            })
                        }
                    }, {
                        key: "_downloadFile",
                        value: function(t, e, i) {
                            this._downloadLink = document.createElement("a"), this._downloadLink.style.display = "none", document.body.appendChild(this._downloadLink), i = i ? t : JSON.stringify(t), this._saveString(i, e)
                        }
                    }, {
                        key: "_saveString",
                        value: function(t, e) {
                            this._save(new Blob([t], {
                                type: "text/plain"
                            }), e)
                        }
                    }, {
                        key: "_save",
                        value: function(t, e) {
                            this._downloadLink.href = URL.createObjectURL(t), this._downloadLink.download = e, t = h(this, p).popupDesignerLeaveWarning.isDisabled, h(this, p).popupDesignerLeaveWarning.isDisabled = !0, this._downloadLink.click(), h(this, p).popupDesignerLeaveWarning.isDisabled = t
                        }
                    }, {
                        key: "_onObjLoadProgress",
                        value: function(t) {
                            t.lengthComputable && (t = t.loaded / t.total * 100, console.log(Math.round(t) + "% downloaded"))
                        }
                    }, {
                        key: "_onDataLoadError",
                        value: function(t) {
                            h(this, p).setAndShowError(), console.error(t)
                        }
                    }, {
                        key: "_isWebGlAvailable",
                        value: function() {
                            try {
                                var t = document.createElement("canvas");
                                return !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl"))
                            } catch (t) {
                                return !1
                            }
                        }
                    }, {
                        key: "_getSelectedVariantHexColor",
                        value: function(t) {
                            var e;
                            return null != t && null != (e = t.hexColors) && e.length ? t.hexColors[t.hexColors.length - 1] : null
                        }
                    }, {
                        key: "reset3dModelLoaded",
                        value: function() {
                            c(this, S, !1)
                        }
                    }, {
                        key: "debugImageInConsole",
                        value: function(t, e) {
                            t = ["background-image: url(" + t + ")", "background-size: contain", "color: hotpink", "padding: 250px", "font-weight: bold", "font-size: 25px", "background-repeat: no-repeat"].join(" ;"), console.log("%c" + e, t)
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            var t;
                            null != (t = h(this, m)) && t.dispose(), null != (t = h(this, b)[0]) && t.dispose()
                        }
                    }]), t
                }()
        },
        22643: (t, e, i) => {
            "use strict";
            i.d(e, {
                d: () => a
            });
            var r = i(43144),
                n = i(15671),
                o = i(4942),
                a = (0, r.Z)((function t() {
                    (0, n.Z)(this, t), (0, o.Z)(this, "getCanvasObj", null), (0, o.Z)(this, "getSelectedVariant", null), (0, o.Z)(this, "getDesignData", null), (0, o.Z)(this, "getLoaded3dObj", null), (0, o.Z)(this, "getSelectedPlacementId", null), (0, o.Z)(this, "on3dObjectLoaded", null), (0, o.Z)(this, "showWarningAlert", null), (0, o.Z)(this, "onWarningAlertClose", null), (0, o.Z)(this, "productId", null), (0, o.Z)(this, "popupDesignerLeaveWarning", null), (0, o.Z)(this, "setAndShowError", null), (0, o.Z)(this, "changeTextContent", null), (0, o.Z)(this, "modifyWarningBanner", null), (0, o.Z)(this, "render3dPreview", null), (0, o.Z)(this, "configureControls", null), (0, o.Z)(this, "setLoading", null), (0, o.Z)(this, "utilsDelayer", null), (0, o.Z)(this, "canvas", null), (0, o.Z)(this, "jsdom", null), (0, o.Z)(this, "path", null), (0, o.Z)(this, "maxHeight", null), (0, o.Z)(this, "maxWidth", null), (0, o.Z)(this, "customDimensions", null)
                }))
        }
    }
]);